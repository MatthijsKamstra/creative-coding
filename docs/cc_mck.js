// Generated by Haxe 3.4.7
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = ["EReg"];
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
Lambda.__name__ = ["Lambda"];
Lambda.has = function(it,elt) {
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1 == elt) {
			return true;
		}
	}
	return false;
};
Lambda.exists = function(it,f) {
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			return true;
		}
	}
	return false;
};
Lambda.filter = function(it,f) {
	var l = new List();
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			l.add(x1);
		}
	}
	return l;
};
var List = function() {
	this.length = 0;
};
List.__name__ = ["List"];
List.prototype = {
	add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = new _$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
	,__class__: List
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
_$List_ListNode.__name__ = ["_List","ListNode"];
_$List_ListNode.prototype = {
	__class__: _$List_ListNode
};
var _$List_ListIterator = function(head) {
	this.head = head;
};
_$List_ListIterator.__name__ = ["_List","ListIterator"];
_$List_ListIterator.prototype = {
	hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: _$List_ListIterator
};
var Main = function() {
	var _gthis = this;
	window.document.addEventListener("DOMContentLoaded",function(event) {
		window.console.log("" + lib_model_constants_App.NAME + " :: build: " + lib_model_constants_App.BUILD);
		var ctx = Sketch.create("creative_code_mck");
		var hash = window.location.hash;
		hash = StringTools.replace(hash,"#","");
		switch(hash) {
		case "CC000":
			new art_CC000(ctx);
			break;
		case "CC001":
			new art_CC001(ctx);
			break;
		case "CC002":
			new art_CC002(ctx);
			break;
		case "CC003":
			new art_CC003(ctx);
			break;
		case "CC004":
			new art_CC004(ctx);
			break;
		case "CC005":
			new art_CC005(ctx);
			break;
		case "CC006":
			new art_CC006(ctx);
			break;
		case "CC007":
			new art_CC007(ctx);
			break;
		case "CC008":
			new art_CC008(ctx);
			break;
		case "CC009":
			new art_CC009(ctx);
			break;
		case "CC010":
			new art_CC010(ctx);
			break;
		case "CC011":
			new art_CC011(ctx);
			break;
		case "CC012":
			new art_CC012(ctx);
			break;
		case "CC013":
			new art_CC013(ctx);
			break;
		case "CC014":
			new art_CC014(ctx);
			break;
		case "CC015":
			new art_CC015(ctx);
			break;
		case "CC016":
			new art_CC016(ctx);
			break;
		case "CC017":
			new art_CC017(ctx);
			break;
		case "CC018":
			new art_CC018(ctx);
			break;
		case "CC019":
			new art_CC019(ctx);
			break;
		case "CC020":
			new art_CC020(ctx);
			break;
		case "CC021":
			new art_CC021(ctx);
			break;
		case "CC022":
			new art_CC022(ctx);
			break;
		case "CC023":
			new art_CC023(ctx);
			break;
		case "CC024":
			new art_CC024(ctx);
			break;
		case "CC025":
			new art_CC025(ctx);
			break;
		case "CC026":
			new art_CC026(ctx);
			break;
		case "CC027":
			new art_CC027(ctx);
			break;
		case "CC028":
			new art_CC028(ctx);
			break;
		case "CC029":
			new art_CC029(ctx);
			break;
		case "CC030":
			new art_CC030(ctx);
			break;
		case "CC031":
			new art_CC031(ctx);
			break;
		case "CC032":
			new art_CC032(ctx);
			break;
		case "CC033":
			new art_CC033(ctx);
			break;
		case "CC034":
			new art_CC034(ctx);
			break;
		case "CC035":
			new art_CC035(ctx);
			break;
		case "CC036":
			new art_CC036(ctx);
			break;
		default:
			console.log("case '" + hash + "': new " + hash + "(ctx);");
			window.location.hash = "CC036";
			new art_CC036(ctx);
		}
		var tmp = StringTools.replace(hash.toLowerCase(),"cc","");
		_gthis.count = Std.parseInt(tmp);
		var snackbar = new lib_html_Snackbar();
		snackbar.show("sketch " + hash);
		var left = new lib_html_Nav();
		var ldiv = left.dir("left");
		ldiv.onclick = function() {
			console.log("left");
			_gthis.count--;
			_gthis.changeHash();
		};
		var right = new lib_html_Nav();
		var rdiv = right.dir("right");
		rdiv.onclick = function() {
			console.log("right");
			_gthis.count++;
			_gthis.changeHash();
		};
		window.addEventListener("hashchange",function() {
			window.location.reload();
		},false);
		window.addEventListener(lib_Global.KEY_DOWN,function(e) {
			var _g = e.key;
			switch(_g) {
			case "ArrowDown":
				_gthis.count = 0;
				break;
			case "ArrowLeft":
				_gthis.count--;
				break;
			case "ArrowRight":
				_gthis.count++;
				break;
			case "ArrowUp":
				_gthis.count = 1000000;
				break;
			}
			var tmp1 = StringTools.lpad(_gthis.count == null ? "null" : "" + _gthis.count,"0",3);
			window.location.hash = "CC" + tmp1;
		},false);
	});
};
Main.__name__ = ["Main"];
Main.main = function() {
	var app = new Main();
};
Main.prototype = {
	changeHash: function() {
		var tmp = StringTools.lpad(Std.string(this.count),"0",3);
		window.location.hash = "CC" + tmp;
	}
	,__class__: Main
};
Math.__name__ = ["Math"];
var Reflect = function() { };
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
var Sketch = function() {
	this.document = window.document;
	this.window = window;
};
Sketch.__name__ = ["Sketch"];
Sketch.create = function(name,option) {
	if(option == null) {
		option = new SketchOption();
	}
	if(option.get_type() == "canvas") {
		return new Sketch().createCanvas(name);
	} else {
		return new Sketch().createGLCanvas(name);
	}
};
Sketch.createHiddenCanvas = function(name,option) {
	if(option == null) {
		option = new SketchOption();
	}
	var body = window.document.querySelector("body");
	var canvas = window.document.createElement("canvas");
	body.appendChild(canvas);
	canvas.setAttribute("id","hiddencanvas-" + name);
	canvas.style.position = "absolute";
	canvas.style.left = "0px";
	canvas.style.top = "0px";
	canvas.style.border = "1px solid pink";
	canvas.width = option.get_width();
	canvas.height = option.get_height();
	var tmp = option.get_width();
	canvas.style.left = -(tmp * 1.5) + "px";
	var ctx = canvas.getContext("2d");
	return ctx;
};
Sketch.prototype = {
	createCanvas: function(canvas_name) {
		var body = this.document.querySelector("body");
		var container = this.document.createElement("div");
		container.className = "container";
		this.canvas = this.document.createElement("canvas");
		this.canvas.setAttribute("id",canvas_name);
		body.appendChild(container);
		container.appendChild(this.canvas);
		this.ctx = this.canvas.getContext("2d");
		new Sketch().init(this.ctx);
		this.resize();
		this.window.addEventListener(lib_Global.RESIZE,$bind(this,this.resize),false);
		return this.ctx;
	}
	,createGLCanvas: function(canvas_name) {
		return null;
	}
	,checkForId: function(id) {
		return true;
	}
	,resize: function() {
		var c = this.document.getElementsByTagName("canvas");
		lib_Global.w = this.window.innerWidth;
		lib_Global.h = this.window.innerHeight;
		var _g1 = 0;
		var _g = c.length;
		while(_g1 < _g) {
			var i = _g1++;
			var _c = c[i];
			if(_c.id.indexOf("hiddencanvas-") != -1) {
				continue;
			}
			_c.width = lib_Global.w;
			_c.height = lib_Global.h;
		}
		window.console.log("resize: " + lib_Global.w + ":" + lib_Global.h);
	}
	,init: function(ctx) {
		var _gthis = this;
		this.window.addEventListener(lib_Global.MOUSE_MOVE,function(e) {
			lib_Global.mouseX = e.clientX;
			lib_Global.mouseY = e.clientY;
			lib_Global.mouseMoved = true;
		});
		this.window.addEventListener(lib_Global.MOUSE_DOWN,function(e1) {
			lib_Global.mouseDown = true;
		});
		this.window.addEventListener(lib_Global.MOUSE_UP,function(e2) {
			lib_Global.mouseDown = false;
		});
		this.window.addEventListener(lib_Global.KEY_DOWN,function(e3) {
			if(e3.metaKey == true && e3.key == "r") {
				console.log("cmd + r");
				window.location.reload();
			}
			if(e3.metaKey == true && e3.key == "s" && e3.shiftKey == false) {
				e3.preventDefault();
				e3.stopPropagation();
				console.log("cmd + s");
				lib_util_ExportUtil.downloadImage(ctx,true);
			}
			if(e3.metaKey == true && e3.key == "s" && e3.shiftKey == true) {
				e3.preventDefault();
				e3.stopPropagation();
				console.log("cmd + shift + s");
				lib_util_ExportUtil.downloadImage(ctx,false);
			}
			if(e3.metaKey == true && (e3.code == "KeyS" && e3.altKey == true)) {
				e3.preventDefault();
				e3.stopPropagation();
				console.log("cmd + alt + s");
				lib_util_ExportUtil.onBase64Handler(ctx,true);
			}
			if(e3.metaKey == true && e3.key == "f") {
				if(!lib_Global.isFullscreen) {
					_gthis.openFullscreen();
					lib_Global.isFullscreen = true;
				} else {
					_gthis.closeFullscreen();
					lib_Global.isFullscreen = false;
				}
			}
		},false);
	}
	,openFullscreen: function() {
		var elem = this.document.documentElement;
		if($bind(elem,elem.requestFullscreen) != null) {
			elem.requestFullscreen();
		} else if(elem.mozRequestFullScreen) {
			elem.mozRequestFullScreen();
		} else if(elem.webkitRequestFullscreen) {
			elem.webkitRequestFullscreen();
		} else if(elem.msRequestFullscreen) {
			elem.msRequestFullscreen();
		}
	}
	,closeFullscreen: function() {
		if(($_=this.document,$bind($_,$_.exitFullscreen)) != null) {
			this.document.exitFullscreen();
		} else if(this.document.mozCancelFullScreen) {
			this.document.mozCancelFullScreen();
		} else if(this.document.webkitExitFullscreen) {
			this.document.webkitExitFullscreen();
		} else if(this.document.msExitFullscreen) {
			this.document.msExitFullscreen();
		}
	}
	,__class__: Sketch
};
var SketchOption = function() {
	this._type = "canvas";
	this._container = window.document.body;
	this._autopause = true;
	this._autostart = true;
	this._autoclear = true;
	this._fullscreen = true;
};
SketchOption.__name__ = ["SketchOption"];
SketchOption.prototype = {
	get_width: function() {
		return this._width;
	}
	,set_width: function(value) {
		return this._width = value;
	}
	,get_height: function() {
		return this._height;
	}
	,set_height: function(value) {
		return this._height = value;
	}
	,get_fullscreen: function() {
		return this._fullscreen;
	}
	,set_fullscreen: function(value) {
		return this._fullscreen = value;
	}
	,get_autoclear: function() {
		return this._autoclear;
	}
	,set_autoclear: function(value) {
		return this._autostart = value;
	}
	,get_autostart: function() {
		return this._autostart;
	}
	,set_autostart: function(value) {
		return this._autostart = value;
	}
	,get_autopause: function() {
		return this._autopause;
	}
	,set_autopause: function(value) {
		return this._autopause = value;
	}
	,get_container: function() {
		return this._container;
	}
	,set_container: function(value) {
		return this._container = value;
	}
	,get_type: function() {
		return this._type;
	}
	,set_type: function(value) {
		return this._type = value;
	}
	,__class__: SketchOption
	,__properties__: {set_type:"set_type",get_type:"get_type",set_container:"set_container",get_container:"get_container",set_autopause:"set_autopause",get_autopause:"get_autopause",set_autostart:"set_autostart",get_autostart:"get_autostart",set_autoclear:"set_autoclear",get_autoclear:"get_autoclear",set_fullscreen:"set_fullscreen",get_fullscreen:"get_fullscreen",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width"}
};
var Std = function() { };
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringBuf = function() {
	this.b = "";
};
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
StringTools.__name__ = ["StringTools"];
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s = c + s;
	return s;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	while(true) {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
var ValueType = { __ename__ : true, __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
var Type = function() { };
Type.__name__ = ["Type"];
Type.getEnum = function(o) {
	if(o == null) {
		return null;
	}
	return o.__enum__;
};
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum(e);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
var Xml = function(nodeType) {
	this.nodeType = nodeType;
	this.children = [];
	this.attributeMap = new haxe_ds_StringMap();
};
Xml.__name__ = ["Xml"];
Xml.parse = function(str) {
	return haxe_xml_Parser.parse(str);
};
Xml.createElement = function(name) {
	var xml = new Xml(Xml.Element);
	if(xml.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + xml.nodeType);
	}
	xml.nodeName = name;
	return xml;
};
Xml.createPCData = function(data) {
	var xml = new Xml(Xml.PCData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createCData = function(data) {
	var xml = new Xml(Xml.CData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createComment = function(data) {
	var xml = new Xml(Xml.Comment);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocType = function(data) {
	var xml = new Xml(Xml.DocType);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createProcessingInstruction = function(data) {
	var xml = new Xml(Xml.ProcessingInstruction);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocument = function() {
	return new Xml(Xml.Document);
};
Xml.prototype = {
	set: function(att,value) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			_this.setReserved(att,value);
		} else {
			_this.h[att] = value;
		}
	}
	,exists: function(att) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			return _this.existsReserved(att);
		} else {
			return _this.h.hasOwnProperty(att);
		}
	}
	,addChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		if(x.parent != null) {
			x.parent.removeChild(x);
		}
		this.children.push(x);
		x.parent = this;
	}
	,removeChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		if(HxOverrides.remove(this.children,x)) {
			x.parent = null;
			return true;
		}
		return false;
	}
	,__class__: Xml
};
var art_CCBase = function(ctx) {
	this._description = "";
	this._title = "";
	this._type = ["Base"];
	this.isDebug = false;
	this.isDrawActive = true;
	this.ctx = ctx;
	window.addEventListener(lib_Global.RESIZE,$bind(this,this._reset),false);
	window.addEventListener(lib_Global.KEY_DOWN,$bind(this,this._keyDown),false);
	window.addEventListener(lib_Global.KEY_UP,$bind(this,this._keyUp),false);
	this.setup();
	this._draw();
};
art_CCBase.__name__ = ["art","CCBase"];
art_CCBase.prototype = {
	_keyDown: function(e) {
		var _g = e.key;
		if(_g == " ") {
			this.draw();
		}
	}
	,_keyUp: function(e) {
	}
	,_reset: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		this._draw();
	}
	,_draw: function(timestamp) {
		this.draw();
		if(this.isDrawActive) {
			window.requestAnimationFrame($bind(this,this._draw));
		}
	}
	,init: function() {
	}
	,setup: function() {
	}
	,onKeyDown: function(e) {
	}
	,draw: function() {
		console.log("" + this.toString() + " :: override public function draw()");
	}
	,pause: function() {
		this.isDrawActive = !this.isDrawActive;
	}
	,stop: function() {
		this.isDrawActive = false;
	}
	,play: function() {
		this.isDrawActive = true;
	}
	,get_description: function() {
		return this._description;
	}
	,set_description: function(value) {
		return this._description = value;
	}
	,get_title: function() {
		if(this._title == "") {
			this._title = this.toString();
		}
		return this._title;
	}
	,set_title: function(value) {
		return this._title = value;
	}
	,get_type: function() {
		return this._type;
	}
	,set_type: function(value) {
		return this._type = value;
	}
	,toString: function() {
		var className = Type.getClassName(js_Boot.getClass(this));
		return className;
	}
	,__class__: art_CCBase
	,__properties__: {set_description:"set_description",get_description:"get_description",set_title:"set_title",get_title:"get_title",set_type:"set_type",get_type:"get_type"}
};
var art_ICCBase = function() { };
art_ICCBase.__name__ = ["art","ICCBase"];
art_ICCBase.prototype = {
	__class__: art_ICCBase
};
var art_CC000 = function(ctx) {
	this.size = 10;
	this.rotate = 0;
	this.ypos = 10;
	this.xpos = 10;
	art_CCBase.call(this,ctx);
};
art_CC000.__name__ = ["art","CC000"];
art_CC000.__interfaces__ = [art_ICCBase];
art_CC000.__super__ = art_CCBase;
art_CC000.prototype = $extend(art_CCBase.prototype,{
	draw: function() {
		console.log("draw: " + this.toString());
		this.rotate++;
		this.size++;
		this.ctx.save();
		this.ctx.translate(lib_Global.w / 2,lib_Global.h / 2);
		this.ctx.rotate(this.rotate);
		lib_CanvasTools.centreStrokeRect(this.ctx,0,0,this.size);
		this.ctx.restore();
		if(this.size >= 1000) {
			this.pause();
		}
	}
	,__class__: art_CC000
});
var art_CC001 = function(ctx) {
	art_CCBase.call(this,ctx);
};
art_CC001.__name__ = ["art","CC001"];
art_CC001.__interfaces__ = [art_ICCBase];
art_CC001.__super__ = art_CCBase;
art_CC001.prototype = $extend(art_CCBase.prototype,{
	draw: function() {
		console.log("draw: " + this.toString());
		lib_CanvasTools.background(this.ctx,0,0,0);
		lib_CanvasTools.fillColour(this.ctx,255,255,255);
		lib_CanvasTools.fillCircle(this.ctx,lib_Global.w / 2,lib_Global.h / 2,100);
		this.pause();
	}
	,__class__: art_CC001
});
var art_CC002 = function(ctx) {
	art_CCBase.call(this,ctx);
};
art_CC002.__name__ = ["art","CC002"];
art_CC002.__interfaces__ = [art_ICCBase];
art_CC002.__super__ = art_CCBase;
art_CC002.prototype = $extend(art_CCBase.prototype,{
	draw: function() {
		console.log("draw: " + this.toString());
		lib_CanvasTools.fillColour(this.ctx,lib_util_ColorUtil.LIME.r,lib_util_ColorUtil.LIME.g,lib_util_ColorUtil.LIME.b);
		lib_CanvasTools.fillEllipse(this.ctx,lib_Global.w / 2,lib_Global.h / 2,100,200);
		this.pause();
	}
	,__class__: art_CC002
});
var art_CC003 = function(ctx) {
	this.ballArray = [];
	this.sizeBall = 20;
	this.maxBalls = 10;
	art_CCBase.call(this,ctx);
};
art_CC003.__name__ = ["art","CC003"];
art_CC003.__interfaces__ = [art_ICCBase];
art_CC003.__super__ = art_CCBase;
art_CC003.prototype = $extend(art_CCBase.prototype,{
	setup: function() {
		console.log("setup: " + this.toString());
		lib_CanvasTools.background(this.ctx,255,255,255,0.2);
		var _g1 = 0;
		var _g = this.maxBalls;
		while(_g1 < _g) {
			var i = _g1++;
			this.ballArray.push(this.createBall());
		}
	}
	,draw: function() {
		this.moveBall();
		this.drawBall();
	}
	,createBall: function() {
		var ball = { x : lib_util_MathUtil.random(this.sizeBall / 2,lib_Global.w - this.sizeBall / 2), y : lib_util_MathUtil.random(this.sizeBall / 2,lib_Global.h - this.sizeBall / 2), speed_x : lib_util_MathUtil.random(-5,5), speed_y : lib_util_MathUtil.random(-5,5), size : this.sizeBall, colour : lib_util_ColorUtil.rgb(lib_util_MathUtil.randomInt(55),lib_util_MathUtil.randomInt(255),0)};
		return ball;
	}
	,moveBall: function() {
		var _g1 = 0;
		var _g = this.ballArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var b = this.ballArray[i];
			b.x += b.speed_x;
			b.y += b.speed_y;
			if(lib_util_AnimateUtil.bounce(b.x,0,lib_Global.w,b.size)) {
				b.speed_x *= -1;
				b.colour = lib_util_ColorUtil.rgb(lib_util_MathUtil.randomInt(55),lib_util_MathUtil.randomInt(255),0);
			}
			if(lib_util_AnimateUtil.bounce(b.y,0,lib_Global.h,b.size)) {
				b.speed_y *= -1;
				b.colour = lib_util_ColorUtil.rgb(0,lib_util_MathUtil.randomInt(255),lib_util_MathUtil.randomInt(55));
			}
		}
	}
	,drawBall: function() {
		var _g1 = 0;
		var _g = this.ballArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var b = this.ballArray[i];
			this.ctx.fillStyle = b.colour;
			lib_CanvasTools.fillCircle(this.ctx,b.x,b.y,b.size);
		}
	}
	,__class__: art_CC003
});
var art_CC004 = function(ctx) {
	this.ballArray = [];
	this.sizeBall = 3;
	this.maxBalls = 200;
	this.maxDistance = 100;
	art_CCBase.call(this,ctx);
};
art_CC004.__name__ = ["art","CC004"];
art_CC004.__interfaces__ = [art_ICCBase];
art_CC004.__super__ = art_CCBase;
art_CC004.prototype = $extend(art_CCBase.prototype,{
	setup: function() {
		console.log("" + this.toString() + " :: setup()");
		this.ballArray = [];
		var _g1 = 0;
		var _g = this.maxBalls;
		while(_g1 < _g) {
			var i = _g1++;
			this.ballArray.push(this.createBall());
		}
	}
	,draw: function() {
		this.moveBall();
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.background(this.ctx,0,0,0);
		this.drawBall();
	}
	,createBall: function() {
		var ball = { x : lib_util_MathUtil.random(this.sizeBall / 2,lib_Global.w - this.sizeBall / 2), y : lib_util_MathUtil.random(this.sizeBall / 2,lib_Global.h - this.sizeBall / 2), speed_x : lib_util_MathUtil.random(-0.5,0.5), speed_y : lib_util_MathUtil.random(-0.5,0.5), size : this.sizeBall, colour : lib_util_ColorUtil.rgb(255,255,255)};
		return ball;
	}
	,moveBall: function() {
		var _g1 = 0;
		var _g = this.ballArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var b = this.ballArray[i];
			b.x += b.speed_x;
			b.y += b.speed_y;
			if(lib_util_AnimateUtil.bounce(b.x,0,lib_Global.w,b.size)) {
				b.speed_x *= -1;
			}
			if(lib_util_AnimateUtil.bounce(b.y,0,lib_Global.h,b.size)) {
				b.speed_y *= -1;
			}
		}
	}
	,drawBall: function() {
		var _g1 = 0;
		var _g = this.ballArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var b1 = this.ballArray[i];
			this.ctx.fillStyle = b1.colour;
			lib_CanvasTools.fillCircle(this.ctx,b1.x,b1.y,b1.size);
			var _g3 = 0;
			var _g2 = this.ballArray.length;
			while(_g3 < _g2) {
				var j = _g3++;
				var b2 = this.ballArray[j];
				if(b1 == b2) {
					continue;
				}
				var _dist = lib_util_MathUtil.distance(b1.x,b1.y,b2.x,b2.y);
				if(_dist < this.maxDistance) {
					var alpha = 0.8 - _dist / this.maxDistance;
					lib_CanvasTools.lineColour(this.ctx,lib_util_ColorUtil.WHITE.r,lib_util_ColorUtil.WHITE.g,lib_util_ColorUtil.WHITE.b,alpha);
					lib_CanvasTools.line(this.ctx,b1.x,b1.y,b2.x,b2.y);
				}
			}
		}
	}
	,__class__: art_CC004
});
var art_CC005 = function(ctx) {
	art_CCBase.call(this,ctx);
};
art_CC005.__name__ = ["art","CC005"];
art_CC005.__interfaces__ = [art_ICCBase];
art_CC005.__super__ = art_CCBase;
art_CC005.prototype = $extend(art_CCBase.prototype,{
	setup: function() {
		console.log("setup: " + this.toString());
		var padding = 100;
		var arr = lib_util_GridUtil.create(padding,padding,lib_Global.w - 2 * padding,lib_Global.h - 2 * padding,3,4);
		var _g1 = 0;
		var _g = arr.length;
		while(_g1 < _g) {
			var i = _g1++;
			var point = arr[i];
			lib_util_ShapeUtil.registerPoint(this.ctx,point.x,point.y);
		}
		var _size = 50;
		var _width = _size;
		var _height = 25;
		lib_CanvasTools.colour(this.ctx,lib_util_ColorUtil.NAVY.r,lib_util_ColorUtil.NAVY.g,lib_util_ColorUtil.NAVY.b,0.5);
		var point1 = arr[0];
		lib_CanvasTools.centreFillRect(this.ctx,point1.x,point1.y,_size,_size);
		var point2 = arr[1];
		lib_CanvasTools.circle(this.ctx,point2.x,point2.y,_size);
		var point3 = arr[2];
		lib_CanvasTools.fillEllipse(this.ctx,point3.x,point3.y,_width,_height);
		var point4 = arr[3];
		lib_CanvasTools.lineColour(this.ctx,lib_util_ColorUtil.NAVY.r,lib_util_ColorUtil.NAVY.g,lib_util_ColorUtil.NAVY.b,0.5);
		lib_CanvasTools.line(this.ctx,point4.x,point4.y,point4.x + _width,point4.y + _height);
		var point5 = arr[4];
		lib_CanvasTools.fillTriangle(this.ctx,point5.x,point5.y - _height,point5.x - _width,point5.y - _height,point5.x + _width,point5.y + _height);
		var point6 = arr[5];
		lib_CanvasTools.fillPolygon(this.ctx,point6.x,point6.y,8,_size);
		var point7 = arr[6];
		lib_CanvasTools.fillPolygon(this.ctx,point7.x,point7.y,3,_size);
		var point8 = arr[7];
		lib_CanvasTools.eqDownFillTriangle(this.ctx,point8.x,point8.y,_size);
		var point9 = arr[8];
		lib_CanvasTools.eqDownTriangle(this.ctx,point9.x,point9.y,_size);
		var point10 = arr[9];
		lib_CanvasTools.roundRect(this.ctx,point10.x,point10.y,100,100,10);
		lib_util_FontUtil.fillText(this.ctx,"Matthijs Kamstra aka [mck]",padding / 2,padding / 2,"Unica+One");
		lib_util_FontUtil.fillText(this.ctx,"Matthijs Kamstra aka [mck]",padding / 2,padding * 2,"Nova+Mono");
	}
	,draw: function() {
		this.stop();
	}
	,__class__: art_CC005
});
var art_CC006 = function(ctx) {
	var _gthis = this;
	art_CCBase.call(this,ctx);
	window.addEventListener(lib_Global.KEY_DOWN,function(e) {
		if(e.key == " ") {
			console.log("redraw");
			_gthis.setup();
		}
	},false);
};
art_CC006.__name__ = ["art","CC006"];
art_CC006.__interfaces__ = [art_ICCBase];
art_CC006.__super__ = art_CCBase;
art_CC006.prototype = $extend(art_CCBase.prototype,{
	setup: function() {
		console.log("setup: " + this.toString());
		var _size = 50;
		var _x = 0;
		var _y = 0;
		var _numHor = Math.ceil(lib_Global.w / _size);
		var _numVer = Math.ceil(lib_Global.h / _size);
		var arr = lib_util_GridUtil.create(_x,_y,lib_Global.w - 2 * _x,lib_Global.h - 2 * _y,_numHor,_numVer);
		if(this.isDebug) {
			lib_util_ShapeUtil.gridRegister(this.ctx,arr);
		}
		var _g1 = 0;
		var _g = arr.length;
		while(_g1 < _g) {
			var i = _g1++;
			var p = arr[i];
			var c = lib_util_ColorUtil.randomColour();
			this.ctx.fillStyle = c;
			lib_CanvasTools.strokeWeight(this.ctx,0);
			lib_CanvasTools.centreFillRect(this.ctx,p.x,p.y,_size,_size);
		}
	}
	,draw: function() {
		console.log("draw: " + this.toString());
		this.stop();
	}
	,__class__: art_CC006
});
var art_CC007 = function(ctx) {
	this.ballArray = [];
	this.sizeBall = 10;
	this.maxBalls = 100;
	this.maxDistance = 100;
	art_CCBase.call(this,ctx);
};
art_CC007.__name__ = ["art","CC007"];
art_CC007.__interfaces__ = [art_ICCBase];
art_CC007.__super__ = art_CCBase;
art_CC007.prototype = $extend(art_CCBase.prototype,{
	testTimer: function() {
		this.startTime = new Date().getTime() / 1000;
		this.startDate = new Date().getTime();
		this.onCompleteHandler(null);
		var GoJs = new lets_GoJs({ },1);
		var _this = GoJs;
		_this._options.onComplete = $bind(this,this.onCompleteHandler);
		_this._options.onCompleteParams = [1];
		var GoJs1 = new lets_GoJs({ },2);
		var _this1 = GoJs1;
		_this1._options.onComplete = $bind(this,this.onCompleteHandler);
		_this1._options.onCompleteParams = [2];
		var GoJs2 = new lets_GoJs({ },5);
		var _this2 = GoJs2;
		_this2._options.onComplete = $bind(this,this.onCompleteHandler);
		_this2._options.onCompleteParams = [5];
		var GoJs3 = new lets_GoJs({ },1.5);
		var _this3 = GoJs3;
		_this3._options.onComplete = $bind(this,this.onCompleteHandler);
		_this3._options.onCompleteParams = [1.5];
		var GoJs4 = new lets_GoJs({ },2);
		var _this4 = GoJs4;
		_this4._options.onComplete = $bind(this,this.onCompleteHandler);
		_this4._options.onCompleteParams = [2];
		var GoJs5 = new lets_GoJs({ },4);
		var _this5 = GoJs5;
		_this5._options.onComplete = $bind(this,this.onCompleteHandler);
		_this5._options.onCompleteParams = [4];
		var GoJs6 = new lets_GoJs({ },8);
		var _this6 = GoJs6;
		_this6._options.onComplete = $bind(this,this.onCompleteHandler);
		_this6._options.onCompleteParams = [8];
	}
	,onCompleteHandler: function(value) {
		var totalTime = new Date().getTime() / 1000 - this.startTime;
		var totalDate = (new Date().getTime() - this.startDate) / 1000;
		console.log("done: " + value + " seconds - date: " + totalDate + " , time: " + totalTime);
	}
	,setup: function() {
		console.log("setup: " + this.toString());
		this.ballArray = [];
		var _g1 = 0;
		var _g = this.maxBalls;
		while(_g1 < _g) {
			var i = _g1++;
			var ball = this.createBall();
			this.ballArray.push(ball);
			this.ballAnimate(ball);
		}
	}
	,ballAnimate: function(ball) {
		var GoJs = new lets_GoJs(ball,lib_util_MathUtil.random(1,10));
		GoJs._isFrom = false;
		var _this = GoJs;
		var value = lib_util_MathUtil.random(0,lib_Global.w);
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"x")) {
			objValue = Reflect.getProperty(_this._target,"x");
		}
		var _range = { key : "x", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("x",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		var value1 = lib_util_MathUtil.random(0,lib_Global.h);
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"y")) {
			objValue1 = Reflect.getProperty(_this1._target,"y");
		}
		var _range1 = { key : "y", from : _this1._isFrom ? value1 : objValue1, to : !_this1._isFrom ? value1 : objValue1};
		_this1._props.set("y",_range1);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		_this2._options.onComplete = $bind(this,this.ballAnimate);
		_this2._options.onCompleteParams = [ball];
		var _this3 = _this2;
		_this3._easing = lets_easing_Sine.get_easeInOut();
	}
	,createBall: function() {
		var ball = { x : lib_util_MathUtil.random(this.sizeBall / 2,lib_Global.w - this.sizeBall / 2), y : lib_util_MathUtil.random(this.sizeBall / 2,lib_Global.h - this.sizeBall / 2), size : lib_util_MathUtil.random(this.sizeBall,this.sizeBall * 4), color : lib_util_ColorUtil.randomColour()};
		return ball;
	}
	,drawBall: function() {
		var _g1 = 0;
		var _g = this.ballArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var b1 = this.ballArray[i];
			this.ctx.fillStyle = b1.color;
			lib_CanvasTools.fillCircle(this.ctx,b1.x,b1.y,b1.size);
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.background(this.ctx,lib_util_ColorUtil.WHITE.r,lib_util_ColorUtil.WHITE.g,lib_util_ColorUtil.WHITE.b);
		this.drawBall();
	}
	,__class__: art_CC007
});
var art_CC008 = function(ctx) {
	this.shapeArray = [];
	this.shapeSize = 15;
	this.shapeMax = 10;
	art_CCBase.call(this,ctx);
	this.set_description("lets.Go tests with rotation, delay, easing");
	lib_util_HelperUtil.stats();
};
art_CC008.__name__ = ["art","CC008"];
art_CC008.__interfaces__ = [art_ICCBase];
art_CC008.__super__ = art_CCBase;
art_CC008.prototype = $extend(art_CCBase.prototype,{
	createShape: function(y) {
		var shape = { x : 100, y : this.shapeSize * 5 + this.shapeSize * 5 * y, width : Math.round(lib_util_MathUtil.random(this.shapeSize,this.shapeSize * 4)), height : Math.round(lib_util_MathUtil.random(this.shapeSize,this.shapeSize * 4)), rotation : 0, color : lib_util_ColorUtil.randomColour()};
		return shape;
	}
	,drawShape: function() {
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			this.ctx.fillStyle = sh.color;
			this.ctx.save();
			this.ctx.translate(sh.x,sh.y);
			this.ctx.rotate(lib_util_MathUtil.radians(sh.rotation));
			lib_CanvasTools.centreFillRect(this.ctx,0,0,sh.width,sh.height);
			this.ctx.restore();
		}
	}
	,setup: function() {
		console.log("setup: " + this.toString());
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.shapeMax;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.createShape(i);
			this.shapeArray.push(sh);
		}
		var _shape = this.shapeArray[0];
		var GoJs = new lets_GoJs(_shape,2);
		GoJs._isFrom = false;
		var _this = GoJs;
		var value = _shape.x + (lib_Global.w - _shape.x * 2);
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"x")) {
			objValue = Reflect.getProperty(_this._target,"x");
		}
		var _range = { key : "x", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("x",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _shape1 = this.shapeArray[1];
		var GoJs1 = new lets_GoJs(_shape1,2);
		GoJs1._isFrom = false;
		var _this1 = GoJs1;
		var value1 = _shape1.x + (lib_Global.w - _shape1.x * 2);
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"x")) {
			objValue1 = Reflect.getProperty(_this1._target,"x");
		}
		var _range1 = { key : "x", from : _this1._isFrom ? value1 : objValue1, to : !_this1._isFrom ? value1 : objValue1};
		_this1._props.set("x",_range1);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		_this2._isYoyo = true;
		var _shape2 = this.shapeArray[2];
		var GoJs2 = new lets_GoJs(_shape2,2);
		GoJs2._isFrom = true;
		GoJs2.updateProperties(0);
		var _this3 = GoJs2;
		var value2 = _shape2.x + (lib_Global.w - _shape2.x * 2);
		var objValue2 = 0;
		if(Object.prototype.hasOwnProperty.call(_this3._target,"x")) {
			objValue2 = Reflect.getProperty(_this3._target,"x");
		}
		var _range2 = { key : "x", from : _this3._isFrom ? value2 : objValue2, to : !_this3._isFrom ? value2 : objValue2};
		_this3._props.set("x",_range2);
		if(_this3._isFrom) {
			_this3.updateProperties(0);
		}
		var _this4 = _this3;
		_this4._isYoyo = true;
		var _shape3 = this.shapeArray[3];
		var GoJs3 = new lets_GoJs(_shape3,2);
		GoJs3._isFrom = false;
		var _this5 = GoJs3;
		var value3 = _shape3.x + (lib_Global.w - _shape3.x * 2);
		var objValue3 = 0;
		if(Object.prototype.hasOwnProperty.call(_this5._target,"x")) {
			objValue3 = Reflect.getProperty(_this5._target,"x");
		}
		var _range3 = { key : "x", from : _this5._isFrom ? value3 : objValue3, to : !_this5._isFrom ? value3 : objValue3};
		_this5._props.set("x",_range3);
		if(_this5._isFrom) {
			_this5.updateProperties(0);
		}
		var _this6 = _this5;
		var value4 = _shape3.y + 100;
		var objValue4 = 0;
		if(Object.prototype.hasOwnProperty.call(_this6._target,"y")) {
			objValue4 = Reflect.getProperty(_this6._target,"y");
		}
		var _range4 = { key : "y", from : _this6._isFrom ? value4 : objValue4, to : !_this6._isFrom ? value4 : objValue4};
		_this6._props.set("y",_range4);
		if(_this6._isFrom) {
			_this6.updateProperties(0);
		}
		var _this7 = _this6;
		_this7._isYoyo = true;
		var _shape4 = this.shapeArray[4];
		var GoJs4 = new lets_GoJs(_shape4,2);
		GoJs4._isFrom = false;
		var _this8 = GoJs4;
		var value5 = _shape4.x + (lib_Global.w - _shape4.x * 2);
		var objValue5 = 0;
		if(Object.prototype.hasOwnProperty.call(_this8._target,"x")) {
			objValue5 = Reflect.getProperty(_this8._target,"x");
		}
		var _range5 = { key : "x", from : _this8._isFrom ? value5 : objValue5, to : !_this8._isFrom ? value5 : objValue5};
		_this8._props.set("x",_range5);
		if(_this8._isFrom) {
			_this8.updateProperties(0);
		}
		var _this9 = _this8;
		var objValue6 = 0;
		if(Object.prototype.hasOwnProperty.call(_this9._target,"rotation")) {
			objValue6 = Reflect.getProperty(_this9._target,"rotation");
		}
		var _range6 = { key : "rotation", from : _this9._isFrom ? 180 : objValue6, to : !_this9._isFrom ? 180 : objValue6};
		_this9._props.set("rotation",_range6);
		if(_this9._isFrom) {
			_this9.updateProperties(0);
		}
		var _this10 = _this9;
		_this10._isYoyo = true;
		var _this11 = _this10;
		_this11._options.onUpdate = $bind(this,this.onUpdateHandler);
		_this11._options.onUpdateParams = [4];
		var _shape5 = this.shapeArray[5];
		var GoJs5 = new lets_GoJs(_shape5,2);
		GoJs5._isFrom = false;
		var _this12 = GoJs5;
		var value6 = _shape5.x + (lib_Global.w - _shape5.x * 2);
		var objValue7 = 0;
		if(Object.prototype.hasOwnProperty.call(_this12._target,"x")) {
			objValue7 = Reflect.getProperty(_this12._target,"x");
		}
		var _range7 = { key : "x", from : _this12._isFrom ? value6 : objValue7, to : !_this12._isFrom ? value6 : objValue7};
		_this12._props.set("x",_range7);
		if(_this12._isFrom) {
			_this12.updateProperties(0);
		}
		var _this13 = _this12;
		var objValue8 = 0;
		if(Object.prototype.hasOwnProperty.call(_this13._target,"foobar")) {
			objValue8 = Reflect.getProperty(_this13._target,"foobar");
		}
		var _range8 = { key : "foobar", from : _this13._isFrom ? 180 : objValue8, to : !_this13._isFrom ? 180 : objValue8};
		_this13._props.set("foobar",_range8);
		if(_this13._isFrom) {
			_this13.updateProperties(0);
		}
		var _this14 = _this13;
		_this14._options.onUpdate = $bind(this,this.onUpdateHandler);
		_this14._options.onUpdateParams = [5];
		var _this15 = _this14;
		_this15._options.onComplete = $bind(this,this.onCompleteHandler);
		_this15._options.onCompleteParams = [5];
		var _shape6 = this.shapeArray[6];
		var GoJs6 = new lets_GoJs(_shape6,2);
		GoJs6._isFrom = false;
		var _this16 = GoJs6;
		var value7 = _shape6.x + (lib_Global.w - _shape6.x * 2);
		var objValue9 = 0;
		if(Object.prototype.hasOwnProperty.call(_this16._target,"x")) {
			objValue9 = Reflect.getProperty(_this16._target,"x");
		}
		var _range9 = { key : "x", from : _this16._isFrom ? value7 : objValue9, to : !_this16._isFrom ? value7 : objValue9};
		_this16._props.set("x",_range9);
		if(_this16._isFrom) {
			_this16.updateProperties(0);
		}
		var _this17 = _this16;
		_this17._delay = _this17.getDuration(.7);
		var _this18 = _this17;
		var objValue10 = 0;
		if(Object.prototype.hasOwnProperty.call(_this18._target,"rotation")) {
			objValue10 = Reflect.getProperty(_this18._target,"rotation");
		}
		var _range10 = { key : "rotation", from : _this18._isFrom ? 360 : objValue10, to : !_this18._isFrom ? 360 : objValue10};
		_this18._props.set("rotation",_range10);
		if(_this18._isFrom) {
			_this18.updateProperties(0);
		}
		var _this19 = _this18;
		_this19._isYoyo = true;
		var _shape7 = this.shapeArray[7];
		var GoJs7 = new lets_GoJs(_shape7,2);
		GoJs7._isFrom = false;
		var _this20 = GoJs7;
		var value8 = _shape7.x + (lib_Global.w - _shape7.x * 2);
		var objValue11 = 0;
		if(Object.prototype.hasOwnProperty.call(_this20._target,"x")) {
			objValue11 = Reflect.getProperty(_this20._target,"x");
		}
		var _range11 = { key : "x", from : _this20._isFrom ? value8 : objValue11, to : !_this20._isFrom ? value8 : objValue11};
		_this20._props.set("x",_range11);
		if(_this20._isFrom) {
			_this20.updateProperties(0);
		}
		var _this21 = _this20;
		var objValue12 = 0;
		if(Object.prototype.hasOwnProperty.call(_this21._target,"rotation")) {
			objValue12 = Reflect.getProperty(_this21._target,"rotation");
		}
		var _range12 = { key : "rotation", from : _this21._isFrom ? 360 : objValue12, to : !_this21._isFrom ? 360 : objValue12};
		_this21._props.set("rotation",_range12);
		if(_this21._isFrom) {
			_this21.updateProperties(0);
		}
		var _this22 = _this21;
		_this22._isYoyo = true;
		var _this23 = _this22;
		_this23._easing = lets_easing_Sine.get_easeInOut();
	}
	,onUpdateHandler: function(value) {
		var _shape = this.shapeArray[value];
		switch(value) {
		case 4:
			console.log("onUpdateHandler - rotation: " + _shape.rotation);
			break;
		case 5:
			console.log("onUpdateHandler - foobar: " + _shape.foobar);
			break;
		default:
			console.log("case " + value + ": trace ('" + value + "');");
		}
	}
	,onCompleteHandler: function(value) {
		var _shape = this.shapeArray[value];
		switch(value) {
		case 4:
			console.log("onCompleteHandler - rotation: " + _shape.rotation);
			break;
		case 5:
			console.log("onCompleteHandler - foobar: " + _shape.foobar);
			break;
		default:
			console.log("case " + value + ": trace ('" + value + "');");
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.background(this.ctx,lib_util_ColorUtil.WHITE.r,lib_util_ColorUtil.WHITE.g,lib_util_ColorUtil.WHITE.b);
		this.drawShape();
	}
	,__class__: art_CC008
});
var art_CC009 = function(ctx) {
	this.shapeArray = [];
	this.shapeSize = 15;
	this.shapeMax = 1000;
	art_CCBase.call(this,ctx);
	this.set_description("Stars in the sky");
};
art_CC009.__name__ = ["art","CC009"];
art_CC009.__interfaces__ = [art_ICCBase];
art_CC009.__super__ = art_CCBase;
art_CC009.prototype = $extend(art_CCBase.prototype,{
	createShape: function() {
		var shape = { x : lib_Global.w / 2, y : lib_Global.h / 2, size : 1, alpha : 0, color : lib_util_ColorUtil.getColourObj(lib_util_ColorUtil.WHITE)};
		shape["r"] = lib_util_ColorUtil.WHITE.r;
		shape["g"] = lib_util_ColorUtil.WHITE.g;
		shape["b"] = lib_util_ColorUtil.WHITE.b;
		this.onCompleteHandler(shape);
		return shape;
	}
	,point: function() {
		var _x = lib_util_MathUtil.random(-lib_Global.w,lib_Global.w * 3);
		var _y = lib_util_MathUtil.random(-lib_Global.h,lib_Global.h * 3);
		if(_x > 0 && _x < lib_Global.w && _y > 0 && _y < lib_Global.h) {
			_x += lib_Global.w;
		}
		return { x : _x, y : _y};
	}
	,onCompleteHandler: function(shape) {
		shape.x = lib_Global.w / 2;
		shape.y = lib_Global.h / 2;
		shape.size = 1;
		shape.alpha = 0;
		var point = this.point();
		var time = lib_util_MathUtil.random(2);
		var GoJs = new lets_GoJs(shape,time);
		GoJs._isFrom = false;
		var _this = GoJs;
		var value = point.x;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"x")) {
			objValue = Reflect.getProperty(_this._target,"x");
		}
		var _range = { key : "x", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("x",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		var value1 = point.y;
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"y")) {
			objValue1 = Reflect.getProperty(_this1._target,"y");
		}
		var _range1 = { key : "y", from : _this1._isFrom ? value1 : objValue1, to : !_this1._isFrom ? value1 : objValue1};
		_this1._props.set("y",_range1);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		var objValue2 = 0;
		if(Object.prototype.hasOwnProperty.call(_this2._target,"alpha")) {
			objValue2 = Reflect.getProperty(_this2._target,"alpha");
		}
		var _range2 = { key : "alpha", from : _this2._isFrom ? 1 : objValue2, to : !_this2._isFrom ? 1 : objValue2};
		_this2._props.set("alpha",_range2);
		if(_this2._isFrom) {
			_this2.updateProperties(0);
		}
		var _this3 = _this2;
		var value2 = lib_util_MathUtil.randomInt(10);
		var objValue3 = 0;
		if(Object.prototype.hasOwnProperty.call(_this3._target,"size")) {
			objValue3 = Reflect.getProperty(_this3._target,"size");
		}
		var _range3 = { key : "size", from : _this3._isFrom ? value2 : objValue3, to : !_this3._isFrom ? value2 : objValue3};
		_this3._props.set("size",_range3);
		if(_this3._isFrom) {
			_this3.updateProperties(0);
		}
		var _this4 = _this3;
		_this4._easing = lets_easing_Sine.get_easeInOut();
		var _this5 = _this4;
		_this5._delay = _this5.getDuration(time);
		var _this6 = _this5;
		_this6._options.onComplete = $bind(this,this.onCompleteHandler);
		_this6._options.onCompleteParams = [shape];
	}
	,drawShape: function() {
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			this.ctx.fillStyle = lib_util_ColorUtil.getColour(sh.r,sh.g,sh.b,sh.alpha);
			lib_CanvasTools.circle(this.ctx,sh.x,sh.y,sh.size);
		}
	}
	,setup: function() {
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.shapeMax;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.createShape();
			this.shapeArray.push(sh);
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,lib_util_ColorUtil.BLACK);
		this.drawShape();
	}
	,__class__: art_CC009
});
var art_CC010 = function(ctx) {
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("Animating text");
	lib_util_FontUtil.embedGoogleFont("UnifrakturMaguntia",$bind(this,this.onEmbedHandler));
	lib_util_FontUtil.embedGoogleFont("Press+Start+2P",$bind(this,this.onEmbedHandler));
};
art_CC010.__name__ = ["art","CC010"];
art_CC010.__interfaces__ = [art_ICCBase];
art_CC010.__super__ = art_CCBase;
art_CC010.prototype = $extend(art_CCBase.prototype,{
	onEmbedHandler: function(e) {
		console.log("Embed: \"" + e + "\"");
	}
	,createText: function() {
		var shape = { x : lib_Global.w / 2, y : lib_Global.h / 2 + 20, alpha : 1, size : 60, type : "text"};
		shape["text"] = this.toString();
		shape["r"] = lib_util_ColorUtil.BLACK.r;
		shape["g"] = lib_util_ColorUtil.BLACK.g;
		shape["b"] = lib_util_ColorUtil.BLACK.b;
		var ypos1 = shape.y - 100;
		var ypos2 = shape.y + 100;
		var GoJs = new lets_GoJs(shape,1.0);
		GoJs._isFrom = true;
		GoJs.updateProperties(0);
		var _this = GoJs;
		var value = shape.x;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"x")) {
			objValue = Reflect.getProperty(_this._target,"x");
		}
		var _range = { key : "x", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("x",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"y")) {
			objValue1 = Reflect.getProperty(_this1._target,"y");
		}
		var _range1 = { key : "y", from : _this1._isFrom ? ypos1 : objValue1, to : !_this1._isFrom ? ypos1 : objValue1};
		_this1._props.set("y",_range1);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		var objValue2 = 0;
		if(Object.prototype.hasOwnProperty.call(_this2._target,"alpha")) {
			objValue2 = Reflect.getProperty(_this2._target,"alpha");
		}
		var _range2 = { key : "alpha", from : _this2._isFrom ? 0 : objValue2, to : !_this2._isFrom ? 0 : objValue2};
		_this2._props.set("alpha",_range2);
		if(_this2._isFrom) {
			_this2.updateProperties(0);
		}
		var _this3 = _this2;
		var objValue3 = 0;
		if(Object.prototype.hasOwnProperty.call(_this3._target,"size")) {
			objValue3 = Reflect.getProperty(_this3._target,"size");
		}
		var _range3 = { key : "size", from : _this3._isFrom ? 50 : objValue3, to : !_this3._isFrom ? 50 : objValue3};
		_this3._props.set("size",_range3);
		if(_this3._isFrom) {
			_this3.updateProperties(0);
		}
		var _this4 = _this3;
		_this4._easing = lets_easing_Sine.get_easeOut();
		var _this5 = _this4;
		_this5._delay = _this5.getDuration(2);
		var GoJs1 = new lets_GoJs(shape,1.0);
		GoJs1._isFrom = false;
		var _this6 = GoJs1;
		var value1 = shape.x;
		var objValue4 = 0;
		if(Object.prototype.hasOwnProperty.call(_this6._target,"x")) {
			objValue4 = Reflect.getProperty(_this6._target,"x");
		}
		var _range4 = { key : "x", from : _this6._isFrom ? value1 : objValue4, to : !_this6._isFrom ? value1 : objValue4};
		_this6._props.set("x",_range4);
		if(_this6._isFrom) {
			_this6.updateProperties(0);
		}
		var _this7 = _this6;
		var objValue5 = 0;
		if(Object.prototype.hasOwnProperty.call(_this7._target,"y")) {
			objValue5 = Reflect.getProperty(_this7._target,"y");
		}
		var _range5 = { key : "y", from : _this7._isFrom ? ypos2 : objValue5, to : !_this7._isFrom ? ypos2 : objValue5};
		_this7._props.set("y",_range5);
		if(_this7._isFrom) {
			_this7.updateProperties(0);
		}
		var _this8 = _this7;
		var objValue6 = 0;
		if(Object.prototype.hasOwnProperty.call(_this8._target,"alpha")) {
			objValue6 = Reflect.getProperty(_this8._target,"alpha");
		}
		var _range6 = { key : "alpha", from : _this8._isFrom ? 0 : objValue6, to : !_this8._isFrom ? 0 : objValue6};
		_this8._props.set("alpha",_range6);
		if(_this8._isFrom) {
			_this8.updateProperties(0);
		}
		var _this9 = _this8;
		var objValue7 = 0;
		if(Object.prototype.hasOwnProperty.call(_this9._target,"size")) {
			objValue7 = Reflect.getProperty(_this9._target,"size");
		}
		var _range7 = { key : "size", from : _this9._isFrom ? 50 : objValue7, to : !_this9._isFrom ? 50 : objValue7};
		_this9._props.set("size",_range7);
		if(_this9._isFrom) {
			_this9.updateProperties(0);
		}
		var _this10 = _this9;
		_this10._easing = lets_easing_Sine.get_easeIn();
		var _this11 = _this10;
		_this11._delay = _this11.getDuration(5.5);
		return shape;
	}
	,createBall: function() {
		var shape = { x : lib_Global.w / 2, y : lib_Global.h / 2, size : 50, alpha : 1, color : lib_util_ColorUtil.getColourObj(lib_util_ColorUtil.FUCHSIA), type : "ball"};
		shape["r"] = lib_util_ColorUtil.FUCHSIA.r;
		shape["g"] = lib_util_ColorUtil.FUCHSIA.g;
		shape["b"] = lib_util_ColorUtil.FUCHSIA.b;
		shape["angle"] = 0;
		return shape;
	}
	,setup: function() {
		console.log("setup: " + this.toString());
		this.shapeArray = [];
		this.shapeArray.push(this.createBall());
		this.shapeArray.push(this.createText());
	}
	,drawShape: function() {
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			if(sh.type == "text") {
				this.ctx.fillStyle = lib_util_ColorUtil.getColour(sh.r,sh.g,sh.b,sh.alpha);
				lib_util_FontUtil.centerFillText(this.ctx,sh.text,sh.x,sh.y,"'UnifrakturMaguntia', cursive",Math.round(sh.size));
			}
			if(sh.type == "ball") {
				var radius = 50;
				var speed = 2;
				sh.angle += speed;
				sh.x = lib_Global.w / 2 + Math.cos(lib_util_MathUtil.radians(sh.angle)) * radius;
				sh.y = lib_Global.h / 2 + Math.sin(lib_util_MathUtil.radians(sh.angle)) * radius;
				this.ctx.fillStyle = lib_util_ColorUtil.getColour(sh.r,sh.g,sh.b,sh.alpha);
				lib_CanvasTools.circle(this.ctx,sh.x,sh.y,sh.size);
			}
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		this.drawShape();
	}
	,__class__: art_CC010
});
var art_CC011 = function(ctx) {
	this.divide = 4;
	this.radius1 = 350;
	this.radius0 = 150;
	this.shapeMax = Math.round(90.);
	this.shapeArray2 = [];
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("Equalizer with sound");
};
art_CC011.__name__ = ["art","CC011"];
art_CC011.__interfaces__ = [art_ICCBase];
art_CC011.__super__ = art_CCBase;
art_CC011.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i) {
		var angle = i * this.divide;
		var line = { _id : i, x1 : lib_Global.w / 2 + Math.cos(lib_util_MathUtil.radians(angle)) * this.radius0, y1 : lib_Global.h / 2 + Math.sin(lib_util_MathUtil.radians(angle)) * this.radius0, x2 : lib_Global.w / 2 + Math.cos(lib_util_MathUtil.radians(angle)) * this.radius1, y2 : lib_Global.h / 2 + Math.sin(lib_util_MathUtil.radians(angle)) * this.radius1, stroke : 10, radius : lib_util_MathUtil.random(this.radius0,this.radius1)};
		this.onCompleteHandler(line);
		return line;
	}
	,createX: function(i) {
		var obj = { _id : i, r : lib_util_ColorUtil.WHITE.r, g : lib_util_ColorUtil.WHITE.g, b : lib_util_ColorUtil.WHITE.b, a : 1, rotation : 0, x : lib_Global.w / 2, y : lib_Global.h / 2, size : 160, stroke : 80};
		this.onXHandler(obj);
		return obj;
	}
	,drawShape: function() {
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var line = this.shapeArray[i];
			var angle = i * this.divide;
			line.x2 = lib_Global.w / 2 + Math.cos(lib_util_MathUtil.radians(angle)) * line.radius;
			line.y2 = lib_Global.h / 2 + Math.sin(lib_util_MathUtil.radians(angle)) * line.radius;
			lib_CanvasTools.lineColour(this.ctx,lib_util_ColorUtil.WHITE.r,lib_util_ColorUtil.WHITE.g,lib_util_ColorUtil.WHITE.b,1);
			this.ctx.lineWidth = line.stroke;
			lib_CanvasTools.line(this.ctx,line.x1,line.y1,line.x2,line.y2);
		}
		var _g11 = 0;
		var _g2 = this.shapeArray2.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var shape = this.shapeArray2[i1];
			this.ctx.save();
			this.ctx.translate(shape.x,shape.y);
			this.ctx.rotate(lib_util_MathUtil.radians(shape.rotation));
			lib_CanvasTools.strokeColour(this.ctx,shape.r,shape.g,shape.b,shape.a);
			lib_util_ShapeUtil.xcross(this.ctx,0,0,shape.size,shape.stroke);
			this.ctx.restore();
		}
	}
	,onUpdateHandler: function(e) {
		console.log("update: " + e);
	}
	,onCompleteHandler: function(line) {
		var GoJs = new lets_GoJs(line,lib_util_MathUtil.random(0.5,1.5));
		GoJs._isFrom = false;
		var _this = GoJs;
		var value = lib_util_MathUtil.random(this.radius0,this.radius1);
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"radius")) {
			objValue = Reflect.getProperty(_this._target,"radius");
		}
		var _range = { key : "radius", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("radius",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		_this1._easing = lets_easing_Sine.get_easeInOut();
		var _this2 = _this1;
		_this2._options.onComplete = $bind(this,this.onCompleteHandler);
		_this2._options.onCompleteParams = [line];
	}
	,onXHandler: function(obj) {
		var GoJs = new lets_GoJs(obj,lib_util_MathUtil.random(0.5,1.5));
		GoJs._isFrom = false;
		var _this = GoJs;
		var value = lib_util_MathUtil.random(0,360);
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"rotation")) {
			objValue = Reflect.getProperty(_this._target,"rotation");
		}
		var _range = { key : "rotation", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("rotation",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		var value1 = lib_util_MathUtil.random(150,160);
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"size")) {
			objValue1 = Reflect.getProperty(_this1._target,"size");
		}
		var _range1 = { key : "size", from : _this1._isFrom ? value1 : objValue1, to : !_this1._isFrom ? value1 : objValue1};
		_this1._props.set("size",_range1);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		_this2._easing = lets_easing_Sine.get_easeInOut();
		var _this3 = _this2;
		_this3._options.onComplete = $bind(this,this.onXHandler);
		_this3._options.onCompleteParams = [obj];
		var _this4 = _this3;
		_this4._delay = _this4.getDuration(lib_util_MathUtil.random(0,0.5));
	}
	,setup: function() {
		console.log("setup: " + this.toString());
		var _g1 = 0;
		var _g = this.shapeMax;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
		this.shapeArray2.push(this.createX(0));
		this.draw();
	}
	,draw: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,lib_util_ColorUtil.BLACK);
		this.drawShape();
	}
	,__class__: art_CC011
});
var art_CC012 = function(ctx) {
	this.maxDistance = 100;
	this.divide = 4;
	this.radius1 = 50;
	this.radius0 = 350;
	this.shapeMax = Math.round(90.);
	this.shapeArray2 = [];
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("Weird Equalizer without sound but connected");
};
art_CC012.__name__ = ["art","CC012"];
art_CC012.__interfaces__ = [art_ICCBase];
art_CC012.__super__ = art_CCBase;
art_CC012.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i) {
		var angle = i * this.divide;
		var line = { _id : i, x1 : lib_Global.w / 2 + Math.cos(lib_util_MathUtil.radians(angle)) * this.radius0, y1 : lib_Global.h / 2 + Math.sin(lib_util_MathUtil.radians(angle)) * this.radius0, x2 : lib_Global.w / 2 + Math.cos(lib_util_MathUtil.radians(angle)) * this.radius1, y2 : lib_Global.h / 2 + Math.sin(lib_util_MathUtil.radians(angle)) * this.radius1, stroke : 1, radius : lib_util_MathUtil.random(this.radius0,this.radius1)};
		this.onCompleteHandler(line);
		return line;
	}
	,drawShape: function() {
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var line = this.shapeArray[i];
			var angle = i * this.divide;
			line.x2 = lib_Global.w / 2 + Math.cos(lib_util_MathUtil.radians(angle)) * line.radius;
			line.y2 = lib_Global.h / 2 + Math.sin(lib_util_MathUtil.radians(angle)) * line.radius;
			lib_CanvasTools.lineColour(this.ctx,lib_util_ColorUtil.WHITE.r,lib_util_ColorUtil.WHITE.g,lib_util_ColorUtil.WHITE.b,1);
			this.ctx.lineWidth = line.stroke;
			lib_CanvasTools.line(this.ctx,line.x1,line.y1,line.x2,line.y2);
			lib_CanvasTools.colour(this.ctx,lib_util_ColorUtil.WHITE.r,lib_util_ColorUtil.WHITE.g,lib_util_ColorUtil.WHITE.b,0.5);
			lib_CanvasTools.strokeCircle(this.ctx,line.x2,line.y2,3);
			var _g3 = 0;
			var _g2 = this.shapeArray.length;
			while(_g3 < _g2) {
				var j = _g3++;
				var b2 = this.shapeArray[j];
				if(line == b2) {
					continue;
				}
				var _dist = lib_util_MathUtil.distance(line.x2,line.y2,b2.x2,b2.y2);
				if(_dist < this.maxDistance) {
					var alpha = 0.8 - _dist / this.maxDistance;
					lib_CanvasTools.lineColour(this.ctx,lib_util_ColorUtil.WHITE.r,lib_util_ColorUtil.WHITE.g,lib_util_ColorUtil.WHITE.b,alpha);
					lib_CanvasTools.line(this.ctx,line.x2,line.y2,b2.x2,b2.y2);
				}
			}
		}
	}
	,onUpdateHandler: function(e) {
		console.log("update: " + e);
	}
	,onCompleteHandler: function(line) {
		var GoJs = new lets_GoJs(line,lib_util_MathUtil.random(2,4));
		GoJs._isFrom = false;
		var _this = GoJs;
		var value = lib_util_MathUtil.random(this.radius0,this.radius1);
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"radius")) {
			objValue = Reflect.getProperty(_this._target,"radius");
		}
		var _range = { key : "radius", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("radius",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		_this1._easing = lets_easing_Sine.get_easeInOut();
		var _this2 = _this1;
		_this2._options.onComplete = $bind(this,this.onCompleteHandler);
		_this2._options.onCompleteParams = [line];
	}
	,setup: function() {
		console.log("setup: " + this.toString());
		var _g1 = 0;
		var _g = this.shapeMax;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
		this.draw();
	}
	,draw: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,lib_util_ColorUtil.BLACK);
		this.drawShape();
	}
	,__class__: art_CC012
});
var art_CC013 = function(ctx) {
	this.colorArr = [];
	this.shapeArray = [];
	this.colorArr = lib_util_ColorUtil.niceColor100;
	this.set_description("Create simple pattern with colors");
	art_CCBase.call(this,ctx);
	this.loader = new mloader_JsonLoader("assets/1000.json");
	this.loader.loaded.add($bind(this,this.loaded));
	this.loader.load();
};
art_CC013.__name__ = ["art","CC013"];
art_CC013.__interfaces__ = [art_ICCBase];
art_CC013.__super__ = art_CCBase;
art_CC013.prototype = $extend(art_CCBase.prototype,{
	loaded: function(event) {
		var _g = event.type;
		switch(_g[1]) {
		case 3:
			this.colorArr = event.target.content;
			this.draw();
			break;
		case 4:
			var error = _g[2];
			console.log(error);
			break;
		default:
		}
	}
	,create: function() {
		var _size = 50;
		var _x = 0;
		var _y = 0;
		var _numHor = Math.round(lib_Global.w / _size) + 1;
		var _numVer = Math.round(lib_Global.h / _size) + 1;
		var grid = new lib_util_GridUtil();
		grid.setCellSize(_size);
		if(this.isDebug) {
			lib_util_ShapeUtil.gridRegister(this.ctx,grid.array);
			this.ctx.strokeRect(grid.x,grid.y,grid.width,grid.height);
		}
		var colorCounter = 0;
		var _g1 = 0;
		var _g = grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var p = grid.array[i];
			++colorCounter;
			if(colorCounter >= this.colorArr.length) {
				colorCounter = 0;
			}
			var colorArray = this.colorArr[colorCounter];
			var tmp = this.ctx;
			var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
			lib_CanvasTools.colourObj(tmp,{ r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255});
			this.ctx.fillRect(p.x,p.y,_size,_size);
			var tmp1 = this.ctx;
			var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
			lib_CanvasTools.colourObj(tmp1,{ r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255});
			lib_CanvasTools.fillCircle(this.ctx,p.x + _size / 2,p.y + _size / 2,_size / 2 * 0.8);
			var tmp2 = this.ctx;
			var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
			lib_CanvasTools.colourObj(tmp2,{ r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255});
			lib_CanvasTools.fillCircle(this.ctx,p.x + _size / 2,p.y + _size / 2,_size / 2 * 0.6);
			var tmp3 = this.ctx;
			var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
			lib_CanvasTools.colourObj(tmp3,{ r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255});
			lib_CanvasTools.fillCircle(this.ctx,p.x + _size / 2,p.y + _size / 2,_size / 2 * 0.4);
			var tmp4 = this.ctx;
			var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
			lib_CanvasTools.colourObj(tmp4,{ r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255});
			lib_CanvasTools.fillCircle(this.ctx,p.x + _size / 2,p.y + _size / 2,_size / 2 * 0.2);
		}
	}
	,draw: function() {
		console.log("draw: " + this.toString());
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,lib_util_ColorUtil.WHITE);
		this.create();
		this.stop();
	}
	,__class__: art_CC013
});
var art_CC014 = function(ctx) {
	this.shapeMax = 10;
	this.flipColorW = lib_util_ColorUtil.WHITE;
	this.flipColorB = lib_util_ColorUtil.BLACK;
	this.shapeArray = [];
	lib_util_FontUtil.embedGoogleFont("Six+Caps",$bind(this,this.onEmbedHandler));
	lib_util_FontUtil.embedGoogleFont("Barlow+Condensed",$bind(this,this.onEmbedHandler));
	art_CCBase.call(this,ctx);
	this.set_description("Blink black and white");
};
art_CC014.__name__ = ["art","CC014"];
art_CC014.__interfaces__ = [art_ICCBase];
art_CC014.__super__ = art_CCBase;
art_CC014.prototype = $extend(art_CCBase.prototype,{
	onEmbedHandler: function(e) {
		console.log("Embed: \"" + e + "\"");
		this.draw();
		this.onFlipColorHandler();
	}
	,onFlipColorHandler: function() {
		if(lib_util_MathUtil.posNeg() <= 0) {
			this.flipColorB = lib_util_ColorUtil.BLACK;
			this.flipColorW = lib_util_ColorUtil.WHITE;
		} else {
			this.flipColorB = lib_util_ColorUtil.WHITE;
			this.flipColorW = lib_util_ColorUtil.BLACK;
		}
		var duration = lib_util_MathUtil.random(0,.7);
		var GoJs = new lets_GoJs({ },duration);
		var _this = GoJs;
		_this._options.onComplete = $bind(this,this.onFlipColorHandler);
		_this._options.onCompleteParams = null;
	}
	,createShape: function(i) {
		var circle = { _id : "" + i, _type : "circle", x : lib_util_MathUtil.random(0,lib_Global.w), y : lib_util_MathUtil.random(0,lib_Global.h), size : lib_util_MathUtil.random(10,100)};
		circle["stroke"] = 20;
		this.onCircleHandler(circle);
		return circle;
	}
	,onCircleHandler: function(circle) {
		var r = Math.round(lib_util_MathUtil.random(1,20));
		var GoJs = new lets_GoJs(circle,lib_util_MathUtil.random(1,5));
		GoJs._isFrom = false;
		var _this = GoJs;
		var value = lib_util_MathUtil.random(0,lib_Global.w);
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"x")) {
			objValue = Reflect.getProperty(_this._target,"x");
		}
		var _range = { key : "x", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("x",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		var value1 = lib_util_MathUtil.random(0,lib_Global.h);
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"y")) {
			objValue1 = Reflect.getProperty(_this1._target,"y");
		}
		var _range1 = { key : "y", from : _this1._isFrom ? value1 : objValue1, to : !_this1._isFrom ? value1 : objValue1};
		_this1._props.set("y",_range1);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		var value2 = Math.round(lib_util_MathUtil.random(10,100));
		var objValue2 = 0;
		if(Object.prototype.hasOwnProperty.call(_this2._target,"size")) {
			objValue2 = Reflect.getProperty(_this2._target,"size");
		}
		var _range2 = { key : "size", from : _this2._isFrom ? value2 : objValue2, to : !_this2._isFrom ? value2 : objValue2};
		_this2._props.set("size",_range2);
		if(_this2._isFrom) {
			_this2.updateProperties(0);
		}
		var _this3 = _this2;
		var objValue3 = 0;
		if(Object.prototype.hasOwnProperty.call(_this3._target,"stroke")) {
			objValue3 = Reflect.getProperty(_this3._target,"stroke");
		}
		var _range3 = { key : "stroke", from : _this3._isFrom ? r : objValue3, to : !_this3._isFrom ? r : objValue3};
		_this3._props.set("stroke",_range3);
		if(_this3._isFrom) {
			_this3.updateProperties(0);
		}
		var _this4 = _this3;
		_this4._easing = lets_easing_Sine.get_easeInOut();
		var _this5 = _this4;
		_this5._options.onComplete = $bind(this,this.onCircleHandler);
		_this5._options.onCompleteParams = [circle];
		var _this6 = _this5;
		_this6._delay = _this6.getDuration(lib_util_MathUtil.random(0,2));
	}
	,drawShape: function() {
		this.ctx.fillStyle = lib_util_ColorUtil.getColourObj(this.flipColorW);
		lib_util_FontUtil.centerFillText(this.ctx,"[mck]",lib_Global.w / 2,lib_Global.h / 2 + 50,"'Barlow Condensed', sans-serif",300);
		this.ctx.globalCompositeOperation = "xor";
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			lib_CanvasTools.strokeColourObj(this.ctx,this.flipColorW);
			lib_CanvasTools.strokeWeight(this.ctx,sh.stroke);
			lib_CanvasTools.strokeCircle(this.ctx,sh.x,sh.y,sh.size / 2);
		}
	}
	,setup: function() {
		console.log("setup: " + this.toString());
		var _g1 = 0;
		var _g = this.shapeMax;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,this.flipColorB);
		this.drawShape();
	}
	,__class__: art_CC014
});
var art_CC015 = function(ctx) {
	this.color = lib_util_ColorUtil.niceColor100[0];
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("clock");
};
art_CC015.__name__ = ["art","CC015"];
art_CC015.__interfaces__ = [art_ICCBase];
art_CC015.__super__ = art_CCBase;
art_CC015.prototype = $extend(art_CCBase.prototype,{
	setup: function() {
	}
	,drawShape: function() {
		var time = new Date();
		var hours = time.getHours();
		var min = time.getMinutes();
		var sec = time.getSeconds();
		var min90 = -lib_util_MathUtil.radians(90);
		var lineW = 100;
		var minRadius = 3 * lineW;
		var _lineCap = "round";
		var centerX = lib_Global.w / 2;
		var centerY = lib_Global.h / 2;
		var _alpha = 0.1;
		if(this.isDebug) {
			console.log("" + hours + ":" + min + ":" + sec);
		}
		this.ctx.beginPath();
		var $int = Std.parseInt(StringTools.replace(this.color[0],"#","0x"));
		this.ctx.strokeStyle = lib_util_ColorUtil.getColourObj({ r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255});
		this.ctx.lineCap = _lineCap;
		this.ctx.lineWidth = lineW;
		this.ctx.arc(centerX,centerY,minRadius - 0 * lineW,min90,lib_util_MathUtil.radians(6. * sec) + min90);
		this.ctx.stroke();
		var int1 = Std.parseInt(StringTools.replace(this.color[0],"#","0x"));
		this.ctx.strokeStyle = lib_util_ColorUtil.getColourObj({ r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255},_alpha);
		lib_CanvasTools.strokeCircle(this.ctx,centerX,centerY,minRadius - 0 * lineW);
		this.ctx.beginPath();
		var int2 = Std.parseInt(StringTools.replace(this.color[1],"#","0x"));
		this.ctx.strokeStyle = lib_util_ColorUtil.getColourObj({ r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255});
		this.ctx.lineCap = _lineCap;
		this.ctx.lineWidth = lineW;
		this.ctx.arc(centerX,centerY,minRadius - lineW,min90,lib_util_MathUtil.radians(6. * min) + min90);
		this.ctx.stroke();
		var int3 = Std.parseInt(StringTools.replace(this.color[1],"#","0x"));
		this.ctx.strokeStyle = lib_util_ColorUtil.getColourObj({ r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255},_alpha);
		lib_CanvasTools.strokeCircle(this.ctx,centerX,centerY,minRadius - lineW);
		this.ctx.beginPath();
		var int4 = Std.parseInt(StringTools.replace(this.color[2],"#","0x"));
		this.ctx.strokeStyle = lib_util_ColorUtil.getColourObj({ r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255});
		this.ctx.lineCap = _lineCap;
		this.ctx.lineWidth = lineW;
		this.ctx.arc(centerX,centerY,minRadius - 2 * lineW,min90,lib_util_MathUtil.radians(15. * hours) + min90);
		this.ctx.stroke();
		var int5 = Std.parseInt(StringTools.replace(this.color[2],"#","0x"));
		this.ctx.strokeStyle = lib_util_ColorUtil.getColourObj({ r : int5 >> 16 & 255, g : int5 >> 8 & 255, b : int5 & 255},_alpha);
		lib_CanvasTools.strokeCircle(this.ctx,centerX,centerY,minRadius - 2 * lineW);
	}
	,draw: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,lib_util_ColorUtil.WHITE);
		this.drawShape();
	}
	,__class__: art_CC015
});
var art_CC016 = function(ctx) {
	this._size = 50;
	this._radius = 150;
	this.shapeMax = 200;
	this.shapeArray = [];
	this.set_description("Circle with trail");
	art_CCBase.call(this,ctx);
};
art_CC016.__name__ = ["art","CC016"];
art_CC016.__interfaces__ = [art_ICCBase];
art_CC016.__super__ = art_CCBase;
art_CC016.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i) {
		var shape = { _id : "" + i, _type : "circle", x : lib_Global.w / 2, y : lib_Global.h / 2, rgb : lib_util_ColorUtil.BLACK, alpha : 1 - i * (1 / this.shapeMax), radius : this._radius, size : this._size, angle : i, speed : 4};
		return shape;
	}
	,drawShape: function() {
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			sh.angle -= sh.speed;
			sh.x = lib_Global.w / 2 + Math.cos(lib_util_MathUtil.radians(sh.angle)) * sh.radius;
			sh.y = lib_Global.h / 2 + Math.sin(lib_util_MathUtil.radians(sh.angle)) * sh.radius;
			this.ctx.fillStyle = lib_util_ColorUtil.getColourObj(sh.rgb,sh.alpha);
			lib_CanvasTools.circle(this.ctx,sh.x,sh.y,sh.size);
		}
	}
	,setup: function() {
		console.log("setup: " + this.toString());
		var _g1 = 0;
		var _g = this.shapeMax;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		this.drawShape();
	}
	,__class__: art_CC016
});
var art_CC017 = function(ctx) {
	this.grid = new lib_util_GridUtil();
	this._size = 75;
	this.shapeMax = 25;
	this.arr = [[]];
	this.shapeArray = [];
	this.set_description("Circles with trail");
	art_CCBase.call(this,ctx);
};
art_CC017.__name__ = ["art","CC017"];
art_CC017.__interfaces__ = [art_ICCBase];
art_CC017.__super__ = art_CCBase;
art_CC017.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,j) {
		var shape = { _id : "" + i, _type : "circle", x : lib_Global.w / 2, y : lib_Global.h / 2, rgb : lib_util_ColorUtil.BLACK, alpha : 1 - i * (1 / this.shapeMax), radius : 20, size : 10, angle : j * 10 + i * 10, speed : 4};
		return shape;
	}
	,drawShape: function() {
		if(this.isDebug) {
			lib_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var j = _g1++;
			var point = this.grid.array[j];
			var _g3 = 0;
			var _g2 = this.arr[j].length;
			while(_g3 < _g2) {
				var i = _g3++;
				var sh = this.arr[j][i];
				sh.angle -= sh.speed;
				sh.x = point.x + Math.cos(lib_util_MathUtil.radians(sh.angle)) * sh.radius;
				sh.y = point.y + Math.sin(lib_util_MathUtil.radians(sh.angle)) * sh.radius;
				this.ctx.fillStyle = lib_util_ColorUtil.getColourObj(sh.rgb,sh.alpha);
				lib_CanvasTools.circle(this.ctx,sh.x,sh.y,sh.size);
			}
		}
	}
	,setup: function() {
		console.log("init: " + this.toString());
		this.grid.setCellSize(this._size);
		this.grid.setIsCenterPoint(true);
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var j = _g1++;
			this.arr.push([]);
			var _g3 = 0;
			var _g2 = this.shapeMax;
			while(_g3 < _g2) {
				var i = _g3++;
				this.arr[j].push(this.createShape(i,j));
			}
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		this.drawShape();
	}
	,__class__: art_CC017
});
var art_CC018 = function(ctx) {
	this._size = 75;
	this.grid = new lib_util_GridUtil();
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
};
art_CC018.__name__ = ["art","CC018"];
art_CC018.__interfaces__ = [art_ICCBase];
art_CC018.__super__ = art_CCBase;
art_CC018.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y, radius : lib_util_MathUtil.random(5,this._size / 2)};
		this.onYoYoHandler(shape);
		return shape;
	}
	,drawShape: function() {
		if(this.isDebug) {
			lib_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		lib_CanvasTools.fillColourRGB(this.ctx,lib_util_ColorUtil.BLACK);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var circle = this.shapeArray[i];
			lib_CanvasTools.circle(this.ctx,circle.x,circle.y,circle.radius);
		}
	}
	,onYoYoHandler: function(circle) {
		var GoJs = new lets_GoJs(circle,lib_util_MathUtil.random(0.1,2));
		GoJs._isFrom = false;
		var _this = GoJs;
		var value = lib_util_MathUtil.random(5,this._size / 2);
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"radius")) {
			objValue = Reflect.getProperty(_this._target,"radius");
		}
		var _range = { key : "radius", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("radius",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		_this1._isYoyo = true;
		var _this2 = _this1;
		_this2._easing = lets_easing_Sine.get_easeInOut();
		var _this3 = _this2;
		_this3._options.onComplete = $bind(this,this.onYoYoHandler);
		_this3._options.onCompleteParams = [circle];
	}
	,setup: function() {
		console.log("setup: " + this.toString());
		this.grid.setCellSize(this._size);
		this.grid.setIsCenterPoint(true);
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var point = this.grid.array[i];
			this.shapeArray.push(this.createShape(i,point));
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		this.drawShape();
	}
	,__class__: art_CC018
});
var art_CC019 = function(ctx) {
	this._lineColor = null;
	this._bgColor = null;
	this._radius = 150;
	this._size = 75;
	this.grid = new lib_util_GridUtil();
	this.shapeMax = 10;
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
};
art_CC019.__name__ = ["art","CC019"];
art_CC019.__interfaces__ = [art_ICCBase];
art_CC019.__super__ = art_CCBase;
art_CC019.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y, radius : this._radius};
		if(i != 4) {
			this.onAnimateHandler(shape);
		}
		return shape;
	}
	,drawShape: function() {
		lib_CanvasTools.backgroundObj(this.ctx,this._bgColor);
		if(this.isDebug) {
			lib_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		lib_CanvasTools.strokeColourObj(this.ctx,this._lineColor);
		lib_CanvasTools.strokeWeight(this.ctx,15);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var circle = this.shapeArray[i];
			lib_CanvasTools.strokeCircle(this.ctx,circle.x,circle.y,circle.radius);
		}
	}
	,onAnimateHandler: function(circle) {
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var circle1 = this.shapeArray[i];
			var point = this.grid.array[i];
			circle1.x = point.x;
			circle1.y = point.y;
		}
		var GoJs = new lets_GoJs(circle,5);
		GoJs._isFrom = false;
		var _this = GoJs;
		var value = lib_Global.w / 2;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"x")) {
			objValue = Reflect.getProperty(_this._target,"x");
		}
		var _range = { key : "x", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("x",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		var value1 = lib_Global.h / 2;
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"y")) {
			objValue1 = Reflect.getProperty(_this1._target,"y");
		}
		var _range1 = { key : "y", from : _this1._isFrom ? value1 : objValue1, to : !_this1._isFrom ? value1 : objValue1};
		_this1._props.set("y",_range1);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		_this2._easing = lets_easing_Sine.get_easeInOut();
		var _this3 = _this2;
		_this3._options.onComplete = $bind(this,this.onAnimateHandler);
		_this3._options.onCompleteParams = [circle];
	}
	,setup: function() {
		var colorArray = lib_util_ColorUtil.niceColor100[lib_util_MathUtil.randomInt(lib_util_ColorUtil.niceColor100.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._bgColor = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._lineColor = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		this.grid.setDimension(lib_Global.w * 2.1,lib_Global.h * 2.1);
		this.grid.setNumbered(3,3);
		this.grid.setIsCenterPoint(true);
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var point = this.grid.array[i];
			this.shapeArray.push(this.createShape(i,point));
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		this.drawShape();
	}
	,__class__: art_CC019
});
var art_CC020 = function(ctx) {
	this._lineColor2 = null;
	this._lineColor = null;
	this._bgColor = null;
	this._radius = 150;
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
};
art_CC020.__name__ = ["art","CC020"];
art_CC020.__interfaces__ = [art_ICCBase];
art_CC020.__super__ = art_CCBase;
art_CC020.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "arc", x : lib_Global.w / 2, y : lib_Global.h / 2, radius : this._radius, rotation : 0, angle : 250, speed : 1};
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,this._bgColor);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			sh.rotation += sh.speed + i;
			this.ctx.beginPath();
			this.ctx.strokeStyle = lib_util_ColorUtil.getColourObj(this._lineColor);
			if(i == 0) {
				this.ctx.strokeStyle = lib_util_ColorUtil.getColourObj(this._lineColor2);
			}
			this.ctx.lineCap = "round";
			this.ctx.lineWidth = 30;
			this.ctx.arc(lib_Global.w / 2,lib_Global.h / 2,sh.radius * (0.6 * i + 1),lib_util_MathUtil.radians(sh.rotation),lib_util_MathUtil.radians(sh.angle + sh.rotation));
			this.ctx.stroke();
		}
	}
	,setup: function() {
		console.log("setup: " + this.toString());
		var colorArray = lib_util_ColorUtil.niceColor100[lib_util_MathUtil.randomInt(lib_util_ColorUtil.niceColor100.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._bgColor = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._lineColor = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._lineColor2 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		this.shapeArray.push(this.createShape(0));
		this.shapeArray.push(this.createShape(1));
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC020
});
var art_CC021 = function(ctx) {
	this._fillColor = null;
	this._lineColor = null;
	this._bgColor = null;
	this._radius = 150;
	this._size = 75;
	this.grid = new lib_util_GridUtil();
	this.shapeMax = 10;
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
};
art_CC021.__name__ = ["art","CC021"];
art_CC021.__interfaces__ = [art_ICCBase];
art_CC021.__super__ = art_CCBase;
art_CC021.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y};
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,this._bgColor);
		if(this.isDebug) {
			lib_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		lib_CanvasTools.strokeColourObj(this.ctx,this._lineColor);
		lib_CanvasTools.strokeWeight(this.ctx,15);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var rectangle = this.shapeArray[i];
			var size = this._size * 0.8;
			var radiusMax = this._size / 2;
			var temp = radiusMax / this.shapeArray.length * i;
			lib_CanvasTools.fillColourRGB(this.ctx,this._lineColor);
			lib_CanvasTools.roundRect(this.ctx,rectangle.x,rectangle.y,size,size,temp);
		}
	}
	,setup: function() {
		var colorArray = lib_util_ColorUtil.niceColor100[lib_util_MathUtil.randomInt(lib_util_ColorUtil.niceColor100.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._bgColor = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._lineColor = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._fillColor = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		this.grid.setCellSize(this._size);
		this.grid.setIsCenterPoint(true);
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var point = this.grid.array[i];
			this.shapeArray.push(this.createShape(i,point));
		}
	}
	,draw: function() {
		console.log("draw: " + this.toString());
		this.drawShape();
		this.stop();
	}
	,__class__: art_CC021
});
var art_CC022 = function(ctx) {
	this.maxDistance = lib_Global.w / 2;
	this._xmax = 50;
	this._fillColor = null;
	this._lineColor = null;
	this._bgColor = null;
	this.shapeMax = 10;
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
};
art_CC022.__name__ = ["art","CC022"];
art_CC022.__interfaces__ = [art_ICCBase];
art_CC022.__super__ = art_CCBase;
art_CC022.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var _angle = 360 / this._xmax * i;
		var shape = { _id : "" + i, _type : "circle", radius : lib_Global.h / 2, angle : _angle, x : lib_Global.w / this._xmax * i, y : lib_Global.h / 2};
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,this._bgColor);
		lib_CanvasTools.strokeColourObj(this.ctx,this._lineColor);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			sh.angle += 1;
			sh.y = lib_Global.h / 2 + Math.sin(lib_util_MathUtil.radians(sh.angle)) * lib_Global.h / 3;
			lib_CanvasTools.strokeColourObj(this.ctx,this._lineColor,0);
			lib_CanvasTools.strokeCircle(this.ctx,sh.x,sh.y,10);
			var _g3 = 0;
			var _g2 = this.shapeArray.length;
			while(_g3 < _g2) {
				var j = _g3++;
				var b2 = this.shapeArray[j];
				if(sh == b2) {
					continue;
				}
				var _dist = lib_util_MathUtil.distance(sh.x,sh.y,b2.x,b2.y);
				if(_dist < this.maxDistance) {
					var alpha = 0.8 - _dist / this.maxDistance;
					lib_CanvasTools.lineColour(this.ctx,this._fillColor.r,this._fillColor.g,this._fillColor.b,alpha);
					lib_CanvasTools.line(this.ctx,sh.x,sh.y,b2.x,b2.y);
				}
			}
		}
	}
	,setup: function() {
		var colorArray = lib_util_ColorUtil.niceColor100[lib_util_MathUtil.randomInt(lib_util_ColorUtil.niceColor100.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._bgColor = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		this._lineColor = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._fillColor = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this._xmax;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
	}
	,draw: function() {
		console.log("draw: " + this.toString());
		this.drawShape();
	}
	,__class__: art_CC022
});
var art_CC023 = function(ctx) {
	this.radiusY = lib_Global.h / 3;
	this.centerY = lib_Global.h / 2;
	this.centerX = lib_Global.w / 2;
	this.maxDistance = lib_Global.w / 2;
	this._xmax = 50;
	this._fillColor2 = null;
	this._lineColor2 = null;
	this._fillColor = null;
	this._lineColor = null;
	this._bgColor = null;
	this.shapeArray2 = [];
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
};
art_CC023.__name__ = ["art","CC023"];
art_CC023.__interfaces__ = [art_ICCBase];
art_CC023.__super__ = art_CCBase;
art_CC023.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var _angle = 360 / this._xmax * i;
		var shape = { _id : "" + i, _type : "circle", radius : lib_Global.h / 2, angle : _angle, x : lib_Global.w / this._xmax * i + point.x, y : this.centerY + point.y};
		shape["point"] = point;
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,this._bgColor);
		lib_CanvasTools.strokeColourObj(this.ctx,this._lineColor);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			var point = Reflect.getProperty(sh,"point");
			sh.angle += 1;
			sh.y = this.centerY + point.y + Math.sin(lib_util_MathUtil.radians(sh.angle)) * this.radiusY;
			lib_CanvasTools.strokeColourObj(this.ctx,this._lineColor,1);
			lib_CanvasTools.strokeCircle(this.ctx,sh.x,sh.y,10);
			var sh2 = this.shapeArray2[i];
			var point2 = Reflect.getProperty(sh2,"point");
			sh2.angle += 1;
			sh2.y = this.centerY + point2.y + Math.sin(lib_util_MathUtil.radians(sh2.angle)) * this.radiusY;
			lib_CanvasTools.strokeColourObj(this.ctx,this._lineColor,1);
			lib_CanvasTools.strokeCircle(this.ctx,sh2.x,sh2.y,10);
			lib_CanvasTools.strokeColourObj(this.ctx,this._lineColor2,1);
			lib_CanvasTools.lineColour(this.ctx,this._fillColor.r,this._fillColor.g,this._fillColor.b,1);
			lib_CanvasTools.line(this.ctx,sh.x,sh.y,sh2.x,sh2.y);
		}
	}
	,setup: function() {
		var colorArray = lib_util_ColorUtil.niceColor100[5];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._bgColor = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._lineColor = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._fillColor = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		this._lineColor2 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
		var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		this._fillColor2 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this._xmax;
		while(_g1 < _g) {
			var i = _g1++;
			var point = { x : -50, y : -50};
			this.shapeArray.push(this.createShape(i,point));
		}
		this.shapeArray2 = [];
		var _g11 = 0;
		var _g2 = this._xmax;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var point1 = { x : 50, y : 50};
			this.shapeArray2.push(this.createShape(i1,point1));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC023
});
var art_CC024 = function(ctx) {
	this.radiusY = lib_Global.h / 3;
	this.centerY = lib_Global.h / 2;
	this.centerX = lib_Global.w / 2;
	this.maxDistance = 250;
	this._xmax = 50;
	this._fillColor2 = null;
	this._lineColor2 = null;
	this._fillColor = null;
	this._lineColor = null;
	this._bgColor = null;
	this.shapeArray2 = [];
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
};
art_CC024.__name__ = ["art","CC024"];
art_CC024.__interfaces__ = [art_ICCBase];
art_CC024.__super__ = art_CCBase;
art_CC024.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var _angle = 360 / this._xmax * i;
		var shape = { _id : "" + i, _type : "circle", radius : lib_Global.h / 2, angle : _angle, x : lib_Global.w / this._xmax * i + point.x, y : this.centerY + point.y};
		shape["point"] = point;
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,this._bgColor);
		lib_CanvasTools.strokeColourObj(this.ctx,this._lineColor);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			var point = Reflect.getProperty(sh,"point");
			sh.angle += 1;
			sh.y = this.centerY + point.y + Math.sin(lib_util_MathUtil.radians(sh.angle)) * this.radiusY;
			lib_CanvasTools.strokeColourObj(this.ctx,this._lineColor,1);
			lib_CanvasTools.strokeCircle(this.ctx,sh.x,sh.y,10);
			var sh2 = this.shapeArray2[i];
			var point2 = Reflect.getProperty(sh2,"point");
			sh2.angle += 1;
			sh2.y = this.centerY + point2.y + Math.sin(lib_util_MathUtil.radians(sh2.angle)) * this.radiusY;
			lib_CanvasTools.strokeColourObj(this.ctx,this._lineColor,1);
			lib_CanvasTools.strokeCircle(this.ctx,sh2.x,sh2.y,10);
			lib_CanvasTools.strokeColourObj(this.ctx,this._lineColor2,1);
			lib_CanvasTools.lineColour(this.ctx,this._fillColor.r,this._fillColor.g,this._fillColor.b,1);
			lib_CanvasTools.line(this.ctx,sh.x,sh.y,sh2.x,sh2.y);
			var _g3 = 0;
			var _g2 = this.shapeArray2.length;
			while(_g3 < _g2) {
				var j = _g3++;
				var b2 = this.shapeArray2[j];
				if(sh == b2) {
					continue;
				}
				var _dist = lib_util_MathUtil.distance(sh.x,sh.y,b2.x,b2.y);
				if(_dist < this.maxDistance) {
					var alpha = 0.8 - _dist / this.maxDistance;
					lib_CanvasTools.lineColour(this.ctx,this._fillColor2.r,this._fillColor2.g,this._fillColor2.b,alpha);
					lib_CanvasTools.line(this.ctx,sh.x,sh.y,b2.x,b2.y);
				}
			}
		}
	}
	,setup: function() {
		var colorArray = lib_util_ColorUtil.niceColor100[2];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._bgColor = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._lineColor = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._fillColor = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		this._lineColor2 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
		var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		this._fillColor2 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this._xmax;
		while(_g1 < _g) {
			var i = _g1++;
			var point = { x : -50, y : -50};
			this.shapeArray.push(this.createShape(i,point));
		}
		this.shapeArray2 = [];
		var _g11 = 0;
		var _g2 = this._xmax;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var point1 = { x : 50, y : 50};
			this.shapeArray2.push(this.createShape(i1,point1));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC024
});
var art_CC025 = function(ctx) {
	this._fillColor2 = null;
	this._lineColor2 = null;
	this._fillColor = null;
	this._lineColor = null;
	this._bgColor = null;
	this._cellsize = 150;
	this._radius = 150;
	this.grid = new lib_util_GridUtil();
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
};
art_CC025.__name__ = ["art","CC025"];
art_CC025.__interfaces__ = [art_ICCBase];
art_CC025.__super__ = art_CCBase;
art_CC025.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y, radius : this._radius};
		this.onAnimateHandler(shape);
		return shape;
	}
	,onAnimateHandler: function(circle) {
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,lib_util_ColorUtil.WHITE);
		if(this.isDebug) {
			lib_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var point = this.grid.array[i];
			var colorArray = lib_util_ColorUtil.niceColor100[i];
			var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
			var color0 = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
			var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
			var color1 = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
			var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
			var color2 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
			var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
			var color3 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
			var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
			var color4 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
			var _colorA = [color0,color1,color2,color3,color4];
			var _g3 = 0;
			var _g2 = _colorA.length;
			while(_g3 < _g2) {
				var j = _g3++;
				var px = 10;
				var _w = Math.round((this.grid.cellWidth - px) / _colorA.length);
				var offsetX = j * _w;
				lib_CanvasTools.fillColourRGB(this.ctx,_colorA[j]);
				this.ctx.fillRect(offsetX + point.x,point.y,_w,this.grid.cellHeight - px);
			}
		}
	}
	,setup: function() {
		var colorArray = lib_util_ColorUtil.niceColor100[10];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._bgColor = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._lineColor = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._fillColor = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		this._lineColor2 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
		var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		this._fillColor2 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
		this.grid.setNumbered(10,10);
	}
	,draw: function() {
		console.log("draw: " + this.toString());
		this.drawShape();
		this.stop();
	}
	,__class__: art_CC025
});
var art_CC026 = function(ctx) {
	this.readyCounter = 0;
	this.shapeMax = 5000;
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
	lib_util_HelperUtil.stats();
};
art_CC026.__name__ = ["art","CC026"];
art_CC026.__interfaces__ = [art_ICCBase];
art_CC026.__super__ = art_CCBase;
art_CC026.prototype = $extend(art_CCBase.prototype,{
	onAnimateHandler: function(circle) {
		var startx = circle.x;
		var starty = circle.y;
		if(lib_util_MathUtil.posNeg() > 0) {
			if(circle.x < lib_Global.w / 2) {
				startx = circle.x - lib_Global.w;
			} else {
				startx = circle.x + lib_Global.w;
			}
			starty += lib_util_MathUtil.random(-lib_Global.h,lib_Global.h);
		} else {
			startx += lib_util_MathUtil.random(-lib_Global.w,lib_Global.w);
			if(circle.y < lib_Global.h / 2) {
				starty = circle.y - lib_Global.h;
			} else {
				starty = circle.y + lib_Global.h;
			}
		}
		var time = lib_util_MathUtil.random(1,3);
		var delay = lib_util_MathUtil.random(0,3);
		var GoJs = new lets_GoJs(circle,time);
		GoJs._isFrom = true;
		GoJs.updateProperties(0);
		var _this = GoJs;
		_this._delay = _this.getDuration(delay);
		var _this1 = _this;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"x")) {
			objValue = Reflect.getProperty(_this1._target,"x");
		}
		var _range = { key : "x", from : _this1._isFrom ? startx : objValue, to : !_this1._isFrom ? startx : objValue};
		_this1._props.set("x",_range);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this2._target,"y")) {
			objValue1 = Reflect.getProperty(_this2._target,"y");
		}
		var _range1 = { key : "y", from : _this2._isFrom ? starty : objValue1, to : !_this2._isFrom ? starty : objValue1};
		_this2._props.set("y",_range1);
		if(_this2._isFrom) {
			_this2.updateProperties(0);
		}
		var _this3 = _this2;
		_this3._easing = lets_easing_Sine.get_easeOut();
		var _this4 = _this3;
		_this4._options.onComplete = $bind(this,this.onCompleteHandler);
		_this4._options.onCompleteParams = [circle];
	}
	,onCompleteHandler: function(circle) {
		this.readyCounter++;
		if(this.readyCounter >= this.shapeArray.length) {
			console.log("stop");
			this.stop();
		}
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,lib_util_ColorUtil.WHITE);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var circle = this.shapeArray[i];
			this.ctx.fillStyle = circle.colour;
			lib_CanvasTools.circle(this.ctx,circle.x,circle.y,5);
		}
	}
	,getPixel: function() {
		var _g1 = 0;
		var _g = this.shapeMax;
		while(_g1 < _g) {
			var i = _g1++;
			var xpos = lib_util_MathUtil.random(0,this.ctxHidden.canvas.width);
			var ypos = lib_util_MathUtil.random(0,this.ctxHidden.canvas.height);
			var pixel = this.ctxHidden.getImageData(xpos,ypos,1,1);
			var data = pixel.data;
			if(data[0] == 255 && data[1] == 255 && data[2] == 255) {
				continue;
			}
			if(data[0] != 0 && data[1] != 0 && data[2] != 0) {
				continue;
			}
			var rgba = "rgba(" + data[0] + ", " + data[1] + ", " + data[2] + ", " + data[3] / 255 + ")";
			var xstart = Math.round((lib_Global.w - this.ctxHidden.canvas.width) / 2);
			var ystart = Math.round((lib_Global.h - this.ctxHidden.canvas.height) / 2);
			var circle = { _id : "" + i, _type : "circle", x : xstart + xpos, y : ystart + ypos, radius : 10, colour : rgba};
			this.shapeArray.push(circle);
		}
		console.log(this.shapeArray.length);
		var _g11 = 0;
		var _g2 = this.shapeArray.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var _shapeArray = this.shapeArray[i1];
			this.onAnimateHandler(_shapeArray);
		}
	}
	,setup: function() {
		var _gthis = this;
		console.log("setup: " + this.toString());
		var img = new Image();
		img.src = "assets/img/planb.png";
		img.onload = function() {
			var option = new SketchOption();
			option.set_width(img.width);
			option.set_height(img.height);
			_gthis.ctxHidden = Sketch.createHiddenCanvas("imageholder",option);
			_gthis.ctxHidden.drawImage(img,0,0,img.width,img.height);
			img.style.display = "none";
			_gthis.getPixel();
		};
	}
	,draw: function() {
		this.drawShape();
	}
	,pixelData2RGBA: function(data) {
		return { r : data[0], g : data[1], b : data[2], a : data[3] / 255};
	}
	,__class__: art_CC026
});
var art_CC027 = function(ctx) {
	this._cellsize = 10;
	this.grid = new lib_util_GridUtil();
	this.readyCounter = 0;
	this.shapeMax = 5000;
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("dots bombard plan b");
	lib_util_HelperUtil.stats();
};
art_CC027.__name__ = ["art","CC027"];
art_CC027.__interfaces__ = [art_ICCBase];
art_CC027.__super__ = art_CCBase;
art_CC027.prototype = $extend(art_CCBase.prototype,{
	onAnimateHandler: function(circle) {
		var startx = circle.x;
		var starty = circle.y;
		if(lib_util_MathUtil.posNeg() > 0) {
			if(circle.x < lib_Global.w / 2) {
				startx = circle.x - lib_Global.w;
			} else {
				startx = circle.x + lib_Global.w;
			}
			starty += lib_util_MathUtil.random(-lib_Global.h,lib_Global.h);
		} else {
			startx += lib_util_MathUtil.random(-lib_Global.w,lib_Global.w);
			if(circle.y < lib_Global.h / 2) {
				starty = circle.y - lib_Global.h;
			} else {
				starty = circle.y + lib_Global.h;
			}
		}
		var time = lib_util_MathUtil.random(1,3);
		var delay = lib_util_MathUtil.random(0,3) + 2;
		var GoJs = new lets_GoJs(circle,time);
		GoJs._isFrom = true;
		GoJs.updateProperties(0);
		var _this = GoJs;
		_this._delay = _this.getDuration(delay);
		var _this1 = _this;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"x")) {
			objValue = Reflect.getProperty(_this1._target,"x");
		}
		var _range = { key : "x", from : _this1._isFrom ? startx : objValue, to : !_this1._isFrom ? startx : objValue};
		_this1._props.set("x",_range);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this2._target,"y")) {
			objValue1 = Reflect.getProperty(_this2._target,"y");
		}
		var _range1 = { key : "y", from : _this2._isFrom ? starty : objValue1, to : !_this2._isFrom ? starty : objValue1};
		_this2._props.set("y",_range1);
		if(_this2._isFrom) {
			_this2.updateProperties(0);
		}
		var _this3 = _this2;
		_this3._easing = lets_easing_Quart.get_easeOut();
		var _this4 = _this3;
		_this4._options.onComplete = $bind(this,this.onCompleteHandler);
		_this4._options.onCompleteParams = [circle];
	}
	,onCompleteHandler: function(circle) {
		this.readyCounter++;
		if(this.readyCounter >= this.shapeArray.length) {
			console.log("stop");
			this.stop();
		}
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,lib_util_ColorUtil.WHITE);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var circle = this.shapeArray[i];
			lib_CanvasTools.strokeCircle(this.ctx,circle.x,circle.y,circle.radius);
		}
	}
	,buildGrid: function() {
		this.grid.setPosition(0,0);
		this.grid.setCellSize(this._cellsize);
		this.grid.setDimension(this.ctxHidden.canvas.width,this.ctxHidden.canvas.height);
		console.log("canvas (width,height): " + this.ctxHidden.canvas.width + "," + this.ctxHidden.canvas.height);
		console.log("grid (width,height): " + this.grid.width + "," + this.grid.height);
		console.log("grid.array.length: " + this.grid.array.length);
		console.log("grid cell (width,height): " + this.grid.cellHeight + ", " + this.grid.cellWidth);
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var point = this.grid.array[i];
			var xpos = Math.round(point.x);
			var ypos = Math.round(point.y);
			var pixel = this.ctxHidden.getImageData(xpos,ypos,1,1);
			var data = pixel.data;
			if(data[0] == 255 && data[1] == 255 && data[2] == 255) {
				continue;
			}
			if(data[0] != 0 && data[1] != 0 && data[2] != 0) {
				continue;
			}
			var rgba = "rgba(" + data[0] + ", " + data[1] + ", " + data[2] + ", " + data[3] / 255 + ")";
			var xstart = Math.round((lib_Global.w - this.ctxHidden.canvas.width) / 2);
			var ystart = Math.round((lib_Global.h - this.ctxHidden.canvas.height) / 2);
			var circle = { _id : "" + i, _type : "circle", x : xstart + xpos, y : ystart + ypos, radius : this._cellsize / 2, colour : rgba};
			this.shapeArray.push(circle);
		}
		console.log("total shape: " + this.shapeArray.length + " from total grid " + this.grid.array.length);
		var _g11 = 0;
		var _g2 = this.shapeArray.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var _shapeArray = this.shapeArray[i1];
			this.onAnimateHandler(_shapeArray);
		}
	}
	,setup: function() {
		var _gthis = this;
		console.log("setup: " + this.toString());
		this.shapeArray = [];
		var img = new Image();
		img.src = "assets/img/planb.png";
		img.onload = function() {
			var option = new SketchOption();
			option.set_width(img.width);
			option.set_height(img.height);
			_gthis.ctxHidden = Sketch.createHiddenCanvas("imageholder",option);
			_gthis.ctxHidden.drawImage(img,0,0,img.width,img.height);
			img.style.display = "none";
			_gthis.buildGrid();
		};
	}
	,draw: function() {
		this.drawShape();
	}
	,pixelData2RGBA: function(data) {
		return { r : data[0], g : data[1], b : data[2], a : data[3] / 255};
	}
	,pixelData2RGB: function(data) {
		return { r : data[0], g : data[1], b : data[2]};
	}
	,__class__: art_CC027
});
var art_CC028 = function(ctx) {
	this.exportIntArray = [];
	this.exportStringArray = [];
	this.colorArr = [];
	this.grid = new lib_util_GridUtil();
	this.shapeArray = [];
	this.set_description("Convert 1000 colorcombos based on gray scale from light to dark");
	art_CCBase.call(this,ctx);
	this.loader = new mloader_JsonLoader("assets/1000.json");
	this.loader.loaded.add($bind(this,this.loaded));
	this.loader.load();
};
art_CC028.__name__ = ["art","CC028"];
art_CC028.__interfaces__ = [art_ICCBase];
art_CC028.__super__ = art_CCBase;
art_CC028.prototype = $extend(art_CCBase.prototype,{
	loaded: function(event) {
		var _g = event.type;
		switch(_g[1]) {
		case 3:
			this.colorArr = event.target.content;
			this.convertColors();
			break;
		case 4:
			var error = _g[2];
			console.log(error);
			break;
		default:
		}
	}
	,convertColors: function() {
		this.exportStringArray = [];
		this.exportIntArray = [];
		var _g1 = 0;
		var _g = this.colorArr.length;
		while(_g1 < _g) {
			var i = _g1++;
			var _colorArr = this.colorArr[i];
			var array = this.convertToHex2(_colorArr[0]);
			var color = this.convertToHex2(_colorArr[0]);
			var array1 = { hex : array, gray : new hxColorToolkit_spaces_Gray().setColor(color).getColor()};
			var array2 = this.convertToHex2(_colorArr[1]);
			var color1 = this.convertToHex2(_colorArr[1]);
			var array3 = { hex : array2, gray : new hxColorToolkit_spaces_Gray().setColor(color1).getColor()};
			var array4 = this.convertToHex2(_colorArr[2]);
			var color2 = this.convertToHex2(_colorArr[2]);
			var array5 = { hex : array4, gray : new hxColorToolkit_spaces_Gray().setColor(color2).getColor()};
			var array6 = this.convertToHex2(_colorArr[3]);
			var color3 = this.convertToHex2(_colorArr[3]);
			var array7 = { hex : array6, gray : new hxColorToolkit_spaces_Gray().setColor(color3).getColor()};
			var array8 = this.convertToHex2(_colorArr[4]);
			var color4 = this.convertToHex2(_colorArr[4]);
			var array9 = [array1,array3,array5,array7,{ hex : array8, gray : new hxColorToolkit_spaces_Gray().setColor(color4).getColor()}];
			var copy = array9.slice();
			haxe_ds_ArraySort.sort(copy,function(a,b) {
				if(a.gray < b.gray) {
					return 1;
				} else if(a.gray > b.gray) {
					return -1;
				} else {
					return 0;
				}
			});
			var storeStringArray = [];
			var storeIntArray = [];
			var _g3 = 0;
			var _g2 = copy.length;
			while(_g3 < _g2) {
				var j = _g3++;
				var __c = copy[j].hex;
				storeStringArray.push("#" + StringTools.hex(__c,6));
				storeIntArray.push(__c);
			}
			this.exportStringArray.push(storeStringArray);
			this.exportIntArray.push(storeIntArray);
		}
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,lib_util_ColorUtil.WHITE);
		var colorArray = lib_util_ColorUtil.niceColor100[10];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		var _color0 = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		var _color1 = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		var _color2 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		var _color3 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
		var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		var _color4 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
		var _colorA = [_color0,_color1,_color2,_color3,_color4];
		var point = this.grid.array[0];
		var _g1 = 0;
		var _g = _colorA.length;
		while(_g1 < _g) {
			var j = _g1++;
			var px = 10;
			var _w = Math.round((this.grid.cellWidth - px) / _colorA.length);
			var offsetX = j * _w;
			lib_CanvasTools.fillColourRGB(this.ctx,_colorA[j]);
			this.ctx.fillRect(offsetX + point.x,point.y,_w,this.grid.cellHeight - px);
		}
		var color = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		var _color01 = this.convertToHexToGray(colorArray[0]);
		var _color11 = this.convertToHexToGray(colorArray[1]);
		var _color21 = this.convertToHexToGray(colorArray[2]);
		var _color31 = this.convertToHexToGray(colorArray[3]);
		var _color41 = this.convertToHexToGray(colorArray[4]);
		var px1 = 10;
		var _w1 = Math.round((this.grid.cellWidth - px1) / _colorA.length);
		var point1 = this.grid.array[1];
		var _colorA1 = [_color01,_color11,_color21,_color31,_color41];
		var _g11 = 0;
		var _g2 = _colorA1.length;
		while(_g11 < _g2) {
			var j1 = _g11++;
			var offsetX1 = j1 * _w1;
			lib_CanvasTools.fillColourRGB(this.ctx,_colorA1[j1]);
			this.ctx.fillRect(offsetX1 + point1.x,point1.y,_w1,this.grid.cellHeight - px1);
		}
		var array = this.convertToHex2(colorArray[0]);
		var color1 = this.convertToHex2(colorArray[0]);
		var array1 = { hex : array, gray : new hxColorToolkit_spaces_Gray().setColor(color1).getColor()};
		var array2 = this.convertToHex2(colorArray[1]);
		var color2 = this.convertToHex2(colorArray[1]);
		var array3 = { hex : array2, gray : new hxColorToolkit_spaces_Gray().setColor(color2).getColor()};
		var array4 = this.convertToHex2(colorArray[2]);
		var color3 = this.convertToHex2(colorArray[2]);
		var array5 = { hex : array4, gray : new hxColorToolkit_spaces_Gray().setColor(color3).getColor()};
		var array6 = this.convertToHex2(colorArray[3]);
		var color4 = this.convertToHex2(colorArray[3]);
		var array7 = { hex : array6, gray : new hxColorToolkit_spaces_Gray().setColor(color4).getColor()};
		var array8 = this.convertToHex2(colorArray[4]);
		var color5 = this.convertToHex2(colorArray[4]);
		var array9 = [array1,array3,array5,array7,{ hex : array8, gray : new hxColorToolkit_spaces_Gray().setColor(color5).getColor()}];
		window.console.log("An Array with objects",array9);
		var copy = array9.slice();
		haxe_ds_ArraySort.sort(copy,function(a,b) {
			if(a.gray < b.gray) {
				return 1;
			} else if(a.gray > b.gray) {
				return -1;
			} else {
				return 0;
			}
		});
		window.console.log("An Array with objects",copy);
		var point2 = this.grid.array[2];
		var _g12 = 0;
		var _g3 = copy.length;
		while(_g12 < _g3) {
			var j2 = _g12++;
			var offsetX2 = j2 * _w1;
			var color6 = copy[j2].gray;
			var __c = new hxColorToolkit_spaces_RGB(color6 >> 16 & 255,color6 >> 8 & 255,color6 & 255);
			lib_CanvasTools.fillColour(this.ctx,Math.round(__c.get_red()),Math.round(__c.get_green()),Math.round(__c.get_blue()));
			this.ctx.fillRect(offsetX2 + point2.x,point2.y,_w1,this.grid.cellHeight - px1);
		}
		var point3 = this.grid.array[3];
		var _g13 = 0;
		var _g4 = copy.length;
		while(_g13 < _g4) {
			var j3 = _g13++;
			var offsetX3 = j3 * _w1;
			var color7 = copy[j3].hex;
			var __c1 = new hxColorToolkit_spaces_RGB(color7 >> 16 & 255,color7 >> 8 & 255,color7 & 255);
			lib_CanvasTools.fillColour(this.ctx,Math.round(__c1.get_red()),Math.round(__c1.get_green()),Math.round(__c1.get_blue()));
			this.ctx.fillRect(offsetX3 + point3.x,point3.y,_w1,this.grid.cellHeight - px1);
		}
	}
	,setup: function() {
		var _gthis = this;
		console.log("setup: " + this.toString());
		this.grid.setNumbered(4,1);
		window.addEventListener(lib_Global.KEY_DOWN,function(e) {
			e.preventDefault();
			var _g = e.key;
			if(_g == "s") {
				var arrayInt100 = [];
				var arrayString100 = [];
				var arrayInt500 = [];
				var arrayString500 = [];
				var _g1 = 0;
				var _g2 = _gthis.exportIntArray.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var _exportIntArray = _gthis.exportIntArray[i];
					var _exportStringArray = _gthis.exportStringArray[i];
					if(i <= 100) {
						arrayInt100.push(_exportIntArray);
						arrayString100.push(_exportStringArray);
					}
					if(i <= 500) {
						arrayInt500.push(_exportIntArray);
						arrayString500.push(_exportStringArray);
					}
				}
				lib_util_ExportUtil.downloadTextFile(JSON.stringify(arrayInt100),"sorted_int_100.json");
				lib_util_ExportUtil.downloadTextFile(JSON.stringify(arrayString100),"sorted_100.json");
				lib_util_ExportUtil.downloadTextFile(JSON.stringify(arrayInt500),"sorted_int_500.json");
				lib_util_ExportUtil.downloadTextFile(JSON.stringify(arrayString500),"sorted_500.json");
				lib_util_ExportUtil.downloadTextFile(JSON.stringify(_gthis.exportIntArray),"sorted_int_1000.json");
				lib_util_ExportUtil.downloadTextFile(JSON.stringify(_gthis.exportStringArray),"sorted_1000.json");
			} else {
				console.log("case '" + e.key + "': trace ('" + e.key + "');");
			}
		},false);
	}
	,draw: function() {
		console.log("draw: " + this.toString());
		this.drawShape();
		this.stop();
	}
	,convertToHex: function(value) {
		var _color = Std.parseInt(StringTools.replace(value,"#","0x"));
		var rgb = { r : Math.round(new hxColorToolkit_spaces_RGB(_color >> 16 & 255,_color >> 8 & 255,_color & 255).get_red()), g : Math.round(new hxColorToolkit_spaces_RGB(_color >> 16 & 255,_color >> 8 & 255,_color & 255).get_green()), b : Math.round(new hxColorToolkit_spaces_RGB(_color >> 16 & 255,_color >> 8 & 255,_color & 255).get_blue())};
		return rgb;
	}
	,convertToHexToGray: function(value) {
		var _color = Std.parseInt(StringTools.replace(value,"#","0x"));
		var rgb = { r : Math.round(new hxColorToolkit_spaces_Gray().setColor(_color).toRGB().get_red()), g : Math.round(new hxColorToolkit_spaces_Gray().setColor(_color).toRGB().get_green()), b : Math.round(new hxColorToolkit_spaces_Gray().setColor(_color).toRGB().get_blue())};
		return rgb;
	}
	,convertToHex2: function(value) {
		var _color = Std.parseInt(StringTools.replace(value,"#","0x"));
		return _color;
	}
	,__class__: art_CC028
});
var art_CC029 = function(ctx) {
	this._fillColor2 = null;
	this._lineColor2 = null;
	this._fillColor = null;
	this._lineColor = null;
	this._bgColor = null;
	this._cellsize = 150;
	this._radius = 150;
	this.colorArr = [];
	this.grid = new lib_util_GridUtil();
	this.shapeArray = [];
	this.set_description("Show 1000 sorted colors");
	this.colorArr = lib_util_ColorUtil.niceColor100SortedString;
	art_CCBase.call(this,ctx);
	this.loader = new mloader_JsonLoader("assets/sorted_1000.json");
	this.loader.loaded.add($bind(this,this.loaded));
	this.loader.load();
};
art_CC029.__name__ = ["art","CC029"];
art_CC029.__interfaces__ = [art_ICCBase];
art_CC029.__super__ = art_CCBase;
art_CC029.prototype = $extend(art_CCBase.prototype,{
	loaded: function(event) {
		var _g = event.type;
		switch(_g[1]) {
		case 3:
			console.log(event.target.content.length);
			this.colorArr = event.target.content;
			this.drawShape();
			break;
		case 4:
			var error = _g[2];
			console.log(error);
			break;
		default:
		}
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,lib_util_ColorUtil.WHITE);
		if(this.isDebug) {
			lib_util_ShapeUtil.gridDots(this.ctx,this.grid);
		}
		var _g1 = 0;
		var _g = this.colorArr.length;
		while(_g1 < _g) {
			var i = _g1++;
			var colorArray = this.colorArr[i];
			console.log(colorArray);
			var point = this.grid.array[i];
			var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
			var color0 = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
			var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
			var color1 = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
			var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
			var color2 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
			var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
			var color3 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
			var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
			var color4 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
			var _colorA = [color0,color1,color2,color3,color4];
			var _g3 = 0;
			var _g2 = _colorA.length;
			while(_g3 < _g2) {
				var j = _g3++;
				var px = 1;
				var _w = Math.floor((this.grid.cellWidth - px) / _colorA.length);
				var offsetX = j * _w;
				lib_CanvasTools.fillColourRGB(this.ctx,_colorA[j]);
				this.ctx.fillRect(offsetX + point.x,point.y,_w,this.grid.cellHeight - px);
			}
		}
	}
	,setup: function() {
		this.grid.setNumbered(32,32);
	}
	,draw: function() {
		console.log("draw: " + this.toString());
		this.drawShape();
		this.stop();
	}
	,__class__: art_CC029
});
var art_CC030 = function(ctx) {
	this._lineColor2 = null;
	this._lineColor = null;
	this._bgColor = null;
	this._px = 2;
	this._startLineWidth = 30;
	this._startRadius = 100;
	this.max = 7;
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
	window.addEventListener(lib_Global.KEY_DOWN,$bind(this,this.onKeyDown));
};
art_CC030.__name__ = ["art","CC030"];
art_CC030.__interfaces__ = [art_ICCBase];
art_CC030.__super__ = art_CCBase;
art_CC030.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "CircleExtra", x : lib_Global.w / 2, y : lib_Global.h / 2, radius : this._startRadius, rotation : 0, angle : 250, speed : 1};
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,lib_util_ColorUtil.BLACK);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			sh.rotation = lib_util_MathUtil.radians(lib_util_MathUtil.randomInt(360));
			this.ctx.strokeStyle = lib_util_ColorUtil.getColourObj(lib_util_ColorUtil.WHITE);
			this.ctx.lineCap = "butt";
			this.ctx.lineWidth = this._startLineWidth;
			var _radius = this._startRadius + i * (this._startLineWidth + this._px);
			this.ctx.setLineDash(this.createDashedArray(_radius));
			this.ctx.save();
			this.ctx.translate(sh.x,sh.y);
			this.ctx.rotate(sh.rotation);
			lib_CanvasTools.strokeCircle(this.ctx,0,0,_radius);
			this.ctx.restore();
		}
	}
	,createDashedArray: function(radius) {
		var omtrek = lib_util_MathUtil.circumferenceCircle(radius);
		var arr = [];
		var randomParts = lib_util_MathUtil.randomInt(0,50);
		if(randomParts % 2 != 0) {
			++randomParts;
		}
		var counter = 0;
		var _g1 = 0;
		var _g = randomParts;
		while(_g1 < _g) {
			var i = _g1++;
			var value = lib_util_MathUtil.randomInt(0,100);
			counter += value;
			arr.push(value);
		}
		var temp = omtrek / counter;
		var _g11 = 0;
		var _g2 = arr.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			arr[i1] *= temp;
		}
		return arr;
	}
	,setup: function() {
		console.log("setup: " + this.toString());
		var colorArray = lib_util_ColorUtil.niceColor100SortedString[lib_util_MathUtil.randomInt(lib_util_ColorUtil.niceColor100SortedString.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._bgColor = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._lineColor = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._lineColor2 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		var _g1 = 0;
		var _g = this.max;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
	}
	,draw: function() {
		this.drawShape();
		this.stop();
	}
	,onKeyDown: function(e) {
		var _g = e.key;
		if(_g == " ") {
			this.drawShape();
		} else {
			console.log("case '" + e.key + "': trace ('" + e.key + "');");
		}
	}
	,__class__: art_CC030
});
var art_CC031 = function(ctx) {
	this.maxDistance = lib_Global.h;
	this.cellsize = 50;
	this.maxRadius = 35;
	this.minRadius = 10;
	this.grid = new lib_util_GridUtil();
	this.shapeArray = [];
	this.set_description("Circles react to mouse");
	art_CCBase.call(this,ctx);
};
art_CC031.__name__ = ["art","CC031"];
art_CC031.__interfaces__ = [art_ICCBase];
art_CC031.__super__ = art_CCBase;
art_CC031.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y, radius : this.minRadius};
		this.onAnimateHandler(shape);
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,lib_util_ColorUtil.WHITE);
		if(this.isDebug) {
			lib_util_ShapeUtil.gridDots(this.ctx,this.grid);
		}
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			lib_CanvasTools.fillColourRGB(this.ctx,lib_util_ColorUtil.BLACK);
			lib_CanvasTools.fillCircle(this.ctx,sh.x,sh.y,sh.radius);
		}
	}
	,setup: function() {
		console.log("setup: " + this.toString());
		this.shapeArray = [];
		this.grid.setCellSize(this.cellsize);
		this.grid.setIsCenterPoint(true);
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var point = this.grid.array[i];
			this.shapeArray.push(this.createShape(i,point));
		}
		window.addEventListener("mousemove",$bind(this,this.onMouseMoveHandler));
	}
	,draw: function() {
		this.drawShape();
	}
	,onMouseMoveHandler: function(e) {
		var point = { x : e.clientX, y : e.clientY};
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var j = _g1++;
			var b2 = this.shapeArray[j];
			if(point == b2) {
				continue;
			}
			var currentDistance = lib_util_MathUtil.distance(point.x,point.y,b2.x,b2.y);
			if(currentDistance < this.maxDistance) {
				window.console.log("minRadius: " + this.minRadius);
				window.console.log("maxRadius: " + this.maxRadius);
				window.console.log("(maxRadius / minRadius): (" + this.maxRadius + " / " + this.minRadius + ") -> " + this.maxRadius / this.minRadius);
				window.console.log("(maxDistance / currentDistance): (" + this.maxDistance + " / " + currentDistance + ") -> " + this.maxDistance / currentDistance);
				b2.radius = this.maxRadius - currentDistance / this.maxDistance * (this.maxRadius - this.minRadius);
			} else {
				b2.radius = this.minRadius;
			}
		}
	}
	,onAnimateHandler: function(circle) {
	}
	,__class__: art_CC031
});
var art_CC032 = function(ctx) {
	this.totalCounter = 100;
	this.delaycounter = 0.0;
	this.cellsize = 150;
	this._speed = 0.5;
	this._rotation = 0.0;
	this.grid = new lib_util_GridUtil();
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
};
art_CC032.__name__ = ["art","CC032"];
art_CC032.__interfaces__ = [art_ICCBase];
art_CC032.__super__ = art_CCBase;
art_CC032.prototype = $extend(art_CCBase.prototype,{
	arrowConverter: function(size) {
		var _w = size;
		var _h = size;
		var pointArray = [];
		pointArray.push({ x : _w / 2, y : 0});
		pointArray.push({ x : _w, y : _h / 2});
		pointArray.push({ x : _w - _w / 4, y : _h / 2});
		pointArray.push({ x : _w - _w / 4, y : _h});
		pointArray.push({ x : _w / 4, y : _h});
		pointArray.push({ x : _w / 4, y : _h / 2});
		pointArray.push({ x : 0, y : _h / 2});
		return pointArray;
	}
	,arrowDraw: function(pointArray,pos) {
		this.ctx.save();
		this.ctx.translate(pos.x + this.cellsize / 2,pos.y + this.cellsize / 2);
		this.ctx.rotate(lib_util_MathUtil.radians(this._rotation));
		this.ctx.beginPath();
		lib_CanvasTools.fillColourRGB(this.ctx,lib_util_ColorUtil.WHITE);
		var _g1 = 0;
		var _g = pointArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var _point = pointArray[i];
			_point.x -= this.cellsize / 2;
			_point.y -= this.cellsize / 2;
			if(i == 0) {
				this.ctx.moveTo(_point.x,_point.y);
			} else {
				this.ctx.lineTo(_point.x,_point.y);
			}
		}
		this.ctx.fill();
		this.ctx.closePath();
		this.ctx.restore();
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,lib_util_ColorUtil.BLACK);
		if(this.isDebug) {
			lib_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var gridPoint = this.grid.array[i];
			var pointArray = this.arrowConverter(this.cellsize);
			this.arrowDraw(pointArray,gridPoint);
		}
		if(Math.round(this._rotation) == 360) {
			this._rotation = 0;
		}
		if(Math.round(this._rotation) == 0 || Math.round(this._rotation) == 90 || Math.round(this._rotation) == 180 || Math.round(this._rotation) == 270) {
			this.delaycounter++;
			if(this.delaycounter >= this.totalCounter) {
				this.delaycounter = 0;
				this._rotation += this._speed;
			}
			return;
		}
		this._rotation += this._speed;
	}
	,setup: function() {
		console.log("setup: " + this.toString());
		this.grid.setCellSize(this.cellsize);
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC032
});
var art_CC033 = function(ctx) {
	this.cellsize = 50;
	this.grid = new lib_util_GridUtil();
	this.shapeArray = [];
	this.set_description("Arrows following mouse");
	this.set_type(["Interactive"]);
	art_CCBase.call(this,ctx);
	window.addEventListener("mousemove",$bind(this,this.onMouseMoveHandler));
};
art_CC033.__name__ = ["art","CC033"];
art_CC033.__interfaces__ = [art_ICCBase];
art_CC033.__super__ = art_CCBase;
art_CC033.prototype = $extend(art_CCBase.prototype,{
	arrowConverter: function(size) {
		var _w = size;
		var _h = size;
		var pointArray = [];
		pointArray.push({ x : _w / 2, y : 0});
		pointArray.push({ x : _w, y : _h / 2});
		pointArray.push({ x : _w - _w / 4, y : _h / 2});
		pointArray.push({ x : _w - _w / 4, y : _h});
		pointArray.push({ x : _w / 4, y : _h});
		pointArray.push({ x : _w / 4, y : _h / 2});
		pointArray.push({ x : 0, y : _h / 2});
		return pointArray;
	}
	,arrowDraw: function(pointArray,pos) {
		var _rotation = lib_util_MathUtil.angle(pos.x + this.cellsize / 2,pos.y + this.cellsize / 2,this.clientX,this.clientY);
		this.ctx.save();
		this.ctx.translate(pos.x + this.cellsize / 2,pos.y + this.cellsize / 2);
		this.ctx.rotate(lib_util_MathUtil.radians(_rotation + 90));
		this.ctx.beginPath();
		lib_CanvasTools.fillColourRGB(this.ctx,lib_util_ColorUtil.WHITE);
		var _g1 = 0;
		var _g = pointArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var _point = pointArray[i];
			_point.x -= this.cellsize / 2;
			_point.y -= this.cellsize / 2;
			if(i == 0) {
				this.ctx.moveTo(_point.x,_point.y);
			} else {
				this.ctx.lineTo(_point.x,_point.y);
			}
		}
		this.ctx.fill();
		this.ctx.closePath();
		this.ctx.restore();
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,lib_util_ColorUtil.BLACK);
		if(this.isDebug) {
			lib_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var gridPoint = this.grid.array[i];
			var pointArray = this.arrowConverter(this.cellsize);
			this.arrowDraw(pointArray,gridPoint);
		}
	}
	,setup: function() {
		console.log("setup: " + this.toString());
		this.grid.setCellSize(this.cellsize);
	}
	,draw: function() {
		this.drawShape();
	}
	,onMouseMoveHandler: function(e) {
		var point_x = e.clientX;
		var point_y = e.clientY;
		this.clientX = e.clientX;
		this.clientY = e.clientY;
	}
	,__class__: art_CC033
});
var art_CC034 = function(ctx) {
	this.maxCircleSize = 30;
	this.minRadius = 100;
	this.maxRadius = lib_Global.h / 3;
	this.shapeMax = 25;
	this.shapeArray = [];
	this.set_description("Circles in a circle");
	this.set_type(["Animation"]);
	art_CCBase.call(this,ctx);
};
art_CC034.__name__ = ["art","CC034"];
art_CC034.__interfaces__ = [art_ICCBase];
art_CC034.__super__ = art_CCBase;
art_CC034.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i) {
		var shape = { _id : "" + i, _type : "circle", x : lib_Global.w / 2, y : lib_Global.h / 2, rgb : lib_util_ColorUtil.BLACK, radius : this.maxRadius + i * (this.minRadius / this.shapeMax), size : this.maxCircleSize / this.shapeMax * i, angle : 360 / this.shapeMax * i, speed : 1};
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			sh.angle += sh.speed;
			sh.x = lib_Global.w / 2 + Math.cos(lib_util_MathUtil.radians(sh.angle)) * sh.radius;
			sh.y = lib_Global.h / 2 + Math.sin(lib_util_MathUtil.radians(sh.angle)) * sh.radius;
			this.ctx.fillStyle = lib_util_ColorUtil.getColourObj(sh.rgb);
			lib_CanvasTools.circle(this.ctx,sh.x,sh.y,sh.size);
		}
	}
	,setup: function() {
		console.log("setup: " + this.toString());
		var _g1 = 0;
		var _g = this.shapeMax;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC034
});
var art_CC035 = function(ctx) {
	this.divideArray = [360,180];
	this.lineWidthArray = [60,120];
	this.startLineWidth = 30;
	this.startRadius = 200;
	this.max = 2;
	this.shapeArray = [];
	this.set_description("circle lines");
	this.set_type(["Animation","Image"]);
	art_CCBase.call(this,ctx);
};
art_CC035.__name__ = ["art","CC035"];
art_CC035.__interfaces__ = [art_ICCBase];
art_CC035.__super__ = art_CCBase;
art_CC035.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "CircleExtra", x : lib_Global.w / 2, y : lib_Global.h / 2, radius : this.startRadius, rotation : 0, angle : 250, speed : 0.0001};
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,lib_util_ColorUtil.BLACK);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			sh.rotation += sh.speed;
			this.ctx.strokeStyle = lib_util_ColorUtil.getColourObj(lib_util_ColorUtil.WHITE);
			this.ctx.lineCap = "butt";
			this.ctx.lineWidth = this.lineWidthArray[i];
			var radius = this.startRadius;
			var omtrek = lib_util_MathUtil.circumferenceCircle(radius);
			this.ctx.setLineDash([1,Math.round(omtrek / this.divideArray[i])]);
			this.ctx.save();
			this.ctx.translate(sh.x,sh.y);
			this.ctx.rotate(sh.rotation);
			lib_CanvasTools.strokeCircle(this.ctx,0,0,radius);
			this.ctx.restore();
		}
	}
	,setup: function() {
		console.log("setup: " + this.toString());
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.max;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
	}
	,draw: function() {
		this.drawShape();
		this.stop();
	}
	,__class__: art_CC035
});
var art_CC036 = function(ctx) {
	this.divideArray = [60,12];
	this.lineWidthArray = [30,60,90];
	this.lineW = 30;
	this.startLineWidth = 30;
	this.startRadius = 200;
	this.max = 2;
	this.shapeArray = [];
	this.set_description("circle lines");
	this.set_type(["Animation","Image"]);
	art_CCBase.call(this,ctx);
};
art_CC036.__name__ = ["art","CC036"];
art_CC036.__interfaces__ = [art_ICCBase];
art_CC036.__super__ = art_CCBase;
art_CC036.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "CircleExtra", x : lib_Global.w / 2, y : lib_Global.h / 2, radius : this.startRadius, rotation : -90, angle : 250, speed : 0.0001};
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,lib_util_ColorUtil.BLACK);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			sh.radius -= this.lineW / 2 * i;
			this.ctx.strokeStyle = lib_util_ColorUtil.getColourObj(lib_util_ColorUtil.WHITE);
			this.ctx.lineCap = "butt";
			this.ctx.lineWidth = this.lineWidthArray[i];
			var omtrek = lib_util_MathUtil.circumferenceCircle(sh.radius);
			this.ctx.setLineDash([1,omtrek / this.divideArray[i] - 1]);
			this.ctx.save();
			this.ctx.translate(sh.x,sh.y);
			this.ctx.rotate(lib_util_MathUtil.radians(sh.rotation));
			lib_CanvasTools.strokeCircle(this.ctx,0,0,sh.radius);
			this.ctx.restore();
		}
	}
	,setup: function() {
		console.log("setup: " + this.toString());
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.max;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
	}
	,draw: function() {
		this.drawShape();
		this.stop();
	}
	,__class__: art_CC036
});
var haxe_IMap = function() { };
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe_Http = function(url) {
	this.url = url;
	this.headers = new List();
	this.params = new List();
	this.async = true;
	this.withCredentials = false;
};
haxe_Http.__name__ = ["haxe","Http"];
haxe_Http.prototype = {
	setHeader: function(header,value) {
		this.headers = Lambda.filter(this.headers,function(h) {
			return h.header != header;
		});
		this.headers.push({ header : header, value : value});
		return this;
	}
	,setPostData: function(data) {
		this.postData = data;
		return this;
	}
	,cancel: function() {
		if(this.req == null) {
			return;
		}
		this.req.abort();
		this.req = null;
	}
	,request: function(post) {
		var me = this;
		me.responseData = null;
		var r = this.req = js_Browser.createXMLHttpRequest();
		var onreadystatechange = function(_) {
			if(r.readyState != 4) {
				return;
			}
			var s;
			try {
				s = r.status;
			} catch( e ) {
				s = null;
			}
			if(s != null && "undefined" !== typeof window) {
				var protocol = window.location.protocol.toLowerCase();
				var rlocalProtocol = new EReg("^(?:about|app|app-storage|.+-extension|file|res|widget):$","");
				var isLocal = rlocalProtocol.match(protocol);
				if(isLocal) {
					if(r.responseText != null) {
						s = 200;
					} else {
						s = 404;
					}
				}
			}
			if(s == undefined) {
				s = null;
			}
			if(s != null) {
				me.onStatus(s);
			}
			if(s != null && s >= 200 && s < 400) {
				me.req = null;
				me.onData(me.responseData = r.responseText);
			} else if(s == null) {
				me.req = null;
				me.onError("Failed to connect or resolve host");
			} else {
				switch(s) {
				case 12007:
					me.req = null;
					me.onError("Unknown host");
					break;
				case 12029:
					me.req = null;
					me.onError("Failed to connect to host");
					break;
				default:
					me.req = null;
					me.responseData = r.responseText;
					me.onError("Http Error #" + r.status);
				}
			}
		};
		if(this.async) {
			r.onreadystatechange = onreadystatechange;
		}
		var uri = this.postData;
		if(uri != null) {
			post = true;
		} else {
			var _g_head = this.params.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				var p = val;
				if(uri == null) {
					uri = "";
				} else {
					uri += "&";
				}
				var s1 = p.param;
				var uri1 = encodeURIComponent(s1) + "=";
				var s2 = p.value;
				uri += uri1 + encodeURIComponent(s2);
			}
		}
		try {
			if(post) {
				r.open("POST",this.url,this.async);
			} else if(uri != null) {
				var question = this.url.split("?").length <= 1;
				r.open("GET",this.url + (question ? "?" : "&") + uri,this.async);
				uri = null;
			} else {
				r.open("GET",this.url,this.async);
			}
		} catch( e1 ) {
			if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
			me.req = null;
			this.onError(e1.toString());
			return;
		}
		r.withCredentials = this.withCredentials;
		if(!Lambda.exists(this.headers,function(h) {
			return h.header == "Content-Type";
		}) && post && this.postData == null) {
			r.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
		}
		var _g_head1 = this.headers.h;
		while(_g_head1 != null) {
			var val1 = _g_head1.item;
			_g_head1 = _g_head1.next;
			var h1 = val1;
			r.setRequestHeader(h1.header,h1.value);
		}
		r.send(uri);
		if(!this.async) {
			onreadystatechange(null);
		}
	}
	,onData: function(data) {
	}
	,onError: function(msg) {
	}
	,onStatus: function(status) {
	}
	,__class__: haxe_Http
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = ["haxe","Timer"];
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ds_ArraySort = function() { };
haxe_ds_ArraySort.__name__ = ["haxe","ds","ArraySort"];
haxe_ds_ArraySort.sort = function(a,cmp) {
	haxe_ds_ArraySort.rec(a,cmp,0,a.length);
};
haxe_ds_ArraySort.rec = function(a,cmp,from,to) {
	var middle = from + to >> 1;
	if(to - from < 12) {
		if(to <= from) {
			return;
		}
		var _g1 = from + 1;
		var _g = to;
		while(_g1 < _g) {
			var i = _g1++;
			var j = i;
			while(j > from) {
				if(cmp(a[j],a[j - 1]) < 0) {
					haxe_ds_ArraySort.swap(a,j - 1,j);
				} else {
					break;
				}
				--j;
			}
		}
		return;
	}
	haxe_ds_ArraySort.rec(a,cmp,from,middle);
	haxe_ds_ArraySort.rec(a,cmp,middle,to);
	haxe_ds_ArraySort.doMerge(a,cmp,from,middle,to,middle - from,to - middle);
};
haxe_ds_ArraySort.doMerge = function(a,cmp,from,pivot,to,len1,len2) {
	var first_cut;
	var second_cut;
	var len11;
	var len22;
	var new_mid;
	if(len1 == 0 || len2 == 0) {
		return;
	}
	if(len1 + len2 == 2) {
		if(cmp(a[pivot],a[from]) < 0) {
			haxe_ds_ArraySort.swap(a,pivot,from);
		}
		return;
	}
	if(len1 > len2) {
		len11 = len1 >> 1;
		first_cut = from + len11;
		second_cut = haxe_ds_ArraySort.lower(a,cmp,pivot,to,first_cut);
		len22 = second_cut - pivot;
	} else {
		len22 = len2 >> 1;
		second_cut = pivot + len22;
		first_cut = haxe_ds_ArraySort.upper(a,cmp,from,pivot,second_cut);
		len11 = first_cut - from;
	}
	haxe_ds_ArraySort.rotate(a,cmp,first_cut,pivot,second_cut);
	new_mid = first_cut + len22;
	haxe_ds_ArraySort.doMerge(a,cmp,from,first_cut,new_mid,len11,len22);
	haxe_ds_ArraySort.doMerge(a,cmp,new_mid,second_cut,to,len1 - len11,len2 - len22);
};
haxe_ds_ArraySort.rotate = function(a,cmp,from,mid,to) {
	var n;
	if(from == mid || mid == to) {
		return;
	}
	n = haxe_ds_ArraySort.gcd(to - from,mid - from);
	while(n-- != 0) {
		var val = a[from + n];
		var shift = mid - from;
		var p1 = from + n;
		var p2 = from + n + shift;
		while(p2 != from + n) {
			a[p1] = a[p2];
			p1 = p2;
			if(to - p2 > shift) {
				p2 += shift;
			} else {
				p2 = from + (shift - (to - p2));
			}
		}
		a[p1] = val;
	}
};
haxe_ds_ArraySort.gcd = function(m,n) {
	while(n != 0) {
		var t = m % n;
		m = n;
		n = t;
	}
	return m;
};
haxe_ds_ArraySort.upper = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[val],a[mid]) < 0) {
			len = half;
		} else {
			from = mid + 1;
			len = len - half - 1;
		}
	}
	return from;
};
haxe_ds_ArraySort.lower = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[mid],a[val]) < 0) {
			from = mid + 1;
			len = len - half - 1;
		} else {
			len = half;
		}
	}
	return from;
};
haxe_ds_ArraySort.swap = function(a,i,j) {
	var tmp = a[i];
	a[i] = a[j];
	a[j] = tmp;
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_xml_XmlParserException = function(message,xml,position) {
	this.xml = xml;
	this.message = message;
	this.position = position;
	this.lineNumber = 1;
	this.positionAtLine = 0;
	var _g1 = 0;
	var _g = position;
	while(_g1 < _g) {
		var i = _g1++;
		var c = xml.charCodeAt(i);
		if(c == 10) {
			this.lineNumber++;
			this.positionAtLine = 0;
		} else if(c != 13) {
			this.positionAtLine++;
		}
	}
};
haxe_xml_XmlParserException.__name__ = ["haxe","xml","XmlParserException"];
haxe_xml_XmlParserException.prototype = {
	toString: function() {
		return Type.getClassName(js_Boot.getClass(this)) + ": " + this.message + " at line " + this.lineNumber + " char " + this.positionAtLine;
	}
	,__class__: haxe_xml_XmlParserException
};
var haxe_xml_Parser = function() { };
haxe_xml_Parser.__name__ = ["haxe","xml","Parser"];
haxe_xml_Parser.parse = function(str,strict) {
	if(strict == null) {
		strict = false;
	}
	var doc = Xml.createDocument();
	haxe_xml_Parser.doParse(str,strict,0,doc);
	return doc;
};
haxe_xml_Parser.doParse = function(str,strict,p,parent) {
	if(p == null) {
		p = 0;
	}
	var xml = null;
	var state = 1;
	var next = 1;
	var aname = null;
	var start = 0;
	var nsubs = 0;
	var nbrackets = 0;
	var c = str.charCodeAt(p);
	var buf = new StringBuf();
	var escapeNext = 1;
	var attrValQuote = -1;
	while(c == c) {
		switch(state) {
		case 0:
			switch(c) {
			case 9:case 10:case 13:case 32:
				break;
			default:
				state = next;
				continue;
			}
			break;
		case 1:
			if(c == 60) {
				state = 0;
				next = 2;
			} else {
				start = p;
				state = 13;
				continue;
			}
			break;
		case 2:
			switch(c) {
			case 33:
				if(str.charCodeAt(p + 1) == 91) {
					p += 2;
					if(HxOverrides.substr(str,p,6).toUpperCase() != "CDATA[") {
						throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <![CDATA[",str,p));
					}
					p += 5;
					state = 17;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) == 68 || str.charCodeAt(p + 1) == 100) {
					if(HxOverrides.substr(str,p + 2,6).toUpperCase() != "OCTYPE") {
						throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <!DOCTYPE",str,p));
					}
					p += 8;
					state = 16;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) != 45 || str.charCodeAt(p + 2) != 45) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <!--",str,p));
				} else {
					p += 2;
					state = 15;
					start = p + 1;
				}
				break;
			case 47:
				if(parent == null) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				start = p + 1;
				state = 0;
				next = 10;
				break;
			case 63:
				state = 14;
				start = p;
				break;
			default:
				state = 3;
				start = p;
				continue;
			}
			break;
		case 3:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(p == start) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				xml = Xml.createElement(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml);
				++nsubs;
				state = 0;
				next = 4;
				continue;
			}
			break;
		case 4:
			switch(c) {
			case 47:
				state = 11;
				break;
			case 62:
				state = 9;
				break;
			default:
				state = 5;
				start = p;
				continue;
			}
			break;
		case 5:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				var tmp;
				if(start == p) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected attribute name",str,p));
				}
				tmp = HxOverrides.substr(str,start,p - start);
				aname = tmp;
				if(xml.exists(aname)) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Duplicate attribute [" + aname + "]",str,p));
				}
				state = 0;
				next = 6;
				continue;
			}
			break;
		case 6:
			if(c == 61) {
				state = 0;
				next = 7;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected =",str,p));
			}
			break;
		case 7:
			switch(c) {
			case 34:case 39:
				buf = new StringBuf();
				state = 8;
				start = p + 1;
				attrValQuote = c;
				break;
			default:
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected \"",str,p));
			}
			break;
		case 8:
			switch(c) {
			case 38:
				var len = p - start;
				buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
				state = 18;
				escapeNext = 8;
				start = p + 1;
				break;
			case 60:case 62:
				if(strict) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Invalid unescaped " + String.fromCharCode(c) + " in attribute value",str,p));
				} else if(c == attrValQuote) {
					var len1 = p - start;
					buf.b += len1 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len1);
					var val = buf.b;
					buf = new StringBuf();
					xml.set(aname,val);
					state = 0;
					next = 4;
				}
				break;
			default:
				if(c == attrValQuote) {
					var len2 = p - start;
					buf.b += len2 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len2);
					var val1 = buf.b;
					buf = new StringBuf();
					xml.set(aname,val1);
					state = 0;
					next = 4;
				}
			}
			break;
		case 9:
			p = haxe_xml_Parser.doParse(str,strict,p,xml);
			start = p;
			state = 1;
			break;
		case 10:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				var v = HxOverrides.substr(str,start,p - start);
				if(parent.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + parent.nodeType);
				}
				if(v != parent.nodeName) {
					if(parent.nodeType != Xml.Element) {
						throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + parent.nodeType);
					}
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected </" + parent.nodeName + ">",str,p));
				}
				state = 0;
				next = 12;
				continue;
			}
			break;
		case 11:
			if(c == 62) {
				state = 1;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 12:
			if(c == 62) {
				if(nsubs == 0) {
					parent.addChild(Xml.createPCData(""));
				}
				return p;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 13:
			if(c == 60) {
				var len3 = p - start;
				buf.b += len3 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len3);
				var child = Xml.createPCData(buf.b);
				buf = new StringBuf();
				parent.addChild(child);
				++nsubs;
				state = 0;
				next = 2;
			} else if(c == 38) {
				var len4 = p - start;
				buf.b += len4 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len4);
				state = 18;
				escapeNext = 13;
				start = p + 1;
			}
			break;
		case 14:
			if(c == 63 && str.charCodeAt(p + 1) == 62) {
				++p;
				var str1 = HxOverrides.substr(str,start + 1,p - start - 2);
				parent.addChild(Xml.createProcessingInstruction(str1));
				++nsubs;
				state = 1;
			}
			break;
		case 15:
			if(c == 45 && str.charCodeAt(p + 1) == 45 && str.charCodeAt(p + 2) == 62) {
				parent.addChild(Xml.createComment(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 16:
			if(c == 91) {
				++nbrackets;
			} else if(c == 93) {
				--nbrackets;
			} else if(c == 62 && nbrackets == 0) {
				parent.addChild(Xml.createDocType(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				state = 1;
			}
			break;
		case 17:
			if(c == 93 && str.charCodeAt(p + 1) == 93 && str.charCodeAt(p + 2) == 62) {
				var child1 = Xml.createCData(HxOverrides.substr(str,start,p - start));
				parent.addChild(child1);
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 18:
			if(c == 59) {
				var s = HxOverrides.substr(str,start,p - start);
				if(s.charCodeAt(0) == 35) {
					var c1 = s.charCodeAt(1) == 120 ? Std.parseInt("0" + HxOverrides.substr(s,1,s.length - 1)) : Std.parseInt(HxOverrides.substr(s,1,s.length - 1));
					buf.b += String.fromCharCode(c1);
				} else {
					var _this = haxe_xml_Parser.escapes;
					if(!(__map_reserved[s] != null ? _this.existsReserved(s) : _this.h.hasOwnProperty(s))) {
						if(strict) {
							throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Undefined entity: " + s,str,p));
						}
						buf.b += Std.string("&" + s + ";");
					} else {
						var _this1 = haxe_xml_Parser.escapes;
						var x = __map_reserved[s] != null ? _this1.getReserved(s) : _this1.h[s];
						buf.b += Std.string(x);
					}
				}
				start = p + 1;
				state = escapeNext;
			} else if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45) && c != 35) {
				if(strict) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Invalid character in entity: " + String.fromCharCode(c),str,p));
				}
				buf.b += "&";
				var len5 = p - start;
				buf.b += len5 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len5);
				start = p--;
				state = escapeNext;
			}
			break;
		}
		c = str.charCodeAt(++p);
	}
	if(state == 1) {
		start = p;
		state = 13;
	}
	if(state == 13) {
		if(p != start || nsubs == 0) {
			var len6 = p - start;
			buf.b += len6 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len6);
			parent.addChild(Xml.createPCData(buf.b));
			++nsubs;
		}
		return p;
	}
	if(!strict && state == 18 && escapeNext == 13) {
		buf.b += "&";
		var len7 = p - start;
		buf.b += len7 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len7);
		parent.addChild(Xml.createPCData(buf.b));
		++nsubs;
		return p;
	}
	throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Unexpected end",str,p));
};
var hxColorToolkit_ColorToolkit = function() { };
hxColorToolkit_ColorToolkit.__name__ = ["hxColorToolkit","ColorToolkit"];
hxColorToolkit_ColorToolkit.setColorOpaque = function(color,opaqueValue) {
	if(opaqueValue == null) {
		opaqueValue = 255;
	}
	return opaqueValue << 24 | color & 16777215;
};
hxColorToolkit_ColorToolkit.desaturate = function(color) {
	return new hxColorToolkit_spaces_Gray().setColor(color).getColor();
};
hxColorToolkit_ColorToolkit.getComplement = function(color) {
	return hxColorToolkit_ColorToolkit.rybRotate(color,180);
};
hxColorToolkit_ColorToolkit.shiftBrighteness = function(color,degree) {
	var col = new hxColorToolkit_spaces_HSB().setColor(color);
	var _g = col;
	_g.set_brightness(_g.get_brightness() + degree);
	return col.getColor();
};
hxColorToolkit_ColorToolkit.shiftSaturation = function(color,degree) {
	var col = new hxColorToolkit_spaces_HSB().setColor(color);
	var _g = col;
	_g.set_saturation(_g.get_saturation() + degree);
	return col.getColor();
};
hxColorToolkit_ColorToolkit.shiftHue = function(color,degree) {
	var col = new hxColorToolkit_spaces_HSB().setColor(color);
	var _g = col;
	_g.set_hue(_g.get_hue() + degree);
	return col.getColor();
};
hxColorToolkit_ColorToolkit.toLab = function(color) {
	return new hxColorToolkit_spaces_Lab().setColor(color);
};
hxColorToolkit_ColorToolkit.toGray = function(color) {
	return new hxColorToolkit_spaces_Gray().setColor(color);
};
hxColorToolkit_ColorToolkit.toRGB = function(color) {
	return new hxColorToolkit_spaces_RGB(color >> 16 & 255,color >> 8 & 255,color & 255);
};
hxColorToolkit_ColorToolkit.toARGB = function(color) {
	return new hxColorToolkit_spaces_ARGB(color >> 24 & 255,color >> 16 & 255,color >> 8 & 255,color & 255);
};
hxColorToolkit_ColorToolkit.toHSB = function(color) {
	return new hxColorToolkit_spaces_HSB().setColor(color);
};
hxColorToolkit_ColorToolkit.toHSL = function(color) {
	return new hxColorToolkit_spaces_HSL().setColor(color);
};
hxColorToolkit_ColorToolkit.toCMYK = function(color) {
	return new hxColorToolkit_spaces_CMYK().setColor(color);
};
hxColorToolkit_ColorToolkit.toXYZ = function(color) {
	return new hxColorToolkit_spaces_XYZ().setColor(color);
};
hxColorToolkit_ColorToolkit.toYUV = function(color) {
	return new hxColorToolkit_spaces_YUV().setColor(color);
};
hxColorToolkit_ColorToolkit.toHex = function(color) {
	return new hxColorToolkit_spaces_Hex(color);
};
hxColorToolkit_ColorToolkit.getAnalogousScheme = function(color,angle,contrast) {
	if(contrast == null) {
		contrast = 25;
	}
	if(angle == null) {
		angle = 10;
	}
	return new hxColorToolkit_schemes_Analogous(new hxColorToolkit_spaces_Hex(color),angle,contrast);
};
hxColorToolkit_ColorToolkit.getComplementaryScheme = function(color) {
	return new hxColorToolkit_schemes_Complementary(new hxColorToolkit_spaces_Hex(color));
};
hxColorToolkit_ColorToolkit.getCompoundScheme = function(color) {
	return new hxColorToolkit_schemes_Compound(new hxColorToolkit_spaces_Hex(color));
};
hxColorToolkit_ColorToolkit.getFlippedCompoundScheme = function(color) {
	return new hxColorToolkit_schemes_FlippedCompound(new hxColorToolkit_spaces_Hex(color));
};
hxColorToolkit_ColorToolkit.getMonochromeScheme = function(color) {
	return new hxColorToolkit_schemes_Monochrome(new hxColorToolkit_spaces_Hex(color));
};
hxColorToolkit_ColorToolkit.getSplitComplementaryScheme = function(color) {
	return new hxColorToolkit_schemes_SplitComplementary(new hxColorToolkit_spaces_Hex(color));
};
hxColorToolkit_ColorToolkit.getTetradScheme = function(color,angle,alt) {
	if(alt == null) {
		alt = false;
	}
	if(angle == null) {
		angle = 90;
	}
	return new hxColorToolkit_schemes_Tetrad(new hxColorToolkit_spaces_Hex(color),angle,alt);
};
hxColorToolkit_ColorToolkit.getTriadScheme = function(color,angle) {
	if(angle == null) {
		angle = 120;
	}
	return new hxColorToolkit_schemes_Triad(new hxColorToolkit_spaces_Hex(color),angle);
};
hxColorToolkit_ColorToolkit.rybRotate = function(color,angle) {
	var hsb = new hxColorToolkit_spaces_HSB().setColor(color);
	var a = 0;
	var _g1 = 0;
	var _g = hxColorToolkit_ColorToolkit.rybWheel.length;
	while(_g1 < _g) {
		var i = _g1++;
		var x0 = hxColorToolkit_ColorToolkit.rybWheel[i][0];
		var y0 = hxColorToolkit_ColorToolkit.rybWheel[i][1];
		var x1 = hxColorToolkit_ColorToolkit.rybWheel[i + 1][0];
		var y1 = hxColorToolkit_ColorToolkit.rybWheel[i + 1][1];
		if(y1 < y0) {
			y1 += 360;
		}
		if(y0 <= hsb.get_hue() && hsb.get_hue() <= y1) {
			a = 1.0 * x0 + (x1 - x0) * (hsb.get_hue() - y0) / (y1 - y0);
			break;
		}
	}
	a += angle % 360;
	if(a < 0) {
		a = 360 + a;
	}
	if(a > 360) {
		a -= 360;
	}
	a %= 360;
	var newHue = 0;
	var _g11 = 0;
	var _g2 = hxColorToolkit_ColorToolkit.rybWheel.length;
	while(_g11 < _g2) {
		var k = _g11++;
		var xx0 = hxColorToolkit_ColorToolkit.rybWheel[k][0];
		var yy0 = hxColorToolkit_ColorToolkit.rybWheel[k][1];
		var xx1 = hxColorToolkit_ColorToolkit.rybWheel[k + 1][0];
		var yy1 = hxColorToolkit_ColorToolkit.rybWheel[k + 1][1];
		if(yy1 < yy0) {
			yy1 += 360;
		}
		if(xx0 <= a && a <= xx1) {
			newHue = yy0 + (yy1 - yy0) * (a - xx0) / (xx1 - xx0);
			break;
		}
	}
	hsb.set_hue(newHue);
	return hsb.getColor();
};
hxColorToolkit_ColorToolkit.intArray = function(colors) {
	var a = [];
	var c = colors.iterator();
	while(c.hasNext()) {
		var c1 = c.next();
		a.push(c1.getColor());
	}
	return a;
};
var hxColorToolkit_ColorSpaceToolkit = function() { };
hxColorToolkit_ColorSpaceToolkit.__name__ = ["hxColorToolkit","ColorSpaceToolkit"];
hxColorToolkit_ColorSpaceToolkit.toLab = function(color) {
	return new hxColorToolkit_spaces_Lab().fromRGB(color.toRGB());
};
hxColorToolkit_ColorSpaceToolkit.toGray = function(color) {
	return new hxColorToolkit_spaces_Gray().fromRGB(color.toRGB());
};
hxColorToolkit_ColorSpaceToolkit.toHSB = function(color) {
	return new hxColorToolkit_spaces_HSB().fromRGB(color.toRGB());
};
hxColorToolkit_ColorSpaceToolkit.toHSL = function(color) {
	return new hxColorToolkit_spaces_HSL().fromRGB(color.toRGB());
};
hxColorToolkit_ColorSpaceToolkit.toCMYK = function(color) {
	return new hxColorToolkit_spaces_CMYK().fromRGB(color.toRGB());
};
hxColorToolkit_ColorSpaceToolkit.toXYZ = function(color) {
	return new hxColorToolkit_spaces_XYZ().fromRGB(color.toRGB());
};
hxColorToolkit_ColorSpaceToolkit.toYUV = function(color) {
	return new hxColorToolkit_spaces_YUV().fromRGB(color.toRGB());
};
hxColorToolkit_ColorSpaceToolkit.toARGB = function(color) {
	return new hxColorToolkit_spaces_ARGB().fromRGB(color.toRGB());
};
hxColorToolkit_ColorSpaceToolkit.toHex = function(color) {
	return new hxColorToolkit_spaces_Hex(color.getColor());
};
var hxColorToolkit_schemes_ColorScheme = function() { };
hxColorToolkit_schemes_ColorScheme.__name__ = ["hxColorToolkit","schemes","ColorScheme"];
hxColorToolkit_schemes_ColorScheme.prototype = {
	__class__: hxColorToolkit_schemes_ColorScheme
};
var hxColorToolkit_schemes_ColorWheelScheme = function(primaryColor) {
	this._colors = [];
	this._primaryColor = primaryColor;
	this.numOfColors = 1;
};
hxColorToolkit_schemes_ColorWheelScheme.__name__ = ["hxColorToolkit","schemes","ColorWheelScheme"];
hxColorToolkit_schemes_ColorWheelScheme.__interfaces__ = [hxColorToolkit_schemes_ColorScheme];
hxColorToolkit_schemes_ColorWheelScheme.prototype = {
	clone: function() {
		throw new js__$Boot_HaxeError("need to be overrided");
	}
	,getColor: function(index) {
		return this._colors[index];
	}
	,iterator: function() {
		return HxOverrides.iter(this._colors);
	}
	,get_primaryColor: function() {
		return this._primaryColor;
	}
	,set_primaryColor: function(val) {
		this._primaryColor = val;
		this.generate();
		return this.get_primaryColor();
	}
	,generate: function() {
		throw new js__$Boot_HaxeError("Method must be called by child class");
	}
	,wrap: function(x,min,threshold,plus) {
		if(x - min < threshold) {
			return x + plus;
		} else {
			return x - min;
		}
	}
	,mutateFromPrimary: function(newColor) {
		if(js_Boot.__instanceof(newColor,this._class)) {
			return newColor.clone();
		} else {
			return this.get_primaryColor().clone().fromRGB(newColor.toRGB());
		}
	}
	,__class__: hxColorToolkit_schemes_ColorWheelScheme
	,__properties__: {set_primaryColor:"set_primaryColor",get_primaryColor:"get_primaryColor"}
};
var hxColorToolkit_schemes_Analogous = function(primaryColor,angle,contrast) {
	if(contrast == null) {
		contrast = 25;
	}
	if(angle == null) {
		angle = 10;
	}
	hxColorToolkit_schemes_ColorWheelScheme.call(this,primaryColor);
	this._angle = angle;
	this._contrast = contrast;
	this.generate();
};
hxColorToolkit_schemes_Analogous.__name__ = ["hxColorToolkit","schemes","Analogous"];
hxColorToolkit_schemes_Analogous.__super__ = hxColorToolkit_schemes_ColorWheelScheme;
hxColorToolkit_schemes_Analogous.prototype = $extend(hxColorToolkit_schemes_ColorWheelScheme.prototype,{
	clone: function() {
		return new hxColorToolkit_schemes_Analogous(this.get_primaryColor(),this.get_angle(),this.get_contrast());
	}
	,get_angle: function() {
		return this._angle;
	}
	,set_angle: function(val) {
		this._angle = val;
		this.generate();
		return this.get_angle();
	}
	,get_contrast: function() {
		return this._contrast;
	}
	,set_contrast: function(val) {
		this._contrast = val;
		this.generate();
		return this._contrast;
	}
	,generate: function() {
		this._colors = [this.get_primaryColor()];
		var _primaryHSB;
		if(js_Boot.__instanceof(this.get_primaryColor(),hxColorToolkit_spaces_HSB)) {
			_primaryHSB = this.get_primaryColor();
		} else {
			_primaryHSB = new hxColorToolkit_spaces_HSB().fromRGB(this.get_primaryColor().toRGB());
		}
		var newHSB = new hxColorToolkit_spaces_HSB();
		var array = [[1.0,2.2],[2.0,1.0],[-1.0,-0.5],[-2.0,1.0]];
		var _g1 = 0;
		var _g = array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var one = array[i][0];
			var two = array[i][1];
			newHSB.setColor(hxColorToolkit_ColorToolkit.rybRotate(_primaryHSB.getColor(),this.get_angle() * one));
			var t = 0.44 - two * 0.1;
			if(_primaryHSB.get_brightness() - this.get_contrast() * two < t) {
				newHSB.set_brightness(t * 100);
			} else {
				newHSB.set_brightness(_primaryHSB.get_brightness() - this.get_contrast() * two);
			}
			newHSB.set_saturation(newHSB.get_saturation() - 5);
			this._colors.push(this.mutateFromPrimary(newHSB));
		}
		this.numOfColors = this._colors.length;
	}
	,__class__: hxColorToolkit_schemes_Analogous
	,__properties__: $extend(hxColorToolkit_schemes_ColorWheelScheme.prototype.__properties__,{set_contrast:"set_contrast",get_contrast:"get_contrast",set_angle:"set_angle",get_angle:"get_angle"})
});
var hxColorToolkit_schemes_Complementary = function(primaryColor) {
	hxColorToolkit_schemes_ColorWheelScheme.call(this,primaryColor);
	this.generate();
};
hxColorToolkit_schemes_Complementary.__name__ = ["hxColorToolkit","schemes","Complementary"];
hxColorToolkit_schemes_Complementary.__super__ = hxColorToolkit_schemes_ColorWheelScheme;
hxColorToolkit_schemes_Complementary.prototype = $extend(hxColorToolkit_schemes_ColorWheelScheme.prototype,{
	clone: function() {
		return new hxColorToolkit_schemes_Complementary(this.get_primaryColor());
	}
	,generate: function() {
		this._colors = [this.get_primaryColor()];
		var _primaryHSB;
		if(js_Boot.__instanceof(this.get_primaryColor(),hxColorToolkit_spaces_HSB)) {
			_primaryHSB = this.get_primaryColor();
		} else {
			_primaryHSB = new hxColorToolkit_spaces_HSB().fromRGB(this.get_primaryColor().toRGB());
		}
		var contrasting = _primaryHSB.clone();
		if(_primaryHSB.get_brightness() > 40) {
			contrasting.set_brightness(10 + _primaryHSB.get_brightness() * 0.25);
		} else {
			contrasting.set_brightness(100 - _primaryHSB.get_brightness() * 0.25);
		}
		this._colors.push(this.mutateFromPrimary(contrasting));
		var supporting = _primaryHSB.clone();
		supporting.set_brightness(30 + _primaryHSB.get_brightness());
		supporting.set_saturation(10 + _primaryHSB.get_saturation() * 0.3);
		this._colors.push(this.mutateFromPrimary(supporting));
		var complement = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(this._primaryColor.getColor(),180));
		this._colors.push(this.mutateFromPrimary(complement));
		var contrastingComplement = complement.clone();
		if(complement.get_brightness() > 30) {
			contrastingComplement.set_brightness(10 + complement.get_brightness() * 0.25);
		} else {
			contrastingComplement.set_brightness(100 - complement.get_brightness() * 0.25);
		}
		this._colors.push(this.mutateFromPrimary(contrastingComplement));
		var supportingComplement = complement.clone();
		supportingComplement.set_brightness(30 + complement.get_brightness());
		supportingComplement.set_saturation(10 + complement.get_saturation() * 0.3);
		this._colors.push(this.mutateFromPrimary(supportingComplement));
		this.numOfColors = this._colors.length;
	}
	,__class__: hxColorToolkit_schemes_Complementary
});
var hxColorToolkit_schemes_Compound = function(primaryColor) {
	hxColorToolkit_schemes_ColorWheelScheme.call(this,primaryColor);
	this.generate();
};
hxColorToolkit_schemes_Compound.__name__ = ["hxColorToolkit","schemes","Compound"];
hxColorToolkit_schemes_Compound.__super__ = hxColorToolkit_schemes_ColorWheelScheme;
hxColorToolkit_schemes_Compound.prototype = $extend(hxColorToolkit_schemes_ColorWheelScheme.prototype,{
	clone: function() {
		return new hxColorToolkit_schemes_Compound(this.get_primaryColor());
	}
	,generate: function() {
		this._colors = [this.get_primaryColor()];
		var _primaryHSB;
		if(js_Boot.__instanceof(this.get_primaryColor(),hxColorToolkit_spaces_HSB)) {
			_primaryHSB = this.get_primaryColor();
		} else {
			_primaryHSB = new hxColorToolkit_spaces_HSB().fromRGB(this.get_primaryColor().toRGB());
		}
		var _primary = this._primaryColor.getColor();
		var c1 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,30));
		var x = _primaryHSB.get_brightness();
		c1.set_brightness(x - 25 < 60 ? x + 25 : x - 25);
		this._colors.push(this.mutateFromPrimary(c1));
		var c2 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,30));
		var x1 = _primaryHSB.get_brightness();
		c2.set_brightness(x1 - 40 < 10 ? x1 + 40 : x1 - 40);
		var x2 = _primaryHSB.get_saturation();
		c2.set_saturation(x2 - 40 < 20 ? x2 + 40 : x2 - 40);
		this._colors.push(this.mutateFromPrimary(c2));
		var c3 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,160));
		c3.set_brightness(Math.max(20,_primaryHSB.get_brightness()));
		var x3 = _primaryHSB.get_saturation();
		c3.set_saturation(x3 - 25 < 10 ? x3 + 25 : x3 - 25);
		this._colors.push(this.mutateFromPrimary(c3));
		var c4 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,150));
		var x4 = _primaryHSB.get_brightness();
		c4.set_brightness(x4 - 30 < 60 ? x4 + 30 : x4 - 30);
		var x5 = _primaryHSB.get_saturation();
		c4.set_saturation(x5 - 10 < 80 ? x5 + 10 : x5 - 10);
		this._colors.push(this.mutateFromPrimary(c4));
		var c5 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,150));
		var x6 = _primaryHSB.get_brightness();
		c5.set_brightness(x6 - 40 < 20 ? x6 + 40 : x6 - 40);
		var x7 = _primaryHSB.get_saturation();
		c5.set_saturation(x7 - 10 < 80 ? x7 + 10 : x7 - 10);
		this._colors.push(this.mutateFromPrimary(c5));
		this.numOfColors = this._colors.length;
	}
	,__class__: hxColorToolkit_schemes_Compound
});
var hxColorToolkit_schemes_FlippedCompound = function(primaryColor) {
	hxColorToolkit_schemes_ColorWheelScheme.call(this,primaryColor);
	this.generate();
};
hxColorToolkit_schemes_FlippedCompound.__name__ = ["hxColorToolkit","schemes","FlippedCompound"];
hxColorToolkit_schemes_FlippedCompound.__super__ = hxColorToolkit_schemes_ColorWheelScheme;
hxColorToolkit_schemes_FlippedCompound.prototype = $extend(hxColorToolkit_schemes_ColorWheelScheme.prototype,{
	clone: function() {
		return new hxColorToolkit_schemes_FlippedCompound(this.get_primaryColor());
	}
	,generate: function() {
		this._colors = [this.get_primaryColor()];
		var _primaryHSB;
		if(js_Boot.__instanceof(this.get_primaryColor(),hxColorToolkit_spaces_HSB)) {
			_primaryHSB = this.get_primaryColor();
		} else {
			_primaryHSB = new hxColorToolkit_spaces_HSB().fromRGB(this.get_primaryColor().toRGB());
		}
		var _primary = this._primaryColor.getColor();
		var d = 1;
		var c1 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,-30));
		var x = _primaryHSB.get_brightness();
		c1.set_brightness(x - 25 < 60 ? x + 25 : x - 25);
		this._colors.push(this.mutateFromPrimary(c1));
		var c2 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,-30));
		var x1 = _primaryHSB.get_brightness();
		c2.set_brightness(x1 - 40 < 10 ? x1 + 40 : x1 - 40);
		var x2 = _primaryHSB.get_saturation();
		c2.set_saturation(x2 - 40 < 20 ? x2 + 40 : x2 - 40);
		this._colors.push(this.mutateFromPrimary(c2));
		var c3 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,-160));
		c3.set_brightness(Math.max(20,_primaryHSB.get_brightness()));
		var x3 = _primaryHSB.get_saturation();
		c3.set_saturation(x3 - 25 < 10 ? x3 + 25 : x3 - 25);
		this._colors.push(this.mutateFromPrimary(c3));
		var c4 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,-150));
		var x4 = _primaryHSB.get_brightness();
		c4.set_brightness(x4 - 30 < 60 ? x4 + 30 : x4 - 30);
		var x5 = _primaryHSB.get_saturation();
		c4.set_saturation(x5 - 10 < 80 ? x5 + 10 : x5 - 10);
		this._colors.push(this.mutateFromPrimary(c4));
		var c5 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,-150));
		var x6 = _primaryHSB.get_brightness();
		c5.set_brightness(x6 - 40 < 20 ? x6 + 40 : x6 - 40);
		var x7 = _primaryHSB.get_saturation();
		c5.set_saturation(x7 - 10 < 80 ? x7 + 10 : x7 - 10);
		this._colors.push(this.mutateFromPrimary(c5));
		this.numOfColors = this._colors.length;
	}
	,__class__: hxColorToolkit_schemes_FlippedCompound
});
var hxColorToolkit_schemes_Monochrome = function(primaryColor) {
	hxColorToolkit_schemes_ColorWheelScheme.call(this,primaryColor);
	this.generate();
};
hxColorToolkit_schemes_Monochrome.__name__ = ["hxColorToolkit","schemes","Monochrome"];
hxColorToolkit_schemes_Monochrome.__super__ = hxColorToolkit_schemes_ColorWheelScheme;
hxColorToolkit_schemes_Monochrome.prototype = $extend(hxColorToolkit_schemes_ColorWheelScheme.prototype,{
	clone: function() {
		return new hxColorToolkit_schemes_Monochrome(this.get_primaryColor());
	}
	,generate: function() {
		this._colors = [this.get_primaryColor()];
		var _primaryHSB;
		if(js_Boot.__instanceof(this.get_primaryColor(),hxColorToolkit_spaces_HSB)) {
			_primaryHSB = this.get_primaryColor();
		} else {
			_primaryHSB = new hxColorToolkit_spaces_HSB().fromRGB(this.get_primaryColor().toRGB());
		}
		var c1 = _primaryHSB.clone();
		var x = _primaryHSB.get_brightness();
		c1.set_brightness(x - 50 < 20 ? x + 30 : x - 50);
		var x1 = _primaryHSB.get_saturation();
		c1.set_saturation(x1 - 30 < 10 ? x1 + 20 : x1 - 30);
		this._colors.push(this.mutateFromPrimary(c1));
		var c2 = _primaryHSB.clone();
		var x2 = _primaryHSB.get_brightness();
		c2.set_brightness(x2 - 20 < 20 ? x2 + 60 : x2 - 20);
		this._colors.push(this.mutateFromPrimary(c2));
		var c3 = _primaryHSB.clone();
		c3.set_brightness(Math.max(20,_primaryHSB.get_brightness() + (100 - _primaryHSB.get_brightness()) * 0.2));
		var x3 = _primaryHSB.get_saturation();
		c3.set_saturation(x3 - 30 < 10 ? x3 + 30 : x3 - 30);
		this._colors.push(this.mutateFromPrimary(c3));
		var c4 = _primaryHSB.clone();
		var x4 = _primaryHSB.get_brightness();
		c4.set_brightness(x4 - 50 < 20 ? x4 + 30 : x4 - 50);
		this._colors.push(this.mutateFromPrimary(c4));
		this.numOfColors = this._colors.length;
	}
	,__class__: hxColorToolkit_schemes_Monochrome
});
var hxColorToolkit_schemes_SplitComplementary = function(primaryColor) {
	hxColorToolkit_schemes_ColorWheelScheme.call(this,primaryColor);
	this.generate();
};
hxColorToolkit_schemes_SplitComplementary.__name__ = ["hxColorToolkit","schemes","SplitComplementary"];
hxColorToolkit_schemes_SplitComplementary.__super__ = hxColorToolkit_schemes_ColorWheelScheme;
hxColorToolkit_schemes_SplitComplementary.prototype = $extend(hxColorToolkit_schemes_ColorWheelScheme.prototype,{
	clone: function() {
		return new hxColorToolkit_schemes_SplitComplementary(this.get_primaryColor());
	}
	,generate: function() {
		this._colors = [this.get_primaryColor()];
		var _primary = this._primaryColor.getColor();
		var c1 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,150));
		var c2 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,210));
		var _g = c1;
		_g.set_brightness(_g.get_brightness() + 10);
		var _g1 = c2;
		_g1.set_brightness(_g1.get_brightness() + 10);
		this._colors.push(this.mutateFromPrimary(c1));
		this._colors.push(this.mutateFromPrimary(c2));
		this.numOfColors = this._colors.length;
	}
	,__class__: hxColorToolkit_schemes_SplitComplementary
});
var hxColorToolkit_schemes_Tetrad = function(primaryColor,angle,alt) {
	if(alt == null) {
		alt = false;
	}
	if(angle == null) {
		angle = 90;
	}
	hxColorToolkit_schemes_ColorWheelScheme.call(this,primaryColor);
	this._angle = angle;
	this._alt = alt;
	this.generate();
};
hxColorToolkit_schemes_Tetrad.__name__ = ["hxColorToolkit","schemes","Tetrad"];
hxColorToolkit_schemes_Tetrad.__super__ = hxColorToolkit_schemes_ColorWheelScheme;
hxColorToolkit_schemes_Tetrad.prototype = $extend(hxColorToolkit_schemes_ColorWheelScheme.prototype,{
	clone: function() {
		return new hxColorToolkit_schemes_Tetrad(this.get_primaryColor(),this.get_angle(),this.get_alt());
	}
	,get_angle: function() {
		return this._angle;
	}
	,set_angle: function(value) {
		this._angle = value;
		this.generate();
		return value;
	}
	,get_alt: function() {
		return this._alt;
	}
	,set_alt: function(val) {
		this._alt = val;
		this.generate();
		return this.get_alt();
	}
	,generate: function() {
		this._colors = [this.get_primaryColor()];
		var _primaryHSB;
		if(js_Boot.__instanceof(this.get_primaryColor(),hxColorToolkit_spaces_HSB)) {
			_primaryHSB = this.get_primaryColor();
		} else {
			_primaryHSB = new hxColorToolkit_spaces_HSB().fromRGB(this.get_primaryColor().toRGB());
		}
		var _primary = this._primaryColor.getColor();
		var c1 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,this._angle));
		var multiplier;
		if(!this.get_alt()) {
			if(_primaryHSB.get_brightness() < 50) {
				var _g = c1;
				_g.set_brightness(_g.get_brightness() + 20);
			} else {
				var _g1 = c1;
				_g1.set_brightness(_g1.get_brightness() - 20);
			}
		} else {
			multiplier = (50 - _primaryHSB.get_brightness()) / 50;
			c1.set_brightness(c1.get_brightness() + Math.min(20,Math.max(-20,20 * multiplier)));
		}
		this._colors.push(this.mutateFromPrimary(c1));
		var c2 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,this._angle * 2));
		if(!this.get_alt()) {
			if(_primaryHSB.get_brightness() > 50) {
				var _g2 = c2;
				_g2.set_brightness(_g2.get_brightness() + 10);
			} else {
				var _g3 = c2;
				_g3.set_brightness(_g3.get_brightness() - 10);
			}
		} else {
			multiplier = (50 - _primaryHSB.get_brightness()) / 50;
			c2.set_brightness(c2.get_brightness() + Math.min(10,Math.max(-10,10 * multiplier)));
		}
		this._colors.push(this.mutateFromPrimary(c2));
		var c3 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,this._angle * 3));
		var _g4 = c3;
		_g4.set_brightness(_g4.get_brightness() + 10);
		this._colors.push(this.mutateFromPrimary(c3));
		this.numOfColors = this._colors.length;
	}
	,__class__: hxColorToolkit_schemes_Tetrad
	,__properties__: $extend(hxColorToolkit_schemes_ColorWheelScheme.prototype.__properties__,{set_alt:"set_alt",get_alt:"get_alt",set_angle:"set_angle",get_angle:"get_angle"})
});
var hxColorToolkit_schemes_Triad = function(primaryColor,angle) {
	if(angle == null) {
		angle = 120;
	}
	hxColorToolkit_schemes_ColorWheelScheme.call(this,primaryColor);
	this._angle = angle;
	this.generate();
};
hxColorToolkit_schemes_Triad.__name__ = ["hxColorToolkit","schemes","Triad"];
hxColorToolkit_schemes_Triad.__super__ = hxColorToolkit_schemes_ColorWheelScheme;
hxColorToolkit_schemes_Triad.prototype = $extend(hxColorToolkit_schemes_ColorWheelScheme.prototype,{
	clone: function() {
		return new hxColorToolkit_schemes_Triad(this.get_primaryColor(),this.get_angle());
	}
	,get_angle: function() {
		return this._angle;
	}
	,set_angle: function(value) {
		this._angle = value;
		this.generate();
		return this.get_angle();
	}
	,generate: function() {
		this._colors = [this.get_primaryColor()];
		var _primary = this._primaryColor.getColor();
		var c1 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,this._angle));
		var _g = c1;
		_g.set_brightness(_g.get_brightness() + 10);
		this._colors.push(this.mutateFromPrimary(c1));
		var c2 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,-this._angle));
		var _g1 = c2;
		_g1.set_brightness(_g1.get_brightness() + 10);
		this._colors.push(this.mutateFromPrimary(c2));
		this.numOfColors = this._colors.length;
	}
	,__class__: hxColorToolkit_schemes_Triad
	,__properties__: $extend(hxColorToolkit_schemes_ColorWheelScheme.prototype.__properties__,{set_angle:"set_angle",get_angle:"get_angle"})
});
var hxColorToolkit_spaces_Color = function() { };
hxColorToolkit_spaces_Color.__name__ = ["hxColorToolkit","spaces","Color"];
hxColorToolkit_spaces_Color.prototype = {
	__class__: hxColorToolkit_spaces_Color
};
var hxColorToolkit_spaces_RGB = function(r,g,b) {
	if(b == null) {
		b = 0;
	}
	if(g == null) {
		g = 0;
	}
	if(r == null) {
		r = 0;
	}
	this.numOfChannels = 3;
	this.data = [];
	this.set_red(r);
	this.set_green(g);
	this.set_blue(b);
};
hxColorToolkit_spaces_RGB.__name__ = ["hxColorToolkit","spaces","RGB"];
hxColorToolkit_spaces_RGB.__interfaces__ = [hxColorToolkit_spaces_Color];
hxColorToolkit_spaces_RGB.prototype = {
	getValue: function(channel) {
		return this.data[channel];
	}
	,setValue: function(channel,val) {
		this.data[channel] = Math.min(255,Math.max(val,0));
		return val;
	}
	,minValue: function(channel) {
		return 0;
	}
	,maxValue: function(channel) {
		return 255;
	}
	,get_red: function() {
		return this.getValue(0);
	}
	,set_red: function(value) {
		return this.setValue(0,value);
	}
	,get_green: function() {
		return this.getValue(1);
	}
	,set_green: function(value) {
		return this.setValue(1,value);
	}
	,get_blue: function() {
		return this.getValue(2);
	}
	,set_blue: function(value) {
		return this.setValue(2,value);
	}
	,toRGB: function() {
		return this.clone();
	}
	,getColor: function() {
		return Math.round(this.get_red()) << 16 | Math.round(this.get_green()) << 8 | Math.round(this.get_blue());
	}
	,fromRGB: function(rgb) {
		this.set_red(rgb.get_red());
		this.set_green(rgb.get_green());
		this.set_blue(rgb.get_blue());
		return this;
	}
	,setColor: function(color) {
		this.set_red(color >> 16 & 255);
		this.set_green(color >> 8 & 255);
		this.set_blue(color & 255);
		return this;
	}
	,clone: function() {
		return new hxColorToolkit_spaces_RGB(this.get_red(),this.get_green(),this.get_blue());
	}
	,interpolate: function(target,ratio) {
		if(ratio == null) {
			ratio = 0.5;
		}
		var target1 = js_Boot.__instanceof(target,hxColorToolkit_spaces_RGB) ? target : new hxColorToolkit_spaces_RGB().fromRGB(target.toRGB());
		return new hxColorToolkit_spaces_RGB(this.get_red() + (target1.get_red() - this.get_red()) * ratio,this.get_green() + (target1.get_green() - this.get_green()) * ratio,this.get_blue() + (target1.get_blue() - this.get_blue()) * ratio);
	}
	,__class__: hxColorToolkit_spaces_RGB
	,__properties__: {set_blue:"set_blue",get_blue:"get_blue",set_green:"set_green",get_green:"get_green",set_red:"set_red",get_red:"get_red"}
};
var hxColorToolkit_spaces_ARGB = function(a,r,g,b) {
	if(b == null) {
		b = 0;
	}
	if(g == null) {
		g = 0;
	}
	if(r == null) {
		r = 0;
	}
	if(a == null) {
		a = 255;
	}
	hxColorToolkit_spaces_RGB.call(this,r,g,b);
	this.numOfChannels = 4;
	this.set_alpha(a);
};
hxColorToolkit_spaces_ARGB.__name__ = ["hxColorToolkit","spaces","ARGB"];
hxColorToolkit_spaces_ARGB.__super__ = hxColorToolkit_spaces_RGB;
hxColorToolkit_spaces_ARGB.prototype = $extend(hxColorToolkit_spaces_RGB.prototype,{
	get_alpha: function() {
		return this.getValue(0);
	}
	,set_alpha: function(value) {
		return this.setValue(0,value);
	}
	,get_red: function() {
		return this.getValue(1);
	}
	,set_red: function(value) {
		return this.setValue(1,value);
	}
	,get_green: function() {
		return this.getValue(2);
	}
	,set_green: function(value) {
		return this.setValue(2,value);
	}
	,get_blue: function() {
		return this.getValue(3);
	}
	,set_blue: function(value) {
		return this.setValue(3,value);
	}
	,toRGB: function() {
		return new hxColorToolkit_spaces_RGB(this.get_red(),this.get_green(),this.get_blue());
	}
	,toARGB: function() {
		return this.clone();
	}
	,getColor: function() {
		return Math.round(this.get_alpha()) << 24 | Math.round(this.get_red()) << 16 | Math.round(this.get_green()) << 8 | Math.round(this.get_blue());
	}
	,fromRGB: function(rgb) {
		this.set_alpha(255);
		this.set_red(rgb.get_red());
		this.set_green(rgb.get_green());
		this.set_blue(rgb.get_blue());
		return this;
	}
	,setColor: function(color) {
		this.set_alpha(color >> 24 & 255);
		this.set_red(color >> 16 & 255);
		this.set_green(color >> 8 & 255);
		this.set_blue(color & 255);
		return this;
	}
	,clone: function() {
		return new hxColorToolkit_spaces_ARGB(this.get_alpha(),this.get_red(),this.get_green(),this.get_blue());
	}
	,interpolate: function(target,ratio) {
		if(ratio == null) {
			ratio = 0.5;
		}
		var target1 = js_Boot.__instanceof(target,hxColorToolkit_spaces_ARGB) ? target : new hxColorToolkit_spaces_ARGB().fromRGB(target.toRGB());
		return new hxColorToolkit_spaces_ARGB(this.get_alpha() + (target1.get_alpha() - this.get_alpha()) * ratio,this.get_red() + (target1.get_red() - this.get_red()) * ratio,this.get_green() + (target1.get_green() - this.get_green()) * ratio,this.get_blue() + (target1.get_blue() - this.get_blue()) * ratio);
	}
	,__class__: hxColorToolkit_spaces_ARGB
	,__properties__: $extend(hxColorToolkit_spaces_RGB.prototype.__properties__,{set_alpha:"set_alpha",get_alpha:"get_alpha"})
});
var hxColorToolkit_spaces_CMYK = function(cyan,magenta,yellow,black) {
	if(black == null) {
		black = 0;
	}
	if(yellow == null) {
		yellow = 0;
	}
	if(magenta == null) {
		magenta = 0;
	}
	if(cyan == null) {
		cyan = 0;
	}
	this.numOfChannels = 4;
	this.data = [];
	this.set_cyan(cyan);
	this.set_magenta(magenta);
	this.set_yellow(yellow);
	this.set_black(black);
};
hxColorToolkit_spaces_CMYK.__name__ = ["hxColorToolkit","spaces","CMYK"];
hxColorToolkit_spaces_CMYK.__interfaces__ = [hxColorToolkit_spaces_Color];
hxColorToolkit_spaces_CMYK.prototype = {
	getValue: function(channel) {
		return this.data[channel];
	}
	,setValue: function(channel,val) {
		this.data[channel] = Math.min(100,Math.max(val,0));
		return val;
	}
	,minValue: function(channel) {
		return 0;
	}
	,maxValue: function(channel) {
		return 100;
	}
	,get_cyan: function() {
		return this.getValue(0);
	}
	,set_cyan: function(value) {
		return this.setValue(0,value);
	}
	,get_magenta: function() {
		return this.getValue(1);
	}
	,set_magenta: function(value) {
		return this.setValue(1,value);
	}
	,get_yellow: function() {
		return this.getValue(2);
	}
	,set_yellow: function(value) {
		return this.setValue(2,value);
	}
	,get_black: function() {
		return this.getValue(3);
	}
	,set_black: function(value) {
		return this.setValue(3,value);
	}
	,toRGB: function() {
		var cyan = Math.min(100,this.get_cyan() + this.get_black());
		var magenta = Math.min(100,this.get_magenta() + this.get_black());
		var yellow = Math.min(100,this.get_yellow() + this.get_black());
		return new hxColorToolkit_spaces_RGB((100 - cyan) * 2.55,(100 - magenta) * 2.55,(100 - yellow) * 2.55);
	}
	,getColor: function() {
		return this.toRGB().getColor();
	}
	,fromRGB: function(rgb) {
		var r = rgb.get_red();
		var g = rgb.get_green();
		var b = rgb.get_blue();
		var c = 1 - r / 255;
		var m = 1 - g / 255;
		var y = 1 - b / 255;
		var k;
		var var_K = 1;
		if(c < var_K) {
			var_K = c;
		}
		if(m < var_K) {
			var_K = m;
		}
		if(y < var_K) {
			var_K = y;
		}
		if(var_K == 1) {
			y = 0;
			m = y;
			c = m;
		} else {
			c = (c - var_K) / (1 - var_K) * 100;
			m = (m - var_K) / (1 - var_K) * 100;
			y = (y - var_K) / (1 - var_K) * 100;
		}
		k = var_K * 100;
		this.set_cyan(c);
		this.set_magenta(m);
		this.set_yellow(y);
		this.set_black(k);
		return this;
	}
	,setColor: function(color) {
		return this.fromRGB(new hxColorToolkit_spaces_RGB(color >> 16 & 255,color >> 8 & 255,color & 255));
	}
	,clone: function() {
		return new hxColorToolkit_spaces_CMYK(this.get_cyan(),this.get_magenta(),this.get_yellow(),this.get_black());
	}
	,interpolate: function(target,ratio) {
		if(ratio == null) {
			ratio = 0.5;
		}
		var target1 = js_Boot.__instanceof(target,hxColorToolkit_spaces_CMYK) ? target : new hxColorToolkit_spaces_CMYK().fromRGB(target.toRGB());
		return new hxColorToolkit_spaces_CMYK(this.get_cyan() + (target1.get_cyan() - this.get_cyan()) * ratio,this.get_magenta() + (target1.get_magenta() - this.get_magenta()) * ratio,this.get_yellow() + (target1.get_yellow() - this.get_yellow()) * ratio,this.get_black() + (target1.get_black() - this.get_black()) * ratio);
	}
	,__class__: hxColorToolkit_spaces_CMYK
	,__properties__: {set_yellow:"set_yellow",get_yellow:"get_yellow",set_magenta:"set_magenta",get_magenta:"get_magenta",set_cyan:"set_cyan",get_cyan:"get_cyan",set_black:"set_black",get_black:"get_black"}
};
var hxColorToolkit_spaces_Gray = function(gray) {
	if(gray == null) {
		gray = 0;
	}
	this.numOfChannels = 1;
	this.data = [];
	this.set_gray(gray);
};
hxColorToolkit_spaces_Gray.__name__ = ["hxColorToolkit","spaces","Gray"];
hxColorToolkit_spaces_Gray.__interfaces__ = [hxColorToolkit_spaces_Color];
hxColorToolkit_spaces_Gray.prototype = {
	getValue: function(channel) {
		return this.data[channel];
	}
	,setValue: function(channel,val) {
		this.data[channel] = Math.min(255,Math.max(val,0));
		return val;
	}
	,minValue: function(channel) {
		return 0;
	}
	,maxValue: function(channel) {
		return 255;
	}
	,get_gray: function() {
		return this.getValue(0);
	}
	,set_gray: function(value) {
		return this.setValue(0,value);
	}
	,toRGB: function() {
		return new hxColorToolkit_spaces_RGB(this.get_gray(),this.get_gray(),this.get_gray());
	}
	,getColor: function() {
		return this.toRGB().getColor();
	}
	,fromRGB: function(rgb) {
		this.set_gray(0.3 * rgb.get_red() + 0.59 * rgb.get_green() + 0.11 * rgb.get_blue());
		return this;
	}
	,setColor: function(color) {
		return this.fromRGB(new hxColorToolkit_spaces_RGB(color >> 16 & 255,color >> 8 & 255,color & 255));
	}
	,clone: function() {
		return new hxColorToolkit_spaces_Gray(this.get_gray());
	}
	,interpolate: function(target,ratio) {
		if(ratio == null) {
			ratio = 0.5;
		}
		var target1 = js_Boot.__instanceof(target,hxColorToolkit_spaces_Gray) ? target : new hxColorToolkit_spaces_Gray().fromRGB(target.toRGB());
		return new hxColorToolkit_spaces_Gray(this.get_gray() + (target1.get_gray() - this.get_gray()) * ratio);
	}
	,__class__: hxColorToolkit_spaces_Gray
	,__properties__: {set_gray:"set_gray",get_gray:"get_gray"}
};
var hxColorToolkit_spaces_HSB = function(hue,saturation,brightness) {
	if(brightness == null) {
		brightness = 0;
	}
	if(saturation == null) {
		saturation = 0;
	}
	if(hue == null) {
		hue = 0;
	}
	this.numOfChannels = 3;
	this.data = [];
	this.set_hue(hue);
	this.set_saturation(saturation);
	this.set_brightness(brightness);
};
hxColorToolkit_spaces_HSB.__name__ = ["hxColorToolkit","spaces","HSB"];
hxColorToolkit_spaces_HSB.__interfaces__ = [hxColorToolkit_spaces_Color];
hxColorToolkit_spaces_HSB.loop = function(index,length) {
	if(index < 0) {
		index = length + index % length;
	}
	if(index >= length) {
		index %= length;
	}
	return index;
};
hxColorToolkit_spaces_HSB.prototype = {
	getValue: function(channel) {
		return this.data[channel];
	}
	,setValue: function(channel,val) {
		this.data[channel] = channel == 0 ? hxColorToolkit_spaces_HSB.loop(val,360) : Math.min(channel == 0 ? 360 : 100,Math.max(val,0));
		return val;
	}
	,minValue: function(channel) {
		return 0;
	}
	,maxValue: function(channel) {
		if(channel == 0) {
			return 360;
		} else {
			return 100;
		}
	}
	,get_hue: function() {
		return this.getValue(0);
	}
	,set_hue: function(val) {
		this.data[0] = hxColorToolkit_spaces_HSB.loop(val,360);
		return val;
	}
	,get_saturation: function() {
		return this.getValue(1);
	}
	,set_saturation: function(val) {
		this.data[1] = Math.min(100,Math.max(val,0));
		return val;
	}
	,get_brightness: function() {
		return this.getValue(2);
	}
	,set_brightness: function(val) {
		this.data[2] = Math.min(100,Math.max(val,0));
		return val;
	}
	,toRGB: function() {
		var hue = this.get_hue();
		var saturation = this.get_saturation();
		var brightness = this.get_brightness();
		var r = 0;
		var g = 0;
		var b = 0;
		var i;
		var f;
		var p;
		var q;
		var t;
		hue %= 360;
		if(brightness == 0) {
			return new hxColorToolkit_spaces_RGB();
		}
		saturation *= 0.01;
		brightness *= 0.01;
		hue /= 60;
		i = Math.floor(hue);
		f = hue - i;
		p = brightness * (1 - saturation);
		q = brightness * (1 - saturation * f);
		t = brightness * (1 - saturation * (1 - f));
		if(i == 0) {
			r = brightness;
			g = t;
			b = p;
		} else if(i == 1) {
			r = q;
			g = brightness;
			b = p;
		} else if(i == 2) {
			r = p;
			g = brightness;
			b = t;
		} else if(i == 3) {
			r = p;
			g = q;
			b = brightness;
		} else if(i == 4) {
			r = t;
			g = p;
			b = brightness;
		} else if(i == 5) {
			r = brightness;
			g = p;
			b = q;
		}
		return new hxColorToolkit_spaces_RGB(r * 255,g * 255,b * 255);
	}
	,getColor: function() {
		return this.toRGB().getColor();
	}
	,fromRGB: function(rgb) {
		var r = rgb.get_red();
		var g = rgb.get_green();
		var b = rgb.get_blue();
		r /= 255;
		g /= 255;
		b /= 255;
		var h;
		var s;
		var v;
		var min;
		var max;
		var delta;
		min = Math.min(r,Math.min(g,b));
		max = Math.max(r,Math.max(g,b));
		v = max * 100;
		delta = max - min;
		if(max != 0) {
			s = delta / max * 100;
		} else {
			s = 0;
			h = -1;
			this.set_hue(h);
			this.set_saturation(s);
			this.set_brightness(v);
			return this;
		}
		if(delta == 0) {
			this.set_hue(0);
			this.set_saturation(s);
			this.set_brightness(v);
			return this;
		}
		if(r == max) {
			h = (g - b) / delta;
		} else if(g == max) {
			h = 2 + (b - r) / delta;
		} else {
			h = 4 + (r - g) / delta;
		}
		h *= 60;
		if(h < 0) {
			h += 360;
		}
		this.set_hue(h);
		this.set_saturation(s);
		this.set_brightness(v);
		return this;
	}
	,setColor: function(color) {
		return this.fromRGB(new hxColorToolkit_spaces_RGB(color >> 16 & 255,color >> 8 & 255,color & 255));
	}
	,clone: function() {
		return new hxColorToolkit_spaces_HSB(this.get_hue(),this.get_saturation(),this.get_brightness());
	}
	,interpolate: function(target,ratio) {
		if(ratio == null) {
			ratio = 0.5;
		}
		var target1 = js_Boot.__instanceof(target,hxColorToolkit_spaces_HSB) ? target : new hxColorToolkit_spaces_HSB().fromRGB(target.toRGB());
		return new hxColorToolkit_spaces_HSB(this.get_hue() + (target1.get_hue() - this.get_hue()) * ratio,this.get_saturation() + (target1.get_saturation() - this.get_saturation()) * ratio,this.get_brightness() + (target1.get_brightness() - this.get_brightness()) * ratio);
	}
	,__class__: hxColorToolkit_spaces_HSB
	,__properties__: {set_brightness:"set_brightness",get_brightness:"get_brightness",set_saturation:"set_saturation",get_saturation:"get_saturation",set_hue:"set_hue",get_hue:"get_hue"}
};
var hxColorToolkit_spaces_HSL = function(hue,saturation,lightness) {
	if(lightness == null) {
		lightness = 0;
	}
	if(saturation == null) {
		saturation = 0;
	}
	if(hue == null) {
		hue = 0;
	}
	this.numOfChannels = 3;
	this.data = [];
	this.set_hue(hue);
	this.set_saturation(saturation);
	this.set_lightness(lightness);
};
hxColorToolkit_spaces_HSL.__name__ = ["hxColorToolkit","spaces","HSL"];
hxColorToolkit_spaces_HSL.__interfaces__ = [hxColorToolkit_spaces_Color];
hxColorToolkit_spaces_HSL.loop = function(index,length) {
	if(index < 0) {
		index = length + index % length;
	}
	if(index >= length) {
		index %= length;
	}
	return index;
};
hxColorToolkit_spaces_HSL.prototype = {
	getValue: function(channel) {
		return this.data[channel];
	}
	,setValue: function(channel,val) {
		this.data[channel] = channel == 0 ? hxColorToolkit_spaces_HSL.loop(val,360) : Math.min(channel == 0 ? 360 : 100,Math.max(val,0));
		return val;
	}
	,minValue: function(channel) {
		return 0;
	}
	,maxValue: function(channel) {
		if(channel == 0) {
			return 360;
		} else {
			return 100;
		}
	}
	,get_hue: function() {
		return this.getValue(0);
	}
	,set_hue: function(val) {
		this.data[0] = hxColorToolkit_spaces_HSL.loop(val,360);
		return val;
	}
	,get_saturation: function() {
		return this.getValue(1);
	}
	,set_saturation: function(val) {
		this.data[1] = Math.min(100,Math.max(val,0));
		return val;
	}
	,get_lightness: function() {
		return this.getValue(2);
	}
	,set_lightness: function(val) {
		this.data[2] = Math.min(100,Math.max(val,0));
		return val;
	}
	,toRGB: function() {
		var hue = this.get_hue() / 360;
		var saturation = this.get_saturation() * 0.01;
		var lightness = this.get_lightness() * 0.01;
		var r;
		var g;
		var b;
		if(saturation == 0) {
			b = lightness;
			g = b;
			r = g;
		} else {
			var q = lightness < 0.5 ? lightness * (1 + saturation) : lightness + saturation - lightness * saturation;
			var p = 2 * lightness - q;
			r = this.hue2rgb(p,q,hue + 0.333333333333333315);
			g = this.hue2rgb(p,q,hue);
			b = this.hue2rgb(p,q,hue - 0.333333333333333315);
		}
		return new hxColorToolkit_spaces_RGB(r * 255,g * 255,b * 255);
	}
	,getColor: function() {
		return this.toRGB().getColor();
	}
	,fromRGB: function(rgb) {
		var r = rgb.get_red();
		var g = rgb.get_green();
		var b = rgb.get_blue();
		r /= 255;
		g /= 255;
		b /= 255;
		var max = Math.max(r,Math.max(g,b));
		var min = Math.min(r,Math.min(g,b));
		var h;
		var s;
		var l = (max + min) / 2;
		s = l;
		h = s;
		if(max == min) {
			s = 0;
			h = s;
		} else {
			var d = max - min;
			if(l > 0.5) {
				s = d / (2 - max - min);
			} else {
				s = d / (max + min);
			}
			if(max == r) {
				h = (g - b) / d + (g < b ? 6 : 0);
			} else if(max == g) {
				h = (b - r) / d + 2;
			} else {
				h = (r - g) / d + 4;
			}
			h /= 6;
		}
		this.set_hue(Math.round(h * 360));
		this.set_saturation(Math.round(s * 100));
		this.set_lightness(Math.round(l * 100));
		return this;
	}
	,setColor: function(color) {
		return this.fromRGB(new hxColorToolkit_spaces_RGB(color >> 16 & 255,color >> 8 & 255,color & 255));
	}
	,clone: function() {
		return new hxColorToolkit_spaces_HSL(this.get_hue(),this.get_saturation(),this.get_lightness());
	}
	,interpolate: function(target,ratio) {
		if(ratio == null) {
			ratio = 0.5;
		}
		var target1 = js_Boot.__instanceof(target,hxColorToolkit_spaces_HSL) ? target : new hxColorToolkit_spaces_HSL().fromRGB(target.toRGB());
		return new hxColorToolkit_spaces_HSL(this.get_hue() + (target1.get_hue() - this.get_hue()) * ratio,this.get_saturation() + (target1.get_saturation() - this.get_saturation()) * ratio,this.get_lightness() + (target1.get_lightness() - this.get_lightness()) * ratio);
	}
	,hue2rgb: function(p,q,t) {
		if(t < 0) {
			++t;
		}
		if(t > 1) {
			--t;
		}
		if(t < 0.166666666666666657) {
			return p + (q - p) * 6 * t;
		}
		if(t < 0.5) {
			return q;
		}
		if(t < 0.66666666666666663) {
			return p + (q - p) * (0.66666666666666663 - t) * 6;
		}
		return p;
	}
	,__class__: hxColorToolkit_spaces_HSL
	,__properties__: {set_lightness:"set_lightness",get_lightness:"get_lightness",set_saturation:"set_saturation",get_saturation:"get_saturation",set_hue:"set_hue",get_hue:"get_hue"}
};
var hxColorToolkit_spaces_Hex = function(color) {
	if(color == null) {
		color = 0;
	}
	this.numOfChannels = 1;
	this.data = color;
};
hxColorToolkit_spaces_Hex.__name__ = ["hxColorToolkit","spaces","Hex"];
hxColorToolkit_spaces_Hex.__interfaces__ = [hxColorToolkit_spaces_Color];
hxColorToolkit_spaces_Hex.prototype = {
	getValue: function(channel) {
		return this.data;
	}
	,setValue: function(channel,val) {
		this.data = Math.round(Math.min(-1,Math.max(val,0)));
		return val;
	}
	,minValue: function(channel) {
		return 0;
	}
	,maxValue: function(channel) {
		return -1;
	}
	,toRGB: function() {
		return new hxColorToolkit_spaces_RGB(this.data >> 16 & 255,this.data >> 8 & 255,this.data & 255);
	}
	,toARGB: function() {
		return new hxColorToolkit_spaces_ARGB(this.data >> 24 & 255,this.data >> 16 & 255,this.data >> 8 & 255,this.data & 255);
	}
	,getColor: function() {
		return this.data;
	}
	,fromRGB: function(rgb) {
		this.data = rgb.getColor();
		return this;
	}
	,setColor: function(color) {
		this.data = color;
		return this;
	}
	,get_alpha: function() {
		return this.data >> 24 & 255;
	}
	,get_red: function() {
		return this.data >> 16 & 255;
	}
	,get_green: function() {
		return this.data >> 8 & 255;
	}
	,get_blue: function() {
		return this.data & 255;
	}
	,set_alpha: function(v) {
		this.data = v <= 0 ? this.data & 16777215 : v >= 255 ? this.data | -16777216 : this.data & 16777215 | v << 24;
		return v;
	}
	,set_red: function(v) {
		this.data = v <= 0 ? this.data & -16711681 : v >= 255 ? this.data | 16711680 : this.data & -16711681 | v << 16;
		return v;
	}
	,set_green: function(v) {
		this.data = v <= 0 ? this.data & -65281 : v >= 255 ? this.data | 65280 : this.data & -65281 | v << 8;
		return v;
	}
	,set_blue: function(v) {
		this.data = v <= 0 ? this.data & -256 : v >= 255 ? this.data | 255 : this.data & -256 | v;
		return v;
	}
	,clone: function() {
		return new hxColorToolkit_spaces_Hex(this.data);
	}
	,interpolate: function(target,ratio) {
		if(ratio == null) {
			ratio = 0.5;
		}
		var target1 = js_Boot.__instanceof(target,hxColorToolkit_spaces_Hex) ? target : new hxColorToolkit_spaces_Hex(target.getColor());
		return new hxColorToolkit_spaces_Hex(new hxColorToolkit_spaces_RGB(this.data >> 16 & 255,this.data >> 8 & 255,this.data & 255).interpolate(new hxColorToolkit_spaces_RGB(target1.data >> 16 & 255,target1.data >> 8 & 255,target1.data & 255),ratio).getColor());
	}
	,__class__: hxColorToolkit_spaces_Hex
	,__properties__: {set_blue:"set_blue",get_blue:"get_blue",set_green:"set_green",get_green:"get_green",set_red:"set_red",get_red:"get_red",set_alpha:"set_alpha",get_alpha:"get_alpha"}
};
var hxColorToolkit_spaces_Lab = function(lightness,a,b) {
	if(b == null) {
		b = 0;
	}
	if(a == null) {
		a = 0;
	}
	if(lightness == null) {
		lightness = 0;
	}
	this.numOfChannels = 3;
	this.data = [];
	this.set_lightness(lightness);
	this.set_a(a);
	this.set_b(b);
};
hxColorToolkit_spaces_Lab.__name__ = ["hxColorToolkit","spaces","Lab"];
hxColorToolkit_spaces_Lab.__interfaces__ = [hxColorToolkit_spaces_Color];
hxColorToolkit_spaces_Lab.prototype = {
	getValue: function(channel) {
		return this.data[channel];
	}
	,setValue: function(channel,val) {
		this.data[channel] = Math.min(channel == 0 ? 100 : 127,Math.max(val,channel == 0 ? 0 : -128));
		return val;
	}
	,minValue: function(channel) {
		if(channel == 0) {
			return 0;
		} else {
			return -128;
		}
	}
	,maxValue: function(channel) {
		if(channel == 0) {
			return 100;
		} else {
			return 127;
		}
	}
	,toRGB: function() {
		return this.toXYZ().toRGB();
	}
	,toXYZ: function() {
		var y = (this.get_lightness() + 16) / 116;
		var x = this.get_a() * 0.002 + y;
		var z = y - this.get_b() * 0.005;
		if(Math.pow(y,3) > 0.008856) {
			y = Math.pow(y,3);
		} else {
			y = (y - 0.137931034482758619) / 7.787;
		}
		if(Math.pow(x,3) > 0.008856) {
			x = Math.pow(x,3);
		} else {
			x = (x - 0.137931034482758619) / 7.787;
		}
		if(Math.pow(z,3) > 0.008856) {
			z = Math.pow(z,3);
		} else {
			z = (z - 0.137931034482758619) / 7.787;
		}
		return new hxColorToolkit_spaces_XYZ(95.047 * x,100.000 * y,108.883 * z);
	}
	,getColor: function() {
		return this.toXYZ().getColor();
	}
	,fromRGB: function(rgb) {
		this.data = new hxColorToolkit_spaces_XYZ().fromRGB(rgb).toLab().data;
		return this;
	}
	,setColor: function(value) {
		this.data = new hxColorToolkit_spaces_XYZ().setColor(value).toLab().data;
		return this;
	}
	,get_lightness: function() {
		return this.getValue(0);
	}
	,set_lightness: function(value) {
		return this.setValue(0,value);
	}
	,get_a: function() {
		return this.getValue(1);
	}
	,set_a: function(value) {
		return this.setValue(1,value);
	}
	,get_b: function() {
		return this.getValue(2);
	}
	,set_b: function(value) {
		return this.setValue(2,value);
	}
	,clone: function() {
		return new hxColorToolkit_spaces_Lab(this.get_lightness(),this.get_a(),this.get_b());
	}
	,interpolate: function(target,ratio) {
		if(ratio == null) {
			ratio = 0.5;
		}
		var target1 = js_Boot.__instanceof(target,hxColorToolkit_spaces_Lab) ? target : new hxColorToolkit_spaces_Lab().fromRGB(target.toRGB());
		return new hxColorToolkit_spaces_Lab(this.get_lightness() + (target1.get_lightness() - this.get_lightness()) * ratio,this.get_a() + (target1.get_a() - this.get_a()) * ratio,this.get_b() + (target1.get_b() - this.get_b()) * ratio);
	}
	,__class__: hxColorToolkit_spaces_Lab
	,__properties__: {set_b:"set_b",get_b:"get_b",set_a:"set_a",get_a:"get_a",set_lightness:"set_lightness",get_lightness:"get_lightness"}
};
var hxColorToolkit_spaces_XYZ = function(x,y,z) {
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.numOfChannels = 3;
	this.data = [];
	this.set_x(x);
	this.set_y(y);
	this.set_z(z);
};
hxColorToolkit_spaces_XYZ.__name__ = ["hxColorToolkit","spaces","XYZ"];
hxColorToolkit_spaces_XYZ.__interfaces__ = [hxColorToolkit_spaces_Color];
hxColorToolkit_spaces_XYZ.prototype = {
	getValue: function(channel) {
		return this.data[channel];
	}
	,setValue: function(channel,val) {
		if(channel < 0 || channel >= this.numOfChannels) {
			throw new js__$Boot_HaxeError("no such channel");
		}
		this.data[channel] = Math.min(this.maxValue(channel),Math.max(val,0));
		return val;
	}
	,minValue: function(channel) {
		return 0;
	}
	,maxValue: function(channel) {
		switch(channel) {
		case 0:
			return 95.047;
		case 1:
			return 100.000;
		case 2:
			return 108.883;
		default:
			throw new js__$Boot_HaxeError("XYZ does not have channel " + channel);
		}
	}
	,get_x: function() {
		return this.getValue(0);
	}
	,set_x: function(value) {
		return this.setValue(0,value);
	}
	,get_y: function() {
		return this.getValue(1);
	}
	,set_y: function(value) {
		return this.setValue(1,value);
	}
	,get_z: function() {
		return this.getValue(2);
	}
	,set_z: function(value) {
		return this.setValue(2,value);
	}
	,toRGB: function() {
		var x = this.get_x() * 0.01;
		var y = this.get_y() * 0.01;
		var z = this.get_z() * 0.01;
		var r = x * 3.2406 + y * -1.5372 + z * -0.4986;
		var g = x * -0.9689 + y * 1.8758 + z * 0.0415;
		var b = x * 0.0557 + y * -0.2040 + z * 1.0570;
		if(r > 0.0031308) {
			r = 1.055 * Math.pow(r,0.416666666666666685) - 0.055;
		} else {
			r = 12.92 * r;
		}
		if(g > 0.0031308) {
			g = 1.055 * Math.pow(g,0.416666666666666685) - 0.055;
		} else {
			g = 12.92 * g;
		}
		if(b > 0.0031308) {
			b = 1.055 * Math.pow(b,0.416666666666666685) - 0.055;
		} else {
			b = 12.92 * b;
		}
		return new hxColorToolkit_spaces_RGB(Math.round(r * 255),Math.round(g * 255),Math.round(b * 255));
	}
	,getColor: function() {
		var x = this.get_x() * 0.01;
		var y = this.get_y() * 0.01;
		var z = this.get_z() * 0.01;
		var r = x * 3.2406 + y * -1.5372 + z * -0.4986;
		var g = x * -0.9689 + y * 1.8758 + z * 0.0415;
		var b = x * 0.0557 + y * -0.2040 + z * 1.0570;
		if(r > 0.0031308) {
			r = 1.055 * Math.pow(r,0.416666666666666685) - 0.055;
		} else {
			r = 12.92 * r;
		}
		if(g > 0.0031308) {
			g = 1.055 * Math.pow(g,0.416666666666666685) - 0.055;
		} else {
			g = 12.92 * g;
		}
		if(b > 0.0031308) {
			b = 1.055 * Math.pow(b,0.416666666666666685) - 0.055;
		} else {
			b = 12.92 * b;
		}
		var cR = Math.round(r * 255) << 16;
		var cG = Math.round(g * 255) << 8;
		var cB = Math.round(b * 255);
		return cR | cG | cB;
	}
	,fromRGB: function(rgb) {
		var r = rgb.get_red() / 255;
		var g = rgb.get_green() / 255;
		var b = rgb.get_blue() / 255;
		if(r > 0.04045) {
			r = Math.pow((r + 0.055) / 1.055,2.4);
		} else {
			r /= 12.92;
		}
		if(g > 0.04045) {
			g = Math.pow((g + 0.055) / 1.055,2.4);
		} else {
			g /= 12.92;
		}
		if(b > 0.04045) {
			b = Math.pow((b + 0.055) / 1.055,2.4);
		} else {
			b /= 12.92;
		}
		r *= 100;
		g *= 100;
		b *= 100;
		this.set_x(r * 0.4124 + g * 0.3576 + b * 0.1805);
		this.set_y(r * 0.2126 + g * 0.7152 + b * 0.0722);
		this.set_z(r * 0.0193 + g * 0.1192 + b * 0.9505);
		return this;
	}
	,toLab: function() {
		var x = this.get_x() / 95.047;
		var y = this.get_y() / 100.000;
		var z = this.get_z() / 108.883;
		if(x > 0.008856) {
			x = Math.pow(x,0.333333333333333315);
		} else {
			x = 7.787 * x + 0.137931034482758619;
		}
		if(y > 0.008856) {
			y = Math.pow(y,0.333333333333333315);
		} else {
			y = 7.787 * y + 0.137931034482758619;
		}
		if(z > 0.008856) {
			z = Math.pow(z,0.333333333333333315);
		} else {
			z = 7.787 * z + 0.137931034482758619;
		}
		return new hxColorToolkit_spaces_Lab(116 * y - 16,500 * (x - y),200 * (y - z));
	}
	,setColor: function(color) {
		return this.fromRGB(new hxColorToolkit_spaces_RGB(color >> 16 & 255,color >> 8 & 255,color & 255));
	}
	,clone: function() {
		return new hxColorToolkit_spaces_XYZ(this.get_x(),this.get_y(),this.get_z());
	}
	,interpolate: function(target,ratio) {
		if(ratio == null) {
			ratio = 0.5;
		}
		var target1 = js_Boot.__instanceof(target,hxColorToolkit_spaces_XYZ) ? target : new hxColorToolkit_spaces_XYZ().fromRGB(target.toRGB());
		return new hxColorToolkit_spaces_XYZ(this.get_x() + (target1.get_x() - this.get_x()) * ratio,this.get_y() + (target1.get_y() - this.get_y()) * ratio,this.get_z() + (target1.get_z() - this.get_z()) * ratio);
	}
	,__class__: hxColorToolkit_spaces_XYZ
	,__properties__: {set_z:"set_z",get_z:"get_z",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"}
};
var hxColorToolkit_spaces_YUV = function(y,u,v) {
	if(v == null) {
		v = 0;
	}
	if(u == null) {
		u = 0;
	}
	if(y == null) {
		y = 0;
	}
	this.numOfChannels = 3;
	this.data = [];
	this.set_y(y);
	this.set_u(u);
	this.set_v(v);
};
hxColorToolkit_spaces_YUV.__name__ = ["hxColorToolkit","spaces","YUV"];
hxColorToolkit_spaces_YUV.__interfaces__ = [hxColorToolkit_spaces_Color];
hxColorToolkit_spaces_YUV.prototype = {
	getValue: function(channel) {
		return this.data[channel];
	}
	,setValue: function(channel,val) {
		this.data[channel] = Math.min(255,Math.max(val,0));
		return val;
	}
	,minValue: function(channel) {
		return 0;
	}
	,maxValue: function(channel) {
		return 255;
	}
	,get_y: function() {
		return this.getValue(0);
	}
	,set_y: function(value) {
		return this.setValue(0,value);
	}
	,get_u: function() {
		return this.getValue(1);
	}
	,set_u: function(value) {
		return this.setValue(1,value);
	}
	,get_v: function() {
		return this.getValue(2);
	}
	,set_v: function(value) {
		return this.setValue(2,value);
	}
	,toRGB: function() {
		return new hxColorToolkit_spaces_RGB(Math.max(0,Math.min(this.get_y() + 1.402 * (this.get_v() - 128),255)),Math.max(0,Math.min(this.get_y() - 0.344 * (this.get_u() - 128) - 0.714 * (this.get_v() - 128),255)),Math.max(0,Math.min(this.get_y() + 1.772 * (this.get_u() - 128),255)));
	}
	,getColor: function() {
		return this.toRGB().getColor();
	}
	,fromRGB: function(rgb) {
		var r = rgb.get_red();
		var g = rgb.get_green();
		var b = rgb.get_blue();
		this.set_y(0.299 * r + 0.587 * g + 0.114 * b);
		this.set_u(r * -0.169 + g * -0.331 + b * 0.499 + 128);
		this.set_v(r * 0.499 + g * -0.418 + b * -0.0813 + 128);
		return this;
	}
	,setColor: function(color) {
		return this.fromRGB(new hxColorToolkit_spaces_RGB(color >> 16 & 255,color >> 8 & 255,color & 255));
	}
	,clone: function() {
		return new hxColorToolkit_spaces_YUV(this.get_y(),this.get_u(),this.get_v());
	}
	,interpolate: function(target,ratio) {
		if(ratio == null) {
			ratio = 0.5;
		}
		var target1 = js_Boot.__instanceof(target,hxColorToolkit_spaces_YUV) ? target : new hxColorToolkit_spaces_YUV().fromRGB(target.toRGB());
		return new hxColorToolkit_spaces_YUV(this.get_y() + (target1.get_y() - this.get_y()) * ratio,this.get_u() + (target1.get_u() - this.get_u()) * ratio,this.get_v() + (target1.get_v() - this.get_v()) * ratio);
	}
	,__class__: hxColorToolkit_spaces_YUV
	,__properties__: {set_y:"set_y",get_y:"get_y",set_v:"set_v",get_v:"get_v",set_u:"set_u",get_u:"get_u"}
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = ["js","Boot"];
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Browser = function() { };
js_Browser.__name__ = ["js","Browser"];
js_Browser.createXMLHttpRequest = function() {
	if(typeof XMLHttpRequest != "undefined") {
		return new XMLHttpRequest();
	}
	if(typeof ActiveXObject != "undefined") {
		return new ActiveXObject("Microsoft.XMLHTTP");
	}
	throw new js__$Boot_HaxeError("Unable to create XMLHttpRequest object.");
};
var lets_Easing = function() { };
lets_Easing.__name__ = ["lets","Easing"];
lets_Easing.linear = function(v) {
	return v;
};
lets_Easing.quad = function(v) {
	return v * v;
};
lets_Easing.cubic = function(v) {
	return v * v * v;
};
lets_Easing.quart = function(v) {
	return v * v * v;
};
lets_Easing.quint = function(v) {
	return v * v * v;
};
lets_Easing.sine = function(v) {
	return 1 - Math.cos(v * Math.PI / 2);
};
lets_Easing.circ = function(v) {
	return 1 - Math.sqrt(1 - v * v);
};
lets_Easing.expo = function(v) {
	if(v == 0) {
		return 0;
	} else {
		return Math.pow(2,10 * (v - 1));
	}
};
lets_Easing.back = function(v) {
	var s = 1.70158;
	return v * v * ((s + 1) * v - s);
};
lets_Easing.bounce = function(v) {
	v = 1 - v;
	return 1 - (v < 0.363636363636363646 ? 7.5625 * v * v : v < 0.727272727272727293 ? 7.5625 * (v -= 0.545454545454545414) * v + .75 : v < 0.909090909090909061 ? 7.5625 * (v -= 0.818181818181818232) * v + .9375 : 7.5625 * (v -= 0.954545454545454586) * v + .984375);
};
lets_Easing.elastic = function(v) {
	if(v == 0) {
		return 0;
	}
	if(v == 1) {
		return 1;
	}
	var p = .3;
	var s = p / 4;
	return -(Math.pow(2,10 * --v) * Math.sin((v - 0.075) * (2 * Math.PI) / 0.3));
};
lets_Easing.reverse = function(f) {
	return function(v) {
		return 1 - f(1 - v);
	};
};
lets_Easing.reflect = function(f) {
	return function(v) {
		if(v < 0.5) {
			return f(v * 2) / 2;
		} else {
			return 1 - f(2 - v * 2) / 2;
		}
	};
};
var lets_GoJs = function(target,duration) {
	this.VERSION = "1.0.6";
	this.DEBUG = false;
	this.FRAME_RATE = 60;
	this._seconds = 0;
	this._delay = 0;
	this._initTime = 0;
	this._isTimeBased = false;
	this._isYoyo = false;
	this._isFrom = false;
	this._props = new haxe_ds_StringMap();
	this._options = { };
	this._easing = lets_easing_Quad.get_easeOut();
	this._id = "[lets.Go]" + this.VERSION + "." + new Date().getTime();
	this._seconds = duration;
	this._target = target;
	this._duration = this.getDuration(duration);
	if(this._isTimeBased) {
		this._initTime = this.getTimer();
	} else {
		this._initTime = this._duration;
	}
	lets_GoJs._tweens.push(this);
	if(this.DEBUG) {
		window.console.log("New GoJs - _id: \"" + this._id + "\" / _duration: " + this._duration + " / _initTime: " + this._initTime + " / _tweens.length: " + lets_GoJs._tweens.length);
	}
	haxe_Timer.delay($bind(this,this.init),1);
};
lets_GoJs.__name__ = ["lets","GoJs"];
lets_GoJs.to = function(target,duration) {
	var GoJs = new lets_GoJs(target,duration);
	GoJs._isFrom = false;
	return GoJs;
};
lets_GoJs.from = function(target,duration) {
	var GoJs = new lets_GoJs(target,duration);
	GoJs._isFrom = true;
	GoJs.updateProperties(0);
	return GoJs;
};
lets_GoJs.timer = function(duration) {
	var GoJs = new lets_GoJs({ },duration);
	return GoJs;
};
lets_GoJs.prototype = {
	isTimeBased: function(isTimeBased) {
		if(isTimeBased == null) {
			isTimeBased = true;
		}
		console.log("Fixme: this doesn\t work right now");
		this._isTimeBased = isTimeBased;
		this._duration = this._duration / this.FRAME_RATE | 0;
		return this;
	}
	,width: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"width")) {
			objValue = Reflect.getProperty(this._target,"width");
		}
		var _range = { key : "width", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("width",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,height: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"height")) {
			objValue = Reflect.getProperty(this._target,"height");
		}
		var _range = { key : "height", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("height",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,x: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"x")) {
			objValue = Reflect.getProperty(this._target,"x");
		}
		var _range = { key : "x", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("x",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,y: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"y")) {
			objValue = Reflect.getProperty(this._target,"y");
		}
		var _range = { key : "y", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("y",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,rotation: function(degree) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"rotation")) {
			objValue = Reflect.getProperty(this._target,"rotation");
		}
		var _range = { key : "rotation", from : this._isFrom ? degree : objValue, to : !this._isFrom ? degree : objValue};
		this._props.set("rotation",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,degree: function(degree) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"rotation")) {
			objValue = Reflect.getProperty(this._target,"rotation");
		}
		var _range = { key : "rotation", from : this._isFrom ? degree : objValue, to : !this._isFrom ? degree : objValue};
		this._props.set("rotation",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,radians: function(degree) {
		var value = degree * Math.PI / 180;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"rotation")) {
			objValue = Reflect.getProperty(this._target,"rotation");
		}
		var _range = { key : "rotation", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("rotation",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,alpha: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"alpha")) {
			objValue = Reflect.getProperty(this._target,"alpha");
		}
		var _range = { key : "alpha", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("alpha",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,scale: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"scaleX")) {
			objValue = Reflect.getProperty(this._target,"scaleX");
		}
		var _range = { key : "scaleX", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("scaleX",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"scaleY")) {
			objValue1 = Reflect.getProperty(this._target,"scaleY");
		}
		var _range1 = { key : "scaleY", from : this._isFrom ? value : objValue1, to : !this._isFrom ? value : objValue1};
		this._props.set("scaleY",_range1);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		var objValue2 = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"scale")) {
			objValue2 = Reflect.getProperty(this._target,"scale");
		}
		var _range2 = { key : "scale", from : this._isFrom ? value : objValue2, to : !this._isFrom ? value : objValue2};
		this._props.set("scale",_range2);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,yoyo: function() {
		this._isYoyo = true;
		return this;
	}
	,delay: function(duration) {
		this._delay = this.getDuration(duration);
		return this;
	}
	,prop: function(key,value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,key)) {
			objValue = Reflect.getProperty(this._target,key);
		}
		var _range = { key : key, from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		var _this = this._props;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,_range);
		} else {
			_this.h[key] = _range;
		}
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,onComplete: function(func,arr) {
		this._options.onComplete = func;
		this._options.onCompleteParams = arr;
		return this;
	}
	,onUpdate: function(func,arr) {
		this._options.onUpdate = func;
		this._options.onUpdateParams = arr;
		return this;
	}
	,ease: function(easing) {
		this._easing = easing;
		return this;
	}
	,stop: function() {
		this.destroy();
	}
	,init: function() {
		if(this._isTimeBased) {
			console.log("TODO: build timebased animation");
		} else if(lets_GoJs._requestId == null) {
			lets_GoJs._requestId = window.requestAnimationFrame($bind(this,this.onEnterFrameHandler));
		}
	}
	,onEnterFrameHandler: function(time) {
		if(lets_GoJs._tweens.length <= 0) {
			if(!this._isTimeBased) {
				window.cancelAnimationFrame(lets_GoJs._requestId);
				return;
			}
		} else {
			var _g1 = 0;
			var _g = lets_GoJs._tweens.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(lets_GoJs._tweens[i] != null) {
					lets_GoJs._tweens[i].update();
				}
			}
		}
		lets_GoJs._requestId = window.requestAnimationFrame($bind(this,this.onEnterFrameHandler));
	}
	,update: function() {
		if(this._delay > 0 && this._isTimeBased) {
			console.log("FIXME this doesn't work yet");
		}
		if(this._delay > 0) {
			this._delay--;
			return;
		}
		this._initTime--;
		var progressed = this._duration - this._initTime;
		if(this._isTimeBased) {
			progressed = this.getTimer() - this._initTime;
		}
		if(progressed >= this._duration) {
			this.updateProperties(this._duration);
			this.complete();
		} else {
			this.updateProperties(progressed);
		}
	}
	,updateProperties: function(time) {
		if(Reflect.isFunction(this._options.onUpdate)) {
			var func = this._options.onUpdate;
			var arr = this._options.onUpdateParams != null ? this._options.onUpdateParams : [];
			func.apply(func,arr);
		}
		if(this._props == null) {
			return;
		}
		var n = this._props.keys();
		while(n.hasNext()) {
			var n1 = n.next();
			var _this = this._props;
			var range = __map_reserved[n1] != null ? _this.getReserved(n1) : _this.h[n1];
			Reflect.setProperty(this._target,n1,this._easing.ease(time,range.from,range.to - range.from,this._duration));
		}
	}
	,complete: function() {
		if(this.DEBUG) {
			console.log("complete :: \"" + this._id + "\", _duration: " + this._duration + ", _seconds: " + this._seconds + ", _initTime: " + this._initTime + " / _tweens.length: " + lets_GoJs._tweens.length);
		}
		if(this._isYoyo) {
			var n = this._props.keys();
			while(n.hasNext()) {
				var n1 = n.next();
				var _this = this._props;
				var range = __map_reserved[n1] != null ? _this.getReserved(n1) : _this.h[n1];
				var _rangeReverse = { key : n1, from : range.to, to : range.from};
				var _this1 = this._props;
				if(__map_reserved[n1] != null) {
					_this1.setReserved(n1,_rangeReverse);
				} else {
					_this1.h[n1] = _rangeReverse;
				}
			}
			if(this._isTimeBased) {
				this._initTime = this.getTimer();
			} else {
				this._initTime = this._duration;
			}
			this._isYoyo = false;
			return;
		}
		var func = this._options.onComplete;
		var arr = this._options.onCompleteParams != null ? this._options.onCompleteParams : [];
		this.destroy();
		if(Reflect.isFunction(func)) {
			func.apply(func,arr);
		}
	}
	,getDuration: function(duration) {
		var d = 0;
		if(this._isTimeBased) {
			d = duration * 1000 | 0;
		} else {
			d = duration * this.FRAME_RATE | 0;
		}
		return d;
	}
	,getTimer: function() {
		return new Date().getTime() | 0;
	}
	,destroy: function() {
		if(Lambda.has(lets_GoJs._tweens,this)) {
			HxOverrides.remove(lets_GoJs._tweens,this);
		}
		if(this._options) {
			this._easing = lets_easing_Quad.get_easeOut();
			this._options = { };
			this._target = null;
			this._props = null;
			this._duration = 0;
			this._initTime = 0;
			this._delay = 0;
		}
	}
	,__class__: lets_GoJs
};
var lets_easing_IEasing = function() { };
lets_easing_IEasing.__name__ = ["lets","easing","IEasing"];
lets_easing_IEasing.prototype = {
	__class__: lets_easing_IEasing
};
var lets_easing_Quad = function() { };
lets_easing_Quad.__name__ = ["lets","easing","Quad"];
lets_easing_Quad.__properties__ = {get_easeOut:"get_easeOut",get_easeInOut:"get_easeInOut",get_easeIn:"get_easeIn"};
lets_easing_Quad.get_easeIn = function() {
	return new lets_easing_QuadEaseIn();
};
lets_easing_Quad.get_easeInOut = function() {
	return new lets_easing_QuadEaseInOut();
};
lets_easing_Quad.get_easeOut = function() {
	return new lets_easing_QuadEaseOut();
};
var lets_easing_QuadEaseIn = function() {
};
lets_easing_QuadEaseIn.__name__ = ["lets","easing","QuadEaseIn"];
lets_easing_QuadEaseIn.__interfaces__ = [lets_easing_IEasing];
lets_easing_QuadEaseIn.prototype = {
	calculate: function(k) {
		return k * k;
	}
	,ease: function(t,b,c,d) {
		return c * (t /= d) * t + b;
	}
	,__class__: lets_easing_QuadEaseIn
};
var lets_easing_QuadEaseInOut = function() {
};
lets_easing_QuadEaseInOut.__name__ = ["lets","easing","QuadEaseInOut"];
lets_easing_QuadEaseInOut.__interfaces__ = [lets_easing_IEasing];
lets_easing_QuadEaseInOut.prototype = {
	calculate: function(k) {
		if((k *= 2) < 1) {
			return 0.5 * k * k;
		}
		return -0.5 * ((k - 1) * (k - 3) - 1);
	}
	,ease: function(t,b,c,d) {
		if((t /= d / 2) < 1) {
			return c / 2 * t * t + b;
		}
		return -c / 2 * ((t - 1) * (t - 3) - 1) + b;
	}
	,__class__: lets_easing_QuadEaseInOut
};
var lets_easing_QuadEaseOut = function() {
};
lets_easing_QuadEaseOut.__name__ = ["lets","easing","QuadEaseOut"];
lets_easing_QuadEaseOut.__interfaces__ = [lets_easing_IEasing];
lets_easing_QuadEaseOut.prototype = {
	calculate: function(k) {
		return -k * (k - 2);
	}
	,ease: function(t,b,c,d) {
		return -c * (t /= d) * (t - 2) + b;
	}
	,__class__: lets_easing_QuadEaseOut
};
var lets_easing_Quart = function() { };
lets_easing_Quart.__name__ = ["lets","easing","Quart"];
lets_easing_Quart.__properties__ = {get_easeOut:"get_easeOut",get_easeInOut:"get_easeInOut",get_easeIn:"get_easeIn"};
lets_easing_Quart.get_easeIn = function() {
	return new lets_easing_QuartEaseIn();
};
lets_easing_Quart.get_easeInOut = function() {
	return new lets_easing_QuartEaseInOut();
};
lets_easing_Quart.get_easeOut = function() {
	return new lets_easing_QuartEaseOut();
};
var lets_easing_QuartEaseIn = function() {
};
lets_easing_QuartEaseIn.__name__ = ["lets","easing","QuartEaseIn"];
lets_easing_QuartEaseIn.__interfaces__ = [lets_easing_IEasing];
lets_easing_QuartEaseIn.prototype = {
	calculate: function(k) {
		return k * k * k * k;
	}
	,ease: function(t,b,c,d) {
		return c * (t /= d) * t * t * t + b;
	}
	,__class__: lets_easing_QuartEaseIn
};
var lets_easing_QuartEaseInOut = function() {
};
lets_easing_QuartEaseInOut.__name__ = ["lets","easing","QuartEaseInOut"];
lets_easing_QuartEaseInOut.__interfaces__ = [lets_easing_IEasing];
lets_easing_QuartEaseInOut.prototype = {
	calculate: function(k) {
		if((k *= 2) < 1) {
			return 0.5 * k * k * k * k;
		}
		return -0.5 * ((k -= 2) * k * k * k - 2);
	}
	,ease: function(t,b,c,d) {
		if((t /= d / 2) < 1) {
			return c / 2 * t * t * t * t + b;
		}
		return -c / 2 * ((t -= 2) * t * t * t - 2) + b;
	}
	,__class__: lets_easing_QuartEaseInOut
};
var lets_easing_QuartEaseOut = function() {
};
lets_easing_QuartEaseOut.__name__ = ["lets","easing","QuartEaseOut"];
lets_easing_QuartEaseOut.__interfaces__ = [lets_easing_IEasing];
lets_easing_QuartEaseOut.prototype = {
	calculate: function(k) {
		return -(--k * k * k * k - 1);
	}
	,ease: function(t,b,c,d) {
		t = t / d - 1;
		return -c * (t * t * t * t - 1) + b;
	}
	,__class__: lets_easing_QuartEaseOut
};
var lets_easing_Sine = function() { };
lets_easing_Sine.__name__ = ["lets","easing","Sine"];
lets_easing_Sine.__properties__ = {get_easeOut:"get_easeOut",get_easeInOut:"get_easeInOut",get_easeIn:"get_easeIn"};
lets_easing_Sine.get_easeIn = function() {
	return new lets_easing_SineEaseIn();
};
lets_easing_Sine.get_easeInOut = function() {
	return new lets_easing_SineEaseInOut();
};
lets_easing_Sine.get_easeOut = function() {
	return new lets_easing_SineEaseOut();
};
var lets_easing_SineEaseIn = function() {
};
lets_easing_SineEaseIn.__name__ = ["lets","easing","SineEaseIn"];
lets_easing_SineEaseIn.__interfaces__ = [lets_easing_IEasing];
lets_easing_SineEaseIn.prototype = {
	calculate: function(k) {
		return 1 - Math.cos(k * (Math.PI / 2));
	}
	,ease: function(t,b,c,d) {
		return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;
	}
	,__class__: lets_easing_SineEaseIn
};
var lets_easing_SineEaseInOut = function() {
};
lets_easing_SineEaseInOut.__name__ = ["lets","easing","SineEaseInOut"];
lets_easing_SineEaseInOut.__interfaces__ = [lets_easing_IEasing];
lets_easing_SineEaseInOut.prototype = {
	calculate: function(k) {
		return -(Math.cos(Math.PI * k) - 1) / 2;
	}
	,ease: function(t,b,c,d) {
		return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;
	}
	,__class__: lets_easing_SineEaseInOut
};
var lets_easing_SineEaseOut = function() {
};
lets_easing_SineEaseOut.__name__ = ["lets","easing","SineEaseOut"];
lets_easing_SineEaseOut.__interfaces__ = [lets_easing_IEasing];
lets_easing_SineEaseOut.prototype = {
	calculate: function(k) {
		return Math.sin(k * (Math.PI / 2));
	}
	,ease: function(t,b,c,d) {
		return c * Math.sin(t / d * (Math.PI / 2)) + b;
	}
	,__class__: lets_easing_SineEaseOut
};
var lib_AST = function() { };
lib_AST.__name__ = ["lib","AST"];
var lib_CanvasTools = function() { };
lib_CanvasTools.__name__ = ["lib","CanvasTools"];
lib_CanvasTools.square = function(ctx,x,y,width,height) {
	if(height == null) {
		height = width;
	}
	ctx.fillRect(x,y,width,height);
};
lib_CanvasTools.centreStrokeRect = function(ctx,x,y,width,height) {
	if(height == null) {
		height = width;
	}
	ctx.strokeRect(x - width / 2,y - height / 2,width,height);
};
lib_CanvasTools.centreFillRect = function(ctx,x,y,width,height) {
	if(height == null) {
		height = width;
	}
	ctx.fillRect(x - width / 2,y - height / 2,width,height);
};
lib_CanvasTools.roundRect = function(ctx,_x,_y,_width,_height,_radius,_fill,_stroke) {
	if(_stroke == null) {
		_stroke = false;
	}
	if(_fill == null) {
		_fill = true;
	}
	if(_radius == null) {
		_radius = 5;
	}
	_width = Math.abs(_width);
	_height = Math.abs(_height);
	_x -= _width / 2;
	_y -= _height / 2;
	var radius_tr;
	var radius_tl;
	var radius_br;
	var radius_bl;
	radius_tl = _radius;
	radius_tr = _radius;
	radius_br = _radius;
	radius_bl = _radius;
	ctx.beginPath();
	ctx.moveTo(_x + radius_tl,_y);
	ctx.lineTo(_x + _width - radius_tr,_y);
	ctx.quadraticCurveTo(_x + _width,_y,_x + _width,_y + radius_tr);
	ctx.lineTo(_x + _width,_y + _height - radius_br);
	ctx.quadraticCurveTo(_x + _width,_y + _height,_x + _width - radius_br,_y + _height);
	ctx.lineTo(_x + radius_bl,_y + _height);
	ctx.quadraticCurveTo(_x,_y + _height,_x,_y + _height - radius_bl);
	ctx.lineTo(_x,_y + radius_tl);
	ctx.quadraticCurveTo(_x,_y,_x + radius_tl,_y);
	ctx.closePath();
	if(_fill) {
		ctx.fill();
	}
	if(_stroke) {
		ctx.stroke();
	}
};
lib_CanvasTools.makeCircle = function(ctx,x,y,radius) {
	ctx.beginPath();
	ctx.arc(x,y,radius,0,Math.PI * 2,true);
};
lib_CanvasTools.circle = function(ctx,x,y,radius) {
	lib_CanvasTools.makeCircle(ctx,x,y,radius);
	ctx.fill();
	ctx.closePath();
};
lib_CanvasTools.fillCircle = function(ctx,x,y,radius) {
	lib_CanvasTools.makeCircle(ctx,x,y,radius);
	ctx.fill();
	ctx.closePath();
};
lib_CanvasTools.strokeCircle = function(ctx,x,y,radius) {
	lib_CanvasTools.makeCircle(ctx,x,y,radius);
	ctx.stroke();
	ctx.closePath();
};
lib_CanvasTools.strokePolygon = function(ctx,x,y,sides,size) {
	lib_CanvasTools.polygon(ctx,x,y,sides,size);
	ctx.stroke();
};
lib_CanvasTools.fillPolygon = function(ctx,x,y,sides,size) {
	lib_CanvasTools.polygon(ctx,x,y,sides,size);
	ctx.fill();
};
lib_CanvasTools.outlinedPolygon = function(ctx,x,y,_sides,_size,_fill,_stroke) {
	ctx.fillStyle = _fill;
	lib_CanvasTools.fillPolygon(ctx,x,y,_sides,_size);
	ctx.strokeStyle = _stroke;
	lib_CanvasTools.strokePolygon(ctx,x,y,_sides,_size);
};
lib_CanvasTools.polygon = function(ctx,x,y,sides,size) {
	ctx.beginPath();
	ctx.moveTo(x + size * Math.cos(0),y + size * Math.sin(0));
	var _g1 = 0;
	var _g = sides;
	while(_g1 < _g) {
		var i = _g1++;
		ctx.lineTo(x + size * Math.cos(i * 2 * Math.PI / sides),y + size * Math.sin(i * 2 * Math.PI / sides));
	}
};
lib_CanvasTools.eellipse = function(ctx,x,y,width,height) {
	ctx.beginPath();
	var i = 0;
	var counter = 0;
	while(i < Math.PI * 2) {
		console.log("" + counter + ". - " + i + " < " + Math.PI * 2);
		ctx.lineTo(x + Math.cos(i) * width / 2,y + Math.sin(i) * height / 2);
		i += Math.PI / 16;
		++counter;
	}
	ctx.closePath();
};
lib_CanvasTools.fillEllipse = function(ctx,x,y,width,height) {
	ctx.beginPath();
	ctx.ellipse(x,y,width,height,0,0,2 * Math.PI);
	ctx.fill();
};
lib_CanvasTools.strokeEllipse = function(ctx,x,y,width,height) {
	ctx.beginPath();
	ctx.ellipse(x,y,width,height,0,0,2 * Math.PI);
	ctx.stroke();
};
lib_CanvasTools.line = function(ctx,x1,y1,x2,y2) {
	ctx.beginPath();
	ctx.moveTo(x1,y1);
	ctx.lineTo(x2,y2);
	ctx.stroke();
	ctx.beginPath();
};
lib_CanvasTools.triangle = function(ctx,x1,y1,x2,y2,x3,y3) {
	ctx.beginPath();
	ctx.moveTo(x1,y1);
	ctx.lineTo(x2,y2);
	ctx.lineTo(x3,y3);
	ctx.lineTo(x1,y1);
	ctx.stroke();
	ctx.closePath();
};
lib_CanvasTools.strokeTriangle = function(ctx,x1,y1,x2,y2,x3,y3) {
	ctx.beginPath();
	ctx.moveTo(x1,y1);
	ctx.lineTo(x2,y2);
	ctx.lineTo(x3,y3);
	ctx.lineTo(x1,y1);
	ctx.stroke();
	ctx.closePath();
};
lib_CanvasTools.fillTriangle = function(ctx,x1,y1,x2,y2,x3,y3) {
	ctx.beginPath();
	ctx.moveTo(x1,y1);
	ctx.lineTo(x2,y2);
	ctx.lineTo(x3,y3);
	ctx.lineTo(x1,y1);
	ctx.fill();
	ctx.closePath();
};
lib_CanvasTools.eqDownFillTriangle = function(ctx,x,y,sz) {
	ctx.translate(x,y);
	ctx.rotate(lib_util_MathUtil.radians(180));
	lib_CanvasTools.fillTriangle(ctx,0,0 - sz,sz,sz / 2,0 - sz,sz / 2);
	ctx.rotate(lib_util_MathUtil.radians(-180));
	ctx.translate(-x,-y);
};
lib_CanvasTools.eqDownTriangle = function(ctx,x,y,sz) {
	ctx.translate(x,y);
	ctx.rotate(lib_util_MathUtil.radians(180));
	lib_CanvasTools.triangle(ctx,0,0 - sz,sz,sz / 2,0 - sz,sz / 2);
	ctx.rotate(lib_util_MathUtil.radians(-180));
	ctx.translate(-x,-y);
};
lib_CanvasTools.eqFillTriangle = function(ctx,x,y,sz) {
	lib_CanvasTools.fillTriangle(ctx,x,y - sz,x + sz,y + sz / 2,x - sz,y + sz / 2);
};
lib_CanvasTools.eqTriangle = function(ctx,x,y,sz) {
	lib_CanvasTools.triangle(ctx,x,y - sz,x + sz,y + sz / 2,x - sz,y + sz / 2);
};
lib_CanvasTools.strokeWeight = function(ctx,inPx) {
	ctx.lineWidth = inPx;
};
lib_CanvasTools.fillColour = function(ctx,r,g,b,a) {
	lib_CanvasTools.colour(ctx,r,g,b,a);
};
lib_CanvasTools.fillColourRGB = function(ctx,rgb,a) {
	lib_CanvasTools.colour(ctx,rgb.r,rgb.g,rgb.b,a);
};
lib_CanvasTools.colour = function(ctx,r,g,b,a) {
	var c = lib_util_ColorUtil.getColour(r,g,b,a);
	ctx.fillStyle = c;
};
lib_CanvasTools.colourObj = function(ctx,rgb,a) {
	var c = lib_util_ColorUtil.getColour(rgb.r,rgb.g,rgb.b,a);
	ctx.fillStyle = c;
};
lib_CanvasTools.strokeColourObj = function(ctx,rgb,a) {
	lib_CanvasTools.lineColour(ctx,rgb.r,rgb.g,rgb.b,a);
};
lib_CanvasTools.strokeColourRGB = function(ctx,rgb,a) {
	lib_CanvasTools.lineColour(ctx,rgb.r,rgb.g,rgb.b,a);
};
lib_CanvasTools.strokeColour = function(ctx,r,g,b,a) {
	lib_CanvasTools.lineColour(ctx,r,g,b,a);
};
lib_CanvasTools.lineColour = function(ctx,r,g,b,a) {
	ctx.strokeStyle = lib_util_ColorUtil.getColour(r,g,b,a);
};
lib_CanvasTools.colourName = function(ctx,name) {
	ctx.fillStyle = name;
};
lib_CanvasTools.background = function(ctx,r,g,b,a) {
	if(g == null) {
		ctx.fillStyle = lib_util_ColorUtil.rgb(r,r,r);
	} else if(b == null && a == null) {
		ctx.fillStyle = lib_util_ColorUtil.rgba(r,r,r,g);
	} else if(a == null) {
		ctx.fillStyle = lib_util_ColorUtil.rgb(r,g,b);
	} else {
		ctx.fillStyle = lib_util_ColorUtil.rgba(r,g,b,a);
	}
	ctx.fillRect(0,0,lib_Global.w,lib_Global.h);
};
lib_CanvasTools.backgroundObj = function(ctx,rgb) {
	lib_CanvasTools.background(ctx,rgb.r,rgb.g,rgb.b);
};
lib_CanvasTools.backgroundRGB = function(ctx,rgb) {
	lib_CanvasTools.background(ctx,rgb.r,rgb.g,rgb.b);
};
var lib_Global = function() { };
lib_Global.__name__ = ["lib","Global"];
var lib_html_CSSinjector = function(styles,elementID) {
	if(elementID == null) {
		elementID = "inject-" + new Date().getTime();
	}
	if(styles != null) {
		this.setCSS(styles,elementID);
	}
};
lib_html_CSSinjector.__name__ = ["lib","html","CSSinjector"];
lib_html_CSSinjector.prototype = {
	setCSS: function(styles,elementID) {
		styles = this.minify(styles);
		var css = window.document.createElement("style");
		css.id = elementID;
		if(css.styleSheet) {
			css.styleSheet.cssText = styles;
		} else {
			css.appendChild(window.document.createTextNode(styles));
		}
		window.document.getElementsByTagName("head")[0].appendChild(css);
	}
	,minify: function(css) {
		return css;
	}
	,__class__: lib_html_CSSinjector
};
var lib_html_Nav = function() {
	this.bottomOut = -50;
	this.bottomIn = 0;
	lib_html_CSSinjector.call(this);
};
lib_html_Nav.__name__ = ["lib","html","Nav"];
lib_html_Nav.__super__ = lib_html_CSSinjector;
lib_html_Nav.prototype = $extend(lib_html_CSSinjector.prototype,{
	dir: function(dir) {
		var x = window.document.getElementById("nav-" + dir);
		var svg = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 80 80\"><g fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"10\" data-name=\"Layer 1\"><path d=\"M10.5 40h59M69.5 40l-18-18M51.5 58l18-18\"/></g></svg>";
		if(dir == "left") {
			svg = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 80 80\"><g fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"10\" data-name=\"Layer 1\"><path d=\"M69.5 40h-59M10.5 40l18-18M28.5 58l-18-18\"/></g></svg>";
		}
		if(x == null) {
			var div = window.document.createElement("div");
			div.id = "nav-" + dir;
			div.className = "nav nav-" + dir;
			div.innerHTML = svg;
			window.document.body.appendChild(div);
			x = div;
		}
		return x;
	}
	,css: function() {
		return "\n.nav {\n\tdisplay: none;\n\twidth: 80px;\n\theight: 80px;\n    background-color: #333;\n    color: #fff;\n    text-align: center;\n    padding: 10px;\n    position: fixed;\n    z-index: 1;\n    top: 50%;\n    font-size: 13px;\n    opacity: 0.5;\n\tmargin-top: -40px;\n}\n.nav-left{\n    left: 0%;\n    border-radius: 0 5px 5px 0;\n}\n.nav-right{\n    right: 0%;\n    border-radius: 5px 0 0 5px;\n}\n";
	}
	,__class__: lib_html_Nav
});
var lib_html_Snackbar = function() {
	this.bottomOut = -50;
	this.bottomIn = 0;
	lib_html_CSSinjector.call(this);
};
lib_html_Snackbar.__name__ = ["lib","html","Snackbar"];
lib_html_Snackbar.__super__ = lib_html_CSSinjector;
lib_html_Snackbar.prototype = $extend(lib_html_CSSinjector.prototype,{
	show: function(msg) {
		var x = window.document.getElementById("snackbar");
		if(x == null) {
			var div = window.document.createElement("div");
			div.id = "snackbar";
			window.document.body.appendChild(div);
			x = div;
		}
		x.innerText = msg;
		x.className = "show";
		window.clearTimeout(this.timeout);
		this.timeout = window.setTimeout(function() {
			x.className = StringTools.replace(x.className,"show","");
		},3000);
	}
	,css: function() {
		return "\n/* https://www.w3schools.com/howto/howto_js_snackbar.asp */\n/* The snackbar - position it at the bottom and in the middle of the screen */\n#snackbar {\n    visibility: hidden; /* Hidden by default. Visible on click */\n    min-width: 250px; /* Set a default minimum width */\n    margin-left: -125px; /* Divide value of min-width by 2 */\n    background-color: #333; /* Black background color */\n    color: #fff; /* White text color */\n    text-align: center; /* Centered text */\n    border-radius: 5px 5px 0 0; /* Rounded borders */\n    padding: 10px; /* Padding */\n    position: fixed; /* Sit on top of the screen */\n    z-index: 1; /* Add a z-index if needed */\n    left: 50%; /* Center the snackbar */\n    bottom: " + this.bottomIn + "px; /* " + this.bottomIn + "px from the bottom */\n    font-size: 13px;\n\topacity: 0.5;\n}\n\n/* Show the snackbar when clicking on a button (class added with JavaScript) */\n#snackbar.show {\n    visibility: visible; /* Show the snackbar */\n\n\t/* Add animation: Take 0.5 seconds to fade in and out the snackbar.\n\tHowever, delay the fade out process for 2.5 seconds */\n    -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;\n    animation: fadein 0.5s, fadeout 0.5s 2.5s;\n}\n\n/* Animations to fade the snackbar in and out */\n@-webkit-keyframes fadein {\n    from {bottom: " + this.bottomOut + "px; opacity: 0;}\n    to {bottom: " + this.bottomIn + "px; opacity: 1;}\n}\n\n@keyframes fadein {\n    from {bottom: " + this.bottomOut + "px; opacity: 0;}\n    to {bottom: " + this.bottomIn + "px; opacity: 1;}\n}\n\n@-webkit-keyframes fadeout {\n    from {bottom: " + this.bottomIn + "px; opacity: 1;}\n    to {bottom: " + this.bottomOut + "px; opacity: 0;}\n}\n\n@keyframes fadeout {\n    from {bottom: " + this.bottomIn + "px; opacity: 1;}\n    to {bottom: " + this.bottomOut + "px; opacity: 0;}\n}\n\t\t";
	}
	,__class__: lib_html_Snackbar
});
var lib_model_constants_App = function() { };
lib_model_constants_App.__name__ = ["lib","model","constants","App"];
var lib_util_AnimateUtil = function() {
};
lib_util_AnimateUtil.__name__ = ["lib","util","AnimateUtil"];
lib_util_AnimateUtil.tween = function(pos,target,speed) {
	if(speed == null) {
		speed = 20;
	}
	pos += (target - pos) / speed;
	return pos;
};
lib_util_AnimateUtil.bounce = function(num,min,max,sz) {
	if(sz == null) {
		sz = 0;
	}
	if(num >= max - sz / 2 || num - sz / 2 <= min) {
		return true;
	} else {
		return false;
	}
};
lib_util_AnimateUtil.prototype = {
	__class__: lib_util_AnimateUtil
};
var lib_util_ColorUtil = function() {
};
lib_util_ColorUtil.__name__ = ["lib","util","ColorUtil"];
lib_util_ColorUtil.getColour = function(r,g,b,a) {
	var c;
	if(g == null) {
		c = lib_util_ColorUtil.rgb(r,r,r);
	} else if(b == null && a == null) {
		c = lib_util_ColorUtil.rgba(r,r,r,g);
	} else if(a == null) {
		c = lib_util_ColorUtil.rgb(r,g,b);
	} else {
		c = lib_util_ColorUtil.rgba(r,g,b,a);
	}
	return c;
};
lib_util_ColorUtil.getColourObj = function(rgb,a) {
	return lib_util_ColorUtil.getColour(rgb.r,rgb.g,rgb.b,a);
};
lib_util_ColorUtil.rgb = function(r,g,b) {
	if(g == null) {
		g = r;
	}
	if(b == null) {
		b = r;
	}
	return "rgb(" + lib_util_MathUtil.clamp(Math.round(r),0,255) + ", " + lib_util_MathUtil.clamp(Math.round(g),0,255) + ", " + lib_util_MathUtil.clamp(Math.round(b),0,255) + ")";
};
lib_util_ColorUtil.rgba = function(r,g,b,a) {
	if(g == null) {
		return "rgb(" + lib_util_MathUtil.clamp(Math.round(r),0,255) + ", " + lib_util_MathUtil.clamp(Math.round(r),0,255) + ", " + lib_util_MathUtil.clamp(Math.round(r),0,255) + ")";
	} else if(b == null) {
		return "rgba(" + lib_util_MathUtil.clamp(Math.round(r),0,255) + ", " + lib_util_MathUtil.clamp(Math.round(r),0,255) + ", " + lib_util_MathUtil.clamp(Math.round(r),0,255) + ", " + lib_util_MathUtil.clamp(g,0,1) + ")";
	} else if(a == null) {
		return "rgba(" + lib_util_MathUtil.clamp(Math.round(r),0,255) + ", " + lib_util_MathUtil.clamp(Math.round(g),0,255) + ", " + lib_util_MathUtil.clamp(Math.round(b),0,255) + ", 1)";
	} else {
		return "rgba(" + lib_util_MathUtil.clamp(Math.round(r),0,255) + ", " + lib_util_MathUtil.clamp(Math.round(g),0,255) + ", " + lib_util_MathUtil.clamp(Math.round(b),0,255) + ", " + lib_util_MathUtil.clamp(a,0,1) + ")";
	}
};
lib_util_ColorUtil.rgb2hex = function(r,g,b,a) {
	if(a == null) {
		a = 255;
	}
	return a << 24 | r << 16 | g << 8 | b;
};
lib_util_ColorUtil.randomColour = function() {
	var r = lib_util_MathUtil.randomInt(255);
	var g = lib_util_MathUtil.randomInt(255);
	var b = lib_util_MathUtil.randomInt(255);
	return lib_util_ColorUtil.rgb(r,g,b);
};
lib_util_ColorUtil.randomColourObject = function() {
	var r = lib_util_MathUtil.randomInt(255);
	var g = lib_util_MathUtil.randomInt(255);
	var b = lib_util_MathUtil.randomInt(255);
	return { r : r, g : g, b : b};
};
lib_util_ColorUtil.toRGB = function($int) {
	return { r : Math.round($int >> 16 & 255), g : Math.round($int >> 8 & 255), b : Math.round($int & 255)};
};
lib_util_ColorUtil.ttoRGB = function($int) {
	return { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
};
lib_util_ColorUtil.hex2RGB = function(hex) {
	var $int = Std.parseInt(StringTools.replace(hex,"#","0x"));
	return { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
};
lib_util_ColorUtil.prototype = {
	__class__: lib_util_ColorUtil
};
var lib_util_ExportUtil = function() {
};
lib_util_ExportUtil.__name__ = ["lib","util","ExportUtil"];
lib_util_ExportUtil.downloadImage = function(ctx,isJpg,fileName) {
	if(isJpg == null) {
		isJpg = false;
	}
	if(fileName == null) {
		var hash = window.location.hash;
		hash = StringTools.replace(hash,"#","").toLowerCase();
		fileName = "" + hash + "-" + new Date().getTime();
	}
	var link = window.document.createElement("a");
	link.href = ctx.canvas.toDataURL(isJpg ? "image/jpeg" : "",1);
	link.download = fileName;
	link.click();
};
lib_util_ExportUtil.onBase64Handler = function(ctx,isJpg) {
	if(isJpg == null) {
		isJpg = false;
	}
	var base64 = ctx.canvas.toDataURL(isJpg ? "image/jpeg" : "",1);
	lib_util_ExportUtil.clipboard(base64);
};
lib_util_ExportUtil.downloadTextFile = function(text,fileName) {
	if(fileName == null) {
		fileName = "CC-txt-" + new Date().getTime() + ".txt";
	}
	var element = window.document.createElement("a");
	element.setAttribute("href","data:text/plain;charset=utf-8," + encodeURIComponent(text));
	element.setAttribute("download",fileName);
	element.style.display = "none";
	window.document.body.appendChild(element);
	element.click();
	window.document.body.removeChild(element);
};
lib_util_ExportUtil.clipboard = function(text) {
	var win = "Ctrl+C";
	var mac = "Cmd+C";
	var copyCombo = win;
	var userAgent = window.navigator.userAgent;
	var ereg = new EReg("iPhone|iPod|iPad|Android|BlackBerry","i");
	var ismac = ereg.match(userAgent);
	if(ismac) {
		copyCombo = mac;
	}
	window.prompt("Copy to clipboard: " + copyCombo + ", Enter",text);
};
lib_util_ExportUtil.prototype = {
	__class__: lib_util_ExportUtil
};
var lib_util_FontUtil = function() {
};
lib_util_FontUtil.__name__ = ["lib","util","FontUtil"];
lib_util_FontUtil.fillText = function(ctx,text,x,y,css,size) {
	if(size == null) {
		size = 20;
	}
};
lib_util_FontUtil.centerFillText = function(ctx,text,x,y,css,size) {
	if(size == null) {
		size = 20;
	}
	ctx.font = "" + size + "px " + StringTools.replace(css,";","");
	ctx.textAlign = "center";
	ctx.fillText(text,x,y);
};
lib_util_FontUtil.embedGoogleFont = function(family,callback,callbackArray) {
	var _id = "embededGoogleFonts";
	var _url = "https://fonts.googleapis.com/css?family=";
	var link = window.document.getElementById(_id);
	if(link != null) {
		var temp = StringTools.replace(link.href,_url,"");
		family = temp + "|" + family;
	} else {
		link = window.document.createElement("link");
	}
	if(callbackArray == null) {
		callbackArray = [family];
	}
	link.href = "" + _url + family;
	link.rel = "stylesheet";
	link.id = _id;
	link.onload = function() {
		if(callback != null) {
			callback.apply(callback,callbackArray);
		}
	};
	window.document.head.appendChild(link);
};
lib_util_FontUtil.prototype = {
	__class__: lib_util_FontUtil
};
var lib_util_GridUtil = function() {
	this._isDebug = false;
	this._isPosition = false;
	this._isDimension = false;
	this._isNumbered = false;
	this._isCellSize = false;
	this.numVer = null;
	this.numHor = null;
	this.cellHeight = null;
	this.cellWidth = null;
	this.isCentered = false;
	this.gridY = 0;
	this.gridX = 0;
	this.height = null;
	this.width = null;
	this.y = null;
	this.x = null;
	this.total = null;
	this.array = [];
};
lib_util_GridUtil.__name__ = ["lib","util","GridUtil"];
lib_util_GridUtil.create = function(x,y,width,height,numHor,numVer) {
	if(numVer == null) {
		numVer = 1;
	}
	if(numHor == null) {
		numHor = 1;
	}
	var gridW = width / (numHor - 1);
	var gridH = height / (numVer - 1);
	var total = numHor * numVer;
	var xpos = 0;
	var ypos = 0;
	var arr = [];
	var _g1 = 0;
	var _g = total;
	while(_g1 < _g) {
		var i = _g1++;
		var point = { x : x + xpos * gridW, y : y + ypos * gridH};
		arr.push(point);
		++xpos;
		if(xpos >= numHor) {
			xpos = 0;
			++ypos;
		}
	}
	return arr;
};
lib_util_GridUtil.calc = function(x,y,width,height,gridX,gridY,numHor,numVer) {
	if(numVer == null) {
		numVer = 1;
	}
	if(numHor == null) {
		numHor = 1;
	}
	if(gridY == null) {
		gridY = 1;
	}
	if(gridX == null) {
		gridX = 1;
	}
	if(height == null) {
		height = -1;
	}
	if(width == null) {
		width = -1;
	}
	if(y == null) {
		y = -1;
	}
	if(x == null) {
		x = -1;
	}
	var grid = new lib_util_GridUtil();
	grid.array = [];
	grid.x = 0;
	grid.y = 0;
	grid.width = 0;
	grid.height = 0;
	grid.gridX = 0;
	grid.gridY = 0;
	return grid;
};
lib_util_GridUtil.prototype = {
	setPosition: function(x,y) {
		if(this._isDebug) {
			window.console.log("GridUtil :: setPostion");
		}
		this.x = x;
		this.y = y;
		this._isPosition = true;
		this.calculate();
	}
	,setIsCenterPoint: function(isCentered) {
		if(isCentered == null) {
			isCentered = true;
		}
		if(this._isDebug) {
			window.console.log("GridUtil :: setCenterPoint");
		}
		this.isCentered = isCentered;
		this.calculate();
	}
	,setDimension: function(width,height) {
		if(this._isDebug) {
			window.console.log("GridUtil :: setDimension");
		}
		this.width = width;
		this.height = height;
		this._isDimension = true;
		this.calculate();
	}
	,setNumbered: function(numHor,numVer) {
		if(this._isDebug) {
			window.console.log("GridUtil :: setNumbers");
		}
		this.numHor = numHor;
		this.numVer = numVer;
		this._isNumbered = true;
		this.calculate();
	}
	,setCellSize: function(cellWidth,cellHeight) {
		if(cellHeight == null) {
			cellHeight = cellWidth;
		}
		if(this._isDebug) {
			window.console.log("GridUtil :: setCellSize");
		}
		this.cellWidth = cellWidth;
		this.cellHeight = cellHeight;
		this._isCellSize = true;
		this.calculate();
	}
	,calculate: function() {
		if(this._isDebug) {
			window.console.log("GridUtil.calculate");
		}
		if(this._isCellSize && !this._isDimension) {
			if(this._isDebug) {
				window.console.info("GridUtil solution #1: cellSize is set");
			}
			this.numHor = Math.floor(lib_Global.w / this.cellWidth);
			this.numVer = Math.floor(lib_Global.h / this.cellHeight);
			this.width = this.numHor * this.cellWidth;
			this.height = this.numVer * this.cellHeight;
			this.x = (lib_Global.w - this.width) / 2;
			this.y = (lib_Global.h - this.height) / 2;
		}
		if(this._isNumbered && !this._isDimension) {
			if(this._isDebug) {
				window.console.info("GridUtil solution #2: numbered cells set");
			}
			var _w = this.width != null ? this.width : lib_Global.w;
			var _h = this.height != null ? this.height : lib_Global.h;
			this.cellWidth = _w / this.numHor;
			this.cellHeight = _h / this.numVer;
			this.width = this.numHor * this.cellWidth;
			this.height = this.numVer * this.cellHeight;
			this.x = (lib_Global.w - this.width) / 2;
			this.y = (lib_Global.h - this.height) / 2;
		}
		if(this._isDimension && !this._isNumbered && !this._isCellSize) {
			if(this._isDebug) {
				window.console.info("GridUtil solution #3: width/height set (" + this.width + ", " + this.height + ")");
			}
			var _cellWidth = this.cellWidth != null ? this.cellWidth : 50;
			var _cellHeight = this.cellHeight != null ? this.cellHeight : 50;
			this.numHor = Math.floor(this.width / _cellWidth);
			this.numVer = Math.floor(this.height / _cellHeight);
			this.width = this.numHor * _cellWidth;
			this.height = this.numVer * _cellHeight;
			this.cellWidth = this.width / this.numHor;
			this.cellHeight = this.height / this.numVer;
			this.x = (lib_Global.w - this.width) / 2;
			this.y = (lib_Global.h - this.height) / 2;
		}
		if(this._isDimension && this._isNumbered && !this._isCellSize) {
			if(this._isDebug) {
				window.console.info("GridUtil solution #3a: width/height set (" + this.width + ", " + this.height + ") AND number row/cols (" + this.numHor + ", " + this.numVer + ")");
			}
			this.cellWidth = Math.floor(this.width / this.numHor);
			this.cellHeight = Math.floor(this.height / this.numVer);
			this.width = this.numHor * this.cellWidth;
			this.height = this.numVer * this.cellHeight;
			this.x = (lib_Global.w - this.width) / 2;
			this.y = (lib_Global.h - this.height) / 2;
		}
		if(this._isCellSize && this._isDimension) {
			if(this._isDebug) {
				window.console.info("GridUtil solution #4: cellSize is set and width/height");
			}
			this.numHor = Math.floor(this.width / this.cellWidth);
			this.numVer = Math.floor(this.height / this.cellHeight);
			this.width = this.numHor * this.cellWidth;
			this.height = this.numVer * this.cellHeight;
			if(!this._isPosition) {
				this.x = (lib_Global.w - this.width) / 2;
				this.y = (lib_Global.h - this.height) / 2;
			}
		}
		var cx = 0.0;
		var cy = 0.0;
		if(this.isCentered) {
			cx = this.cellWidth / 2;
			cy = this.cellHeight / 2;
		}
		this.array = [];
		var total = Math.round(this.numHor * this.numVer);
		var xpos = 0;
		var ypos = 0;
		var _g1 = 0;
		var _g = total;
		while(_g1 < _g) {
			var i = _g1++;
			var point = { x : Math.round(this.x + xpos * this.cellWidth + cx), y : Math.round(this.y + ypos * this.cellHeight + cy)};
			this.array.push(point);
			++xpos;
			if(xpos >= this.numHor) {
				xpos = 0;
				++ypos;
			}
		}
		total = this.array.length;
		if(this._isDebug) {
			window.console.warn("width: " + this.width + ", height: " + this.height + ", cellWidth: " + this.cellWidth + ", cellHeight: " + this.cellHeight + ", numHor: " + this.numHor + ", numVer: " + this.numVer + ", array: " + this.array.length);
		}
	}
	,__class__: lib_util_GridUtil
};
var lib_util_HelperUtil = function() {
};
lib_util_HelperUtil.__name__ = ["lib","util","HelperUtil"];
lib_util_HelperUtil.stats = function() {
	var script = document.createElement('script');script.onload = function() {var stats = new Stats();document.body.appendChild(stats.dom);requestAnimationFrame(function loop() {stats.update();requestAnimationFrame(loop)});};script.src = '//mrdoob.github.io/stats.js/build/stats.min.js';document.head.appendChild(script);
};
lib_util_HelperUtil.prototype = {
	__class__: lib_util_HelperUtil
};
var lib_util_MathUtil = function() { };
lib_util_MathUtil.__name__ = ["lib","util","MathUtil"];
lib_util_MathUtil.radians = function(deg) {
	return deg * Math.PI / 180;
};
lib_util_MathUtil.degrees = function(rad) {
	return rad * 180 / Math.PI;
};
lib_util_MathUtil.degreesToPoint = function(deg,diameter) {
	var rad = Math.PI * deg / 180;
	var r = diameter / 2;
	return { x : r * Math.cos(rad), y : r * Math.sin(rad)};
};
lib_util_MathUtil.distributeAngles = function(me,total) {
	return me / total * 360;
};
lib_util_MathUtil.distance = function(x1,y1,x2,y2) {
	return lib_util_MathUtil.dist(x1,y1,x2,y2);
};
lib_util_MathUtil.dist = function(x1,y1,x2,y2) {
	x2 -= x1;
	y2 -= y1;
	return Math.sqrt(x2 * x2 + y2 * y2);
};
lib_util_MathUtil.circumferenceCircle = function(radius) {
	return Math.PI * radius * 2;
};
lib_util_MathUtil.areaCircle = function(radius) {
	return Math.PI * Math.sqrt(radius);
};
lib_util_MathUtil.randomInteger = function(min,max) {
	if(max == null) {
		max = min;
		min = 0;
	}
	return Math.floor(Math.random() * (max + 1 - min)) + min;
};
lib_util_MathUtil.randomInt = function(min,max) {
	return lib_util_MathUtil.randomInteger(min,max);
};
lib_util_MathUtil.random = function(min,max) {
	if(min == null) {
		min = 0;
		max = 1;
	} else if(max == null) {
		max = min;
		min = 0;
	}
	return Math.random() * (max - min) + min;
};
lib_util_MathUtil.randomP = function(min,max) {
	if(min == null) {
		min = 0.1;
		max = 1;
	} else if(max == null) {
		max = min;
		min = 0.1;
	}
	return Math.random() * (max - min) + min;
};
lib_util_MathUtil.chance = function(value) {
	return lib_util_MathUtil.random(value) > value - 1;
};
lib_util_MathUtil.posNeg = function() {
	return lib_util_MathUtil.randomInt(0,1) * 2 - 1;
};
lib_util_MathUtil.angle = function(cx,cy,ex,ey) {
	var dy = ey - cy;
	var dx = ex - cx;
	var theta = Math.atan2(dy,dx);
	theta *= 180 / Math.PI;
	if(theta < 0) {
		theta = 360 + theta;
	}
	if(theta == 360) {
		theta = 0;
	}
	return theta;
};
lib_util_MathUtil.map = function(value,min1,max1,min2,max2,clampResult) {
	var returnvalue = (value - min1) / (max1 - min1) * (max2 - min2) + min2;
	if(clampResult) {
		return lib_util_MathUtil.clamp(returnvalue,min2,max2);
	} else {
		return returnvalue;
	}
};
lib_util_MathUtil.clamp = function(value,min,max) {
	return Math.min(Math.max(value,Math.min(min,max)),Math.max(min,max));
};
var lib_util_ShapeUtil = function() { };
lib_util_ShapeUtil.__name__ = ["lib","util","ShapeUtil"];
lib_util_ShapeUtil.cross = function(ctx,x,y,width,height) {
	if(height == null) {
		height = 60;
	}
	if(width == null) {
		width = 20;
	}
	ctx.fillRect(x - width / 2,y - height / 2,width,height);
	ctx.fillRect(x - height / 2,y - width / 2,height,width);
};
lib_util_ShapeUtil.registerPoint = function(ctx,x,y) {
	var _w = 10;
	var _h = 10;
	var _d = 2;
	lib_CanvasTools.colour(ctx,lib_util_ColorUtil.PINK.r,lib_util_ColorUtil.PINK.g,lib_util_ColorUtil.PINK.b,1);
	ctx.fillRect(x - _w / 2,y - _d / 2,_w,_d);
	ctx.fillRect(x - _d / 2,y - _h / 2,_d,_h);
};
lib_util_ShapeUtil.xcross = function(ctx,x,y,size,weight) {
	if(weight == null) {
		weight = 100;
	}
	if(size == null) {
		size = 200;
	}
	lib_CanvasTools.strokeWeight(ctx,weight);
	lib_CanvasTools.line(ctx,x - size / 2,y - size / 2,x - size / 2 + size,y - size / 2 + size);
	lib_CanvasTools.line(ctx,x + size - size / 2,y - size / 2,x - size / 2,y + size - size / 2);
};
lib_util_ShapeUtil.gridRegister = function(ctx,arr) {
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		var point = arr[i];
		lib_util_ShapeUtil.registerPoint(ctx,point.x,point.y);
	}
};
lib_util_ShapeUtil.gridField = function(ctx,grid) {
	var _g1 = 0;
	var _g = grid.array.length;
	while(_g1 < _g) {
		var i = _g1++;
		var point = grid.array[i];
		lib_util_ShapeUtil.registerPoint(ctx,point.x,point.y);
	}
	ctx.lineWidth = 1;
	lib_CanvasTools.lineColour(ctx,lib_util_ColorUtil.GRAY.r,lib_util_ColorUtil.GRAY.g,lib_util_ColorUtil.GRAY.b,0.5);
	ctx.strokeRect(grid.x,grid.y,grid.width,grid.height);
};
lib_util_ShapeUtil.gridDots = function(ctx,grid) {
	var _g1 = 0;
	var _g = grid.array.length;
	while(_g1 < _g) {
		var i = _g1++;
		var point = grid.array[i];
		lib_CanvasTools.colour(ctx,lib_util_ColorUtil.PINK.r,lib_util_ColorUtil.PINK.g,lib_util_ColorUtil.PINK.b,1);
		lib_CanvasTools.circle(ctx,point.x,point.y,1);
	}
	ctx.lineWidth = 1;
	lib_CanvasTools.lineColour(ctx,lib_util_ColorUtil.GRAY.r,lib_util_ColorUtil.GRAY.g,lib_util_ColorUtil.GRAY.b,0.5);
	ctx.strokeRect(grid.x,grid.y,grid.width,grid.height);
};
var mloader_Loader = function() { };
mloader_Loader.__name__ = ["mloader","Loader"];
mloader_Loader.prototype = {
	__class__: mloader_Loader
	,__properties__: {set_url:"set_url"}
};
var mloader_LoaderBase = function(url) {
	this.loaded = new msignal_EventSignal(this);
	this.set_url(this.sanitizeUrl(url));
	this.progress = 0;
	this.loading = false;
};
mloader_LoaderBase.__name__ = ["mloader","LoaderBase"];
mloader_LoaderBase.__interfaces__ = [mloader_Loader];
mloader_LoaderBase.prototype = {
	set_url: function(value) {
		if(value == this.url) {
			return this.url;
		}
		if(this.loading) {
			this.cancel();
		}
		return this.url = this.sanitizeUrl(value);
	}
	,load: function() {
		if(this.loading) {
			return;
		}
		if(this.url == null) {
			throw new js__$Boot_HaxeError("No url defined for Loader");
		}
		this.loading = true;
		this.loaded.dispatchType(mloader_LoaderEventType.Start);
		this.loaderLoad();
	}
	,cancel: function() {
		if(!this.loading) {
			return;
		}
		this.loading = false;
		this.loaderCancel();
		this.progress = 0;
		this.content = null;
		this.loaded.dispatchType(mloader_LoaderEventType.Cancel);
	}
	,loaderLoad: function() {
		throw new js__$Boot_HaxeError("missing implementation");
	}
	,loaderCancel: function() {
		throw new js__$Boot_HaxeError("missing implementation");
	}
	,loaderComplete: function() {
		if(!this.loading) {
			return;
		}
		this.progress = 1;
		this.loading = false;
		this.loaded.dispatchType(mloader_LoaderEventType.Complete);
	}
	,loaderFail: function(error) {
		if(!this.loading) {
			return;
		}
		this.loading = false;
		this.loaded.dispatchType(mloader_LoaderEventType.Fail(error));
	}
	,sanitizeUrl: function(url) {
		var sanitized = url;
		return sanitized;
	}
	,__class__: mloader_LoaderBase
	,__properties__: {set_url:"set_url"}
};
var mloader_HttpLoader = function(url,http) {
	mloader_LoaderBase.call(this,url);
	this.headers = new haxe_ds_StringMap();
	if(http == null) {
		http = new haxe_Http("");
	}
	this.http = http;
	http.onData = $bind(this,this.httpData);
	http.onError = $bind(this,this.httpError);
	http.onStatus = $bind(this,this.httpStatus);
};
mloader_HttpLoader.__name__ = ["mloader","HttpLoader"];
mloader_HttpLoader.__super__ = mloader_LoaderBase;
mloader_HttpLoader.prototype = $extend(mloader_LoaderBase.prototype,{
	send: function(data) {
		if(this.loading) {
			this.cancel();
		}
		if(this.url == null) {
			throw new js__$Boot_HaxeError("No url defined for Loader");
		}
		this.loading = true;
		this.loaded.dispatchType(mloader_LoaderEventType.Start);
		var contentType = "application/octet-stream";
		if(js_Boot.__instanceof(data,Xml)) {
			data = Std.string(data);
			contentType = "application/xml";
		} else if(typeof(data) != "string") {
			data = JSON.stringify(data);
			contentType = "application/json";
		} else if(typeof(data) == "string" && this.validateJSONdata(data)) {
			contentType = "application/json";
		}
		var _this = this.headers;
		if(!(__map_reserved["Content-Type"] != null ? _this.existsReserved("Content-Type") : _this.h.hasOwnProperty("Content-Type"))) {
			var _this1 = this.headers;
			if(__map_reserved["Content-Type"] != null) {
				_this1.setReserved("Content-Type",contentType);
			} else {
				_this1.h["Content-Type"] = contentType;
			}
		}
		this.httpConfigure();
		this.addHeaders();
		this.http.url = this.url;
		this.http.setPostData(data);
		try {
			this.http.request(true);
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			this.loaderFail(mloader_LoaderErrorType.Security(Std.string(e)));
		}
	}
	,loaderLoad: function() {
		this.httpConfigure();
		this.addHeaders();
		this.http.url = this.url;
		try {
			this.http.request(false);
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			this.loaderFail(mloader_LoaderErrorType.Security(Std.string(e)));
		}
	}
	,loaderCancel: function() {
		this.http.cancel();
	}
	,httpConfigure: function() {
	}
	,addHeaders: function() {
		var name = this.headers.keys();
		while(name.hasNext()) {
			var name1 = name.next();
			var _this = this.headers;
			this.http.setHeader(name1,__map_reserved[name1] != null ? _this.getReserved(name1) : _this.h[name1]);
		}
	}
	,httpData: function(data) {
		this.content = data;
		this.loaderComplete();
	}
	,httpStatus: function(status) {
		this.statusCode = status;
	}
	,httpError: function(error) {
		this.content = this.http.responseData;
		this.loaderFail(mloader_LoaderErrorType.IO(error));
	}
	,httpSecurityError: function(error) {
		this.loaderFail(mloader_LoaderErrorType.Security(error));
	}
	,validateJSONdata: function(data) {
		var isValid = true;
		try {
			JSON.parse(data);
		} catch( error ) {
			isValid = false;
		}
		return isValid;
	}
	,__class__: mloader_HttpLoader
});
var mloader_JsonLoader = function(url,http) {
	mloader_HttpLoader.call(this,url,http);
};
mloader_JsonLoader.__name__ = ["mloader","JsonLoader"];
mloader_JsonLoader.__super__ = mloader_HttpLoader;
mloader_JsonLoader.prototype = $extend(mloader_HttpLoader.prototype,{
	httpData: function(data) {
		var raw = null;
		try {
			raw = JSON.parse(data);
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			this.loaderFail(mloader_LoaderErrorType.Format(Std.string(e)));
			return;
		}
		if(this.parseData == null) {
			this.content = raw;
			this.loaderComplete();
			return;
		}
		try {
			this.content = this.parseData(raw);
			this.loaderComplete();
		} catch( $e0 ) {
			if ($e0 instanceof js__$Boot_HaxeError) $e0 = $e0.val;
			if( js_Boot.__instanceof($e0,mloader_LoaderErrorType) ) {
				var loaderError = $e0;
				this.loaderFail(loaderError);
				return;
			} else {
			var e1 = $e0;
			this.loaderFail(mloader_LoaderErrorType.Data(Std.string(e1),data));
			return;
			}
		}
	}
	,__class__: mloader_JsonLoader
});
var mloader_LoaderEventType = { __ename__ : true, __constructs__ : ["Start","Cancel","Progress","Complete","Fail"] };
mloader_LoaderEventType.Start = ["Start",0];
mloader_LoaderEventType.Start.toString = $estr;
mloader_LoaderEventType.Start.__enum__ = mloader_LoaderEventType;
mloader_LoaderEventType.Cancel = ["Cancel",1];
mloader_LoaderEventType.Cancel.toString = $estr;
mloader_LoaderEventType.Cancel.__enum__ = mloader_LoaderEventType;
mloader_LoaderEventType.Progress = ["Progress",2];
mloader_LoaderEventType.Progress.toString = $estr;
mloader_LoaderEventType.Progress.__enum__ = mloader_LoaderEventType;
mloader_LoaderEventType.Complete = ["Complete",3];
mloader_LoaderEventType.Complete.toString = $estr;
mloader_LoaderEventType.Complete.__enum__ = mloader_LoaderEventType;
mloader_LoaderEventType.Fail = function(error) { var $x = ["Fail",4,error]; $x.__enum__ = mloader_LoaderEventType; $x.toString = $estr; return $x; };
var mloader_LoaderErrorType = { __ename__ : true, __constructs__ : ["IO","Security","Format","Data"] };
mloader_LoaderErrorType.IO = function(info) { var $x = ["IO",0,info]; $x.__enum__ = mloader_LoaderErrorType; $x.toString = $estr; return $x; };
mloader_LoaderErrorType.Security = function(info) { var $x = ["Security",1,info]; $x.__enum__ = mloader_LoaderErrorType; $x.toString = $estr; return $x; };
mloader_LoaderErrorType.Format = function(info) { var $x = ["Format",2,info]; $x.__enum__ = mloader_LoaderErrorType; $x.toString = $estr; return $x; };
mloader_LoaderErrorType.Data = function(info,data) { var $x = ["Data",3,info,data]; $x.__enum__ = mloader_LoaderErrorType; $x.toString = $estr; return $x; };
var msignal_Signal = function(valueClasses) {
	if(valueClasses == null) {
		valueClasses = [];
	}
	this.valueClasses = valueClasses;
	this.slots = msignal_SlotList.NIL;
	this.priorityBased = false;
};
msignal_Signal.__name__ = ["msignal","Signal"];
msignal_Signal.prototype = {
	add: function(listener) {
		return this.registerListener(listener);
	}
	,addOnce: function(listener) {
		return this.registerListener(listener,true);
	}
	,addWithPriority: function(listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		return this.registerListener(listener,false,priority);
	}
	,addOnceWithPriority: function(listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		return this.registerListener(listener,true,priority);
	}
	,remove: function(listener) {
		var slot = this.slots.find(listener);
		if(slot == null) {
			return null;
		}
		this.slots = this.slots.filterNot(listener);
		return slot;
	}
	,removeAll: function() {
		this.slots = msignal_SlotList.NIL;
	}
	,registerListener: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		if(this.registrationPossible(listener,once)) {
			var newSlot = this.createSlot(listener,once,priority);
			if(!this.priorityBased && priority != 0) {
				this.priorityBased = true;
			}
			if(!this.priorityBased && priority == 0) {
				this.slots = this.slots.prepend(newSlot);
			} else {
				this.slots = this.slots.insertWithPriority(newSlot);
			}
			return newSlot;
		}
		return this.slots.find(listener);
	}
	,registrationPossible: function(listener,once) {
		if(!this.slots.nonEmpty) {
			return true;
		}
		var existingSlot = this.slots.find(listener);
		if(existingSlot == null) {
			return true;
		}
		if(existingSlot.once != once) {
			throw new js__$Boot_HaxeError("You cannot addOnce() then add() the same listener without removing the relationship first.");
		}
		return false;
	}
	,createSlot: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		return null;
	}
	,get_numListeners: function() {
		return this.slots.get_length();
	}
	,__class__: msignal_Signal
	,__properties__: {get_numListeners:"get_numListeners"}
};
var msignal_EventSignal = function(target) {
	msignal_Signal.call(this,[msignal_Event]);
	this.target = target;
};
msignal_EventSignal.__name__ = ["msignal","EventSignal"];
msignal_EventSignal.__super__ = msignal_Signal;
msignal_EventSignal.prototype = $extend(msignal_Signal.prototype,{
	dispatch: function(event) {
		if(event.target == null) {
			event.target = this.target;
			event.signal = this;
		}
		event.currentTarget = this.target;
		var slotsToProcess = this.slots;
		while(slotsToProcess.nonEmpty) {
			slotsToProcess.head.execute(event);
			slotsToProcess = slotsToProcess.tail;
		}
	}
	,dispatchType: function(type) {
		this.dispatch(new msignal_Event(type));
	}
	,bubble: function(event) {
		this.dispatch(event);
		var currentTarget = this.target;
		while(currentTarget != null && Object.prototype.hasOwnProperty.call(currentTarget,"parent")) {
			currentTarget = Reflect.field(currentTarget,"parent");
			if(js_Boot.__instanceof(currentTarget,msignal_EventDispatcher)) {
				event.currentTarget = currentTarget;
				var dispatcher = js_Boot.__cast(currentTarget , msignal_EventDispatcher);
				if(!dispatcher.dispatchEvent(event)) {
					break;
				}
			}
		}
	}
	,bubbleType: function(type) {
		this.bubble(new msignal_Event(type));
	}
	,createSlot: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		return new msignal_EventSlot(this,listener,once,priority);
	}
	,__class__: msignal_EventSignal
});
var msignal_Slot = function(signal,listener,once,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(once == null) {
		once = false;
	}
	this.signal = signal;
	this.set_listener(listener);
	this.once = once;
	this.priority = priority;
	this.enabled = true;
};
msignal_Slot.__name__ = ["msignal","Slot"];
msignal_Slot.prototype = {
	remove: function() {
		this.signal.remove(this.listener);
	}
	,set_listener: function(value) {
		if(value == null) {
			throw new js__$Boot_HaxeError("listener cannot be null");
		}
		return this.listener = value;
	}
	,__class__: msignal_Slot
	,__properties__: {set_listener:"set_listener"}
};
var msignal_EventSlot = function(signal,listener,once,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(once == null) {
		once = false;
	}
	msignal_Slot.call(this,signal,listener,once,priority);
};
msignal_EventSlot.__name__ = ["msignal","EventSlot"];
msignal_EventSlot.typeEq = function(a,b) {
	if(a == b) {
		return true;
	}
	var _g = Type["typeof"](a);
	if(_g[1] == 7) {
		return msignal_EventSlot.enumTypeEq(a,b);
	} else {
		return false;
	}
};
msignal_EventSlot.enumTypeEq = function(a,b) {
	if(a == b) {
		return true;
	}
	if(Type.getEnum(a) != Type.getEnum(b)) {
		return false;
	}
	if(a[1] != b[1]) {
		return false;
	}
	var aParams = a.slice(2);
	if(aParams.length == 0) {
		return true;
	}
	var bParams = b.slice(2);
	var _g1 = 0;
	var _g = aParams.length;
	while(_g1 < _g) {
		var i = _g1++;
		var aParam = aParams[i];
		var bParam = bParams[i];
		if(aParam == null) {
			continue;
		}
		if(!msignal_EventSlot.typeEq(aParam,bParam)) {
			return false;
		}
	}
	return true;
};
msignal_EventSlot.__super__ = msignal_Slot;
msignal_EventSlot.prototype = $extend(msignal_Slot.prototype,{
	execute: function(value1) {
		if(!this.enabled) {
			return;
		}
		if(this.filterType != null && !msignal_EventSlot.typeEq(this.filterType,value1.type)) {
			return;
		}
		if(this.once) {
			this.remove();
		}
		this.listener(value1);
	}
	,forType: function(value) {
		this.filterType = value;
	}
	,__class__: msignal_EventSlot
});
var msignal_Event = function(type) {
	this.type = type;
};
msignal_Event.__name__ = ["msignal","Event"];
msignal_Event.prototype = {
	__class__: msignal_Event
};
var msignal_EventDispatcher = function() { };
msignal_EventDispatcher.__name__ = ["msignal","EventDispatcher"];
msignal_EventDispatcher.prototype = {
	__class__: msignal_EventDispatcher
};
var msignal_Signal0 = function() {
	msignal_Signal.call(this);
};
msignal_Signal0.__name__ = ["msignal","Signal0"];
msignal_Signal0.__super__ = msignal_Signal;
msignal_Signal0.prototype = $extend(msignal_Signal.prototype,{
	dispatch: function() {
		var slotsToProcess = this.slots;
		while(slotsToProcess.nonEmpty) {
			slotsToProcess.head.execute();
			slotsToProcess = slotsToProcess.tail;
		}
	}
	,createSlot: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		return new msignal_Slot0(this,listener,once,priority);
	}
	,__class__: msignal_Signal0
});
var msignal_Signal1 = function(type) {
	msignal_Signal.call(this,[type]);
};
msignal_Signal1.__name__ = ["msignal","Signal1"];
msignal_Signal1.__super__ = msignal_Signal;
msignal_Signal1.prototype = $extend(msignal_Signal.prototype,{
	dispatch: function(value) {
		var slotsToProcess = this.slots;
		while(slotsToProcess.nonEmpty) {
			slotsToProcess.head.execute(value);
			slotsToProcess = slotsToProcess.tail;
		}
	}
	,createSlot: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		return new msignal_Slot1(this,listener,once,priority);
	}
	,__class__: msignal_Signal1
});
var msignal_Signal2 = function(type1,type2) {
	msignal_Signal.call(this,[type1,type2]);
};
msignal_Signal2.__name__ = ["msignal","Signal2"];
msignal_Signal2.__super__ = msignal_Signal;
msignal_Signal2.prototype = $extend(msignal_Signal.prototype,{
	dispatch: function(value1,value2) {
		var slotsToProcess = this.slots;
		while(slotsToProcess.nonEmpty) {
			slotsToProcess.head.execute(value1,value2);
			slotsToProcess = slotsToProcess.tail;
		}
	}
	,createSlot: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		return new msignal_Slot2(this,listener,once,priority);
	}
	,__class__: msignal_Signal2
});
var msignal_Slot0 = function(signal,listener,once,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(once == null) {
		once = false;
	}
	msignal_Slot.call(this,signal,listener,once,priority);
};
msignal_Slot0.__name__ = ["msignal","Slot0"];
msignal_Slot0.__super__ = msignal_Slot;
msignal_Slot0.prototype = $extend(msignal_Slot.prototype,{
	execute: function() {
		if(!this.enabled) {
			return;
		}
		if(this.once) {
			this.remove();
		}
		this.listener();
	}
	,__class__: msignal_Slot0
});
var msignal_Slot1 = function(signal,listener,once,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(once == null) {
		once = false;
	}
	msignal_Slot.call(this,signal,listener,once,priority);
};
msignal_Slot1.__name__ = ["msignal","Slot1"];
msignal_Slot1.__super__ = msignal_Slot;
msignal_Slot1.prototype = $extend(msignal_Slot.prototype,{
	execute: function(value1) {
		if(!this.enabled) {
			return;
		}
		if(this.once) {
			this.remove();
		}
		if(this.param != null) {
			value1 = this.param;
		}
		this.listener(value1);
	}
	,__class__: msignal_Slot1
});
var msignal_Slot2 = function(signal,listener,once,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(once == null) {
		once = false;
	}
	msignal_Slot.call(this,signal,listener,once,priority);
};
msignal_Slot2.__name__ = ["msignal","Slot2"];
msignal_Slot2.__super__ = msignal_Slot;
msignal_Slot2.prototype = $extend(msignal_Slot.prototype,{
	execute: function(value1,value2) {
		if(!this.enabled) {
			return;
		}
		if(this.once) {
			this.remove();
		}
		if(this.param1 != null) {
			value1 = this.param1;
		}
		if(this.param2 != null) {
			value2 = this.param2;
		}
		this.listener(value1,value2);
	}
	,__class__: msignal_Slot2
});
var msignal_SlotList = function(head,tail) {
	this.nonEmpty = false;
	if(head == null && tail == null) {
		if(msignal_SlotList.NIL != null) {
			throw new js__$Boot_HaxeError("Parameters head and tail are null. Use the NIL element instead.");
		}
		this.nonEmpty = false;
	} else if(head == null) {
		throw new js__$Boot_HaxeError("Parameter head cannot be null.");
	} else {
		this.head = head;
		this.tail = tail == null ? msignal_SlotList.NIL : tail;
		this.nonEmpty = true;
	}
};
msignal_SlotList.__name__ = ["msignal","SlotList"];
msignal_SlotList.prototype = {
	get_length: function() {
		if(!this.nonEmpty) {
			return 0;
		}
		if(this.tail == msignal_SlotList.NIL) {
			return 1;
		}
		var result = 0;
		var p = this;
		while(p.nonEmpty) {
			++result;
			p = p.tail;
		}
		return result;
	}
	,prepend: function(slot) {
		return new msignal_SlotList(slot,this);
	}
	,append: function(slot) {
		if(slot == null) {
			return this;
		}
		if(!this.nonEmpty) {
			return new msignal_SlotList(slot);
		}
		if(this.tail == msignal_SlotList.NIL) {
			return new msignal_SlotList(slot).prepend(this.head);
		}
		var wholeClone = new msignal_SlotList(this.head);
		var subClone = wholeClone;
		var current = this.tail;
		while(current.nonEmpty) {
			subClone = subClone.tail = new msignal_SlotList(current.head);
			current = current.tail;
		}
		subClone.tail = new msignal_SlotList(slot);
		return wholeClone;
	}
	,insertWithPriority: function(slot) {
		if(!this.nonEmpty) {
			return new msignal_SlotList(slot);
		}
		var priority = slot.priority;
		if(priority >= this.head.priority) {
			return this.prepend(slot);
		}
		var wholeClone = new msignal_SlotList(this.head);
		var subClone = wholeClone;
		var current = this.tail;
		while(current.nonEmpty) {
			if(priority > current.head.priority) {
				subClone.tail = current.prepend(slot);
				return wholeClone;
			}
			subClone = subClone.tail = new msignal_SlotList(current.head);
			current = current.tail;
		}
		subClone.tail = new msignal_SlotList(slot);
		return wholeClone;
	}
	,filterNot: function(listener) {
		if(!this.nonEmpty || listener == null) {
			return this;
		}
		if(Reflect.compareMethods(this.head.listener,listener)) {
			return this.tail;
		}
		var wholeClone = new msignal_SlotList(this.head);
		var subClone = wholeClone;
		var current = this.tail;
		while(current.nonEmpty) {
			if(Reflect.compareMethods(current.head.listener,listener)) {
				subClone.tail = current.tail;
				return wholeClone;
			}
			subClone = subClone.tail = new msignal_SlotList(current.head);
			current = current.tail;
		}
		return this;
	}
	,contains: function(listener) {
		if(!this.nonEmpty) {
			return false;
		}
		var p = this;
		while(p.nonEmpty) {
			if(Reflect.compareMethods(p.head.listener,listener)) {
				return true;
			}
			p = p.tail;
		}
		return false;
	}
	,find: function(listener) {
		if(!this.nonEmpty) {
			return null;
		}
		var p = this;
		while(p.nonEmpty) {
			if(Reflect.compareMethods(p.head.listener,listener)) {
				return p.head;
			}
			p = p.tail;
		}
		return null;
	}
	,__class__: msignal_SlotList
	,__properties__: {get_length:"get_length"}
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.prototype.__class__ = String;
String.__name__ = ["String"];
Array.__name__ = ["Array"];
Date.prototype.__class__ = Date;
Date.__name__ = ["Date"];
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {};
msignal_SlotList.NIL = new msignal_SlotList(null,null);
Xml.Element = 0;
Xml.PCData = 1;
Xml.CData = 2;
Xml.Comment = 3;
Xml.DocType = 4;
Xml.ProcessingInstruction = 5;
Xml.Document = 6;
haxe_xml_Parser.escapes = (function($this) {
	var $r;
	var h = new haxe_ds_StringMap();
	if(__map_reserved["lt"] != null) {
		h.setReserved("lt","<");
	} else {
		h.h["lt"] = "<";
	}
	if(__map_reserved["gt"] != null) {
		h.setReserved("gt",">");
	} else {
		h.h["gt"] = ">";
	}
	if(__map_reserved["amp"] != null) {
		h.setReserved("amp","&");
	} else {
		h.h["amp"] = "&";
	}
	if(__map_reserved["quot"] != null) {
		h.setReserved("quot","\"");
	} else {
		h.h["quot"] = "\"";
	}
	if(__map_reserved["apos"] != null) {
		h.setReserved("apos","'");
	} else {
		h.h["apos"] = "'";
	}
	$r = h;
	return $r;
}(this));
hxColorToolkit_ColorToolkit.rybWheel = [[0,0],[15,8],[30,17],[45,26],[60,34],[75,41],[90,48],[105,54],[120,60],[135,81],[150,103],[165,123],[180,138],[195,155],[210,171],[225,187],[240,204],[255,219],[270,234],[285,251],[300,267],[315,282],[330,298],[345,329],[360,0]];
js_Boot.__toStr = ({ }).toString;
lets_GoJs._tweens = [];
lib_Global.MOUSE_DOWN = "mousedown";
lib_Global.MOUSE_UP = "mouseup";
lib_Global.MOUSE_MOVE = "mousemove";
lib_Global.KEY_DOWN = "keydown";
lib_Global.KEY_UP = "keyup";
lib_Global.RESIZE = "resize";
lib_Global.mousePressed = 0;
lib_Global.mouseReleased = 0;
lib_Global.isFullscreen = false;
lib_Global.TWO_PI = Math.PI * 2;
lib_model_constants_App.NAME = "Creative Code [mck]";
lib_model_constants_App.BUILD = "2019-02-15 13:47:40";
lib_util_ColorUtil.NAVY = { r : Math.round(0), g : Math.round(31), b : Math.round(63)};
lib_util_ColorUtil.BLUE = { r : Math.round(0), g : Math.round(116), b : Math.round(217)};
lib_util_ColorUtil.AQUA = { r : Math.round(127), g : Math.round(219), b : Math.round(255)};
lib_util_ColorUtil.TEAL = { r : Math.round(57), g : Math.round(204), b : Math.round(204)};
lib_util_ColorUtil.OLIVE = { r : Math.round(61), g : Math.round(153), b : Math.round(112)};
lib_util_ColorUtil.GREEN = { r : Math.round(46), g : Math.round(204), b : Math.round(64)};
lib_util_ColorUtil.LIME = { r : Math.round(1), g : Math.round(255), b : Math.round(112)};
lib_util_ColorUtil.YELLOW = { r : Math.round(255), g : Math.round(220), b : Math.round(0)};
lib_util_ColorUtil.ORANGE = { r : Math.round(255), g : Math.round(133), b : Math.round(27)};
lib_util_ColorUtil.RED = { r : Math.round(255), g : Math.round(65), b : Math.round(54)};
lib_util_ColorUtil.MAROON = { r : Math.round(133), g : Math.round(20), b : Math.round(75)};
lib_util_ColorUtil.FUCHSIA = { r : Math.round(240), g : Math.round(18), b : Math.round(190)};
lib_util_ColorUtil.PURPLE = { r : Math.round(177), g : Math.round(13), b : Math.round(201)};
lib_util_ColorUtil.BLACK = { r : Math.round(17), g : Math.round(17), b : Math.round(17)};
lib_util_ColorUtil.GRAY = { r : Math.round(170), g : Math.round(170), b : Math.round(170)};
lib_util_ColorUtil.SILVER = { r : Math.round(221), g : Math.round(221), b : Math.round(221)};
lib_util_ColorUtil.WHITE = { r : Math.round(255), g : Math.round(255), b : Math.round(255)};
lib_util_ColorUtil.PINK = { r : Math.round(255), g : Math.round(20), b : Math.round(147)};
lib_util_ColorUtil.PINK_DEEP = { r : Math.round(255), g : Math.round(20), b : Math.round(147)};
lib_util_ColorUtil.PINK_HOT = { r : Math.round(255), g : Math.round(105), b : Math.round(180)};
lib_util_ColorUtil.niceColor100 = [["#69d2e7","#a7dbd8","#e0e4cc","#f38630","#fa6900"],["#fe4365","#fc9d9a","#f9cdad","#c8c8a9","#83af9b"],["#ecd078","#d95b43","#c02942","#542437","#53777a"],["#556270","#4ecdc4","#c7f464","#ff6b6b","#c44d58"],["#774f38","#e08e79","#f1d4af","#ece5ce","#c5e0dc"],["#e8ddcb","#cdb380","#036564","#033649","#031634"],["#490a3d","#bd1550","#e97f02","#f8ca00","#8a9b0f"],["#594f4f","#547980","#45ada8","#9de0ad","#e5fcc2"],["#00a0b0","#6a4a3c","#cc333f","#eb6841","#edc951"],["#e94e77","#d68189","#c6a49a","#c6e5d9","#f4ead5"],["#3fb8af","#7fc7af","#dad8a7","#ff9e9d","#ff3d7f"],["#d9ceb2","#948c75","#d5ded9","#7a6a53","#99b2b7"],["#ffffff","#cbe86b","#f2e9e1","#1c140d","#cbe86b"],["#efffcd","#dce9be","#555152","#2e2633","#99173c"],["#343838","#005f6b","#008c9e","#00b4cc","#00dffc"],["#413e4a","#73626e","#b38184","#f0b49e","#f7e4be"],["#ff4e50","#fc913a","#f9d423","#ede574","#e1f5c4"],["#99b898","#fecea8","#ff847c","#e84a5f","#2a363b"],["#655643","#80bca3","#f6f7bd","#e6ac27","#bf4d28"],["#00a8c6","#40c0cb","#f9f2e7","#aee239","#8fbe00"],["#351330","#424254","#64908a","#e8caa4","#cc2a41"],["#554236","#f77825","#d3ce3d","#f1efa5","#60b99a"],["#ff9900","#424242","#e9e9e9","#bcbcbc","#3299bb"],["#5d4157","#838689","#a8caba","#cad7b2","#ebe3aa"],["#8c2318","#5e8c6a","#88a65e","#bfb35a","#f2c45a"],["#fad089","#ff9c5b","#f5634a","#ed303c","#3b8183"],["#ff4242","#f4fad2","#d4ee5e","#e1edb9","#f0f2eb"],["#d1e751","#ffffff","#000000","#4dbce9","#26ade4"],["#f8b195","#f67280","#c06c84","#6c5b7b","#355c7d"],["#1b676b","#519548","#88c425","#bef202","#eafde6"],["#bcbdac","#cfbe27","#f27435","#f02475","#3b2d38"],["#5e412f","#fcebb6","#78c0a8","#f07818","#f0a830"],["#452632","#91204d","#e4844a","#e8bf56","#e2f7ce"],["#eee6ab","#c5bc8e","#696758","#45484b","#36393b"],["#f0d8a8","#3d1c00","#86b8b1","#f2d694","#fa2a00"],["#f04155","#ff823a","#f2f26f","#fff7bd","#95cfb7"],["#2a044a","#0b2e59","#0d6759","#7ab317","#a0c55f"],["#bbbb88","#ccc68d","#eedd99","#eec290","#eeaa88"],["#b9d7d9","#668284","#2a2829","#493736","#7b3b3b"],["#b3cc57","#ecf081","#ffbe40","#ef746f","#ab3e5b"],["#a3a948","#edb92e","#f85931","#ce1836","#009989"],["#67917a","#170409","#b8af03","#ccbf82","#e33258"],["#e8d5b7","#0e2430","#fc3a51","#f5b349","#e8d5b9"],["#aab3ab","#c4cbb7","#ebefc9","#eee0b7","#e8caaf"],["#300030","#480048","#601848","#c04848","#f07241"],["#ab526b","#bca297","#c5ceae","#f0e2a4","#f4ebc3"],["#607848","#789048","#c0d860","#f0f0d8","#604848"],["#a8e6ce","#dcedc2","#ffd3b5","#ffaaa6","#ff8c94"],["#3e4147","#fffedf","#dfba69","#5a2e2e","#2a2c31"],["#b6d8c0","#c8d9bf","#dadabd","#ecdbbc","#fedcba"],["#fc354c","#29221f","#13747d","#0abfbc","#fcf7c5"],["#1c2130","#028f76","#b3e099","#ffeaad","#d14334"],["#edebe6","#d6e1c7","#94c7b6","#403b33","#d3643b"],["#cc0c39","#e6781e","#c8cf02","#f8fcc1","#1693a7"],["#dad6ca","#1bb0ce","#4f8699","#6a5e72","#563444"],["#a7c5bd","#e5ddcb","#eb7b59","#cf4647","#524656"],["#fdf1cc","#c6d6b8","#987f69","#e3ad40","#fcd036"],["#5c323e","#a82743","#e15e32","#c0d23e","#e5f04c"],["#230f2b","#f21d41","#ebebbc","#bce3c5","#82b3ae"],["#b9d3b0","#81bda4","#b28774","#f88f79","#f6aa93"],["#3a111c","#574951","#83988e","#bcdea5","#e6f9bc"],["#5e3929","#cd8c52","#b7d1a3","#dee8be","#fcf7d3"],["#1c0113","#6b0103","#a30006","#c21a01","#f03c02"],["#382f32","#ffeaf2","#fcd9e5","#fbc5d8","#f1396d"],["#e3dfba","#c8d6bf","#93ccc6","#6cbdb5","#1a1f1e"],["#000000","#9f111b","#b11623","#292c37","#cccccc"],["#c1b398","#605951","#fbeec2","#61a6ab","#accec0"],["#8dccad","#988864","#fea6a2","#f9d6ac","#ffe9af"],["#f6f6f6","#e8e8e8","#333333","#990100","#b90504"],["#1b325f","#9cc4e4","#e9f2f9","#3a89c9","#f26c4f"],["#5e9fa3","#dcd1b4","#fab87f","#f87e7b","#b05574"],["#951f2b","#f5f4d7","#e0dfb1","#a5a36c","#535233"],["#413d3d","#040004","#c8ff00","#fa023c","#4b000f"],["#eff3cd","#b2d5ba","#61ada0","#248f8d","#605063"],["#2d2d29","#215a6d","#3ca2a2","#92c7a3","#dfece6"],["#cfffdd","#b4dec1","#5c5863","#a85163","#ff1f4c"],["#4e395d","#827085","#8ebe94","#ccfc8e","#dc5b3e"],["#9dc9ac","#fffec7","#f56218","#ff9d2e","#919167"],["#a1dbb2","#fee5ad","#faca66","#f7a541","#f45d4c"],["#ffefd3","#fffee4","#d0ecea","#9fd6d2","#8b7a5e"],["#a8a7a7","#cc527a","#e8175d","#474747","#363636"],["#ffedbf","#f7803c","#f54828","#2e0d23","#f8e4c1"],["#f8edd1","#d88a8a","#474843","#9d9d93","#c5cfc6"],["#f38a8a","#55443d","#a0cab5","#cde9ca","#f1edd0"],["#4e4d4a","#353432","#94ba65","#2790b0","#2b4e72"],["#0ca5b0","#4e3f30","#fefeeb","#f8f4e4","#a5b3aa"],["#a70267","#f10c49","#fb6b41","#f6d86b","#339194"],["#9d7e79","#ccac95","#9a947c","#748b83","#5b756c"],["#edf6ee","#d1c089","#b3204d","#412e28","#151101"],["#046d8b","#309292","#2fb8ac","#93a42a","#ecbe13"],["#4d3b3b","#de6262","#ffb88c","#ffd0b3","#f5e0d3"],["#fffbb7","#a6f6af","#66b6ab","#5b7c8d","#4f2958"],["#ff003c","#ff8a00","#fabe28","#88c100","#00c176"],["#fcfef5","#e9ffe1","#cdcfb7","#d6e6c3","#fafbe3"],["#9cddc8","#bfd8ad","#ddd9ab","#f7af63","#633d2e"],["#30261c","#403831","#36544f","#1f5f61","#0b8185"],["#d1313d","#e5625c","#f9bf76","#8eb2c5","#615375"],["#ffe181","#eee9e5","#fad3b2","#ffba7f","#ff9c97"],["#aaff00","#ffaa00","#ff00aa","#aa00ff","#00aaff"],["#c2412d","#d1aa34","#a7a844","#a46583","#5a1e4a"]];
lib_util_ColorUtil.niceColor100SortedString = [["#E0E4CC","#A7DBD8","#69D2E7","#F38630","#FA6900"],["#F9CDAD","#C8C8A9","#FC9D9A","#83AF9B","#FE4365"],["#ECD078","#D95B43","#53777A","#C02942","#542437"],["#C7F464","#4ECDC4","#FF6B6B","#C44D58","#556270"],["#ECE5CE","#F1D4AF","#C5E0DC","#E08E79","#774F38"],["#E8DDCB","#CDB380","#036564","#033649","#031634"],["#F8CA00","#E97F02","#8A9B0F","#BD1550","#490A3D"],["#E5FCC2","#9DE0AD","#45ADA8","#547980","#594F4F"],["#EDC951","#EB6841","#00A0B0","#CC333F","#6A4A3C"],["#F4EAD5","#C6E5D9","#C6A49A","#D68189","#E94E77"],["#DAD8A7","#FF9E9D","#7FC7AF","#3FB8AF","#FF3D7F"],["#D5DED9","#D9CEB2","#99B2B7","#948C75","#7A6A53"],["#FFFFFF","#F2E9E1","#CBE86B","#CBE86B","#1C140D"],["#EFFFCD","#DCE9BE","#555152","#99173C","#2E2633"],["#00DFFC","#00B4CC","#008C9E","#005F6B","#343838"],["#F7E4BE","#F0B49E","#B38184","#73626E","#413E4A"],["#E1F5C4","#EDE574","#F9D423","#FC913A","#FF4E50"],["#FECEA8","#99B898","#FF847C","#E84A5F","#2A363B"],["#F6F7BD","#E6AC27","#80BCA3","#BF4D28","#655643"],["#F9F2E7","#AEE239","#40C0CB","#8FBE00","#00A8C6"],["#E8CAA4","#64908A","#CC2A41","#424254","#351330"],["#F1EFA5","#D3CE3D","#60B99A","#F77825","#554236"],["#E9E9E9","#BCBCBC","#FF9900","#3299BB","#424242"],["#EBE3AA","#CAD7B2","#A8CABA","#838689","#5D4157"],["#F2C45A","#BFB35A","#88A65E","#5E8C6A","#8C2318"],["#FAD089","#FF9C5B","#F5634A","#3B8183","#ED303C"],["#F4FAD2","#F0F2EB","#E1EDB9","#D4EE5E","#FF4242"],["#FFFFFF","#D1E751","#4DBCE9","#26ADE4","#000000"],["#F8B195","#F67280","#C06C84","#6C5B7B","#355C7D"],["#EAFDE6","#BEF202","#88C425","#519548","#1B676B"],["#BCBDAC","#CFBE27","#F27435","#F02475","#3B2D38"],["#FCEBB6","#F0A830","#78C0A8","#F07818","#5E412F"],["#E2F7CE","#E8BF56","#E4844A","#91204D","#452632"],["#EEE6AB","#C5BC8E","#696758","#45484B","#36393B"],["#F0D8A8","#F2D694","#86B8B1","#FA2A00","#3D1C00"],["#FFF7BD","#F2F26F","#95CFB7","#FF823A","#F04155"],["#A0C55F","#7AB317","#0D6759","#0B2E59","#2A044A"],["#EEDD99","#EEC290","#CCC68D","#EEAA88","#BBBB88"],["#B9D7D9","#668284","#7B3B3B","#493736","#2A2829"],["#ECF081","#FFBE40","#B3CC57","#EF746F","#AB3E5B"],["#EDB92E","#A3A948","#F85931","#009989","#CE1836"],["#CCBF82","#B8AF03","#67917A","#E33258","#170409"],["#E8D5B9","#E8D5B7","#F5B349","#FC3A51","#0E2430"],["#EBEFC9","#EEE0B7","#E8CAAF","#C4CBB7","#AAB3AB"],["#F07241","#C04848","#601848","#480048","#300030"],["#F4EBC3","#F0E2A4","#C5CEAE","#BCA297","#AB526B"],["#F0F0D8","#C0D860","#789048","#607848","#604848"],["#DCEDC2","#FFD3B5","#A8E6CE","#FFAAA6","#FF8C94"],["#FFFEDF","#DFBA69","#3E4147","#5A2E2E","#2A2C31"],["#FEDCBA","#ECDBBC","#DADABD","#C8D9BF","#B6D8C0"],["#FCF7C5","#0ABFBC","#FC354C","#13747D","#29221F"],["#FFEAAD","#B3E099","#D14334","#028F76","#1C2130"],["#EDEBE6","#D6E1C7","#94C7B6","#D3643B","#403B33"],["#F8FCC1","#C8CF02","#E6781E","#1693A7","#CC0C39"],["#DAD6CA","#1BB0CE","#4F8699","#6A5E72","#563444"],["#E5DDCB","#A7C5BD","#EB7B59","#CF4647","#524656"],["#FDF1CC","#C6D6B8","#FCD036","#E3AD40","#987F69"],["#E5F04C","#C0D23E","#E15E32","#A82743","#5C323E"],["#EBEBBC","#BCE3C5","#82B3AE","#F21D41","#230F2B"],["#B9D3B0","#F6AA93","#F88F79","#81BDA4","#B28774"],["#E6F9BC","#BCDEA5","#83988E","#574951","#3A111C"],["#FCF7D3","#DEE8BE","#B7D1A3","#CD8C52","#5E3929"],["#F03C02","#C21A01","#A30006","#6B0103","#1C0113"],["#FFEAF2","#FCD9E5","#FBC5D8","#F1396D","#382F32"],["#E3DFBA","#C8D6BF","#93CCC6","#6CBDB5","#1A1F1E"],["#CCCCCC","#B11623","#9F111B","#292C37","#000000"],["#FBEEC2","#ACCEC0","#C1B398","#61A6AB","#605951"],["#FFE9AF","#F9D6AC","#FEA6A2","#8DCCAD","#988864"],["#F6F6F6","#E8E8E8","#B90504","#333333","#990100"],["#E9F2F9","#9CC4E4","#F26C4F","#3A89C9","#1B325F"],["#DCD1B4","#FAB87F","#F87E7B","#5E9FA3","#B05574"],["#F5F4D7","#E0DFB1","#A5A36C","#535233","#951F2B"],["#C8FF00","#FA023C","#413D3D","#4B000F","#040004"],["#EFF3CD","#B2D5BA","#61ADA0","#248F8D","#605063"],["#DFECE6","#92C7A3","#3CA2A2","#215A6D","#2D2D29"],["#CFFFDD","#B4DEC1","#A85163","#FF1F4C","#5C5863"],["#CCFC8E","#8EBE94","#DC5B3E","#827085","#4E395D"],["#FFFEC7","#9DC9AC","#FF9D2E","#919167","#F56218"],["#FEE5AD","#FACA66","#A1DBB2","#F7A541","#F45D4C"],["#FFFEE4","#FFEFD3","#D0ECEA","#9FD6D2","#8B7A5E"],["#A8A7A7","#CC527A","#E8175D","#474747","#363636"],["#FFEDBF","#F8E4C1","#F7803C","#F54828","#2E0D23"],["#F8EDD1","#C5CFC6","#D88A8A","#9D9D93","#474843"],["#F1EDD0","#CDE9CA","#A0CAB5","#F38A8A","#55443D"],["#94BA65","#2790B0","#4E4D4A","#2B4E72","#353432"],["#FEFEEB","#F8F4E4","#A5B3AA","#0CA5B0","#4E3F30"],["#F6D86B","#FB6B41","#339194","#F10C49","#A70267"],["#CCAC95","#9A947C","#9D7E79","#748B83","#5B756C"],["#EDF6EE","#D1C089","#B3204D","#412E28","#151101"],["#ECBE13","#93A42A","#2FB8AC","#309292","#046D8B"],["#F5E0D3","#FFD0B3","#FFB88C","#DE6262","#4D3B3B"],["#FFFBB7","#A6F6AF","#66B6AB","#5B7C8D","#4F2958"],["#FABE28","#FF8A00","#88C100","#00C176","#FF003C"],["#FCFEF5","#FAFBE3","#E9FFE1","#D6E6C3","#CDCFB7"],["#DDD9AB","#BFD8AD","#9CDDC8","#F7AF63","#633D2E"],["#0B8185","#1F5F61","#36544F","#403831","#30261C"],["#F9BF76","#8EB2C5","#E5625C","#D1313D","#615375"],["#EEE9E5","#FFE181","#FAD3B2","#FFBA7F","#FF9C97"],["#AAFF00","#FFAA00","#00AAFF","#FF00AA","#AA00FF"],["#D1AA34","#A7A844","#A46583","#C2412D","#5A1E4A"],["#F8F3BF","#DCE4F7","#BFCFF7","#75616B","#D34017"]];
lib_util_ColorUtil.niceColor100SortedInt = [[14738636,11000792,6935271,15959600,16410880],[16371117,13158569,16555418,8630171,16663397],[15519864,14244675,5470074,12593474,5514295],[13104228,5164484,16739179,12864856,5595760],[15525326,15848623,12968156,14716537,7819064],[15261131,13480832,222564,210505,202292],[16304640,15302402,9083663,12391760,4786749],[15072450,10346669,4566440,5536128,5853007],[15583569,15427649,41136,13382463,6965820],[16050901,13034969,13018266,14057865,15289975],[14342311,16752285,8374191,4176047,16727423],[14016217,14274226,10072759,9735285,8022611],[16777215,15919585,13363307,13363307,1840141],[15728589,14477758,5591378,10032956,3024435],[57340,46284,35998,24427,3422264],[16245950,15774878,11764100,7561838,4275786],[14808516,15590772,16372771,16552250,16731728],[16699048,10074264,16745596,15223391,2766395],[16185277,15117351,8436899,12537128,6641219],[16380647,11461177,4243659,9420288,43206],[15256228,6590602,13380161,4342356,3478320],[15855525,13880893,6338970,16218149,5587510],[15329769,12369084,16750848,3316155,4342338],[15459242,13293490,11061946,8619657,6111575],[15909978,12563290,8955486,6196330,9184024],[16437385,16751707,16081738,3899779,15544380],[16054994,15790827,14806457,13954654,16728642],[16777215,13756241,5094633,2534884,0],[16298389,16151168,12610692,7101307,3497085],[15400422,12513794,8963109,5346632,1795947],[12369324,13614631,15889461,15737973,3878200],[16575414,15771696,7913640,15759384,6177071],[14874574,15253334,14976074,9510989,4531762],[15656619,12958862,6907736,4540491,3553595],[15784104,15914644,8829105,16394752,4004864],[16775101,15921775,9818039,16745018,15745365],[10536287,8041239,878425,732761,2753610],[15654297,15647376,13420173,15641224,12303240],[12179417,6718084,8076091,4798262,2762793],[15528065,16760384,11783255,15692911,11222619],[15579438,10725704,16275761,39305,13506614],[13418370,12103427,6787450,14889560,1508361],[15259065,15259063,16102217,16530001,926768],[15462345,15655095,15256239,12897207,11187115],[15757889,12601416,6297672,4718664,3145776],[16051139,15786660,12963502,12362391,11227755],[15790296,12638304,7901256,6322248,6309960],[14478786,16765877,11069134,16755366,16747668],[16776927,14662249,4079943,5910062,2763825],[16702650,15522748,14342845,13162943,11983040],[16578501,704444,16528716,1275005,2695711],[16771757,11788441,13714228,167798,1843504],[15592422,14082503,9750454,13853755,4209459],[16317633,13160194,15104030,1479591,13372473],[14341834,1814734,5211801,6970994,5649476],[15064523,10995133,15432537,13583943,5391958],[16642508,13031096,16568374,14921024,9994089],[15069260,12636734,14769714,11020099,6042174],[15461308,12379077,8565678,15867201,2297643],[12178352,16165523,16289657,8502692,11700084],[15137212,12377765,8624270,5720401,3805468],[16578515,14608574,12046755,13470802,6175017],[15744002,12720641,10682374,7012611,1835283],[16771826,16570853,16500184,15808877,3682098],[14933946,13162175,9686214,7126453,1711902],[13421772,11605539,10424603,2698295,0],[16510658,11325120,12694424,6399659,6314321],[16771503,16373420,16688802,9292973,9996388],[16185078,15263976,12125444,3355443,10027264],[15332089,10274020,15887439,3836361,1782367],[14471604,16431231,16285307,6201251,11556212],[16118999,14737329,10855276,5460531,9772843],[13172480,16384572,4275517,4915215,262148],[15725517,11720122,6401440,2396045,6312035],[14675174,9619363,3973794,2185837,2960681],[13631453,11853505,11030883,16719692,6051939],[13433998,9354900,14441278,8548485,5126493],[16776903,10340780,16751918,9539943,16081432],[16704941,16435814,10607538,16229697,16014668],[16776932,16773075,13692138,10475218,9140830],[11052967,13390458,15210333,4671303,3552822],[16772543,16311489,16220220,16074792,3018019],[16313809,12963782,14191242,10329491,4671555],[15855056,13494730,10537653,15960714,5588029],[9747045,2592944,5131594,2838130,3486770],[16711403,16315620,10859434,828848,5127984],[16177259,16476993,3379604,15797321,10945127],[13413525,10130556,10321529,7637891,5993836],[15595246,13746313,11739213,4271656,1380609],[15515155,9675818,3127468,3183250,290187],[16113875,16765107,16758924,14574178,5061435],[16776119,10942127,6731435,5995661,5187928],[16432680,16747008,8962304,49526,16711740],[16580341,16448483,15335393,14083779,13488055],[14539179,12572845,10280392,16232291,6503726],[754053,2056033,3560527,4208689,3155484],[16367478,9351877,15032924,13709629,6378357],[15657445,16769409,16438194,16759423,16751767],[11206400,16755200,43775,16711850,11141375],[13740596,10987588,10773891,12730669,5905994],[16315327,14476535,12570615,7692651,13844503]];
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=cc_mck.js.map