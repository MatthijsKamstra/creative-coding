// Generated by Haxe 3.4.7
(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = ["Lambda"];
Lambda.has = function(it,elt) {
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1 == elt) {
			return true;
		}
	}
	return false;
};
Lambda.exists = function(it,f) {
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			return true;
		}
	}
	return false;
};
Lambda.filter = function(it,f) {
	var l = new List();
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			l.add(x1);
		}
	}
	return l;
};
var List = function() {
	this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = ["List"];
List.prototype = {
	add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = new _$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
	,__class__: List
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["_List.ListNode"] = _$List_ListNode;
_$List_ListNode.__name__ = ["_List","ListNode"];
_$List_ListNode.prototype = {
	__class__: _$List_ListNode
};
var _$List_ListIterator = function(head) {
	this.head = head;
};
$hxClasses["_List.ListIterator"] = _$List_ListIterator;
_$List_ListIterator.__name__ = ["_List","ListIterator"];
_$List_ListIterator.prototype = {
	hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: _$List_ListIterator
};
var Main = function() {
	this.ccTypeArray = [art_CC000,art_CC001,art_CC002,art_CC003,art_CC004,art_CC005,art_CC006,art_CC007,art_CC008,art_CC009,art_CC010,art_CC011,art_CC012,art_CC013,art_CC014,art_CC015,art_CC016,art_CC017,art_CC018,art_CC019,art_CC020,art_CC021,art_CC022,art_CC023,art_CC024,art_CC025,art_CC026,art_CC027,art_CC028,art_CC029,art_CC030,art_CC031,art_CC031a,art_CC032,art_CC033,art_CC034,art_CC035,art_CC036,art_CC037,art_CC038,art_CC039,art_CC040,art_CC041,art_CC042,art_CC043,art_CC044,art_CC045,art_CC046,art_CC047,art_CC048,art_CC049,art_CC050,art_CC051,art_CC051a,art_CC052,art_CC052a,art_CC053,art_CC054,art_CC054a,art_CC055,art_CC055a,art_CC056,art_CC057,art_CC058,art_CC059,art_CC059a,art_CC059b,art_CC060,art_CC061,art_CC062,art_CC063,art_CC064,art_CC065,art_CC066,art_CC067,art_CC068,art_CC069,art_CC070];
	var _gthis = this;
	window.document.addEventListener("DOMContentLoaded",function(event) {
		window.console.log("" + lib_model_constants_App.NAME + " :: build: " + lib_model_constants_App.BUILD);
		_gthis.setupCC();
		_gthis.setupNav();
	});
};
$hxClasses["Main"] = Main;
Main.__name__ = ["Main"];
Main.main = function() {
	var app = new Main();
};
Main.prototype = {
	setupCC: function() {
		var ctx;
		var option = new SketchOption();
		option.set_width(1080);
		option.set_autostart(true);
		option.set_padding(10);
		option.set_scale(true);
		ctx = Sketch.create("creative_code_mck",option);
		this.hash = window.location.hash;
		this.hash = StringTools.replace(this.hash,"#","");
		var clazz = Type.resolveClass("art." + this.hash);
		if(clazz == null) {
			clazz = this.ccTypeArray[this.ccTypeArray.length - 1];
		}
		this.count = this.ccTypeArray.indexOf(clazz);
		var cc = Type.createInstance(clazz,[ctx]);
		this.changeHash();
	}
	,setupNav: function() {
		var _gthis = this;
		var snackbar = new lib_html_Snackbar();
		snackbar.show("sketch " + this.hash);
		var left = new lib_html_Nav();
		var ldiv = left.dir("left");
		ldiv.onclick = function() {
			haxe_Log.trace("left",{ fileName : "Main.hx", lineNumber : 67, className : "Main", methodName : "setupNav"});
			_gthis.count--;
			_gthis.changeHash();
		};
		var right = new lib_html_Nav();
		var rdiv = right.dir("right");
		rdiv.onclick = function() {
			haxe_Log.trace("right",{ fileName : "Main.hx", lineNumber : 74, className : "Main", methodName : "setupNav"});
			_gthis.count++;
			_gthis.changeHash();
		};
		window.addEventListener("hashchange",function() {
			window.location.reload();
		},false);
		window.addEventListener(Global.KEY_DOWN,function(e) {
			var _g = e.key;
			switch(_g) {
			case "ArrowDown":
				_gthis.count = 0;
				break;
			case "ArrowLeft":
				_gthis.count--;
				break;
			case "ArrowRight":
				_gthis.count++;
				break;
			case "ArrowUp":
				_gthis.count = _gthis.ccTypeArray.length - 1;
				break;
			}
			_gthis.changeHash();
		},false);
	}
	,changeHash: function() {
		var tmp = Type.getClassName(this.ccTypeArray[this.count]);
		window.location.hash = StringTools.replace(tmp,"art.","");
	}
	,__class__: Main
};
Math.__name__ = ["Math"];
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
var SketchOption = function() {
	this._dpi = 72;
	this._padding = 20;
	this._scale = false;
	this._type = "canvas";
	this._container = window.document.body;
	this._autopause = true;
	this._autostart = true;
	this._autoclear = true;
	this._fullscreen = true;
};
$hxClasses["SketchOption"] = SketchOption;
SketchOption.__name__ = ["SketchOption"];
SketchOption.prototype = {
	get_width: function() {
		return this._width;
	}
	,set_width: function(value) {
		this._fullscreen = false;
		if(this._height == null) {
			this._height = value;
		}
		return this._width = value;
	}
	,get_height: function() {
		return this._height;
	}
	,set_height: function(value) {
		this._fullscreen = false;
		if(this._width == null) {
			this._width = value;
		}
		return this._height = value;
	}
	,get_fullscreen: function() {
		return this._fullscreen;
	}
	,set_fullscreen: function(value) {
		return this._fullscreen = value;
	}
	,get_autoclear: function() {
		return this._autoclear;
	}
	,set_autoclear: function(value) {
		return this._autostart = value;
	}
	,get_autostart: function() {
		return this._autostart;
	}
	,set_autostart: function(value) {
		return this._autostart = value;
	}
	,get_autopause: function() {
		return this._autopause;
	}
	,set_autopause: function(value) {
		return this._autopause = value;
	}
	,get_container: function() {
		return this._container;
	}
	,set_container: function(value) {
		return this._container = value;
	}
	,get_type: function() {
		return this._type;
	}
	,set_type: function(value) {
		return this._type = value;
	}
	,get_scale: function() {
		return this._scale;
	}
	,set_scale: function(value) {
		return this._scale = value;
	}
	,get_padding: function() {
		return this._padding;
	}
	,set_padding: function(value) {
		return this._padding = value;
	}
	,get_dpi: function() {
		return this._dpi;
	}
	,set_dpi: function(value) {
		return this._dpi = value;
	}
	,__class__: SketchOption
	,__properties__: {set_dpi:"set_dpi",get_dpi:"get_dpi",set_padding:"set_padding",get_padding:"get_padding",set_scale:"set_scale",get_scale:"get_scale",set_type:"set_type",get_type:"get_type",set_container:"set_container",get_container:"get_container",set_autopause:"set_autopause",get_autopause:"get_autopause",set_autostart:"set_autostart",get_autostart:"get_autostart",set_autoclear:"set_autoclear",get_autoclear:"get_autoclear",set_fullscreen:"set_fullscreen",get_fullscreen:"get_fullscreen",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width"}
};
var Sketch = function() {
	this.document = window.document;
	this.window = window;
};
$hxClasses["Sketch"] = Sketch;
Sketch.__name__ = ["Sketch"];
Sketch.create = function(name,opt) {
	if(opt != null) {
		Sketch.option = opt;
	}
	if(Sketch.option.get_type() == "canvas") {
		return new Sketch().createCanvas(name);
	} else {
		return new Sketch().createGLCanvas(name);
	}
};
Sketch.createHiddenCanvas = function(name,option,isDebug) {
	if(isDebug == null) {
		isDebug = false;
	}
	if(option == null) {
		option = new SketchOption();
	}
	var body = window.document.querySelector("body");
	var canvas = window.document.createElement("canvas");
	body.appendChild(canvas);
	var __w = Math.min(Global.w * 0.50,option.get_width());
	canvas.setAttribute("id","hiddencanvas-" + name);
	canvas.style.position = "absolute";
	canvas.style.left = "0px";
	canvas.style.top = "0px";
	canvas.style.border = "1px solid pink";
	canvas.style.width = "" + __w + "px";
	canvas.width = option.get_width();
	canvas.height = option.get_height();
	if(!isDebug) {
		var tmp = option.get_width();
		canvas.style.left = -(tmp * 1.5) + "px";
	}
	var ctx = canvas.getContext("2d");
	return ctx;
};
Sketch.prototype = {
	createCanvas: function(name) {
		var body = this.document.querySelector("body");
		if(this.document.getElementById("canvas-wrapper") != null) {
			var element = this.document.getElementById("canvas-wrapper");
			element.parentNode.removeChild(element);
			this.window.addEventListener(Global.RESIZE,null,false);
			this.window.addEventListener(Global.MOUSE_MOVE,null,false);
			this.window.addEventListener(Global.MOUSE_DOWN,null,false);
			this.window.addEventListener(Global.MOUSE_UP,null,false);
			this.window.addEventListener(Global.KEY_DOWN,null,false);
		}
		var container = this.document.createElement("div");
		container.setAttribute("id","canvas-wrapper");
		container.className = "canvas-wrapper-container";
		this.canvas = this.document.createElement("canvas");
		this.canvas.setAttribute("id",name);
		body.appendChild(container);
		container.appendChild(this.canvas);
		this.ctx = this.canvas.getContext("2d");
		new Sketch().init(this.ctx);
		this.onResizeHandler();
		this.window.addEventListener(Global.RESIZE,$bind(this,this.onResizeHandler),false);
		return this.ctx;
	}
	,createGLCanvas: function(name) {
		return null;
	}
	,checkForId: function(id) {
		return true;
	}
	,onResizeHandler: function() {
		var c = this.document.getElementsByTagName("canvas");
		if(Sketch.option == null) {
			return;
		}
		if(Sketch.option.get_fullscreen()) {
			Global.w = this.window.innerWidth;
			Global.h = this.window.innerHeight;
			Sketch.option.set_width(Global.w);
			Sketch.option.set_height(Global.h);
		} else {
			Global.w = Sketch.option.get_width();
			Global.h = Sketch.option.get_height();
		}
		var _g1 = 0;
		var _g = c.length;
		while(_g1 < _g) {
			var i = _g1++;
			var _c = c[i];
			if(Sketch.option.get_scale()) {
				var padding = Sketch.option.get_padding();
				var scaleX = (this.window.innerWidth - 2 * padding) / Global.w;
				var scaleY = (this.window.innerHeight - 2 * padding) / Global.h;
				var scale = Math.min(scaleX,scaleY);
				var tmp = "" + Sketch.option.get_width() * scale;
				_c.style.width = tmp + "px";
				var tmp1 = "" + Sketch.option.get_height() * scale;
				_c.style.height = tmp1 + "px";
			}
			if(_c.id.indexOf("hiddencanvas-") != -1) {
				continue;
			}
			_c.width = Global.w;
			_c.height = Global.h;
		}
		window.console.log("RESIZE :: w=" + Global.w + " , h=" + Global.h);
	}
	,init: function(ctx) {
		var _gthis = this;
		this.window.addEventListener(Global.MOUSE_MOVE,function(e) {
			Global.mouseX = e.clientX;
			Global.mouseY = e.clientY;
			Global.mouseMoved = true;
		});
		this.window.addEventListener(Global.MOUSE_DOWN,function(e1) {
			Global.mouseDown = true;
		});
		this.window.addEventListener(Global.MOUSE_UP,function(e2) {
			Global.mouseDown = false;
		});
		this.window.addEventListener(Global.KEY_DOWN,function(e3) {
			if(e3.metaKey == true && e3.key == "r") {
				haxe_Log.trace("cmd + r",{ fileName : "Sketch.hx", lineNumber : 196, className : "Sketch", methodName : "init"});
				window.location.reload();
			}
			if(e3.metaKey == true && e3.key == "s" && e3.shiftKey == false) {
				e3.preventDefault();
				e3.stopPropagation();
				haxe_Log.trace("cmd + s",{ fileName : "Sketch.hx", lineNumber : 202, className : "Sketch", methodName : "init"});
				cc_tool_ExportFile.downloadImageBg(ctx,true);
			}
			if(e3.metaKey == true && e3.key == "s" && e3.shiftKey == true) {
				e3.preventDefault();
				e3.stopPropagation();
				haxe_Log.trace("cmd + shift + s",{ fileName : "Sketch.hx", lineNumber : 208, className : "Sketch", methodName : "init"});
				cc_tool_ExportFile.downloadImage(ctx,false);
			}
			if(e3.metaKey == true && (e3.code == "KeyS" && e3.altKey == true)) {
				e3.preventDefault();
				e3.stopPropagation();
				haxe_Log.trace("cmd + alt + s",{ fileName : "Sketch.hx", lineNumber : 214, className : "Sketch", methodName : "init"});
				cc_tool_ExportFile.onBase64Handler(ctx,true);
			}
			if(e3.metaKey == true && e3.key == "f") {
				if(!Global.isFullscreen) {
					_gthis.openFullscreen();
					Global.isFullscreen = true;
				} else {
					_gthis.closeFullscreen();
					Global.isFullscreen = false;
				}
			}
		},false);
	}
	,openFullscreen: function() {
		var elem = this.document.documentElement;
		if($bind(elem,elem.requestFullscreen) != null) {
			elem.requestFullscreen();
		} else if(elem.mozRequestFullScreen) {
			elem.mozRequestFullScreen();
		} else if(elem.webkitRequestFullscreen) {
			elem.webkitRequestFullscreen();
		} else if(elem.msRequestFullscreen) {
			elem.msRequestFullscreen();
		}
	}
	,closeFullscreen: function() {
		if(($_=this.document,$bind($_,$_.exitFullscreen)) != null) {
			this.document.exitFullscreen();
		} else if(this.document.mozCancelFullScreen) {
			this.document.mozCancelFullScreen();
		} else if(this.document.webkitExitFullscreen) {
			this.document.webkitExitFullscreen();
		} else if(this.document.msExitFullscreen) {
			this.document.msExitFullscreen();
		}
	}
	,__class__: Sketch
};
var SketchBase = function(ctx) {
	this.dpiScale = 1;
	this.isDebug = false;
	this.isDrawActive = true;
	if(this.isDebug) {
		haxe_Log.trace("START :: " + this.toString(),{ fileName : "Sketch.hx", lineNumber : 513, className : "SketchBase", methodName : "new"});
	}
	if(ctx == null) {
		var option = new SketchOption();
		option.set_width(1080);
		option.set_autostart(true);
		option.set_padding(10);
		option.set_scale(true);
		ctx = Sketch.create("creative_code_mck",option);
	}
	this.dpiScale = Sketch.option.get_dpi() / 72;
	this.ctx = ctx;
	window.addEventListener(Global.RESIZE,$bind(this,this._reset),false);
	window.addEventListener(Global.KEY_DOWN,$bind(this,this._keyDown),false);
	window.addEventListener(Global.KEY_UP,$bind(this,this._keyUp),false);
	this.setup();
	this._draw();
};
$hxClasses["SketchBase"] = SketchBase;
SketchBase.__name__ = ["SketchBase"];
SketchBase.prototype = {
	_keyDown: function(e) {
		var _g = e.key;
		if(_g == " ") {
			this.draw();
		}
	}
	,_keyUp: function(e) {
	}
	,_reset: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		this._draw();
	}
	,_draw: function(timestamp) {
		this.draw();
		this.__export();
		if(this.isDrawActive) {
			window.requestAnimationFrame($bind(this,this._draw));
		}
	}
	,setup: function() {
		if(this.isDebug) {
			haxe_Log.trace("SETUP :: " + this.toString() + " -> override public function draw()",{ fileName : "Sketch.hx", lineNumber : 575, className : "SketchBase", methodName : "setup"});
		}
	}
	,draw: function() {
		if(this.isDebug) {
			haxe_Log.trace("DRAW :: " + this.toString() + " -> override public function draw()",{ fileName : "Sketch.hx", lineNumber : 583, className : "SketchBase", methodName : "draw"});
		}
	}
	,__export: function() {
	}
	,pause: function() {
		this.isDrawActive = !this.isDrawActive;
	}
	,stop: function() {
		this.isDrawActive = false;
	}
	,play: function() {
		this.isDrawActive = true;
		this._draw();
	}
	,start: function() {
		this.play();
	}
	,onKeyDown: function(e) {
	}
	,get_w2: function() {
		return Global.w / 2;
	}
	,get_h2: function() {
		return Global.h / 2;
	}
	,get_w4: function() {
		return Global.w / 4;
	}
	,get_h4: function() {
		return Global.h / 4;
	}
	,get_w3: function() {
		return Global.w / 3;
	}
	,get_h3: function() {
		return Global.h / 3;
	}
	,toString: function() {
		var className = Type.getClassName(js_Boot.getClass(this));
		return className;
	}
	,__class__: SketchBase
	,__properties__: {get_h3:"get_h3",get_w3:"get_w3",get_h4:"get_h4",get_w4:"get_w4",get_h2:"get_h2",get_w2:"get_w2"}
};
var Global = function() { };
$hxClasses["Global"] = Global;
Global.__name__ = ["Global"];
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s = c + s;
	return s;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	while(true) {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
var ValueType = { __ename__ : true, __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getEnum = function(o) {
	if(o == null) {
		return null;
	}
	return o.__enum__;
};
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) {
		return null;
	}
	return cl;
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	case 9:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);
	case 10:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);
	case 11:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);
	case 12:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);
	case 13:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);
	case 14:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum(e);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
var Xml = function(nodeType) {
	this.nodeType = nodeType;
	this.children = [];
	this.attributeMap = new haxe_ds_StringMap();
};
$hxClasses["Xml"] = Xml;
Xml.__name__ = ["Xml"];
Xml.parse = function(str) {
	return haxe_xml_Parser.parse(str);
};
Xml.createElement = function(name) {
	var xml = new Xml(Xml.Element);
	if(xml.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + xml.nodeType);
	}
	xml.nodeName = name;
	return xml;
};
Xml.createPCData = function(data) {
	var xml = new Xml(Xml.PCData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createCData = function(data) {
	var xml = new Xml(Xml.CData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createComment = function(data) {
	var xml = new Xml(Xml.Comment);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocType = function(data) {
	var xml = new Xml(Xml.DocType);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createProcessingInstruction = function(data) {
	var xml = new Xml(Xml.ProcessingInstruction);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocument = function() {
	return new Xml(Xml.Document);
};
Xml.prototype = {
	set: function(att,value) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			_this.setReserved(att,value);
		} else {
			_this.h[att] = value;
		}
	}
	,exists: function(att) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			return _this.existsReserved(att);
		} else {
			return _this.h.hasOwnProperty(att);
		}
	}
	,addChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		if(x.parent != null) {
			x.parent.removeChild(x);
		}
		this.children.push(x);
		x.parent = this;
	}
	,removeChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		if(HxOverrides.remove(this.children,x)) {
			x.parent = null;
			return true;
		}
		return false;
	}
	,__class__: Xml
};
var art_ICCBase = function() { };
$hxClasses["art.ICCBase"] = art_ICCBase;
art_ICCBase.__name__ = ["art","ICCBase"];
art_ICCBase.prototype = {
	__class__: art_ICCBase
};
var art_CCBase = function(ctx) {
	this._description = "";
	this._title = "";
	this._type = ["Base"];
	SketchBase.call(this,ctx);
};
$hxClasses["art.CCBase"] = art_CCBase;
art_CCBase.__name__ = ["art","CCBase"];
art_CCBase.__interfaces__ = [art_ICCBase];
art_CCBase.__super__ = SketchBase;
art_CCBase.prototype = $extend(SketchBase.prototype,{
	get_description: function() {
		return this._description;
	}
	,set_description: function(value) {
		return this._description = value;
	}
	,get_title: function() {
		if(this._title == "") {
			this._title = this.toString();
		}
		return this._title;
	}
	,set_title: function(value) {
		return this._title = value;
	}
	,get_type: function() {
		return this._type;
	}
	,set_type: function(value) {
		return this._type = value;
	}
	,__class__: art_CCBase
	,__properties__: $extend(SketchBase.prototype.__properties__,{set_description:"set_description",get_description:"get_description",set_title:"set_title",get_title:"get_title",set_type:"set_type",get_type:"get_type"})
});
var art_CC000 = function(ctx) {
	this.size = 10;
	this.rotate = 0;
	this.ypos = 10;
	this.xpos = 10;
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC000"] = art_CC000;
art_CC000.__name__ = ["art","CC000"];
art_CC000.__interfaces__ = [art_ICCBase];
art_CC000.__super__ = art_CCBase;
art_CC000.prototype = $extend(art_CCBase.prototype,{
	draw: function() {
		haxe_Log.trace("draw: " + this.toString(),{ fileName : "CC000.hx", lineNumber : 25, className : "art.CC000", methodName : "draw"});
		this.rotate++;
		this.size++;
		this.ctx.save();
		this.ctx.translate(Global.w / 2,Global.h / 2);
		this.ctx.rotate(this.rotate);
		cc_CanvasTools.centreStrokeRect(this.ctx,0,0,this.size);
		this.ctx.restore();
		if(this.size >= 1000) {
			this.pause();
		}
	}
	,__class__: art_CC000
});
var art_CC001 = function(ctx) {
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC001"] = art_CC001;
art_CC001.__name__ = ["art","CC001"];
art_CC001.__interfaces__ = [art_ICCBase];
art_CC001.__super__ = art_CCBase;
art_CC001.prototype = $extend(art_CCBase.prototype,{
	draw: function() {
		haxe_Log.trace("draw: " + this.toString(),{ fileName : "CC001.hx", lineNumber : 20, className : "art.CC001", methodName : "draw"});
		cc_CanvasTools.background(this.ctx,0,0,0);
		cc_CanvasTools.fillColour(this.ctx,255,255,255);
		cc_CanvasTools.fillCircle(this.ctx,Global.w / 2,Global.h / 2,100);
		this.pause();
	}
	,__class__: art_CC001
});
var art_CC002 = function(ctx) {
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC002"] = art_CC002;
art_CC002.__name__ = ["art","CC002"];
art_CC002.__interfaces__ = [art_ICCBase];
art_CC002.__super__ = art_CCBase;
art_CC002.prototype = $extend(art_CCBase.prototype,{
	draw: function() {
		haxe_Log.trace("draw: " + this.toString(),{ fileName : "CC002.hx", lineNumber : 21, className : "art.CC002", methodName : "draw"});
		cc_CanvasTools.fillColour(this.ctx,cc_util_ColorUtil.LIME.r,cc_util_ColorUtil.LIME.g,cc_util_ColorUtil.LIME.b);
		cc_CanvasTools.fillEllipse(this.ctx,Global.w / 2,Global.h / 2,100,200);
		this.pause();
	}
	,__class__: art_CC002
});
var art_CC003 = function(ctx) {
	this.ballArray = [];
	this.sizeBall = 20;
	this.maxBalls = 10;
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC003"] = art_CC003;
art_CC003.__name__ = ["art","CC003"];
art_CC003.__interfaces__ = [art_ICCBase];
art_CC003.__super__ = art_CCBase;
art_CC003.prototype = $extend(art_CCBase.prototype,{
	setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC003.hx", lineNumber : 37, className : "art.CC003", methodName : "setup"});
		cc_CanvasTools.background(this.ctx,255,255,255,0.2);
		var _g1 = 0;
		var _g = this.maxBalls;
		while(_g1 < _g) {
			var i = _g1++;
			this.ballArray.push(this.createBall());
		}
	}
	,draw: function() {
		this.moveBall();
		this.drawBall();
	}
	,createBall: function() {
		var ball = { x : cc_util_MathUtil.random(this.sizeBall / 2,Global.w - this.sizeBall / 2), y : cc_util_MathUtil.random(this.sizeBall / 2,Global.h - this.sizeBall / 2), speed_x : cc_util_MathUtil.random(-5,5), speed_y : cc_util_MathUtil.random(-5,5), size : this.sizeBall, colour : cc_util_ColorUtil.rgb(cc_util_MathUtil.randomInt(55),cc_util_MathUtil.randomInt(255),0)};
		return ball;
	}
	,moveBall: function() {
		var _g1 = 0;
		var _g = this.ballArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var b = this.ballArray[i];
			b.x += b.speed_x;
			b.y += b.speed_y;
			if(cc_util_AnimateUtil.bounce(b.x,0,Global.w,b.size)) {
				b.speed_x *= -1;
				b.colour = cc_util_ColorUtil.rgb(cc_util_MathUtil.randomInt(55),cc_util_MathUtil.randomInt(255),0);
			}
			if(cc_util_AnimateUtil.bounce(b.y,0,Global.h,b.size)) {
				b.speed_y *= -1;
				b.colour = cc_util_ColorUtil.rgb(0,cc_util_MathUtil.randomInt(255),cc_util_MathUtil.randomInt(55));
			}
		}
	}
	,drawBall: function() {
		var _g1 = 0;
		var _g = this.ballArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var b = this.ballArray[i];
			this.ctx.fillStyle = b.colour;
			cc_CanvasTools.fillCircle(this.ctx,b.x,b.y,b.size);
		}
	}
	,__class__: art_CC003
});
var art_CC004 = function(ctx) {
	this.ballArray = [];
	this.sizeBall = 3;
	this.maxBalls = 200;
	this.maxDistance = 100;
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC004"] = art_CC004;
art_CC004.__name__ = ["art","CC004"];
art_CC004.__interfaces__ = [art_ICCBase];
art_CC004.__super__ = art_CCBase;
art_CC004.prototype = $extend(art_CCBase.prototype,{
	setup: function() {
		haxe_Log.trace("" + this.toString() + " :: setup()",{ fileName : "CC004.hx", lineNumber : 26, className : "art.CC004", methodName : "setup"});
		this.ballArray = [];
		var _g1 = 0;
		var _g = this.maxBalls;
		while(_g1 < _g) {
			var i = _g1++;
			this.ballArray.push(this.createBall());
		}
	}
	,draw: function() {
		this.moveBall();
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.background(this.ctx,0,0,0);
		this.drawBall();
	}
	,createBall: function() {
		var ball = { x : cc_util_MathUtil.random(this.sizeBall / 2,Global.w - this.sizeBall / 2), y : cc_util_MathUtil.random(this.sizeBall / 2,Global.h - this.sizeBall / 2), speed_x : cc_util_MathUtil.random(-0.5,0.5), speed_y : cc_util_MathUtil.random(-0.5,0.5), size : this.sizeBall, colour : cc_util_ColorUtil.rgb(255,255,255)};
		return ball;
	}
	,moveBall: function() {
		var _g1 = 0;
		var _g = this.ballArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var b = this.ballArray[i];
			b.x += b.speed_x;
			b.y += b.speed_y;
			if(cc_util_AnimateUtil.bounce(b.x,0,Global.w,b.size)) {
				b.speed_x *= -1;
			}
			if(cc_util_AnimateUtil.bounce(b.y,0,Global.h,b.size)) {
				b.speed_y *= -1;
			}
		}
	}
	,drawBall: function() {
		var _g1 = 0;
		var _g = this.ballArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var b1 = this.ballArray[i];
			this.ctx.fillStyle = b1.colour;
			cc_CanvasTools.fillCircle(this.ctx,b1.x,b1.y,b1.size);
			var _g3 = 0;
			var _g2 = this.ballArray.length;
			while(_g3 < _g2) {
				var j = _g3++;
				var b2 = this.ballArray[j];
				if(b1 == b2) {
					continue;
				}
				var _dist = cc_util_MathUtil.distance(b1.x,b1.y,b2.x,b2.y);
				if(_dist < this.maxDistance) {
					var alpha = 0.8 - _dist / this.maxDistance;
					cc_CanvasTools.lineColour(this.ctx,cc_util_ColorUtil.WHITE.r,cc_util_ColorUtil.WHITE.g,cc_util_ColorUtil.WHITE.b,alpha);
					cc_CanvasTools.line(this.ctx,b1.x,b1.y,b2.x,b2.y);
				}
			}
		}
	}
	,__class__: art_CC004
});
var art_CC005 = function(ctx) {
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC005"] = art_CC005;
art_CC005.__name__ = ["art","CC005"];
art_CC005.__interfaces__ = [art_ICCBase];
art_CC005.__super__ = art_CCBase;
art_CC005.prototype = $extend(art_CCBase.prototype,{
	setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC005.hx", lineNumber : 17, className : "art.CC005", methodName : "setup"});
		var padding = 100;
		var arr = cc_util_GridUtil.createGrid(padding,padding,Global.w - 2 * padding,Global.h - 2 * padding,3,4);
		var _g1 = 0;
		var _g = arr.length;
		while(_g1 < _g) {
			var i = _g1++;
			var point = arr[i];
			cc_util_ShapeUtil.registerPoint(this.ctx,point.x,point.y);
		}
		var _size = 50;
		var _width = _size;
		var _height = 25;
		cc_CanvasTools.colour(this.ctx,cc_util_ColorUtil.NAVY.r,cc_util_ColorUtil.NAVY.g,cc_util_ColorUtil.NAVY.b,0.5);
		var point1 = arr[0];
		cc_CanvasTools.centreFillRect(this.ctx,point1.x,point1.y,_size,_size);
		var point2 = arr[1];
		cc_CanvasTools.circle(this.ctx,point2.x,point2.y,_size);
		var point3 = arr[2];
		cc_CanvasTools.fillEllipse(this.ctx,point3.x,point3.y,_width,_height);
		var point4 = arr[3];
		cc_CanvasTools.lineColour(this.ctx,cc_util_ColorUtil.NAVY.r,cc_util_ColorUtil.NAVY.g,cc_util_ColorUtil.NAVY.b,0.5);
		cc_CanvasTools.line(this.ctx,point4.x,point4.y,point4.x + _width,point4.y + _height);
		var point5 = arr[4];
		cc_CanvasTools.fillTriangle(this.ctx,point5.x,point5.y - _height,point5.x - _width,point5.y - _height,point5.x + _width,point5.y + _height);
		var point6 = arr[5];
		cc_CanvasTools.fillPolygon(this.ctx,point6.x,point6.y,8,_size);
		var point7 = arr[6];
		cc_CanvasTools.fillPolygon(this.ctx,point7.x,point7.y,3,_size);
		var point8 = arr[7];
		cc_CanvasTools.eqDownFillTriangle(this.ctx,point8.x,point8.y,_size);
		var point9 = arr[8];
		cc_CanvasTools.eqDownTriangle(this.ctx,point9.x,point9.y,_size);
		var point10 = arr[9];
		cc_CanvasTools.roundRect(this.ctx,point10.x,point10.y,100,100,10);
		cc_draw_Text.fillText(this.ctx,"Matthijs Kamstra aka [mck]",padding / 2,padding / 2,"Unica+One");
		cc_draw_Text.fillText(this.ctx,"Matthijs Kamstra aka [mck]",padding / 2,padding * 2,"Nova+Mono");
	}
	,draw: function() {
		this.stop();
	}
	,__class__: art_CC005
});
var art_CC006 = function(ctx) {
	var _gthis = this;
	art_CCBase.call(this,ctx);
	window.addEventListener(Global.KEY_DOWN,function(e) {
		if(e.key == " ") {
			haxe_Log.trace("redraw",{ fileName : "CC006.hx", lineNumber : 12, className : "art.CC006", methodName : "new"});
			_gthis.setup();
		}
	},false);
};
$hxClasses["art.CC006"] = art_CC006;
art_CC006.__name__ = ["art","CC006"];
art_CC006.__interfaces__ = [art_ICCBase];
art_CC006.__super__ = art_CCBase;
art_CC006.prototype = $extend(art_CCBase.prototype,{
	setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC006.hx", lineNumber : 19, className : "art.CC006", methodName : "setup"});
		var _size = 50;
		var _x = 0;
		var _y = 0;
		var _numHor = Math.ceil(Global.w / _size);
		var _numVer = Math.ceil(Global.h / _size);
		var arr = cc_util_GridUtil.createGrid(_x,_y,Global.w - 2 * _x,Global.h - 2 * _y,_numHor,_numVer);
		if(this.isDebug) {
			cc_util_ShapeUtil.gridRegister(this.ctx,arr);
		}
		var _g1 = 0;
		var _g = arr.length;
		while(_g1 < _g) {
			var i = _g1++;
			var p = arr[i];
			var c = cc_util_ColorUtil.randomColour();
			this.ctx.fillStyle = c;
			cc_CanvasTools.strokeWeight(this.ctx,0);
			cc_CanvasTools.centreFillRect(this.ctx,p.x,p.y,_size,_size);
		}
	}
	,draw: function() {
		haxe_Log.trace("draw: " + this.toString(),{ fileName : "CC006.hx", lineNumber : 39, className : "art.CC006", methodName : "draw"});
		this.stop();
	}
	,__class__: art_CC006
});
var art_CC007 = function(ctx) {
	this.ballArray = [];
	this.sizeBall = 10;
	this.maxBalls = 100;
	this.maxDistance = 100;
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC007"] = art_CC007;
art_CC007.__name__ = ["art","CC007"];
art_CC007.__interfaces__ = [art_ICCBase];
art_CC007.__super__ = art_CCBase;
art_CC007.prototype = $extend(art_CCBase.prototype,{
	testTimer: function() {
		this.startTime = new Date().getTime() / 1000;
		this.startDate = new Date().getTime();
		this.onCompleteHandler(null);
		var Go = new cc_lets_Go({ },1);
		var _this = Go;
		_this._options.onComplete = $bind(this,this.onCompleteHandler);
		_this._options.onCompleteParams = [1];
		var Go1 = new cc_lets_Go({ },2);
		var _this1 = Go1;
		_this1._options.onComplete = $bind(this,this.onCompleteHandler);
		_this1._options.onCompleteParams = [2];
		var Go2 = new cc_lets_Go({ },5);
		var _this2 = Go2;
		_this2._options.onComplete = $bind(this,this.onCompleteHandler);
		_this2._options.onCompleteParams = [5];
		var Go3 = new cc_lets_Go({ },1.5);
		var _this3 = Go3;
		_this3._options.onComplete = $bind(this,this.onCompleteHandler);
		_this3._options.onCompleteParams = [1.5];
		var Go4 = new cc_lets_Go({ },2);
		var _this4 = Go4;
		_this4._options.onComplete = $bind(this,this.onCompleteHandler);
		_this4._options.onCompleteParams = [2];
		var Go5 = new cc_lets_Go({ },4);
		var _this5 = Go5;
		_this5._options.onComplete = $bind(this,this.onCompleteHandler);
		_this5._options.onCompleteParams = [4];
		var Go6 = new cc_lets_Go({ },8);
		var _this6 = Go6;
		_this6._options.onComplete = $bind(this,this.onCompleteHandler);
		_this6._options.onCompleteParams = [8];
	}
	,onCompleteHandler: function(value) {
		var totalTime = new Date().getTime() / 1000 - this.startTime;
		var totalDate = (new Date().getTime() - this.startDate) / 1000;
		haxe_Log.trace("done: " + value + " seconds - date: " + totalDate + " , time: " + totalTime,{ fileName : "CC007.hx", lineNumber : 36, className : "art.CC007", methodName : "onCompleteHandler"});
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC007.hx", lineNumber : 40, className : "art.CC007", methodName : "setup"});
		this.ballArray = [];
		var _g1 = 0;
		var _g = this.maxBalls;
		while(_g1 < _g) {
			var i = _g1++;
			var ball = this.createBall();
			this.ballArray.push(ball);
			this.ballAnimate(ball);
		}
	}
	,ballAnimate: function(ball) {
		var Go = new cc_lets_Go(ball,cc_util_MathUtil.random(1,10));
		Go._isFrom = false;
		var _this = Go;
		var value = cc_util_MathUtil.random(0,Global.w);
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"x")) {
			objValue = Reflect.getProperty(_this._target,"x");
		}
		var _range = { key : "x", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("x",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		var value1 = cc_util_MathUtil.random(0,Global.h);
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"y")) {
			objValue1 = Reflect.getProperty(_this1._target,"y");
		}
		var _range1 = { key : "y", from : _this1._isFrom ? value1 : objValue1, to : !_this1._isFrom ? value1 : objValue1};
		_this1._props.set("y",_range1);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		_this2._options.onComplete = $bind(this,this.ballAnimate);
		_this2._options.onCompleteParams = [ball];
		var _this3 = _this2;
		_this3._easing = cc_lets_easing_Sine.get_easeInOut();
	}
	,createBall: function() {
		var ball = { x : cc_util_MathUtil.random(this.sizeBall / 2,Global.w - this.sizeBall / 2), y : cc_util_MathUtil.random(this.sizeBall / 2,Global.h - this.sizeBall / 2), size : cc_util_MathUtil.random(this.sizeBall,this.sizeBall * 4), color : cc_util_ColorUtil.randomColour()};
		return ball;
	}
	,drawBall: function() {
		var _g1 = 0;
		var _g = this.ballArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var b1 = this.ballArray[i];
			this.ctx.fillStyle = b1.color;
			cc_CanvasTools.fillCircle(this.ctx,b1.x,b1.y,b1.size);
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.background(this.ctx,cc_util_ColorUtil.WHITE.r,cc_util_ColorUtil.WHITE.g,cc_util_ColorUtil.WHITE.b);
		this.drawBall();
	}
	,__class__: art_CC007
});
var art_CC008 = function(ctx) {
	this.shapeArray = [];
	this.shapeSize = 15;
	this.shapeMax = 10;
	art_CCBase.call(this,ctx);
	this.set_description("lets.Go tests with rotation, delay, easing");
	cc_util_HelperUtil.stats();
};
$hxClasses["art.CC008"] = art_CC008;
art_CC008.__name__ = ["art","CC008"];
art_CC008.__interfaces__ = [art_ICCBase];
art_CC008.__super__ = art_CCBase;
art_CC008.prototype = $extend(art_CCBase.prototype,{
	createShape: function(y) {
		var shape = { x : 100, y : this.shapeSize * 5 + this.shapeSize * 5 * y, width : Math.round(cc_util_MathUtil.random(this.shapeSize,this.shapeSize * 4)), height : Math.round(cc_util_MathUtil.random(this.shapeSize,this.shapeSize * 4)), rotation : 0, color : cc_util_ColorUtil.randomColour()};
		return shape;
	}
	,drawShape: function() {
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			this.ctx.fillStyle = sh.color;
			this.ctx.save();
			this.ctx.translate(sh.x,sh.y);
			this.ctx.rotate(cc_util_MathUtil.radians(sh.rotation));
			cc_CanvasTools.centreFillRect(this.ctx,0,0,sh.width,sh.height);
			this.ctx.restore();
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC008.hx", lineNumber : 57, className : "art.CC008", methodName : "setup"});
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.shapeMax;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.createShape(i);
			this.shapeArray.push(sh);
		}
		var _shape = this.shapeArray[0];
		var Go = new cc_lets_Go(_shape,2);
		Go._isFrom = false;
		var _this = Go;
		var value = _shape.x + (Global.w - _shape.x * 2);
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"x")) {
			objValue = Reflect.getProperty(_this._target,"x");
		}
		var _range = { key : "x", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("x",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _shape1 = this.shapeArray[1];
		var Go1 = new cc_lets_Go(_shape1,2);
		Go1._isFrom = false;
		var _this1 = Go1;
		var value1 = _shape1.x + (Global.w - _shape1.x * 2);
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"x")) {
			objValue1 = Reflect.getProperty(_this1._target,"x");
		}
		var _range1 = { key : "x", from : _this1._isFrom ? value1 : objValue1, to : !_this1._isFrom ? value1 : objValue1};
		_this1._props.set("x",_range1);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		_this2._isYoyo = true;
		var _shape2 = this.shapeArray[2];
		var Go2 = new cc_lets_Go(_shape2,2);
		Go2._isFrom = true;
		Go2.updateProperties(0);
		var _this3 = Go2;
		var value2 = _shape2.x + (Global.w - _shape2.x * 2);
		var objValue2 = 0;
		if(Object.prototype.hasOwnProperty.call(_this3._target,"x")) {
			objValue2 = Reflect.getProperty(_this3._target,"x");
		}
		var _range2 = { key : "x", from : _this3._isFrom ? value2 : objValue2, to : !_this3._isFrom ? value2 : objValue2};
		_this3._props.set("x",_range2);
		if(_this3._isFrom) {
			_this3.updateProperties(0);
		}
		var _this4 = _this3;
		_this4._isYoyo = true;
		var _shape3 = this.shapeArray[3];
		var Go3 = new cc_lets_Go(_shape3,2);
		Go3._isFrom = false;
		var _this5 = Go3;
		var value3 = _shape3.x + (Global.w - _shape3.x * 2);
		var objValue3 = 0;
		if(Object.prototype.hasOwnProperty.call(_this5._target,"x")) {
			objValue3 = Reflect.getProperty(_this5._target,"x");
		}
		var _range3 = { key : "x", from : _this5._isFrom ? value3 : objValue3, to : !_this5._isFrom ? value3 : objValue3};
		_this5._props.set("x",_range3);
		if(_this5._isFrom) {
			_this5.updateProperties(0);
		}
		var _this6 = _this5;
		var value4 = _shape3.y + 100;
		var objValue4 = 0;
		if(Object.prototype.hasOwnProperty.call(_this6._target,"y")) {
			objValue4 = Reflect.getProperty(_this6._target,"y");
		}
		var _range4 = { key : "y", from : _this6._isFrom ? value4 : objValue4, to : !_this6._isFrom ? value4 : objValue4};
		_this6._props.set("y",_range4);
		if(_this6._isFrom) {
			_this6.updateProperties(0);
		}
		var _this7 = _this6;
		_this7._isYoyo = true;
		var _shape4 = this.shapeArray[4];
		var Go4 = new cc_lets_Go(_shape4,2);
		Go4._isFrom = false;
		var _this8 = Go4;
		var value5 = _shape4.x + (Global.w - _shape4.x * 2);
		var objValue5 = 0;
		if(Object.prototype.hasOwnProperty.call(_this8._target,"x")) {
			objValue5 = Reflect.getProperty(_this8._target,"x");
		}
		var _range5 = { key : "x", from : _this8._isFrom ? value5 : objValue5, to : !_this8._isFrom ? value5 : objValue5};
		_this8._props.set("x",_range5);
		if(_this8._isFrom) {
			_this8.updateProperties(0);
		}
		var _this9 = _this8;
		var objValue6 = 0;
		if(Object.prototype.hasOwnProperty.call(_this9._target,"rotation")) {
			objValue6 = Reflect.getProperty(_this9._target,"rotation");
		}
		var _range6 = { key : "rotation", from : _this9._isFrom ? 180 : objValue6, to : !_this9._isFrom ? 180 : objValue6};
		_this9._props.set("rotation",_range6);
		if(_this9._isFrom) {
			_this9.updateProperties(0);
		}
		var _this10 = _this9;
		_this10._isYoyo = true;
		var _this11 = _this10;
		_this11._options.onUpdate = $bind(this,this.onUpdateHandler);
		_this11._options.onUpdateParams = [4];
		var _shape5 = this.shapeArray[5];
		var Go5 = new cc_lets_Go(_shape5,2);
		Go5._isFrom = false;
		var _this12 = Go5;
		var value6 = _shape5.x + (Global.w - _shape5.x * 2);
		var objValue7 = 0;
		if(Object.prototype.hasOwnProperty.call(_this12._target,"x")) {
			objValue7 = Reflect.getProperty(_this12._target,"x");
		}
		var _range7 = { key : "x", from : _this12._isFrom ? value6 : objValue7, to : !_this12._isFrom ? value6 : objValue7};
		_this12._props.set("x",_range7);
		if(_this12._isFrom) {
			_this12.updateProperties(0);
		}
		var _this13 = _this12;
		var objValue8 = 0;
		if(Object.prototype.hasOwnProperty.call(_this13._target,"foobar")) {
			objValue8 = Reflect.getProperty(_this13._target,"foobar");
		}
		var _range8 = { key : "foobar", from : _this13._isFrom ? 180 : objValue8, to : !_this13._isFrom ? 180 : objValue8};
		_this13._props.set("foobar",_range8);
		if(_this13._isFrom) {
			_this13.updateProperties(0);
		}
		var _this14 = _this13;
		_this14._options.onUpdate = $bind(this,this.onUpdateHandler);
		_this14._options.onUpdateParams = [5];
		var _this15 = _this14;
		_this15._options.onComplete = $bind(this,this.onCompleteHandler);
		_this15._options.onCompleteParams = [5];
		var _shape6 = this.shapeArray[6];
		var Go6 = new cc_lets_Go(_shape6,2);
		Go6._isFrom = false;
		var _this16 = Go6;
		var value7 = _shape6.x + (Global.w - _shape6.x * 2);
		var objValue9 = 0;
		if(Object.prototype.hasOwnProperty.call(_this16._target,"x")) {
			objValue9 = Reflect.getProperty(_this16._target,"x");
		}
		var _range9 = { key : "x", from : _this16._isFrom ? value7 : objValue9, to : !_this16._isFrom ? value7 : objValue9};
		_this16._props.set("x",_range9);
		if(_this16._isFrom) {
			_this16.updateProperties(0);
		}
		var _this17 = _this16;
		_this17._delay = _this17.getDuration(.7);
		var _this18 = _this17;
		var objValue10 = 0;
		if(Object.prototype.hasOwnProperty.call(_this18._target,"rotation")) {
			objValue10 = Reflect.getProperty(_this18._target,"rotation");
		}
		var _range10 = { key : "rotation", from : _this18._isFrom ? 360 : objValue10, to : !_this18._isFrom ? 360 : objValue10};
		_this18._props.set("rotation",_range10);
		if(_this18._isFrom) {
			_this18.updateProperties(0);
		}
		var _this19 = _this18;
		_this19._isYoyo = true;
		var _shape7 = this.shapeArray[7];
		var Go7 = new cc_lets_Go(_shape7,2);
		Go7._isFrom = false;
		var _this20 = Go7;
		var value8 = _shape7.x + (Global.w - _shape7.x * 2);
		var objValue11 = 0;
		if(Object.prototype.hasOwnProperty.call(_this20._target,"x")) {
			objValue11 = Reflect.getProperty(_this20._target,"x");
		}
		var _range11 = { key : "x", from : _this20._isFrom ? value8 : objValue11, to : !_this20._isFrom ? value8 : objValue11};
		_this20._props.set("x",_range11);
		if(_this20._isFrom) {
			_this20.updateProperties(0);
		}
		var _this21 = _this20;
		var objValue12 = 0;
		if(Object.prototype.hasOwnProperty.call(_this21._target,"rotation")) {
			objValue12 = Reflect.getProperty(_this21._target,"rotation");
		}
		var _range12 = { key : "rotation", from : _this21._isFrom ? 360 : objValue12, to : !_this21._isFrom ? 360 : objValue12};
		_this21._props.set("rotation",_range12);
		if(_this21._isFrom) {
			_this21.updateProperties(0);
		}
		var _this22 = _this21;
		_this22._isYoyo = true;
		var _this23 = _this22;
		_this23._easing = cc_lets_easing_Sine.get_easeInOut();
	}
	,onUpdateHandler: function(value) {
		var _shape = this.shapeArray[value];
		switch(value) {
		case 4:
			haxe_Log.trace("onUpdateHandler - rotation: " + _shape.rotation,{ fileName : "CC008.hx", lineNumber : 85, className : "art.CC008", methodName : "onUpdateHandler"});
			break;
		case 5:
			haxe_Log.trace("onUpdateHandler - foobar: " + _shape.foobar,{ fileName : "CC008.hx", lineNumber : 86, className : "art.CC008", methodName : "onUpdateHandler"});
			break;
		default:
			haxe_Log.trace("case " + value + ": trace ('" + value + "');",{ fileName : "CC008.hx", lineNumber : 87, className : "art.CC008", methodName : "onUpdateHandler"});
		}
	}
	,onCompleteHandler: function(value) {
		var _shape = this.shapeArray[value];
		switch(value) {
		case 4:
			haxe_Log.trace("onCompleteHandler - rotation: " + _shape.rotation,{ fileName : "CC008.hx", lineNumber : 94, className : "art.CC008", methodName : "onCompleteHandler"});
			break;
		case 5:
			haxe_Log.trace("onCompleteHandler - foobar: " + _shape.foobar,{ fileName : "CC008.hx", lineNumber : 95, className : "art.CC008", methodName : "onCompleteHandler"});
			break;
		default:
			haxe_Log.trace("case " + value + ": trace ('" + value + "');",{ fileName : "CC008.hx", lineNumber : 96, className : "art.CC008", methodName : "onCompleteHandler"});
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.background(this.ctx,cc_util_ColorUtil.WHITE.r,cc_util_ColorUtil.WHITE.g,cc_util_ColorUtil.WHITE.b);
		this.drawShape();
	}
	,__class__: art_CC008
});
var art_CC009 = function(ctx) {
	this.shapeArray = [];
	this.shapeSize = 15;
	this.shapeMax = 1000;
	art_CCBase.call(this,ctx);
	this.set_description("Stars in the sky");
};
$hxClasses["art.CC009"] = art_CC009;
art_CC009.__name__ = ["art","CC009"];
art_CC009.__interfaces__ = [art_ICCBase];
art_CC009.__super__ = art_CCBase;
art_CC009.prototype = $extend(art_CCBase.prototype,{
	createShape: function() {
		var shape = { x : Global.w / 2, y : Global.h / 2, size : 1, alpha : 0, color : cc_util_ColorUtil.getColourObj(cc_util_ColorUtil.WHITE)};
		shape["r"] = cc_util_ColorUtil.WHITE.r;
		shape["g"] = cc_util_ColorUtil.WHITE.g;
		shape["b"] = cc_util_ColorUtil.WHITE.b;
		this.onCompleteHandler(shape);
		return shape;
	}
	,point: function() {
		var _x = cc_util_MathUtil.random(-Global.w,Global.w * 3);
		var _y = cc_util_MathUtil.random(-Global.h,Global.h * 3);
		if(_x > 0 && _x < Global.w && _y > 0 && _y < Global.h) {
			_x += Global.w;
		}
		return { x : _x, y : _y};
	}
	,onCompleteHandler: function(shape) {
		shape.x = Global.w / 2;
		shape.y = Global.h / 2;
		shape.size = 1;
		shape.alpha = 0;
		var point = this.point();
		var time = cc_util_MathUtil.random(2);
		var Go = new cc_lets_Go(shape,time);
		Go._isFrom = false;
		var _this = Go;
		var value = point.x;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"x")) {
			objValue = Reflect.getProperty(_this._target,"x");
		}
		var _range = { key : "x", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("x",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		var value1 = point.y;
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"y")) {
			objValue1 = Reflect.getProperty(_this1._target,"y");
		}
		var _range1 = { key : "y", from : _this1._isFrom ? value1 : objValue1, to : !_this1._isFrom ? value1 : objValue1};
		_this1._props.set("y",_range1);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		var objValue2 = 0;
		if(Object.prototype.hasOwnProperty.call(_this2._target,"alpha")) {
			objValue2 = Reflect.getProperty(_this2._target,"alpha");
		}
		var _range2 = { key : "alpha", from : _this2._isFrom ? 1 : objValue2, to : !_this2._isFrom ? 1 : objValue2};
		_this2._props.set("alpha",_range2);
		if(_this2._isFrom) {
			_this2.updateProperties(0);
		}
		var _this3 = _this2;
		var value2 = cc_util_MathUtil.randomInt(10);
		var objValue3 = 0;
		if(Object.prototype.hasOwnProperty.call(_this3._target,"size")) {
			objValue3 = Reflect.getProperty(_this3._target,"size");
		}
		var _range3 = { key : "size", from : _this3._isFrom ? value2 : objValue3, to : !_this3._isFrom ? value2 : objValue3};
		_this3._props.set("size",_range3);
		if(_this3._isFrom) {
			_this3.updateProperties(0);
		}
		var _this4 = _this3;
		_this4._easing = cc_lets_easing_Sine.get_easeInOut();
		var _this5 = _this4;
		_this5._delay = _this5.getDuration(time);
		var _this6 = _this5;
		_this6._options.onComplete = $bind(this,this.onCompleteHandler);
		_this6._options.onCompleteParams = [shape];
	}
	,drawShape: function() {
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			this.ctx.fillStyle = cc_util_ColorUtil.getColour(sh.r,sh.g,sh.b,sh.alpha);
			cc_CanvasTools.circle(this.ctx,sh.x,sh.y,sh.size);
		}
	}
	,setup: function() {
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.shapeMax;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.createShape();
			this.shapeArray.push(sh);
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.BLACK);
		this.drawShape();
	}
	,__class__: art_CC009
});
var art_CC010 = function(ctx) {
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("Animating text");
	cc_draw_Text.embedGoogleFont("UnifrakturMaguntia",$bind(this,this.onEmbedHandler));
	cc_draw_Text.embedGoogleFont("Press+Start+2P",$bind(this,this.onEmbedHandler));
};
$hxClasses["art.CC010"] = art_CC010;
art_CC010.__name__ = ["art","CC010"];
art_CC010.__interfaces__ = [art_ICCBase];
art_CC010.__super__ = art_CCBase;
art_CC010.prototype = $extend(art_CCBase.prototype,{
	onEmbedHandler: function(e) {
		haxe_Log.trace("Embed: \"" + e + "\"",{ fileName : "CC010.hx", lineNumber : 19, className : "art.CC010", methodName : "onEmbedHandler"});
	}
	,createText: function() {
		var shape = { x : Global.w / 2, y : Global.h / 2 + 20, alpha : 1, size : 60, type : "text"};
		shape["text"] = this.toString();
		shape["r"] = cc_util_ColorUtil.BLACK.r;
		shape["g"] = cc_util_ColorUtil.BLACK.g;
		shape["b"] = cc_util_ColorUtil.BLACK.b;
		var ypos1 = shape.y - 100;
		var ypos2 = shape.y + 100;
		var Go = new cc_lets_Go(shape,1.0);
		Go._isFrom = true;
		Go.updateProperties(0);
		var _this = Go;
		var value = shape.x;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"x")) {
			objValue = Reflect.getProperty(_this._target,"x");
		}
		var _range = { key : "x", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("x",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"y")) {
			objValue1 = Reflect.getProperty(_this1._target,"y");
		}
		var _range1 = { key : "y", from : _this1._isFrom ? ypos1 : objValue1, to : !_this1._isFrom ? ypos1 : objValue1};
		_this1._props.set("y",_range1);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		var objValue2 = 0;
		if(Object.prototype.hasOwnProperty.call(_this2._target,"alpha")) {
			objValue2 = Reflect.getProperty(_this2._target,"alpha");
		}
		var _range2 = { key : "alpha", from : _this2._isFrom ? 0 : objValue2, to : !_this2._isFrom ? 0 : objValue2};
		_this2._props.set("alpha",_range2);
		if(_this2._isFrom) {
			_this2.updateProperties(0);
		}
		var _this3 = _this2;
		var objValue3 = 0;
		if(Object.prototype.hasOwnProperty.call(_this3._target,"size")) {
			objValue3 = Reflect.getProperty(_this3._target,"size");
		}
		var _range3 = { key : "size", from : _this3._isFrom ? 50 : objValue3, to : !_this3._isFrom ? 50 : objValue3};
		_this3._props.set("size",_range3);
		if(_this3._isFrom) {
			_this3.updateProperties(0);
		}
		var _this4 = _this3;
		_this4._easing = cc_lets_easing_Sine.get_easeOut();
		var _this5 = _this4;
		_this5._delay = _this5.getDuration(2);
		var Go1 = new cc_lets_Go(shape,1.0);
		Go1._isFrom = false;
		var _this6 = Go1;
		var value1 = shape.x;
		var objValue4 = 0;
		if(Object.prototype.hasOwnProperty.call(_this6._target,"x")) {
			objValue4 = Reflect.getProperty(_this6._target,"x");
		}
		var _range4 = { key : "x", from : _this6._isFrom ? value1 : objValue4, to : !_this6._isFrom ? value1 : objValue4};
		_this6._props.set("x",_range4);
		if(_this6._isFrom) {
			_this6.updateProperties(0);
		}
		var _this7 = _this6;
		var objValue5 = 0;
		if(Object.prototype.hasOwnProperty.call(_this7._target,"y")) {
			objValue5 = Reflect.getProperty(_this7._target,"y");
		}
		var _range5 = { key : "y", from : _this7._isFrom ? ypos2 : objValue5, to : !_this7._isFrom ? ypos2 : objValue5};
		_this7._props.set("y",_range5);
		if(_this7._isFrom) {
			_this7.updateProperties(0);
		}
		var _this8 = _this7;
		var objValue6 = 0;
		if(Object.prototype.hasOwnProperty.call(_this8._target,"alpha")) {
			objValue6 = Reflect.getProperty(_this8._target,"alpha");
		}
		var _range6 = { key : "alpha", from : _this8._isFrom ? 0 : objValue6, to : !_this8._isFrom ? 0 : objValue6};
		_this8._props.set("alpha",_range6);
		if(_this8._isFrom) {
			_this8.updateProperties(0);
		}
		var _this9 = _this8;
		var objValue7 = 0;
		if(Object.prototype.hasOwnProperty.call(_this9._target,"size")) {
			objValue7 = Reflect.getProperty(_this9._target,"size");
		}
		var _range7 = { key : "size", from : _this9._isFrom ? 50 : objValue7, to : !_this9._isFrom ? 50 : objValue7};
		_this9._props.set("size",_range7);
		if(_this9._isFrom) {
			_this9.updateProperties(0);
		}
		var _this10 = _this9;
		_this10._easing = cc_lets_easing_Sine.get_easeIn();
		var _this11 = _this10;
		_this11._delay = _this11.getDuration(5.5);
		return shape;
	}
	,createBall: function() {
		var shape = { x : Global.w / 2, y : Global.h / 2, size : 50, alpha : 1, color : cc_util_ColorUtil.getColourObj(cc_util_ColorUtil.FUCHSIA), type : "ball"};
		shape["r"] = cc_util_ColorUtil.FUCHSIA.r;
		shape["g"] = cc_util_ColorUtil.FUCHSIA.g;
		shape["b"] = cc_util_ColorUtil.FUCHSIA.b;
		shape["angle"] = 0;
		return shape;
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC010.hx", lineNumber : 63, className : "art.CC010", methodName : "setup"});
		this.shapeArray = [];
		this.shapeArray.push(this.createBall());
		this.shapeArray.push(this.createText());
	}
	,drawShape: function() {
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			if(sh.type == "text") {
				this.ctx.fillStyle = cc_util_ColorUtil.getColour(sh.r,sh.g,sh.b,sh.alpha);
				cc_draw_Text.centerFillText(this.ctx,sh.text,sh.x,sh.y,"'UnifrakturMaguntia', cursive",Math.round(sh.size));
			}
			if(sh.type == "ball") {
				var radius = 50;
				var speed = 2;
				sh.angle += speed;
				sh.x = Global.w / 2 + Math.cos(cc_util_MathUtil.radians(sh.angle)) * radius;
				sh.y = Global.h / 2 + Math.sin(cc_util_MathUtil.radians(sh.angle)) * radius;
				this.ctx.fillStyle = cc_util_ColorUtil.getColour(sh.r,sh.g,sh.b,sh.alpha);
				cc_CanvasTools.circle(this.ctx,sh.x,sh.y,sh.size);
			}
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		this.drawShape();
	}
	,__class__: art_CC010
});
var art_CC011 = function(ctx) {
	this.divide = 4;
	this.radius1 = 350;
	this.radius0 = 150;
	this.shapeMax = Math.round(90.);
	this.shapeArray2 = [];
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("Equalizer with sound");
};
$hxClasses["art.CC011"] = art_CC011;
art_CC011.__name__ = ["art","CC011"];
art_CC011.__interfaces__ = [art_ICCBase];
art_CC011.__super__ = art_CCBase;
art_CC011.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i) {
		var angle = i * this.divide;
		var line = { _id : i, x1 : Global.w / 2 + Math.cos(cc_util_MathUtil.radians(angle)) * this.radius0, y1 : Global.h / 2 + Math.sin(cc_util_MathUtil.radians(angle)) * this.radius0, x2 : Global.w / 2 + Math.cos(cc_util_MathUtil.radians(angle)) * this.radius1, y2 : Global.h / 2 + Math.sin(cc_util_MathUtil.radians(angle)) * this.radius1, stroke : 10, radius : cc_util_MathUtil.random(this.radius0,this.radius1)};
		this.onCompleteHandler(line);
		return line;
	}
	,createX: function(i) {
		var obj = { _id : i, r : cc_util_ColorUtil.WHITE.r, g : cc_util_ColorUtil.WHITE.g, b : cc_util_ColorUtil.WHITE.b, a : 1, rotation : 0, x : Global.w / 2, y : Global.h / 2, size : 160, stroke : 80};
		this.onXHandler(obj);
		return obj;
	}
	,drawShape: function() {
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var line = this.shapeArray[i];
			var angle = i * this.divide;
			line.x2 = Global.w / 2 + Math.cos(cc_util_MathUtil.radians(angle)) * line.radius;
			line.y2 = Global.h / 2 + Math.sin(cc_util_MathUtil.radians(angle)) * line.radius;
			cc_CanvasTools.lineColour(this.ctx,cc_util_ColorUtil.WHITE.r,cc_util_ColorUtil.WHITE.g,cc_util_ColorUtil.WHITE.b,1);
			this.ctx.lineWidth = line.stroke;
			cc_CanvasTools.line(this.ctx,line.x1,line.y1,line.x2,line.y2);
		}
		var _g11 = 0;
		var _g2 = this.shapeArray2.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var shape = this.shapeArray2[i1];
			this.ctx.save();
			this.ctx.translate(shape.x,shape.y);
			this.ctx.rotate(cc_util_MathUtil.radians(shape.rotation));
			cc_CanvasTools.strokeColour(this.ctx,shape.r,shape.g,shape.b,shape.a);
			cc_util_ShapeUtil.xcross(this.ctx,0,0,shape.size,shape.stroke);
			this.ctx.restore();
		}
	}
	,onUpdateHandler: function(e) {
		haxe_Log.trace("update: " + e,{ fileName : "CC011.hx", lineNumber : 79, className : "art.CC011", methodName : "onUpdateHandler"});
	}
	,onCompleteHandler: function(line) {
		var Go = new cc_lets_Go(line,cc_util_MathUtil.random(0.5,1.5));
		Go._isFrom = false;
		var _this = Go;
		var value = cc_util_MathUtil.random(this.radius0,this.radius1);
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"radius")) {
			objValue = Reflect.getProperty(_this._target,"radius");
		}
		var _range = { key : "radius", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("radius",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		_this1._easing = cc_lets_easing_Sine.get_easeInOut();
		var _this2 = _this1;
		_this2._options.onComplete = $bind(this,this.onCompleteHandler);
		_this2._options.onCompleteParams = [line];
	}
	,onXHandler: function(obj) {
		var Go = new cc_lets_Go(obj,cc_util_MathUtil.random(0.5,1.5));
		Go._isFrom = false;
		var _this = Go;
		var value = cc_util_MathUtil.random(0,360);
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"rotation")) {
			objValue = Reflect.getProperty(_this._target,"rotation");
		}
		var _range = { key : "rotation", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("rotation",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		var value1 = cc_util_MathUtil.random(150,160);
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"size")) {
			objValue1 = Reflect.getProperty(_this1._target,"size");
		}
		var _range1 = { key : "size", from : _this1._isFrom ? value1 : objValue1, to : !_this1._isFrom ? value1 : objValue1};
		_this1._props.set("size",_range1);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		_this2._easing = cc_lets_easing_Sine.get_easeInOut();
		var _this3 = _this2;
		_this3._options.onComplete = $bind(this,this.onXHandler);
		_this3._options.onCompleteParams = [obj];
		var _this4 = _this3;
		_this4._delay = _this4.getDuration(cc_util_MathUtil.random(0,0.5));
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC011.hx", lineNumber : 92, className : "art.CC011", methodName : "setup"});
		var _g1 = 0;
		var _g = this.shapeMax;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
		this.shapeArray2.push(this.createX(0));
		this.draw();
	}
	,draw: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.BLACK);
		this.drawShape();
	}
	,__class__: art_CC011
});
var art_CC012 = function(ctx) {
	this.maxDistance = 100;
	this.divide = 4;
	this.radius1 = 50;
	this.radius0 = 350;
	this.shapeMax = Math.round(90.);
	this.shapeArray2 = [];
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("Weird Equalizer without sound but connected");
};
$hxClasses["art.CC012"] = art_CC012;
art_CC012.__name__ = ["art","CC012"];
art_CC012.__interfaces__ = [art_ICCBase];
art_CC012.__super__ = art_CCBase;
art_CC012.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i) {
		var angle = i * this.divide;
		var line = { _id : i, x1 : Global.w / 2 + Math.cos(cc_util_MathUtil.radians(angle)) * this.radius0, y1 : Global.h / 2 + Math.sin(cc_util_MathUtil.radians(angle)) * this.radius0, x2 : Global.w / 2 + Math.cos(cc_util_MathUtil.radians(angle)) * this.radius1, y2 : Global.h / 2 + Math.sin(cc_util_MathUtil.radians(angle)) * this.radius1, stroke : 1, radius : cc_util_MathUtil.random(this.radius0,this.radius1)};
		this.onCompleteHandler(line);
		return line;
	}
	,drawShape: function() {
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var line = this.shapeArray[i];
			var angle = i * this.divide;
			line.x2 = Global.w / 2 + Math.cos(cc_util_MathUtil.radians(angle)) * line.radius;
			line.y2 = Global.h / 2 + Math.sin(cc_util_MathUtil.radians(angle)) * line.radius;
			cc_CanvasTools.lineColour(this.ctx,cc_util_ColorUtil.WHITE.r,cc_util_ColorUtil.WHITE.g,cc_util_ColorUtil.WHITE.b,1);
			this.ctx.lineWidth = line.stroke;
			cc_CanvasTools.line(this.ctx,line.x1,line.y1,line.x2,line.y2);
			cc_CanvasTools.colour(this.ctx,cc_util_ColorUtil.WHITE.r,cc_util_ColorUtil.WHITE.g,cc_util_ColorUtil.WHITE.b,0.5);
			cc_CanvasTools.strokeCircle(this.ctx,line.x2,line.y2,3);
			var _g3 = 0;
			var _g2 = this.shapeArray.length;
			while(_g3 < _g2) {
				var j = _g3++;
				var b2 = this.shapeArray[j];
				if(line == b2) {
					continue;
				}
				var _dist = cc_util_MathUtil.distance(line.x2,line.y2,b2.x2,b2.y2);
				if(_dist < this.maxDistance) {
					var alpha = 0.8 - _dist / this.maxDistance;
					cc_CanvasTools.lineColour(this.ctx,cc_util_ColorUtil.WHITE.r,cc_util_ColorUtil.WHITE.g,cc_util_ColorUtil.WHITE.b,alpha);
					cc_CanvasTools.line(this.ctx,line.x2,line.y2,b2.x2,b2.y2);
				}
			}
		}
	}
	,onUpdateHandler: function(e) {
		haxe_Log.trace("update: " + e,{ fileName : "CC012.hx", lineNumber : 70, className : "art.CC012", methodName : "onUpdateHandler"});
	}
	,onCompleteHandler: function(line) {
		var Go = new cc_lets_Go(line,cc_util_MathUtil.random(2,4));
		Go._isFrom = false;
		var _this = Go;
		var value = cc_util_MathUtil.random(this.radius0,this.radius1);
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"radius")) {
			objValue = Reflect.getProperty(_this._target,"radius");
		}
		var _range = { key : "radius", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("radius",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		_this1._easing = cc_lets_easing_Sine.get_easeInOut();
		var _this2 = _this1;
		_this2._options.onComplete = $bind(this,this.onCompleteHandler);
		_this2._options.onCompleteParams = [line];
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC012.hx", lineNumber : 83, className : "art.CC012", methodName : "setup"});
		var _g1 = 0;
		var _g = this.shapeMax;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
		this.draw();
	}
	,draw: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.BLACK);
		this.drawShape();
	}
	,__class__: art_CC012
});
var art_CC013 = function(ctx) {
	this.colorArr = [];
	this.shapeArray = [];
	this.colorArr = cc_util_ColorUtil.niceColor100;
	this.set_description("Create simple pattern with colors");
	art_CCBase.call(this,ctx);
	this.loader = new mloader_JsonLoader("assets/1000.json");
	this.loader.loaded.add($bind(this,this.loaded));
	this.loader.load();
};
$hxClasses["art.CC013"] = art_CC013;
art_CC013.__name__ = ["art","CC013"];
art_CC013.__interfaces__ = [art_ICCBase];
art_CC013.__super__ = art_CCBase;
art_CC013.prototype = $extend(art_CCBase.prototype,{
	loaded: function(event) {
		var _g = event.type;
		switch(_g[1]) {
		case 3:
			this.colorArr = event.target.content;
			this.draw();
			break;
		case 4:
			var error = _g[2];
			haxe_Log.trace(error,{ fileName : "CC013.hx", lineNumber : 30, className : "art.CC013", methodName : "loaded"});
			break;
		default:
		}
	}
	,create: function() {
		var _size = 50;
		var _x = 0;
		var _y = 0;
		var _numHor = Math.round(Global.w / _size) + 1;
		var _numVer = Math.round(Global.h / _size) + 1;
		var grid = new cc_util_GridUtil();
		grid.setCellSize(_size);
		if(this.isDebug) {
			cc_util_ShapeUtil.gridRegister(this.ctx,grid.array);
			this.ctx.strokeRect(grid.x,grid.y,grid.width,grid.height);
		}
		var colorCounter = 0;
		var _g1 = 0;
		var _g = grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var p = grid.array[i];
			++colorCounter;
			if(colorCounter >= this.colorArr.length) {
				colorCounter = 0;
			}
			var colorArray = this.colorArr[colorCounter];
			var tmp = this.ctx;
			var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
			cc_CanvasTools.colourObj(tmp,{ r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255});
			this.ctx.fillRect(p.x,p.y,_size,_size);
			var tmp1 = this.ctx;
			var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
			cc_CanvasTools.colourObj(tmp1,{ r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255});
			cc_CanvasTools.fillCircle(this.ctx,p.x + _size / 2,p.y + _size / 2,_size / 2 * 0.8);
			var tmp2 = this.ctx;
			var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
			cc_CanvasTools.colourObj(tmp2,{ r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255});
			cc_CanvasTools.fillCircle(this.ctx,p.x + _size / 2,p.y + _size / 2,_size / 2 * 0.6);
			var tmp3 = this.ctx;
			var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
			cc_CanvasTools.colourObj(tmp3,{ r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255});
			cc_CanvasTools.fillCircle(this.ctx,p.x + _size / 2,p.y + _size / 2,_size / 2 * 0.4);
			var tmp4 = this.ctx;
			var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
			cc_CanvasTools.colourObj(tmp4,{ r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255});
			cc_CanvasTools.fillCircle(this.ctx,p.x + _size / 2,p.y + _size / 2,_size / 2 * 0.2);
		}
	}
	,draw: function() {
		haxe_Log.trace("draw: " + this.toString(),{ fileName : "CC013.hx", lineNumber : 99, className : "art.CC013", methodName : "draw"});
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		this.create();
		this.stop();
	}
	,__class__: art_CC013
});
var art_CC014 = function(ctx) {
	this.shapeMax = 10;
	this.flipColorW = cc_util_ColorUtil.WHITE;
	this.flipColorB = cc_util_ColorUtil.BLACK;
	this.shapeArray = [];
	cc_draw_Text.embedGoogleFont("Six+Caps",$bind(this,this.onEmbedHandler));
	cc_draw_Text.embedGoogleFont("Barlow+Condensed",$bind(this,this.onEmbedHandler));
	art_CCBase.call(this,ctx);
	this.set_description("Blink black and white");
};
$hxClasses["art.CC014"] = art_CC014;
art_CC014.__name__ = ["art","CC014"];
art_CC014.__interfaces__ = [art_ICCBase];
art_CC014.__super__ = art_CCBase;
art_CC014.prototype = $extend(art_CCBase.prototype,{
	onEmbedHandler: function(e) {
		haxe_Log.trace("Embed: \"" + e + "\"",{ fileName : "CC014.hx", lineNumber : 24, className : "art.CC014", methodName : "onEmbedHandler"});
		this.draw();
		this.onFlipColorHandler();
	}
	,onFlipColorHandler: function() {
		if(cc_util_MathUtil.posNeg() <= 0) {
			this.flipColorB = cc_util_ColorUtil.BLACK;
			this.flipColorW = cc_util_ColorUtil.WHITE;
		} else {
			this.flipColorB = cc_util_ColorUtil.WHITE;
			this.flipColorW = cc_util_ColorUtil.BLACK;
		}
		var duration = cc_util_MathUtil.random(0,.7);
		var Go = new cc_lets_Go({ },duration);
		var _this = Go;
		_this._options.onComplete = $bind(this,this.onFlipColorHandler);
		_this._options.onCompleteParams = null;
	}
	,createShape: function(i) {
		var circle = { _id : "" + i, _type : "circle", x : cc_util_MathUtil.random(0,Global.w), y : cc_util_MathUtil.random(0,Global.h), size : cc_util_MathUtil.random(10,100)};
		circle["stroke"] = 20;
		this.onCircleHandler(circle);
		return circle;
	}
	,onCircleHandler: function(circle) {
		var r = Math.round(cc_util_MathUtil.random(1,20));
		var Go = new cc_lets_Go(circle,cc_util_MathUtil.random(1,5));
		Go._isFrom = false;
		var _this = Go;
		var value = cc_util_MathUtil.random(0,Global.w);
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"x")) {
			objValue = Reflect.getProperty(_this._target,"x");
		}
		var _range = { key : "x", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("x",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		var value1 = cc_util_MathUtil.random(0,Global.h);
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"y")) {
			objValue1 = Reflect.getProperty(_this1._target,"y");
		}
		var _range1 = { key : "y", from : _this1._isFrom ? value1 : objValue1, to : !_this1._isFrom ? value1 : objValue1};
		_this1._props.set("y",_range1);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		var value2 = Math.round(cc_util_MathUtil.random(10,100));
		var objValue2 = 0;
		if(Object.prototype.hasOwnProperty.call(_this2._target,"size")) {
			objValue2 = Reflect.getProperty(_this2._target,"size");
		}
		var _range2 = { key : "size", from : _this2._isFrom ? value2 : objValue2, to : !_this2._isFrom ? value2 : objValue2};
		_this2._props.set("size",_range2);
		if(_this2._isFrom) {
			_this2.updateProperties(0);
		}
		var _this3 = _this2;
		var objValue3 = 0;
		if(Object.prototype.hasOwnProperty.call(_this3._target,"stroke")) {
			objValue3 = Reflect.getProperty(_this3._target,"stroke");
		}
		var _range3 = { key : "stroke", from : _this3._isFrom ? r : objValue3, to : !_this3._isFrom ? r : objValue3};
		_this3._props.set("stroke",_range3);
		if(_this3._isFrom) {
			_this3.updateProperties(0);
		}
		var _this4 = _this3;
		_this4._easing = cc_lets_easing_Sine.get_easeInOut();
		var _this5 = _this4;
		_this5._options.onComplete = $bind(this,this.onCircleHandler);
		_this5._options.onCompleteParams = [circle];
		var _this6 = _this5;
		_this6._delay = _this6.getDuration(cc_util_MathUtil.random(0,2));
	}
	,drawShape: function() {
		this.ctx.fillStyle = cc_util_ColorUtil.getColourObj(this.flipColorW);
		cc_draw_Text.centerFillText(this.ctx,"[mck]",Global.w / 2,Global.h / 2 + 50,"'Barlow Condensed', sans-serif",300);
		this.ctx.globalCompositeOperation = "xor";
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			cc_CanvasTools.strokeColourObj(this.ctx,this.flipColorW);
			cc_CanvasTools.strokeWeight(this.ctx,sh.stroke);
			cc_CanvasTools.strokeCircle(this.ctx,sh.x,sh.y,sh.size / 2);
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC014.hx", lineNumber : 108, className : "art.CC014", methodName : "setup"});
		var _g1 = 0;
		var _g = this.shapeMax;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,this.flipColorB);
		this.drawShape();
	}
	,__class__: art_CC014
});
var art_CC015 = function(ctx) {
	this.color = cc_util_ColorUtil.niceColor100[0];
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("clock");
};
$hxClasses["art.CC015"] = art_CC015;
art_CC015.__name__ = ["art","CC015"];
art_CC015.__interfaces__ = [art_ICCBase];
art_CC015.__super__ = art_CCBase;
art_CC015.prototype = $extend(art_CCBase.prototype,{
	setup: function() {
	}
	,drawShape: function() {
		var time = new Date();
		var hours = time.getHours();
		var min = time.getMinutes();
		var sec = time.getSeconds();
		var min90 = -cc_util_MathUtil.radians(90);
		var lineW = 100;
		var minRadius = 3 * lineW;
		var _lineCap = "round";
		var centerX = Global.w / 2;
		var centerY = Global.h / 2;
		var _alpha = 0.1;
		if(this.isDebug) {
			haxe_Log.trace("" + hours + ":" + min + ":" + sec,{ fileName : "CC015.hx", lineNumber : 39, className : "art.CC015", methodName : "drawShape"});
		}
		this.ctx.beginPath();
		var $int = Std.parseInt(StringTools.replace(this.color[0],"#","0x"));
		this.ctx.strokeStyle = cc_util_ColorUtil.getColourObj({ r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255});
		this.ctx.lineCap = _lineCap;
		this.ctx.lineWidth = lineW;
		this.ctx.arc(centerX,centerY,minRadius - 0 * lineW,min90,cc_util_MathUtil.radians(6. * sec) + min90);
		this.ctx.stroke();
		var int1 = Std.parseInt(StringTools.replace(this.color[0],"#","0x"));
		this.ctx.strokeStyle = cc_util_ColorUtil.getColourObj({ r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255},_alpha);
		cc_CanvasTools.strokeCircle(this.ctx,centerX,centerY,minRadius - 0 * lineW);
		this.ctx.beginPath();
		var int2 = Std.parseInt(StringTools.replace(this.color[1],"#","0x"));
		this.ctx.strokeStyle = cc_util_ColorUtil.getColourObj({ r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255});
		this.ctx.lineCap = _lineCap;
		this.ctx.lineWidth = lineW;
		this.ctx.arc(centerX,centerY,minRadius - lineW,min90,cc_util_MathUtil.radians(6. * min) + min90);
		this.ctx.stroke();
		var int3 = Std.parseInt(StringTools.replace(this.color[1],"#","0x"));
		this.ctx.strokeStyle = cc_util_ColorUtil.getColourObj({ r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255},_alpha);
		cc_CanvasTools.strokeCircle(this.ctx,centerX,centerY,minRadius - lineW);
		this.ctx.beginPath();
		var int4 = Std.parseInt(StringTools.replace(this.color[2],"#","0x"));
		this.ctx.strokeStyle = cc_util_ColorUtil.getColourObj({ r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255});
		this.ctx.lineCap = _lineCap;
		this.ctx.lineWidth = lineW;
		this.ctx.arc(centerX,centerY,minRadius - 2 * lineW,min90,cc_util_MathUtil.radians(15. * hours) + min90);
		this.ctx.stroke();
		var int5 = Std.parseInt(StringTools.replace(this.color[2],"#","0x"));
		this.ctx.strokeStyle = cc_util_ColorUtil.getColourObj({ r : int5 >> 16 & 255, g : int5 >> 8 & 255, b : int5 & 255},_alpha);
		cc_CanvasTools.strokeCircle(this.ctx,centerX,centerY,minRadius - 2 * lineW);
	}
	,draw: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		this.drawShape();
	}
	,__class__: art_CC015
});
var art_CC016 = function(ctx) {
	this._size = 50;
	this._radius = 150;
	this.shapeMax = 200;
	this.shapeArray = [];
	this.set_description("Circle with trail");
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC016"] = art_CC016;
art_CC016.__name__ = ["art","CC016"];
art_CC016.__interfaces__ = [art_ICCBase];
art_CC016.__super__ = art_CCBase;
art_CC016.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i) {
		var shape = { _id : "" + i, _type : "circle", x : Global.w / 2, y : Global.h / 2, rgb : cc_util_ColorUtil.BLACK, alpha : 1 - i * (1 / this.shapeMax), radius : this._radius, size : this._size, angle : i, speed : 4};
		return shape;
	}
	,drawShape: function() {
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			sh.angle -= sh.speed;
			sh.x = Global.w / 2 + Math.cos(cc_util_MathUtil.radians(sh.angle)) * sh.radius;
			sh.y = Global.h / 2 + Math.sin(cc_util_MathUtil.radians(sh.angle)) * sh.radius;
			this.ctx.fillStyle = cc_util_ColorUtil.getColourObj(sh.rgb,sh.alpha);
			cc_CanvasTools.circle(this.ctx,sh.x,sh.y,sh.size);
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC016.hx", lineNumber : 48, className : "art.CC016", methodName : "setup"});
		var _g1 = 0;
		var _g = this.shapeMax;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		this.drawShape();
	}
	,__class__: art_CC016
});
var art_CC017 = function(ctx) {
	this.grid = new cc_util_GridUtil();
	this._size = 75;
	this.shapeMax = 25;
	this.arr = [[]];
	this.shapeArray = [];
	this.set_description("Circles with trail");
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC017"] = art_CC017;
art_CC017.__name__ = ["art","CC017"];
art_CC017.__interfaces__ = [art_ICCBase];
art_CC017.__super__ = art_CCBase;
art_CC017.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,j) {
		var shape = { _id : "" + i, _type : "circle", x : Global.w / 2, y : Global.h / 2, rgb : cc_util_ColorUtil.WHITE, alpha : 1 - i * (1 / this.shapeMax), radius : 20, size : 10, angle : j * 10 + i * 10, speed : 4};
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.BLACK);
		if(this.isDebug) {
			cc_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var j = _g1++;
			var point = this.grid.array[j];
			var _g3 = 0;
			var _g2 = this.arr[j].length;
			while(_g3 < _g2) {
				var i = _g3++;
				var sh = this.arr[j][i];
				sh.angle -= sh.speed;
				sh.x = point.x + Math.cos(cc_util_MathUtil.radians(sh.angle)) * sh.radius;
				sh.y = point.y + Math.sin(cc_util_MathUtil.radians(sh.angle)) * sh.radius;
				this.ctx.fillStyle = cc_util_ColorUtil.getColourObj(sh.rgb,sh.alpha);
				cc_CanvasTools.circle(this.ctx,sh.x,sh.y,sh.size);
			}
		}
	}
	,setup: function() {
		haxe_Log.trace("init: " + this.toString(),{ fileName : "CC017.hx", lineNumber : 77, className : "art.CC017", methodName : "setup"});
		this.grid.setCellSize(this._size);
		this.grid.setIsCenterPoint(true);
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var j = _g1++;
			this.arr.push([]);
			var _g3 = 0;
			var _g2 = this.shapeMax;
			while(_g3 < _g2) {
				var i = _g3++;
				this.arr[j].push(this.createShape(i,j));
			}
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		this.drawShape();
	}
	,__class__: art_CC017
});
var art_CC018 = function(ctx) {
	this._size = 75;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
};
$hxClasses["art.CC018"] = art_CC018;
art_CC018.__name__ = ["art","CC018"];
art_CC018.__interfaces__ = [art_ICCBase];
art_CC018.__super__ = art_CCBase;
art_CC018.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y, radius : cc_util_MathUtil.random(5,this._size / 2)};
		this.onYoYoHandler(shape);
		return shape;
	}
	,drawShape: function() {
		if(this.isDebug) {
			cc_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		cc_CanvasTools.fillColourRGB(this.ctx,cc_util_ColorUtil.BLACK);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var circle = this.shapeArray[i];
			cc_CanvasTools.circle(this.ctx,circle.x,circle.y,circle.radius);
		}
	}
	,onYoYoHandler: function(circle) {
		var Go = new cc_lets_Go(circle,cc_util_MathUtil.random(0.1,2));
		Go._isFrom = false;
		var _this = Go;
		var value = cc_util_MathUtil.random(5,this._size / 2);
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"radius")) {
			objValue = Reflect.getProperty(_this._target,"radius");
		}
		var _range = { key : "radius", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("radius",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		_this1._isYoyo = true;
		var _this2 = _this1;
		_this2._easing = cc_lets_easing_Sine.get_easeInOut();
		var _this3 = _this2;
		_this3._options.onComplete = $bind(this,this.onYoYoHandler);
		_this3._options.onCompleteParams = [circle];
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC018.hx", lineNumber : 48, className : "art.CC018", methodName : "setup"});
		this.grid.setCellSize(this._size);
		this.grid.setIsCenterPoint(true);
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var point = this.grid.array[i];
			this.shapeArray.push(this.createShape(i,point));
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		this.drawShape();
	}
	,__class__: art_CC018
});
var art_CC019 = function(ctx) {
	this._lineColor = null;
	this._bgColor = null;
	this._radius = 150;
	this._size = 75;
	this.grid = new cc_util_GridUtil();
	this.shapeMax = 10;
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
};
$hxClasses["art.CC019"] = art_CC019;
art_CC019.__name__ = ["art","CC019"];
art_CC019.__interfaces__ = [art_ICCBase];
art_CC019.__super__ = art_CCBase;
art_CC019.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y, radius : this._radius};
		if(i != 4) {
			this.onAnimateHandler(shape);
		}
		return shape;
	}
	,drawShape: function() {
		cc_CanvasTools.backgroundObj(this.ctx,this._bgColor);
		if(this.isDebug) {
			cc_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		cc_CanvasTools.strokeColourObj(this.ctx,this._lineColor);
		cc_CanvasTools.strokeWeight(this.ctx,15);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var circle = this.shapeArray[i];
			cc_CanvasTools.strokeCircle(this.ctx,circle.x,circle.y,circle.radius);
		}
	}
	,onAnimateHandler: function(circle) {
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var circle1 = this.shapeArray[i];
			var point = this.grid.array[i];
			circle1.x = point.x;
			circle1.y = point.y;
		}
		var Go = new cc_lets_Go(circle,5);
		Go._isFrom = false;
		var _this = Go;
		var value = Global.w / 2;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"x")) {
			objValue = Reflect.getProperty(_this._target,"x");
		}
		var _range = { key : "x", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("x",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		var value1 = Global.h / 2;
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"y")) {
			objValue1 = Reflect.getProperty(_this1._target,"y");
		}
		var _range1 = { key : "y", from : _this1._isFrom ? value1 : objValue1, to : !_this1._isFrom ? value1 : objValue1};
		_this1._props.set("y",_range1);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		_this2._easing = cc_lets_easing_Sine.get_easeInOut();
		var _this3 = _this2;
		_this3._options.onComplete = $bind(this,this.onAnimateHandler);
		_this3._options.onCompleteParams = [circle];
	}
	,setup: function() {
		var colorArray = cc_util_ColorUtil.niceColor100[cc_util_MathUtil.randomInt(cc_util_ColorUtil.niceColor100.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._bgColor = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._lineColor = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		this.grid.setDimension(Global.w * 2.1,Global.h * 2.1);
		this.grid.setNumbered(3,3);
		this.grid.setIsCenterPoint(true);
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var point = this.grid.array[i];
			this.shapeArray.push(this.createShape(i,point));
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		this.drawShape();
	}
	,__class__: art_CC019
});
var art_CC020 = function(ctx) {
	this._lineColor2 = null;
	this._lineColor = null;
	this._bgColor = null;
	this._radius = 150;
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
};
$hxClasses["art.CC020"] = art_CC020;
art_CC020.__name__ = ["art","CC020"];
art_CC020.__interfaces__ = [art_ICCBase];
art_CC020.__super__ = art_CCBase;
art_CC020.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "arc", x : Global.w / 2, y : Global.h / 2, radius : this._radius, rotation : 0, angle : 250, speed : 1};
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,this._bgColor);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			sh.rotation += sh.speed + i;
			this.ctx.beginPath();
			this.ctx.strokeStyle = cc_util_ColorUtil.getColourObj(this._lineColor);
			if(i == 0) {
				this.ctx.strokeStyle = cc_util_ColorUtil.getColourObj(this._lineColor2);
			}
			this.ctx.lineCap = "round";
			this.ctx.lineWidth = 30;
			this.ctx.arc(Global.w / 2,Global.h / 2,sh.radius * (0.6 * i + 1),cc_util_MathUtil.radians(sh.rotation),cc_util_MathUtil.radians(sh.angle + sh.rotation));
			this.ctx.stroke();
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC020.hx", lineNumber : 57, className : "art.CC020", methodName : "setup"});
		var colorArray = cc_util_ColorUtil.niceColor100[cc_util_MathUtil.randomInt(cc_util_ColorUtil.niceColor100.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._bgColor = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._lineColor = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._lineColor2 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		this.shapeArray.push(this.createShape(0));
		this.shapeArray.push(this.createShape(1));
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC020
});
var art_CC021 = function(ctx) {
	this._fillColor = null;
	this._lineColor = null;
	this._bgColor = null;
	this._radius = 150;
	this._size = 75;
	this.grid = new cc_util_GridUtil();
	this.shapeMax = 10;
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
};
$hxClasses["art.CC021"] = art_CC021;
art_CC021.__name__ = ["art","CC021"];
art_CC021.__interfaces__ = [art_ICCBase];
art_CC021.__super__ = art_CCBase;
art_CC021.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y};
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,this._bgColor);
		if(this.isDebug) {
			cc_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		cc_CanvasTools.strokeColourObj(this.ctx,this._lineColor);
		cc_CanvasTools.strokeWeight(this.ctx,15);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var rectangle = this.shapeArray[i];
			var size = this._size * 0.8;
			var radiusMax = this._size / 2;
			var temp = radiusMax / this.shapeArray.length * i;
			cc_CanvasTools.fillColourRGB(this.ctx,this._lineColor);
			cc_CanvasTools.roundRect(this.ctx,rectangle.x,rectangle.y,size,size,temp);
		}
	}
	,setup: function() {
		var colorArray = cc_util_ColorUtil.niceColor100[cc_util_MathUtil.randomInt(cc_util_ColorUtil.niceColor100.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._bgColor = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._lineColor = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._fillColor = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		this.grid.setCellSize(this._size);
		this.grid.setIsCenterPoint(true);
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var point = this.grid.array[i];
			this.shapeArray.push(this.createShape(i,point));
		}
	}
	,draw: function() {
		haxe_Log.trace("draw: " + this.toString(),{ fileName : "CC021.hx", lineNumber : 87, className : "art.CC021", methodName : "draw"});
		this.drawShape();
		this.stop();
	}
	,__class__: art_CC021
});
var art_CC022 = function(ctx) {
	this.maxDistance = Global.w / 2;
	this._xmax = 50;
	this._fillColor = null;
	this._lineColor = null;
	this._bgColor = null;
	this.shapeMax = 10;
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
};
$hxClasses["art.CC022"] = art_CC022;
art_CC022.__name__ = ["art","CC022"];
art_CC022.__interfaces__ = [art_ICCBase];
art_CC022.__super__ = art_CCBase;
art_CC022.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var _angle = 360 / this._xmax * i;
		var shape = { _id : "" + i, _type : "circle", radius : Global.h / 2, angle : _angle, x : Global.w / this._xmax * i, y : Global.h / 2};
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,this._bgColor);
		cc_CanvasTools.strokeColourObj(this.ctx,this._lineColor);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			sh.angle += 1;
			sh.y = Global.h / 2 + Math.sin(cc_util_MathUtil.radians(sh.angle)) * Global.h / 3;
			cc_CanvasTools.strokeColourObj(this.ctx,this._lineColor,0);
			cc_CanvasTools.strokeCircle(this.ctx,sh.x,sh.y,10);
			var _g3 = 0;
			var _g2 = this.shapeArray.length;
			while(_g3 < _g2) {
				var j = _g3++;
				var b2 = this.shapeArray[j];
				if(sh == b2) {
					continue;
				}
				var _dist = cc_util_MathUtil.distance(sh.x,sh.y,b2.x,b2.y);
				if(_dist < this.maxDistance) {
					var alpha = 0.8 - _dist / this.maxDistance;
					cc_CanvasTools.lineColour(this.ctx,this._fillColor.r,this._fillColor.g,this._fillColor.b,alpha);
					cc_CanvasTools.line(this.ctx,sh.x,sh.y,b2.x,b2.y);
				}
			}
		}
	}
	,setup: function() {
		var colorArray = cc_util_ColorUtil.niceColor100[cc_util_MathUtil.randomInt(cc_util_ColorUtil.niceColor100.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._bgColor = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		this._lineColor = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._fillColor = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this._xmax;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
	}
	,draw: function() {
		haxe_Log.trace("draw: " + this.toString(),{ fileName : "CC022.hx", lineNumber : 91, className : "art.CC022", methodName : "draw"});
		this.drawShape();
	}
	,__class__: art_CC022
});
var art_CC023 = function(ctx) {
	this.radiusY = Global.h / 3;
	this.centerY = Global.h / 2;
	this.centerX = Global.w / 2;
	this.maxDistance = Global.w / 2;
	this._xmax = 50;
	this._fillColor2 = null;
	this._lineColor2 = null;
	this._fillColor = null;
	this._lineColor = null;
	this._bgColor = null;
	this.shapeArray2 = [];
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
};
$hxClasses["art.CC023"] = art_CC023;
art_CC023.__name__ = ["art","CC023"];
art_CC023.__interfaces__ = [art_ICCBase];
art_CC023.__super__ = art_CCBase;
art_CC023.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var _angle = 360 / this._xmax * i;
		var shape = { _id : "" + i, _type : "circle", radius : Global.h / 2, angle : _angle, x : Global.w / this._xmax * i + point.x, y : this.centerY + point.y};
		shape["point"] = point;
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,this._bgColor);
		cc_CanvasTools.strokeColourObj(this.ctx,this._lineColor);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			var point = Reflect.getProperty(sh,"point");
			sh.angle += 1;
			sh.y = this.centerY + point.y + Math.sin(cc_util_MathUtil.radians(sh.angle)) * this.radiusY;
			cc_CanvasTools.strokeColourObj(this.ctx,this._lineColor,1);
			cc_CanvasTools.strokeCircle(this.ctx,sh.x,sh.y,10);
			var sh2 = this.shapeArray2[i];
			var point2 = Reflect.getProperty(sh2,"point");
			sh2.angle += 1;
			sh2.y = this.centerY + point2.y + Math.sin(cc_util_MathUtil.radians(sh2.angle)) * this.radiusY;
			cc_CanvasTools.strokeColourObj(this.ctx,this._lineColor,1);
			cc_CanvasTools.strokeCircle(this.ctx,sh2.x,sh2.y,10);
			cc_CanvasTools.strokeColourObj(this.ctx,this._lineColor2,1);
			cc_CanvasTools.lineColour(this.ctx,this._fillColor.r,this._fillColor.g,this._fillColor.b,1);
			cc_CanvasTools.line(this.ctx,sh.x,sh.y,sh2.x,sh2.y);
		}
	}
	,setup: function() {
		var colorArray = cc_util_ColorUtil.niceColor100[5];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._bgColor = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._lineColor = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._fillColor = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		this._lineColor2 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
		var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		this._fillColor2 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this._xmax;
		while(_g1 < _g) {
			var i = _g1++;
			var point = { x : -50, y : -50};
			this.shapeArray.push(this.createShape(i,point));
		}
		this.shapeArray2 = [];
		var _g11 = 0;
		var _g2 = this._xmax;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var point1 = { x : 50, y : 50};
			this.shapeArray2.push(this.createShape(i1,point1));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC023
});
var art_CC024 = function(ctx) {
	this.radiusY = Global.h / 3;
	this.centerY = Global.h / 2;
	this.centerX = Global.w / 2;
	this.maxDistance = 250;
	this._xmax = 50;
	this._fillColor2 = null;
	this._lineColor2 = null;
	this._fillColor = null;
	this._lineColor = null;
	this._bgColor = null;
	this.shapeArray2 = [];
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
};
$hxClasses["art.CC024"] = art_CC024;
art_CC024.__name__ = ["art","CC024"];
art_CC024.__interfaces__ = [art_ICCBase];
art_CC024.__super__ = art_CCBase;
art_CC024.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var _angle = 360 / this._xmax * i;
		var shape = { _id : "" + i, _type : "circle", radius : Global.h / 2, angle : _angle, x : Global.w / this._xmax * i + point.x, y : this.centerY + point.y};
		shape["point"] = point;
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,this._bgColor);
		cc_CanvasTools.strokeColourObj(this.ctx,this._lineColor);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			var point = Reflect.getProperty(sh,"point");
			sh.angle += 1;
			sh.y = this.centerY + point.y + Math.sin(cc_util_MathUtil.radians(sh.angle)) * this.radiusY;
			cc_CanvasTools.strokeColourObj(this.ctx,this._lineColor,1);
			cc_CanvasTools.strokeCircle(this.ctx,sh.x,sh.y,10);
			var sh2 = this.shapeArray2[i];
			var point2 = Reflect.getProperty(sh2,"point");
			sh2.angle += 1;
			sh2.y = this.centerY + point2.y + Math.sin(cc_util_MathUtil.radians(sh2.angle)) * this.radiusY;
			cc_CanvasTools.strokeColourObj(this.ctx,this._lineColor,1);
			cc_CanvasTools.strokeCircle(this.ctx,sh2.x,sh2.y,10);
			cc_CanvasTools.strokeColourObj(this.ctx,this._lineColor2,1);
			cc_CanvasTools.lineColour(this.ctx,this._fillColor.r,this._fillColor.g,this._fillColor.b,1);
			cc_CanvasTools.line(this.ctx,sh.x,sh.y,sh2.x,sh2.y);
			var _g3 = 0;
			var _g2 = this.shapeArray2.length;
			while(_g3 < _g2) {
				var j = _g3++;
				var b2 = this.shapeArray2[j];
				if(sh == b2) {
					continue;
				}
				var _dist = cc_util_MathUtil.distance(sh.x,sh.y,b2.x,b2.y);
				if(_dist < this.maxDistance) {
					var alpha = 0.8 - _dist / this.maxDistance;
					cc_CanvasTools.lineColour(this.ctx,this._fillColor2.r,this._fillColor2.g,this._fillColor2.b,alpha);
					cc_CanvasTools.line(this.ctx,sh.x,sh.y,b2.x,b2.y);
				}
			}
		}
	}
	,setup: function() {
		var colorArray = cc_util_ColorUtil.niceColor100[2];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._bgColor = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._lineColor = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._fillColor = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		this._lineColor2 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
		var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		this._fillColor2 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this._xmax;
		while(_g1 < _g) {
			var i = _g1++;
			var point = { x : -50, y : -50};
			this.shapeArray.push(this.createShape(i,point));
		}
		this.shapeArray2 = [];
		var _g11 = 0;
		var _g2 = this._xmax;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var point1 = { x : 50, y : 50};
			this.shapeArray2.push(this.createShape(i1,point1));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC024
});
var art_CC025 = function(ctx) {
	this._fillColor2 = null;
	this._lineColor2 = null;
	this._fillColor = null;
	this._lineColor = null;
	this._bgColor = null;
	this._cellsize = 150;
	this._radius = 150;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
};
$hxClasses["art.CC025"] = art_CC025;
art_CC025.__name__ = ["art","CC025"];
art_CC025.__interfaces__ = [art_ICCBase];
art_CC025.__super__ = art_CCBase;
art_CC025.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y, radius : this._radius};
		this.onAnimateHandler(shape);
		return shape;
	}
	,onAnimateHandler: function(circle) {
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		if(this.isDebug) {
			cc_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var point = this.grid.array[i];
			var colorArray = cc_util_ColorUtil.niceColor100[i];
			var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
			var color0 = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
			var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
			var color1 = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
			var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
			var color2 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
			var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
			var color3 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
			var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
			var color4 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
			var _colorA = [color0,color1,color2,color3,color4];
			var _g3 = 0;
			var _g2 = _colorA.length;
			while(_g3 < _g2) {
				var j = _g3++;
				var px = 10;
				var _w = Math.round((this.grid.cellWidth - px) / _colorA.length);
				var offsetX = j * _w;
				cc_CanvasTools.fillColourRGB(this.ctx,_colorA[j]);
				this.ctx.fillRect(offsetX + point.x,point.y,_w,this.grid.cellHeight - px);
			}
		}
	}
	,setup: function() {
		var colorArray = cc_util_ColorUtil.niceColor100[10];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._bgColor = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._lineColor = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._fillColor = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		this._lineColor2 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
		var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		this._fillColor2 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
		this.grid.setNumbered(10,10);
	}
	,draw: function() {
		haxe_Log.trace("draw: " + this.toString(),{ fileName : "CC025.hx", lineNumber : 95, className : "art.CC025", methodName : "draw"});
		this.drawShape();
		this.stop();
	}
	,__class__: art_CC025
});
var art_CC026 = function(ctx) {
	this.readyCounter = 0;
	this.shapeMax = 5000;
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
	cc_util_HelperUtil.stats();
};
$hxClasses["art.CC026"] = art_CC026;
art_CC026.__name__ = ["art","CC026"];
art_CC026.__interfaces__ = [art_ICCBase];
art_CC026.__super__ = art_CCBase;
art_CC026.prototype = $extend(art_CCBase.prototype,{
	onAnimateHandler: function(circle) {
		var startx = circle.x;
		var starty = circle.y;
		if(cc_util_MathUtil.posNeg() > 0) {
			if(circle.x < Global.w / 2) {
				startx = circle.x - Global.w;
			} else {
				startx = circle.x + Global.w;
			}
			starty += cc_util_MathUtil.random(-Global.h,Global.h);
		} else {
			startx += cc_util_MathUtil.random(-Global.w,Global.w);
			if(circle.y < Global.h / 2) {
				starty = circle.y - Global.h;
			} else {
				starty = circle.y + Global.h;
			}
		}
		var time = cc_util_MathUtil.random(1,3);
		var delay = cc_util_MathUtil.random(0,3);
		var Go = new cc_lets_Go(circle,time);
		Go._isFrom = true;
		Go.updateProperties(0);
		var _this = Go;
		_this._delay = _this.getDuration(delay);
		var _this1 = _this;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"x")) {
			objValue = Reflect.getProperty(_this1._target,"x");
		}
		var _range = { key : "x", from : _this1._isFrom ? startx : objValue, to : !_this1._isFrom ? startx : objValue};
		_this1._props.set("x",_range);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this2._target,"y")) {
			objValue1 = Reflect.getProperty(_this2._target,"y");
		}
		var _range1 = { key : "y", from : _this2._isFrom ? starty : objValue1, to : !_this2._isFrom ? starty : objValue1};
		_this2._props.set("y",_range1);
		if(_this2._isFrom) {
			_this2.updateProperties(0);
		}
		var _this3 = _this2;
		_this3._easing = cc_lets_easing_Sine.get_easeOut();
		var _this4 = _this3;
		_this4._options.onComplete = $bind(this,this.onCompleteHandler);
		_this4._options.onCompleteParams = [circle];
	}
	,onCompleteHandler: function(circle) {
		this.readyCounter++;
		if(this.readyCounter >= this.shapeArray.length) {
			haxe_Log.trace("stop",{ fileName : "CC026.hx", lineNumber : 46, className : "art.CC026", methodName : "onCompleteHandler"});
			this.stop();
		}
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var circle = this.shapeArray[i];
			this.ctx.fillStyle = circle.colour;
			cc_CanvasTools.circle(this.ctx,circle.x,circle.y,5);
		}
	}
	,getPixel: function() {
		var _g1 = 0;
		var _g = this.shapeMax;
		while(_g1 < _g) {
			var i = _g1++;
			var xpos = cc_util_MathUtil.random(0,this.ctxHidden.canvas.width);
			var ypos = cc_util_MathUtil.random(0,this.ctxHidden.canvas.height);
			var pixel = this.ctxHidden.getImageData(xpos,ypos,1,1);
			var data = pixel.data;
			if(data[0] == 255 && data[1] == 255 && data[2] == 255) {
				continue;
			}
			if(data[0] != 0 && data[1] != 0 && data[2] != 0) {
				continue;
			}
			var rgba = "rgba(" + data[0] + ", " + data[1] + ", " + data[2] + ", " + data[3] / 255 + ")";
			var xstart = Math.round((Global.w - this.ctxHidden.canvas.width) / 2);
			var ystart = Math.round((Global.h - this.ctxHidden.canvas.height) / 2);
			var circle = { _id : "" + i, _type : "circle", x : xstart + xpos, y : ystart + ypos, radius : 10, colour : rgba};
			this.shapeArray.push(circle);
		}
		haxe_Log.trace(this.shapeArray.length,{ fileName : "CC026.hx", lineNumber : 95, className : "art.CC026", methodName : "getPixel"});
		var _g11 = 0;
		var _g2 = this.shapeArray.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var _shapeArray = this.shapeArray[i1];
			this.onAnimateHandler(_shapeArray);
		}
	}
	,setup: function() {
		var _gthis = this;
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC026.hx", lineNumber : 104, className : "art.CC026", methodName : "setup"});
		var img = new Image();
		img.src = "assets/img/planb.png";
		img.onload = function() {
			var option = new SketchOption();
			option.set_width(img.width);
			option.set_height(img.height);
			_gthis.ctxHidden = Sketch.createHiddenCanvas("imageholder",option);
			_gthis.ctxHidden.drawImage(img,0,0,img.width,img.height);
			img.style.display = "none";
			_gthis.getPixel();
		};
	}
	,draw: function() {
		this.drawShape();
	}
	,pixelData2RGBA: function(data) {
		return { r : data[0], g : data[1], b : data[2], a : data[3] / 255};
	}
	,__class__: art_CC026
});
var art_CC027 = function(ctx) {
	this._cellsize = 10;
	this.grid = new cc_util_GridUtil();
	this.readyCounter = 0;
	this.shapeMax = 5000;
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("dots bombard plan b");
	cc_util_HelperUtil.stats();
};
$hxClasses["art.CC027"] = art_CC027;
art_CC027.__name__ = ["art","CC027"];
art_CC027.__interfaces__ = [art_ICCBase];
art_CC027.__super__ = art_CCBase;
art_CC027.prototype = $extend(art_CCBase.prototype,{
	onAnimateHandler: function(circle) {
		var startx = circle.x;
		var starty = circle.y;
		if(cc_util_MathUtil.posNeg() > 0) {
			if(circle.x < Global.w / 2) {
				startx = circle.x - Global.w;
			} else {
				startx = circle.x + Global.w;
			}
			starty += cc_util_MathUtil.random(-Global.h,Global.h);
		} else {
			startx += cc_util_MathUtil.random(-Global.w,Global.w);
			if(circle.y < Global.h / 2) {
				starty = circle.y - Global.h;
			} else {
				starty = circle.y + Global.h;
			}
		}
		var time = cc_util_MathUtil.random(1,3);
		var delay = cc_util_MathUtil.random(0,3) + 2;
		var Go = new cc_lets_Go(circle,time);
		Go._isFrom = true;
		Go.updateProperties(0);
		var _this = Go;
		_this._delay = _this.getDuration(delay);
		var _this1 = _this;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"x")) {
			objValue = Reflect.getProperty(_this1._target,"x");
		}
		var _range = { key : "x", from : _this1._isFrom ? startx : objValue, to : !_this1._isFrom ? startx : objValue};
		_this1._props.set("x",_range);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this2._target,"y")) {
			objValue1 = Reflect.getProperty(_this2._target,"y");
		}
		var _range1 = { key : "y", from : _this2._isFrom ? starty : objValue1, to : !_this2._isFrom ? starty : objValue1};
		_this2._props.set("y",_range1);
		if(_this2._isFrom) {
			_this2.updateProperties(0);
		}
		var _this3 = _this2;
		_this3._easing = cc_lets_easing_Quart.get_easeOut();
		var _this4 = _this3;
		_this4._options.onComplete = $bind(this,this.onCompleteHandler);
		_this4._options.onCompleteParams = [circle];
	}
	,onCompleteHandler: function(circle) {
		this.readyCounter++;
		if(this.readyCounter >= this.shapeArray.length) {
			haxe_Log.trace("stop",{ fileName : "CC027.hx", lineNumber : 49, className : "art.CC027", methodName : "onCompleteHandler"});
			this.stop();
		}
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var circle = this.shapeArray[i];
			cc_CanvasTools.strokeCircle(this.ctx,circle.x,circle.y,circle.radius);
		}
	}
	,buildGrid: function() {
		this.grid.setPosition(0,0);
		this.grid.setCellSize(this._cellsize);
		this.grid.setDimension(this.ctxHidden.canvas.width,this.ctxHidden.canvas.height);
		haxe_Log.trace("canvas (width,height): " + this.ctxHidden.canvas.width + "," + this.ctxHidden.canvas.height,{ fileName : "CC027.hx", lineNumber : 80, className : "art.CC027", methodName : "buildGrid"});
		haxe_Log.trace("grid (width,height): " + this.grid.width + "," + this.grid.height,{ fileName : "CC027.hx", lineNumber : 81, className : "art.CC027", methodName : "buildGrid"});
		haxe_Log.trace("grid.array.length: " + this.grid.array.length,{ fileName : "CC027.hx", lineNumber : 82, className : "art.CC027", methodName : "buildGrid"});
		haxe_Log.trace("grid cell (width,height): " + this.grid.cellHeight + ", " + this.grid.cellWidth,{ fileName : "CC027.hx", lineNumber : 83, className : "art.CC027", methodName : "buildGrid"});
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var point = this.grid.array[i];
			var xpos = Math.round(point.x);
			var ypos = Math.round(point.y);
			var pixel = this.ctxHidden.getImageData(xpos,ypos,1,1);
			var data = pixel.data;
			if(data[0] == 255 && data[1] == 255 && data[2] == 255) {
				continue;
			}
			if(data[0] != 0 && data[1] != 0 && data[2] != 0) {
				continue;
			}
			var rgba = "rgba(" + data[0] + ", " + data[1] + ", " + data[2] + ", " + data[3] / 255 + ")";
			var xstart = Math.round((Global.w - this.ctxHidden.canvas.width) / 2);
			var ystart = Math.round((Global.h - this.ctxHidden.canvas.height) / 2);
			var circle = { _id : "" + i, _type : "circle", x : xstart + xpos, y : ystart + ypos, radius : this._cellsize / 2, colour : rgba};
			this.shapeArray.push(circle);
		}
		haxe_Log.trace("total shape: " + this.shapeArray.length + " from total grid " + this.grid.array.length,{ fileName : "CC027.hx", lineNumber : 114, className : "art.CC027", methodName : "buildGrid"});
		var _g11 = 0;
		var _g2 = this.shapeArray.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var _shapeArray = this.shapeArray[i1];
			this.onAnimateHandler(_shapeArray);
		}
	}
	,setup: function() {
		var _gthis = this;
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC027.hx", lineNumber : 125, className : "art.CC027", methodName : "setup"});
		this.shapeArray = [];
		var img = new Image();
		img.src = "assets/img/planb.png";
		img.onload = function() {
			var option = new SketchOption();
			option.set_width(img.width);
			option.set_height(img.height);
			_gthis.ctxHidden = Sketch.createHiddenCanvas("imageholder",option);
			_gthis.ctxHidden.drawImage(img,0,0,img.width,img.height);
			img.style.display = "none";
			_gthis.buildGrid();
		};
	}
	,draw: function() {
		this.drawShape();
	}
	,pixelData2RGBA: function(data) {
		return { r : data[0], g : data[1], b : data[2], a : data[3] / 255};
	}
	,pixelData2RGB: function(data) {
		return { r : data[0], g : data[1], b : data[2]};
	}
	,__class__: art_CC027
});
var art_CC028 = function(ctx) {
	this.exportIntArray = [];
	this.exportStringArray = [];
	this.colorArr = [];
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	this.set_description("Convert 1000 colorcombos based on gray scale from light to dark");
	art_CCBase.call(this,ctx);
	this.loader = new mloader_JsonLoader("assets/1000.json");
	this.loader.loaded.add($bind(this,this.loaded));
	this.loader.load();
};
$hxClasses["art.CC028"] = art_CC028;
art_CC028.__name__ = ["art","CC028"];
art_CC028.__interfaces__ = [art_ICCBase];
art_CC028.__super__ = art_CCBase;
art_CC028.prototype = $extend(art_CCBase.prototype,{
	loaded: function(event) {
		var _g = event.type;
		switch(_g[1]) {
		case 3:
			this.colorArr = event.target.content;
			this.convertColors();
			break;
		case 4:
			var error = _g[2];
			haxe_Log.trace(error,{ fileName : "CC028.hx", lineNumber : 35, className : "art.CC028", methodName : "loaded"});
			break;
		default:
		}
	}
	,convertColors: function() {
		this.exportStringArray = [];
		this.exportIntArray = [];
		var _g1 = 0;
		var _g = this.colorArr.length;
		while(_g1 < _g) {
			var i = _g1++;
			var _colorArr = this.colorArr[i];
			var array = this.convertToHex2(_colorArr[0]);
			var color = this.convertToHex2(_colorArr[0]);
			var array1 = { hex : array, gray : new hxColorToolkit_spaces_Gray().setColor(color).getColor()};
			var array2 = this.convertToHex2(_colorArr[1]);
			var color1 = this.convertToHex2(_colorArr[1]);
			var array3 = { hex : array2, gray : new hxColorToolkit_spaces_Gray().setColor(color1).getColor()};
			var array4 = this.convertToHex2(_colorArr[2]);
			var color2 = this.convertToHex2(_colorArr[2]);
			var array5 = { hex : array4, gray : new hxColorToolkit_spaces_Gray().setColor(color2).getColor()};
			var array6 = this.convertToHex2(_colorArr[3]);
			var color3 = this.convertToHex2(_colorArr[3]);
			var array7 = { hex : array6, gray : new hxColorToolkit_spaces_Gray().setColor(color3).getColor()};
			var array8 = this.convertToHex2(_colorArr[4]);
			var color4 = this.convertToHex2(_colorArr[4]);
			var array9 = [array1,array3,array5,array7,{ hex : array8, gray : new hxColorToolkit_spaces_Gray().setColor(color4).getColor()}];
			var copy = array9.slice();
			haxe_ds_ArraySort.sort(copy,function(a,b) {
				if(a.gray < b.gray) {
					return 1;
				} else if(a.gray > b.gray) {
					return -1;
				} else {
					return 0;
				}
			});
			var storeStringArray = [];
			var storeIntArray = [];
			var _g3 = 0;
			var _g2 = copy.length;
			while(_g3 < _g2) {
				var j = _g3++;
				var __c = copy[j].hex;
				storeStringArray.push("#" + StringTools.hex(__c,6));
				storeIntArray.push(__c);
			}
			this.exportStringArray.push(storeStringArray);
			this.exportIntArray.push(storeIntArray);
		}
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		var colorArray = cc_util_ColorUtil.niceColor100[10];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		var _color0 = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		var _color1 = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		var _color2 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		var _color3 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
		var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		var _color4 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
		var _colorA = [_color0,_color1,_color2,_color3,_color4];
		var point = this.grid.array[0];
		var _g1 = 0;
		var _g = _colorA.length;
		while(_g1 < _g) {
			var j = _g1++;
			var px = 10;
			var _w = Math.round((this.grid.cellWidth - px) / _colorA.length);
			var offsetX = j * _w;
			cc_CanvasTools.fillColourRGB(this.ctx,_colorA[j]);
			this.ctx.fillRect(offsetX + point.x,point.y,_w,this.grid.cellHeight - px);
		}
		var color = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		var _color01 = this.convertToHexToGray(colorArray[0]);
		var _color11 = this.convertToHexToGray(colorArray[1]);
		var _color21 = this.convertToHexToGray(colorArray[2]);
		var _color31 = this.convertToHexToGray(colorArray[3]);
		var _color41 = this.convertToHexToGray(colorArray[4]);
		var px1 = 10;
		var _w1 = Math.round((this.grid.cellWidth - px1) / _colorA.length);
		var point1 = this.grid.array[1];
		var _colorA1 = [_color01,_color11,_color21,_color31,_color41];
		var _g11 = 0;
		var _g2 = _colorA1.length;
		while(_g11 < _g2) {
			var j1 = _g11++;
			var offsetX1 = j1 * _w1;
			cc_CanvasTools.fillColourRGB(this.ctx,_colorA1[j1]);
			this.ctx.fillRect(offsetX1 + point1.x,point1.y,_w1,this.grid.cellHeight - px1);
		}
		var array = this.convertToHex2(colorArray[0]);
		var color1 = this.convertToHex2(colorArray[0]);
		var array1 = { hex : array, gray : new hxColorToolkit_spaces_Gray().setColor(color1).getColor()};
		var array2 = this.convertToHex2(colorArray[1]);
		var color2 = this.convertToHex2(colorArray[1]);
		var array3 = { hex : array2, gray : new hxColorToolkit_spaces_Gray().setColor(color2).getColor()};
		var array4 = this.convertToHex2(colorArray[2]);
		var color3 = this.convertToHex2(colorArray[2]);
		var array5 = { hex : array4, gray : new hxColorToolkit_spaces_Gray().setColor(color3).getColor()};
		var array6 = this.convertToHex2(colorArray[3]);
		var color4 = this.convertToHex2(colorArray[3]);
		var array7 = { hex : array6, gray : new hxColorToolkit_spaces_Gray().setColor(color4).getColor()};
		var array8 = this.convertToHex2(colorArray[4]);
		var color5 = this.convertToHex2(colorArray[4]);
		var array9 = [array1,array3,array5,array7,{ hex : array8, gray : new hxColorToolkit_spaces_Gray().setColor(color5).getColor()}];
		window.console.log("An Array with objects",array9);
		var copy = array9.slice();
		haxe_ds_ArraySort.sort(copy,function(a,b) {
			if(a.gray < b.gray) {
				return 1;
			} else if(a.gray > b.gray) {
				return -1;
			} else {
				return 0;
			}
		});
		window.console.log("An Array with objects",copy);
		var point2 = this.grid.array[2];
		var _g12 = 0;
		var _g3 = copy.length;
		while(_g12 < _g3) {
			var j2 = _g12++;
			var offsetX2 = j2 * _w1;
			var color6 = copy[j2].gray;
			var __c = new hxColorToolkit_spaces_RGB(color6 >> 16 & 255,color6 >> 8 & 255,color6 & 255);
			cc_CanvasTools.fillColour(this.ctx,Math.round(__c.get_red()),Math.round(__c.get_green()),Math.round(__c.get_blue()));
			this.ctx.fillRect(offsetX2 + point2.x,point2.y,_w1,this.grid.cellHeight - px1);
		}
		var point3 = this.grid.array[3];
		var _g13 = 0;
		var _g4 = copy.length;
		while(_g13 < _g4) {
			var j3 = _g13++;
			var offsetX3 = j3 * _w1;
			var color7 = copy[j3].hex;
			var __c1 = new hxColorToolkit_spaces_RGB(color7 >> 16 & 255,color7 >> 8 & 255,color7 & 255);
			cc_CanvasTools.fillColour(this.ctx,Math.round(__c1.get_red()),Math.round(__c1.get_green()),Math.round(__c1.get_blue()));
			this.ctx.fillRect(offsetX3 + point3.x,point3.y,_w1,this.grid.cellHeight - px1);
		}
	}
	,setup: function() {
		var _gthis = this;
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC028.hx", lineNumber : 170, className : "art.CC028", methodName : "setup"});
		this.grid.setNumbered(4,1);
		window.addEventListener(Global.KEY_DOWN,function(e) {
			e.preventDefault();
			var _g = e.key;
			if(_g == "s") {
				var arrayInt100 = [];
				var arrayString100 = [];
				var arrayInt500 = [];
				var arrayString500 = [];
				var _g1 = 0;
				var _g2 = _gthis.exportIntArray.length;
				while(_g1 < _g2) {
					var i = _g1++;
					var _exportIntArray = _gthis.exportIntArray[i];
					var _exportStringArray = _gthis.exportStringArray[i];
					if(i <= 100) {
						arrayInt100.push(_exportIntArray);
						arrayString100.push(_exportStringArray);
					}
					if(i <= 500) {
						arrayInt500.push(_exportIntArray);
						arrayString500.push(_exportStringArray);
					}
				}
				cc_tool_ExportFile.downloadTextFile(JSON.stringify(arrayInt100),"sorted_int_100.json");
				cc_tool_ExportFile.downloadTextFile(JSON.stringify(arrayString100),"sorted_100.json");
				cc_tool_ExportFile.downloadTextFile(JSON.stringify(arrayInt500),"sorted_int_500.json");
				cc_tool_ExportFile.downloadTextFile(JSON.stringify(arrayString500),"sorted_500.json");
				cc_tool_ExportFile.downloadTextFile(JSON.stringify(_gthis.exportIntArray),"sorted_int_1000.json");
				cc_tool_ExportFile.downloadTextFile(JSON.stringify(_gthis.exportStringArray),"sorted_1000.json");
			} else {
				haxe_Log.trace("case '" + e.key + "': trace ('" + e.key + "');",{ fileName : "CC028.hx", lineNumber : 204, className : "art.CC028", methodName : "setup"});
			}
		},false);
	}
	,draw: function() {
		haxe_Log.trace("draw: " + this.toString(),{ fileName : "CC028.hx", lineNumber : 210, className : "art.CC028", methodName : "draw"});
		this.drawShape();
		this.stop();
	}
	,convertToHex: function(value) {
		var _color = Std.parseInt(StringTools.replace(value,"#","0x"));
		var rgb = { r : Math.round(new hxColorToolkit_spaces_RGB(_color >> 16 & 255,_color >> 8 & 255,_color & 255).get_red()), g : Math.round(new hxColorToolkit_spaces_RGB(_color >> 16 & 255,_color >> 8 & 255,_color & 255).get_green()), b : Math.round(new hxColorToolkit_spaces_RGB(_color >> 16 & 255,_color >> 8 & 255,_color & 255).get_blue())};
		return rgb;
	}
	,convertToHexToGray: function(value) {
		var _color = Std.parseInt(StringTools.replace(value,"#","0x"));
		var rgb = { r : Math.round(new hxColorToolkit_spaces_Gray().setColor(_color).toRGB().get_red()), g : Math.round(new hxColorToolkit_spaces_Gray().setColor(_color).toRGB().get_green()), b : Math.round(new hxColorToolkit_spaces_Gray().setColor(_color).toRGB().get_blue())};
		return rgb;
	}
	,convertToHex2: function(value) {
		var _color = Std.parseInt(StringTools.replace(value,"#","0x"));
		return _color;
	}
	,__class__: art_CC028
});
var art_CC029 = function(ctx) {
	this._fillColor2 = null;
	this._lineColor2 = null;
	this._fillColor = null;
	this._lineColor = null;
	this._bgColor = null;
	this._cellsize = 150;
	this._radius = 150;
	this.colorArr = [];
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	this.set_description("Show 1000 sorted colors");
	this.colorArr = cc_util_ColorUtil.niceColor100SortedString;
	art_CCBase.call(this,ctx);
	this.loader = new mloader_JsonLoader("assets/sorted_1000.json");
	this.loader.loaded.add($bind(this,this.loaded));
	this.loader.load();
};
$hxClasses["art.CC029"] = art_CC029;
art_CC029.__name__ = ["art","CC029"];
art_CC029.__interfaces__ = [art_ICCBase];
art_CC029.__super__ = art_CCBase;
art_CC029.prototype = $extend(art_CCBase.prototype,{
	loaded: function(event) {
		var _g = event.type;
		switch(_g[1]) {
		case 3:
			haxe_Log.trace(event.target.content.length,{ fileName : "CC029.hx", lineNumber : 43, className : "art.CC029", methodName : "loaded"});
			this.colorArr = event.target.content;
			this.drawShape();
			break;
		case 4:
			var error = _g[2];
			haxe_Log.trace(error,{ fileName : "CC029.hx", lineNumber : 39, className : "art.CC029", methodName : "loaded"});
			break;
		default:
		}
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		if(this.isDebug) {
			cc_util_ShapeUtil.gridDots(this.ctx,this.grid);
		}
		var _g1 = 0;
		var _g = this.colorArr.length;
		while(_g1 < _g) {
			var i = _g1++;
			var colorArray = this.colorArr[i];
			haxe_Log.trace(colorArray,{ fileName : "CC029.hx", lineNumber : 60, className : "art.CC029", methodName : "drawShape"});
			var point = this.grid.array[i];
			var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
			var color0 = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
			var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
			var color1 = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
			var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
			var color2 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
			var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
			var color3 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
			var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
			var color4 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
			var _colorA = [color0,color1,color2,color3,color4];
			var _g3 = 0;
			var _g2 = _colorA.length;
			while(_g3 < _g2) {
				var j = _g3++;
				var px = 1;
				var _w = Math.floor((this.grid.cellWidth - px) / _colorA.length);
				var offsetX = j * _w;
				cc_CanvasTools.fillColourRGB(this.ctx,_colorA[j]);
				this.ctx.fillRect(offsetX + point.x,point.y,_w,this.grid.cellHeight - px);
			}
		}
	}
	,setup: function() {
		this.grid.setNumbered(32,32);
	}
	,draw: function() {
		haxe_Log.trace("draw: " + this.toString(),{ fileName : "CC029.hx", lineNumber : 94, className : "art.CC029", methodName : "draw"});
		this.drawShape();
		this.stop();
	}
	,__class__: art_CC029
});
var art_CC030 = function(ctx) {
	this._lineColor2 = null;
	this._lineColor = null;
	this._bgColor = null;
	this._px = 2;
	this._startLineWidth = 30;
	this._startRadius = 100;
	this.max = 7;
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
	window.addEventListener(Global.KEY_DOWN,$bind(this,this.onKeyDown));
};
$hxClasses["art.CC030"] = art_CC030;
art_CC030.__name__ = ["art","CC030"];
art_CC030.__interfaces__ = [art_ICCBase];
art_CC030.__super__ = art_CCBase;
art_CC030.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "CircleExtra", x : Global.w / 2, y : Global.h / 2, radius : this._startRadius, rotation : 0, angle : 250, speed : 1};
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.BLACK);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			sh.rotation = cc_util_MathUtil.radians(cc_util_MathUtil.randomInt(360));
			this.ctx.strokeStyle = cc_util_ColorUtil.getColourObj(cc_util_ColorUtil.WHITE);
			this.ctx.lineCap = "butt";
			this.ctx.lineWidth = this._startLineWidth;
			var _radius = this._startRadius + i * (this._startLineWidth + this._px);
			this.ctx.setLineDash(this.createDashedArray(_radius));
			this.ctx.save();
			this.ctx.translate(sh.x,sh.y);
			this.ctx.rotate(sh.rotation);
			cc_CanvasTools.strokeCircle(this.ctx,0,0,_radius);
			this.ctx.restore();
		}
	}
	,createDashedArray: function(radius) {
		var omtrek = cc_util_MathUtil.circumferenceCircle(radius);
		var arr = [];
		var randomParts = cc_util_MathUtil.randomInt(0,50);
		if(randomParts % 2 != 0) {
			++randomParts;
		}
		var counter = 0;
		var _g1 = 0;
		var _g = randomParts;
		while(_g1 < _g) {
			var i = _g1++;
			var value = cc_util_MathUtil.randomInt(0,100);
			counter += value;
			arr.push(value);
		}
		var temp = omtrek / counter;
		var _g11 = 0;
		var _g2 = arr.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			arr[i1] *= temp;
		}
		return arr;
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC030.hx", lineNumber : 98, className : "art.CC030", methodName : "setup"});
		var colorArray = cc_util_ColorUtil.niceColor100SortedString[cc_util_MathUtil.randomInt(cc_util_ColorUtil.niceColor100SortedString.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._bgColor = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._lineColor = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._lineColor2 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		var _g1 = 0;
		var _g = this.max;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
	}
	,draw: function() {
		this.drawShape();
		this.stop();
	}
	,onKeyDown: function(e) {
		var _g = e.key;
		if(_g == " ") {
			this.drawShape();
		} else {
			haxe_Log.trace("case '" + e.key + "': trace ('" + e.key + "');",{ fileName : "CC030.hx", lineNumber : 127, className : "art.CC030", methodName : "onKeyDown"});
		}
	}
	,__class__: art_CC030
});
var art_CC031 = function(ctx) {
	this.maxDistance = Global.h;
	this.cellsize = 50;
	this.maxRadius = 35;
	this.minRadius = 10;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	this.set_description("Circles react to mouse");
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC031"] = art_CC031;
art_CC031.__name__ = ["art","CC031"];
art_CC031.__interfaces__ = [art_ICCBase];
art_CC031.__super__ = art_CCBase;
art_CC031.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y, radius : this.minRadius};
		this.onAnimateHandler(shape);
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		if(this.isDebug) {
			cc_util_ShapeUtil.gridDots(this.ctx,this.grid);
		}
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			cc_CanvasTools.fillColourRGB(this.ctx,cc_util_ColorUtil.BLACK);
			cc_CanvasTools.fillCircle(this.ctx,sh.x,sh.y,sh.radius);
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC031.hx", lineNumber : 52, className : "art.CC031", methodName : "setup"});
		this.shapeArray = [];
		this.grid.setCellSize(this.cellsize);
		this.grid.setIsCenterPoint(true);
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var point = this.grid.array[i];
			this.shapeArray.push(this.createShape(i,point));
		}
		window.addEventListener("mousemove",$bind(this,this.onMouseMoveHandler));
	}
	,draw: function() {
		this.drawShape();
	}
	,onMouseMoveHandler: function(e) {
		var point = { x : e.clientX, y : e.clientY};
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var j = _g1++;
			var b2 = this.shapeArray[j];
			if(point == b2) {
				continue;
			}
			var currentDistance = cc_util_MathUtil.distance(point.x,point.y,b2.x,b2.y);
			if(currentDistance < this.maxDistance) {
				window.console.log("minRadius: " + this.minRadius);
				window.console.log("maxRadius: " + this.maxRadius);
				window.console.log("(maxRadius / minRadius): (" + this.maxRadius + " / " + this.minRadius + ") -> " + this.maxRadius / this.minRadius);
				window.console.log("(maxDistance / currentDistance): (" + this.maxDistance + " / " + currentDistance + ") -> " + this.maxDistance / currentDistance);
				b2.radius = this.maxRadius - currentDistance / this.maxDistance * (this.maxRadius - this.minRadius);
			} else {
				b2.radius = this.minRadius;
			}
		}
	}
	,onAnimateHandler: function(circle) {
	}
	,__class__: art_CC031
});
var art_CC031a = function(ctx) {
	this.maxDistance = 300;
	this.cellsize = 50;
	this.maxRadius = 35;
	this.minRadius = 10;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	this.set_description("Circles react to mouse");
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC031a"] = art_CC031a;
art_CC031a.__name__ = ["art","CC031a"];
art_CC031a.__interfaces__ = [art_ICCBase];
art_CC031a.__super__ = art_CCBase;
art_CC031a.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y, radius : this.minRadius, rgb : cc_util_ColorUtil.BLACK};
		this.onAnimateHandler(shape);
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		if(this.isDebug) {
			cc_util_ShapeUtil.gridDots(this.ctx,this.grid);
		}
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			cc_CanvasTools.fillColourRGB(this.ctx,sh.rgb);
			cc_CanvasTools.fillCircle(this.ctx,sh.x,sh.y,sh.radius);
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC031a.hx", lineNumber : 53, className : "art.CC031a", methodName : "setup"});
		this.shapeArray = [];
		this.grid.setCellSize(this.cellsize);
		this.grid.setIsCenterPoint(true);
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var point = this.grid.array[i];
			this.shapeArray.push(this.createShape(i,point));
		}
		window.addEventListener("mousemove",$bind(this,this.onMouseMoveHandler));
	}
	,draw: function() {
		this.drawShape();
	}
	,onMouseMoveHandler: function(e) {
		var point = { x : e.clientX, y : e.clientY};
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var j = _g1++;
			var b2 = this.shapeArray[j];
			var originalpoint = this.grid.array[j];
			if(point == b2) {
				continue;
			}
			var currentDistance = cc_util_MathUtil.distance(point.x,point.y,b2.x,b2.y);
			if(currentDistance < this.maxDistance) {
				var scale = 1 - currentDistance / this.maxDistance;
				var xoff = b2.x - point.x;
				var yoff = b2.y - point.y;
				b2.x = originalpoint.x + xoff * scale;
				b2.y = originalpoint.y + yoff * scale;
			} else {
				b2.x = originalpoint.x;
				b2.y = originalpoint.y;
				b2.rgb = cc_util_ColorUtil.BLACK;
			}
		}
	}
	,onAnimateHandler: function(circle) {
	}
	,__class__: art_CC031a
});
var art_CC032 = function(ctx) {
	this.totalCounter = 100;
	this.delaycounter = 0.0;
	this.cellsize = 150;
	this._speed = 0.5;
	this._rotation = 0.0;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
};
$hxClasses["art.CC032"] = art_CC032;
art_CC032.__name__ = ["art","CC032"];
art_CC032.__interfaces__ = [art_ICCBase];
art_CC032.__super__ = art_CCBase;
art_CC032.prototype = $extend(art_CCBase.prototype,{
	arrowConverter: function(size) {
		var _w = size;
		var _h = size;
		var pointArray = [];
		pointArray.push({ x : _w / 2, y : 0});
		pointArray.push({ x : _w, y : _h / 2});
		pointArray.push({ x : _w - _w / 4, y : _h / 2});
		pointArray.push({ x : _w - _w / 4, y : _h});
		pointArray.push({ x : _w / 4, y : _h});
		pointArray.push({ x : _w / 4, y : _h / 2});
		pointArray.push({ x : 0, y : _h / 2});
		return pointArray;
	}
	,arrowDraw: function(pointArray,pos) {
		this.ctx.save();
		this.ctx.translate(pos.x + this.cellsize / 2,pos.y + this.cellsize / 2);
		this.ctx.rotate(cc_util_MathUtil.radians(this._rotation));
		this.ctx.beginPath();
		cc_CanvasTools.fillColourRGB(this.ctx,cc_util_ColorUtil.WHITE);
		var _g1 = 0;
		var _g = pointArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var _point = pointArray[i];
			_point.x -= this.cellsize / 2;
			_point.y -= this.cellsize / 2;
			if(i == 0) {
				this.ctx.moveTo(_point.x,_point.y);
			} else {
				this.ctx.lineTo(_point.x,_point.y);
			}
		}
		this.ctx.fill();
		this.ctx.closePath();
		this.ctx.restore();
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.BLACK);
		if(this.isDebug) {
			cc_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var gridPoint = this.grid.array[i];
			var pointArray = this.arrowConverter(this.cellsize);
			this.arrowDraw(pointArray,gridPoint);
		}
		if(Math.round(this._rotation) == 360) {
			this._rotation = 0;
		}
		if(Math.round(this._rotation) == 0 || Math.round(this._rotation) == 90 || Math.round(this._rotation) == 180 || Math.round(this._rotation) == 270) {
			this.delaycounter++;
			if(this.delaycounter >= this.totalCounter) {
				this.delaycounter = 0;
				this._rotation += this._speed;
			}
			return;
		}
		this._rotation += this._speed;
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC032.hx", lineNumber : 84, className : "art.CC032", methodName : "setup"});
		this.grid.setCellSize(this.cellsize);
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC032
});
var art_CC033 = function(ctx) {
	this.cellsize = 50;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	this.set_description("Arrows following mouse");
	this.set_type(["Interactive"]);
	art_CCBase.call(this,ctx);
	window.addEventListener("mousemove",$bind(this,this.onMouseMoveHandler));
};
$hxClasses["art.CC033"] = art_CC033;
art_CC033.__name__ = ["art","CC033"];
art_CC033.__interfaces__ = [art_ICCBase];
art_CC033.__super__ = art_CCBase;
art_CC033.prototype = $extend(art_CCBase.prototype,{
	arrowConverter: function(size) {
		var _w = size;
		var _h = size;
		var pointArray = [];
		pointArray.push({ x : _w / 2, y : 0});
		pointArray.push({ x : _w, y : _h / 2});
		pointArray.push({ x : _w - _w / 4, y : _h / 2});
		pointArray.push({ x : _w - _w / 4, y : _h});
		pointArray.push({ x : _w / 4, y : _h});
		pointArray.push({ x : _w / 4, y : _h / 2});
		pointArray.push({ x : 0, y : _h / 2});
		return pointArray;
	}
	,arrowDraw: function(pointArray,pos) {
		var _rotation = cc_util_MathUtil.angle(pos.x + this.cellsize / 2,pos.y + this.cellsize / 2,this.clientX,this.clientY);
		this.ctx.save();
		this.ctx.translate(pos.x + this.cellsize / 2,pos.y + this.cellsize / 2);
		this.ctx.rotate(cc_util_MathUtil.radians(_rotation + 90));
		this.ctx.beginPath();
		cc_CanvasTools.fillColourRGB(this.ctx,cc_util_ColorUtil.WHITE);
		var _g1 = 0;
		var _g = pointArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var _point = pointArray[i];
			_point.x -= this.cellsize / 2;
			_point.y -= this.cellsize / 2;
			if(i == 0) {
				this.ctx.moveTo(_point.x,_point.y);
			} else {
				this.ctx.lineTo(_point.x,_point.y);
			}
		}
		this.ctx.fill();
		this.ctx.closePath();
		this.ctx.restore();
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.BLACK);
		if(this.isDebug) {
			cc_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var gridPoint = this.grid.array[i];
			var pointArray = this.arrowConverter(this.cellsize);
			this.arrowDraw(pointArray,gridPoint);
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC033.hx", lineNumber : 82, className : "art.CC033", methodName : "setup"});
		this.grid.setCellSize(this.cellsize);
	}
	,draw: function() {
		this.drawShape();
	}
	,onMouseMoveHandler: function(e) {
		var point_x = e.clientX;
		var point_y = e.clientY;
		this.clientX = e.clientX;
		this.clientY = e.clientY;
	}
	,__class__: art_CC033
});
var art_CC034 = function(ctx) {
	this.maxCircleSize = 30;
	this.minRadius = -50;
	this.maxRadius = Global.h / 3;
	this.shapeMax = 25;
	this.shapeArray = [];
	this.set_description("Circles in a circle");
	this.set_type(["Animation"]);
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC034"] = art_CC034;
art_CC034.__name__ = ["art","CC034"];
art_CC034.__interfaces__ = [art_ICCBase];
art_CC034.__super__ = art_CCBase;
art_CC034.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i) {
		var shape = { _id : "" + i, _type : "circle", x : Global.w / 2, y : Global.h / 2, rgb : cc_util_ColorUtil.BLACK, radius : this.maxRadius + i * (this.minRadius / this.shapeMax), size : this.maxCircleSize / this.shapeMax * i, angle : 360 / this.shapeMax * i, speed : 1};
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			sh.angle += sh.speed;
			sh.x = Global.w / 2 + Math.cos(cc_util_MathUtil.radians(sh.angle)) * sh.radius;
			sh.y = Global.h / 2 + Math.sin(cc_util_MathUtil.radians(sh.angle)) * sh.radius;
			this.ctx.fillStyle = cc_util_ColorUtil.getColourObj(sh.rgb);
			cc_CanvasTools.circle(this.ctx,sh.x,sh.y,sh.size);
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC034.hx", lineNumber : 52, className : "art.CC034", methodName : "setup"});
		var _g1 = 0;
		var _g = this.shapeMax;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC034
});
var art_CC035 = function(ctx) {
	this.divideArray = [360,180];
	this.lineWidthArray = [60,120];
	this.startLineWidth = 30;
	this.startRadius = 200;
	this.max = 2;
	this.shapeArray = [];
	this.set_description("circle lines");
	this.set_type(["Animation","Image"]);
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC035"] = art_CC035;
art_CC035.__name__ = ["art","CC035"];
art_CC035.__interfaces__ = [art_ICCBase];
art_CC035.__super__ = art_CCBase;
art_CC035.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "CircleExtra", x : Global.w / 2, y : Global.h / 2, radius : this.startRadius, rotation : 0, angle : 250, speed : 0.0001};
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.BLACK);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			sh.rotation += sh.speed;
			this.ctx.strokeStyle = cc_util_ColorUtil.getColourObj(cc_util_ColorUtil.WHITE);
			this.ctx.lineCap = "butt";
			this.ctx.lineWidth = this.lineWidthArray[i];
			var radius = this.startRadius;
			var omtrek = cc_util_MathUtil.circumferenceCircle(radius);
			this.ctx.setLineDash([1,Math.round(omtrek / this.divideArray[i])]);
			this.ctx.save();
			this.ctx.translate(sh.x,sh.y);
			this.ctx.rotate(sh.rotation);
			cc_CanvasTools.strokeCircle(this.ctx,0,0,radius);
			this.ctx.restore();
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC035.hx", lineNumber : 69, className : "art.CC035", methodName : "setup"});
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.max;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
	}
	,draw: function() {
		this.drawShape();
		this.stop();
	}
	,__class__: art_CC035
});
var art_CC036 = function(ctx) {
	this.divideArray = [60,12];
	this.lineWidthArray = [30,60,90];
	this.lineW = 30;
	this.startLineWidth = 30;
	this.startRadius = 200;
	this.max = 2;
	this.shapeArray = [];
	this.set_description("circle lines");
	this.set_type(["Animation","Image"]);
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC036"] = art_CC036;
art_CC036.__name__ = ["art","CC036"];
art_CC036.__interfaces__ = [art_ICCBase];
art_CC036.__super__ = art_CCBase;
art_CC036.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "CircleExtra", x : Global.w / 2, y : Global.h / 2, radius : this.startRadius, rotation : -90, angle : 250, speed : 0.0001};
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.BLACK);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			sh.radius -= this.lineW / 2 * i;
			this.ctx.strokeStyle = cc_util_ColorUtil.getColourObj(cc_util_ColorUtil.WHITE);
			this.ctx.lineCap = "butt";
			this.ctx.lineWidth = this.lineWidthArray[i];
			var omtrek = cc_util_MathUtil.circumferenceCircle(sh.radius);
			this.ctx.setLineDash([1,omtrek / this.divideArray[i] - 1]);
			this.ctx.save();
			this.ctx.translate(sh.x,sh.y);
			this.ctx.rotate(cc_util_MathUtil.radians(sh.rotation));
			cc_CanvasTools.strokeCircle(this.ctx,0,0,sh.radius);
			this.ctx.restore();
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC036.hx", lineNumber : 71, className : "art.CC036", methodName : "setup"});
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.max;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
	}
	,draw: function() {
		this.drawShape();
		this.stop();
	}
	,__class__: art_CC036
});
var art_CC037 = function(ctx) {
	this.maxSides = 6;
	this.cellsize = 20;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
};
$hxClasses["art.CC037"] = art_CC037;
art_CC037.__name__ = ["art","CC037"];
art_CC037.__interfaces__ = [art_ICCBase];
art_CC037.__super__ = art_CCBase;
art_CC037.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i) {
		var shape = { _id : "" + i, _type : "polygon", x : 0, y : 0, sides : this.maxSides, size : this.cellsize};
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		var hoek = 360 / this.maxSides;
		var hoek_2 = cc_util_MathUtil.radians(hoek / 2);
		var horDistSin = Math.sin(hoek_2) * this.cellsize;
		var horDistCos = Math.cos(hoek_2) * this.cellsize;
		var horDistTan = Math.tan(hoek_2) * this.cellsize;
		haxe_Log.trace("schuine zijde: " + this.cellsize,{ fileName : "CC037.hx", lineNumber : 41, className : "art.CC037", methodName : "drawShape"});
		haxe_Log.trace("- horDistSin: " + horDistSin,{ fileName : "CC037.hx", lineNumber : 42, className : "art.CC037", methodName : "drawShape"});
		haxe_Log.trace("> horDistCos: " + horDistCos,{ fileName : "CC037.hx", lineNumber : 43, className : "art.CC037", methodName : "drawShape"});
		haxe_Log.trace("- horDistTan: " + horDistTan,{ fileName : "CC037.hx", lineNumber : 44, className : "art.CC037", methodName : "drawShape"});
		haxe_Log.trace(cc_util_MathUtil.pythagoreanTheorem(0,horDistCos,this.cellsize),{ fileName : "CC037.hx", lineNumber : 46, className : "art.CC037", methodName : "drawShape"});
		var distX = this.cellsize + horDistSin;
		var distY = horDistCos;
		this.grid.setIsFullscreen();
		this.grid.setCellSize(distX,distY);
		this.grid.setIsCenterPoint(true);
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
		haxe_Log.trace("w: " + Global.w + ", h: " + Global.h,{ fileName : "CC037.hx", lineNumber : 62, className : "art.CC037", methodName : "drawShape"});
		haxe_Log.trace("total: " + this.grid.array.length,{ fileName : "CC037.hx", lineNumber : 63, className : "art.CC037", methodName : "drawShape"});
		haxe_Log.trace("numHor: " + this.grid.numHor + ", numVer: " + this.grid.numVer,{ fileName : "CC037.hx", lineNumber : 64, className : "art.CC037", methodName : "drawShape"});
		haxe_Log.trace("width: " + this.grid.width + ", height: " + this.grid.height,{ fileName : "CC037.hx", lineNumber : 65, className : "art.CC037", methodName : "drawShape"});
		haxe_Log.trace("x: " + this.grid.x + ", y: " + this.grid.y,{ fileName : "CC037.hx", lineNumber : 66, className : "art.CC037", methodName : "drawShape"});
		var startX = this.grid.x;
		var startY = this.grid.y;
		var gridCounterY = 0;
		var gridCounterX = 0;
		var _g11 = 0;
		var _g2 = this.shapeArray.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var sh = this.shapeArray[i1];
			sh.x = startX + gridCounterX * distX;
			sh.y = startY + gridCounterY * (distY * 2);
			cc_CanvasTools.strokeColourRGB(this.ctx,cc_util_ColorUtil.BLACK);
			cc_CanvasTools.fillColourRGB(this.ctx,cc_util_ColorUtil.randomColourObject());
			cc_CanvasTools.outlinedPolygon(this.ctx,sh.x,sh.y,sh.sides,sh.size,cc_util_ColorUtil.getColourObj(cc_util_ColorUtil.randomColourObject()),cc_util_ColorUtil.getColourObj(cc_util_ColorUtil.BLACK));
			++gridCounterY;
			if(gridCounterY >= this.grid.numVer) {
				++gridCounterX;
				gridCounterY = 0;
				startX = this.grid.x;
				if(gridCounterX % 2 == 1) {
					startY = this.grid.y + distY;
				} else {
					startY = this.grid.y;
				}
			}
		}
		if(this.isDebug) {
			cc_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC037.hx", lineNumber : 102, className : "art.CC037", methodName : "setup"});
	}
	,draw: function() {
		haxe_Log.trace("draw: " + this.toString(),{ fileName : "CC037.hx", lineNumber : 107, className : "art.CC037", methodName : "draw"});
		this.drawShape();
		this.stop();
	}
	,__class__: art_CC037
});
var art_CC038 = function(ctx) {
	this.maxSides = 6;
	this.cellsize = 20;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
};
$hxClasses["art.CC038"] = art_CC038;
art_CC038.__name__ = ["art","CC038"];
art_CC038.__interfaces__ = [art_ICCBase];
art_CC038.__super__ = art_CCBase;
art_CC038.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i) {
		var shape = { _id : "" + i, _type : "polygon", x : 0, y : 0, sides : this.maxSides, size : this.cellsize};
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		var hoek = 360 / this.maxSides;
		var hoek_2 = cc_util_MathUtil.radians(hoek / 2);
		var horDistSin = Math.sin(hoek_2) * this.cellsize;
		var horDistCos = Math.cos(hoek_2) * this.cellsize;
		var horDistTan = Math.tan(hoek_2) * this.cellsize;
		haxe_Log.trace("schuine zijde: " + this.cellsize,{ fileName : "CC038.hx", lineNumber : 42, className : "art.CC038", methodName : "drawShape"});
		haxe_Log.trace("- horDistSin: " + horDistSin,{ fileName : "CC038.hx", lineNumber : 43, className : "art.CC038", methodName : "drawShape"});
		haxe_Log.trace("> horDistCos: " + horDistCos,{ fileName : "CC038.hx", lineNumber : 44, className : "art.CC038", methodName : "drawShape"});
		haxe_Log.trace("- horDistTan: " + horDistTan,{ fileName : "CC038.hx", lineNumber : 45, className : "art.CC038", methodName : "drawShape"});
		haxe_Log.trace(cc_util_MathUtil.pythagoreanTheorem(0,horDistCos,this.cellsize),{ fileName : "CC038.hx", lineNumber : 47, className : "art.CC038", methodName : "drawShape"});
		var distX = this.cellsize + horDistSin;
		var distY = horDistCos;
		this.grid.setIsFullscreen();
		this.grid.setCellSize(distX,distY);
		this.grid.setIsCenterPoint(true);
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
		haxe_Log.trace("w: " + Global.w + ", h: " + Global.h,{ fileName : "CC038.hx", lineNumber : 63, className : "art.CC038", methodName : "drawShape"});
		haxe_Log.trace("total: " + this.grid.array.length,{ fileName : "CC038.hx", lineNumber : 64, className : "art.CC038", methodName : "drawShape"});
		haxe_Log.trace("numHor: " + this.grid.numHor + ", numVer: " + this.grid.numVer,{ fileName : "CC038.hx", lineNumber : 65, className : "art.CC038", methodName : "drawShape"});
		haxe_Log.trace("width: " + this.grid.width + ", height: " + this.grid.height,{ fileName : "CC038.hx", lineNumber : 66, className : "art.CC038", methodName : "drawShape"});
		haxe_Log.trace("x: " + this.grid.x + ", y: " + this.grid.y,{ fileName : "CC038.hx", lineNumber : 67, className : "art.CC038", methodName : "drawShape"});
		var startX = this.grid.x;
		var startY = this.grid.y;
		var gridCounterY = 0;
		var gridCounterX = 0;
		var _g11 = 0;
		var _g2 = this.shapeArray.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var sh = this.shapeArray[i1];
			sh.x = startX + gridCounterX * distX;
			sh.y = startY + gridCounterY * (distY * 2);
			cc_CanvasTools.strokeColourRGB(this.ctx,cc_util_ColorUtil.BLACK);
			cc_CanvasTools.fillColourRGB(this.ctx,cc_util_ColorUtil.randomColourObject());
			var __color = this.getPixel(sh.x,sh.y);
			cc_CanvasTools.outlinedPolygon(this.ctx,sh.x,sh.y,sh.sides,sh.size,__color,cc_util_ColorUtil.getColourObj(cc_util_ColorUtil.BLACK));
			++gridCounterY;
			if(gridCounterY >= this.grid.numVer) {
				++gridCounterX;
				gridCounterY = 0;
				startX = this.grid.x;
				if(gridCounterX % 2 == 1) {
					startY = this.grid.y + distY;
				} else {
					startY = this.grid.y;
				}
			}
		}
		if(this.isDebug) {
			cc_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
	}
	,getPixel: function(x,y) {
		var xpos = x;
		var ypos = y;
		var pixel = this.ctxHidden.getImageData(xpos,ypos,1,1);
		var data = pixel.data;
		var rgba = "rgba(" + data[0] + ", " + data[1] + ", " + data[2] + ", " + data[3] / 255 + ")";
		return rgba;
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC038.hx", lineNumber : 114, className : "art.CC038", methodName : "setup"});
		var colorArray = cc_util_ColorUtil.niceColor100SortedString[cc_util_MathUtil.randomInt(cc_util_ColorUtil.niceColor100SortedString.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		var _color0 = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		var _color1_r = int1 >> 16 & 255;
		var _color1_g = int1 >> 8 & 255;
		var _color1_b = int1 & 255;
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		var _color2_r = int2 >> 16 & 255;
		var _color2_g = int2 >> 8 & 255;
		var _color2_b = int2 & 255;
		var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		var _color3_r = int3 >> 16 & 255;
		var _color3_g = int3 >> 8 & 255;
		var _color3_b = int3 & 255;
		var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		var _color4 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
		var option = new SketchOption();
		option.set_width(Global.w);
		option.set_height(Global.h);
		this.ctxHidden = Sketch.createHiddenCanvas("imageholder",option,this.isDebug);
		var gradient = this.ctx.createLinearGradient(0,0,Global.w,Global.h);
		gradient.addColorStop(0,cc_util_ColorUtil.getColourObj(_color0));
		gradient.addColorStop(1,cc_util_ColorUtil.getColourObj(_color4));
		this.ctxHidden.fillStyle = gradient;
		this.ctxHidden.fillRect(0,0,Global.w,Global.h);
	}
	,draw: function() {
		haxe_Log.trace("draw: " + this.toString(),{ fileName : "CC038.hx", lineNumber : 143, className : "art.CC038", methodName : "draw"});
		this.drawShape();
		this.stop();
	}
	,__class__: art_CC038
});
var art_CC039 = function(ctx) {
	this.set_description("Image manipulation");
	this.createQuickSettings();
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC039"] = art_CC039;
art_CC039.__name__ = ["art","CC039"];
art_CC039.__interfaces__ = [art_ICCBase];
art_CC039.__super__ = art_CCBase;
art_CC039.prototype = $extend(art_CCBase.prototype,{
	QuicksettingsDefaults: function() {
		this.panel1.setValue("grayscale",0);
		this.panel1.setValue("brightness",100);
		this.panel1.setValue("contrast",100);
		this.panel1.setValue("invert",0);
		this.panel1.setValue("opacity",100);
		this.panel1.setValue("saturate",100);
		this.panel1.setValue("sepia",0);
		this.panel1.setValue("mirrorfran",0);
		this.drawShape();
	}
	,createQuickSettings: function() {
		var _gthis = this;
		this.panel1 = QuickSettings.create(10,10,"Filters").addRange("grayscale",0,100,0,1,function(value) {
			_gthis.setFilter("grayscale",value);
		}).addRange("brightness",0,300,100,1,function(value1) {
			_gthis.setFilter("brightness",value1);
		}).addRange("contrast",0,100,100,1,function(value2) {
			_gthis.setFilter("contrast",value2);
		}).addRange("invert",0,100,0,1,function(value3) {
			_gthis.setFilter("invert",value3);
		}).addRange("opacity",0,100,100,1,function(value4) {
			_gthis.setFilter("opacity",value4);
		}).addRange("saturate",0,100,100,1,function(value5) {
			_gthis.setFilter("saturate",value5);
		}).addRange("sepia",0,100,0,1,function(value6) {
			_gthis.setFilter("sepia",value6);
		}).addDropDown("mirror",["none","horizontal","vertical","both"],function(value7) {
			_gthis.dropdown("DropDown",value7);
		}).addBoolean("flip horizonal",false,function(value8) {
			_gthis.setFlip("flip horizonal",value8);
		}).addBoolean("flip vertical",false,function(value9) {
			_gthis.setFlip("flip vertical",value9);
		}).addButton("Defaults",function(value10) {
			_gthis.QuicksettingsDefaults();
		}).addHTML("Info","Info. This is a description...");
	}
	,output: function(name,value) {
		window.console.log("Output","" + name + ": " + Std.string(value));
	}
	,dropdown: function(value,index) {
		var _g = index.label;
		switch(_g) {
		case "both":
			this.ctx.drawImage(this.ctxHidden.canvas,0,0,Global.w,Global.h);
			cc_util_EffectUtil.mirror(this.ctx,false);
			cc_util_EffectUtil.mirror(this.ctx,true);
			haxe_Log.trace("both",{ fileName : "CC039.hx", lineNumber : 86, className : "art.CC039", methodName : "dropdown"});
			break;
		case "horizontal":
			this.ctx.drawImage(this.ctxHidden.canvas,0,0,Global.w,Global.h);
			cc_util_EffectUtil.mirror(this.ctx,true);
			break;
		case "none":
			this.ctx.drawImage(this.ctxHidden.canvas,0,0,Global.w,Global.h);
			break;
		case "vertical":
			this.ctx.drawImage(this.ctxHidden.canvas,0,0,Global.w,Global.h);
			cc_util_EffectUtil.mirror(this.ctx,false);
			break;
		default:
			haxe_Log.trace("case '" + Std.string(index.label) + "': trace ('" + Std.string(index.label) + "');",{ fileName : "CC039.hx", lineNumber : 87, className : "art.CC039", methodName : "dropdown"});
		}
	}
	,setFlip: function(type,isTrue) {
		var isHorizontal = false;
		if(type == "flip horizonal") {
			isHorizontal = true;
		}
		if(isTrue) {
			cc_util_EffectUtil.flip(this.ctx,isHorizontal);
		} else {
			this.ctx.drawImage(this.ctxHidden.canvas,0,0,Global.w,Global.h);
		}
	}
	,setMirror: function(type,isTrue) {
		switch(type) {
		case "mirror both":
			haxe_Log.trace("mirror both",{ fileName : "CC039.hx", lineNumber : 104, className : "art.CC039", methodName : "setMirror"});
			break;
		case "mirror horizontal":
			haxe_Log.trace("mirror horizontal",{ fileName : "CC039.hx", lineNumber : 102, className : "art.CC039", methodName : "setMirror"});
			break;
		case "mirror vertical":
			haxe_Log.trace("mirror vertical",{ fileName : "CC039.hx", lineNumber : 103, className : "art.CC039", methodName : "setMirror"});
			break;
		default:
			haxe_Log.trace("case '" + type + "': trace ('" + type + "');",{ fileName : "CC039.hx", lineNumber : 105, className : "art.CC039", methodName : "setMirror"});
		}
		if(isTrue) {
			haxe_Log.trace("mirror",{ fileName : "CC039.hx", lineNumber : 108, className : "art.CC039", methodName : "setMirror"});
			cc_util_EffectUtil.mirror(this.ctx);
		} else {
			haxe_Log.trace("reset mirror",{ fileName : "CC039.hx", lineNumber : 111, className : "art.CC039", methodName : "setMirror"});
			this.ctx.drawImage(this.ctxHidden.canvas,0,0,Global.w,Global.h);
		}
	}
	,setFilter: function(type,value) {
		if(this.ctx == null) {
			return;
		}
		var _g = type.toLowerCase();
		switch(_g) {
		case "brightness":
			cc_util_FilterUtil.brightness(this.ctx,value);
			break;
		case "contrast":
			cc_util_FilterUtil.contrast(this.ctx,value);
			break;
		case "grayscale":
			cc_util_FilterUtil.grayscale(this.ctx,value);
			break;
		case "invert":
			cc_util_FilterUtil.invert(this.ctx,value);
			break;
		case "opacity":
			cc_util_FilterUtil.opacity(this.ctx,value);
			break;
		case "saturate":
			cc_util_FilterUtil.saturate(this.ctx,value);
			break;
		case "sepia":
			cc_util_FilterUtil.sepia(this.ctx,value);
			break;
		default:
			haxe_Log.trace("case '" + type + "': trace ('" + type + "');",{ fileName : "CC039.hx", lineNumber : 127, className : "art.CC039", methodName : "setFilter"});
		}
		this.drawShape();
	}
	,drawShape: function() {
		if(this.ctxHidden == null) {
			return;
		}
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		this.ctx.drawImage(this.ctxHidden.canvas,0,0,Global.w,Global.h);
	}
	,setup: function() {
		var _gthis = this;
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC039.hx", lineNumber : 144, className : "art.CC039", methodName : "setup"});
		this.isDebug = true;
		var img = new Image();
		img.src = "assets/img/lotus.jpg";
		img.onload = function() {
			var option = new SketchOption();
			option.set_width(img.width);
			option.set_height(img.height);
			_gthis.ctxHidden = Sketch.createHiddenCanvas("imageholder",option,false);
			_gthis.ctxHidden.drawImage(img,0,0,img.width,img.height);
			img.style.display = "none";
			_gthis.drawShape();
		};
	}
	,draw: function() {
		haxe_Log.trace("draw: " + this.toString(),{ fileName : "CC039.hx", lineNumber : 163, className : "art.CC039", methodName : "draw"});
		this.drawShape();
		this.stop();
	}
	,__class__: art_CC039
});
var art_CC040 = function(ctx) {
	this._color4 = null;
	this._color3 = null;
	this._color2 = null;
	this._color1 = null;
	this._color0 = null;
	this._cellsize = 150;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	this.set_description("Quarter growing circle through dashed lines");
	this.set_type(["Animation","Image"]);
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC040"] = art_CC040;
art_CC040.__name__ = ["art","CC040"];
art_CC040.__interfaces__ = [art_ICCBase];
art_CC040.__super__ = art_CCBase;
art_CC040.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y, radius : this._cellsize / 2};
		shape["part"] = 0;
		shape["dir"] = 1;
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.BLACK);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			this.ctx.strokeStyle = cc_util_ColorUtil.getColourObj(cc_util_ColorUtil.WHITE);
			this.ctx.lineCap = "butt";
			this.ctx.lineWidth = 15;
			var omtrek = cc_util_MathUtil.circumferenceCircle(sh.radius);
			var part = Reflect.getProperty(sh,"part");
			var dir = Reflect.getProperty(sh,"dir");
			this.ctx.setLineDash([part,omtrek / 4 - 0.5 - part]);
			cc_CanvasTools.strokeCircle(this.ctx,sh.x,sh.y,sh.radius);
			if(part >= omtrek / 4) {
				sh["dir"] = -1;
			}
			if(part < 0) {
				sh["dir"] = 1;
			}
			sh["part"] = part + dir;
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC040.hx", lineNumber : 68, className : "art.CC040", methodName : "setup"});
		var colorArray = cc_util_ColorUtil.niceColor100[cc_util_MathUtil.randomInt(cc_util_ColorUtil.niceColor100.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._color0 = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._color1 = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._color2 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		this._color3 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
		var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		this._color4 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
		this.grid.setDebug(this.isDebug);
		this.grid.setCellSize(this._cellsize);
		this.grid.setIsCenterPoint(true);
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i,this.grid.array[i]));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC040
});
var art_CC041 = function(ctx) {
	this._max = 0.0;
	this._min = 0.0;
	this.frameRate = 15;
	this.maxFrameRate = 60;
	this.counter = 0;
	this.ypos = 0;
	this.xpos = 0;
	this.openSimple = new cc_noise_OpenSimplexNoise();
	this._fillColor = null;
	this._lineColor = null;
	this._bgColor = null;
	this._cellsize = 150;
	this._radius = 150;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	this.set_description("Example of random created with Perlin Noise");
	this.set_type(["Animation","Image"]);
	cc_draw_Text.embedGoogleFont("Open+Sans+Condensed:300,300i,700",$bind(this,this.onEmbedHandler));
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC041"] = art_CC041;
art_CC041.__name__ = ["art","CC041"];
art_CC041.__interfaces__ = [art_ICCBase];
art_CC041.__super__ = art_CCBase;
art_CC041.prototype = $extend(art_CCBase.prototype,{
	onEmbedHandler: function(e) {
		haxe_Log.trace("onEmbedHandler: \"" + e + "\"",{ fileName : "CC041.hx", lineNumber : 37, className : "art.CC041", methodName : "onEmbedHandler"});
		this.drawShape();
	}
	,createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y, radius : this._radius};
		return shape;
	}
	,drawShape: function() {
		this.counter++;
		if(this.counter % (this.maxFrameRate / this.frameRate) != 0) {
			return;
		}
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		this.ctx.fillStyle = cc_util_ColorUtil.getColourObj(cc_util_ColorUtil.BLACK);
		cc_draw_Text.centerFillText(this.ctx,"Math.random",this.grid.array[0].x,this.grid.array[0].y - this._radius * 1.5,"'Open Sans Condensed', sans-serif",60);
		cc_draw_Text.centerFillText(this.ctx,"Perlin noise",this.grid.array[1].x,this.grid.array[1].y - this._radius * 1.5,"'Open Sans Condensed', sans-serif",60);
		if(this.isDebug) {
			cc_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			var valx = this.openSimple["eval"](this.xpos,this.ypos);
			var valy = this.openSimple["eval"](this.xpos * 24,this.ypos * 24);
			if(valx < this._min) {
				this._min = valx;
			}
			if(valx > this._max) {
				this._max = valx;
			}
			var _randomX = cc_util_MathUtil.random(this._min,this._max);
			var _randomY = cc_util_MathUtil.random(this._min,this._max);
			var _value = 50;
			if(i == 1) {
				_randomX = valx;
				_randomY = valy;
				this.xpos++;
				if(this.xpos >= 100) {
					this.ypos++;
					this.xpos = 0;
					if(this.ypos >= 100) {
						this.ypos = 0;
					}
				}
			}
			var _xpos = sh.x + _randomX * _value;
			var _ypos = sh.y + _randomY * _value;
			cc_CanvasTools.circle(this.ctx,_xpos,_ypos,sh.radius);
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC041.hx", lineNumber : 140, className : "art.CC041", methodName : "setup"});
		var colorArray = cc_util_ColorUtil.niceColor100[cc_util_MathUtil.randomInt(cc_util_ColorUtil.niceColor100.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._bgColor = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._lineColor = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._fillColor = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		this.isDebug = true;
		this.grid.setCellSize(Global.w / 2,Global.h);
		this.grid.setIsCenterPoint(true);
		this.openSimple.setup(cc_util_MathUtil.randomInt(0,6000));
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i,this.grid.array[i]));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC041
});
var art_CC042 = function(ctx) {
	this.set_description("Happy mistake");
	this.set_type(["Animation","Image"]);
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC042"] = art_CC042;
art_CC042.__name__ = ["art","CC042"];
art_CC042.__interfaces__ = [art_ICCBase];
art_CC042.__super__ = art_CCBase;
art_CC042.prototype = $extend(art_CCBase.prototype,{
	drawShape: function() {
		var r = Math.min(Global.w,Global.h) / 2.3;
		cc_CanvasTools.strokeColourRGB(this.ctx,cc_util_ColorUtil.BLACK,0.1);
		cc_CanvasTools.strokeEllipse(this.ctx,Global.w / 2,Global.h / 2,cc_util_MathUtil.random(0,r),cc_util_MathUtil.random(0,r));
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC042.hx", lineNumber : 21, className : "art.CC042", methodName : "setup"});
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC042
});
var art_CC043 = function(ctx) {
	this.ypos = Global.h;
	this.xpos = Global.w / 2;
	this.set_description("First attempt at creating snake like patterns");
	this.set_type(["Animation","Image"]);
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC043"] = art_CC043;
art_CC043.__name__ = ["art","CC043"];
art_CC043.__interfaces__ = [art_ICCBase];
art_CC043.__super__ = art_CCBase;
art_CC043.prototype = $extend(art_CCBase.prototype,{
	drawShape: function() {
		var imageData = this.ctx.getImageData(0,0,Global.w,Global.h);
		this.ctx.putImageData(imageData,0,1);
		cc_CanvasTools.strokeWeight(this.ctx,2);
		cc_CanvasTools.fillColourRGB(this.ctx,cc_util_ColorUtil.GRAY);
		cc_CanvasTools.strokeColourRGB(this.ctx,cc_util_ColorUtil.BLACK);
		var r = Math.min(Global.w,Global.h) / 2.3;
		this.xpos = Global.w / 2;
		this.ypos = Global.h / 3;
		cc_CanvasTools.ellipseFillStroke(this.ctx,this.xpos,this.ypos,cc_util_MathUtil.random(0,r),cc_util_MathUtil.random(20,40));
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC043.hx", lineNumber : 60, className : "art.CC043", methodName : "setup"});
		this.ypos = Global.h;
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundRGB(this.ctx,cc_util_ColorUtil.WHITE);
		this.isDebug = true;
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC043
});
var art_CC044 = function(ctx) {
	this.defaultH = 300;
	this.defaultW = 300;
	this._height = Global.h;
	this._width = Global.w;
	this.lacunarity = 2;
	this.persistence = 0.9;
	this.amplitude = 1;
	this.octaves = 1;
	this.yValue = 50;
	this.xValue = 50;
	this.perlin = new cc_noise_Perlin();
	this._fillColor = null;
	this._lineColor = null;
	this._bgColor = null;
	this._cellsize = 150;
	this._radius = 150;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	this.set_description("Test with Perlin Noise, see what happens with different settings");
	this.set_type(["Image"]);
	this.createQuickSettings();
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC044"] = art_CC044;
art_CC044.__name__ = ["art","CC044"];
art_CC044.__interfaces__ = [art_ICCBase];
art_CC044.__super__ = art_CCBase;
art_CC044.prototype = $extend(art_CCBase.prototype,{
	createQuickSettings: function() {
		var _gthis = this;
		this.panel1 = QuickSettings.create(10,10,"Perlin Noise").setGlobalChangeHandler($bind(this,this.drawShape)).addHTML("About","I had problems wrapping my head around the patterns created with Perlin Noise. It feels kinda magical and I don't seem to get the images I expect").addRange("perlin",0,65536,50,1,function(value) {
			_gthis.perlin = new cc_noise_Perlin(value);
		}).addRange("xValue",0.0,100.0,50.0,1.0,function(value1) {
			_gthis.xValue = value1;
		}).addRange("yValue",0.0,100.0,50.0,1.0,function(value2) {
			_gthis.yValue = value2;
		}).addRange("octaves",0,10,1,1,function(value3) {
			_gthis.octaves = value3;
		}).addRange("amplitude",0.0,10.0,1.0,0.1,function(value4) {
			_gthis.amplitude = value4;
		}).addRange("persistence",0.0,10.0,0.9,0.1,function(value5) {
			_gthis.persistence = value5;
		}).addRange("lacunarity",0.0,10.0,2.0,.1,function(value6) {
			_gthis.lacunarity = value6;
		}).addBoolean("Fullscreen",false,function(value7) {
			_gthis.isFullscreen(value7);
		}).addButton("defaults",function(value8) {
			_gthis.quicksetttingsDefault();
		}).saveInLocalStorage("localstoragedemo_v3.0");
	}
	,output: function(name,value) {
		window.console.log("Output","" + name + ": " + Std.string(value));
	}
	,quicksetttingsDefault: function() {
		haxe_Log.trace("defaults",{ fileName : "CC044.hx", lineNumber : 84, className : "art.CC044", methodName : "quicksetttingsDefault"});
		this.panel1.setValue("Fullscreen",false);
		this.panel1.setValue("octaves",1);
		this.panel1.setValue("xValue",50.0);
		this.panel1.setValue("yValue",50.0);
		this.panel1.setValue("amplitude",1.0);
		this.panel1.setValue("persistence",0.9);
		this.panel1.setValue("lacunarity",2.0);
	}
	,isFullscreen: function(isfullscreen) {
		if(isfullscreen) {
			this._width = Global.w;
			this._height = Global.h;
		} else {
			this._width = this.defaultW;
			this._height = this.defaultH;
		}
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		var min = 100000.0;
		var max = 0.0;
		var xOffset = 0.0;
		var yOffset = 0.0;
		if(this._width == this.defaultW) {
			xOffset = (Global.w - this.defaultW) / 2;
		}
		if(this._height == this.defaultH) {
			yOffset = (Global.h - this.defaultH) / 2;
		}
		var _g1 = 0;
		var _g = this._width;
		while(_g1 < _g) {
			var x = _g1++;
			var _g3 = 0;
			var _g2 = this._height;
			while(_g3 < _g2) {
				var y = _g3++;
				var value = Math.abs(this.perlin.noise2d(x / this.xValue,y / this.yValue,this.octaves,this.amplitude,this.persistence,this.lacunarity));
				value *= 256;
				if(value <= min) {
					min = value;
				}
				if(value >= max) {
					max = value;
				}
				cc_CanvasTools.colour(this.ctx,Math.round(value),Math.round(value),Math.round(value));
				this.ctx.fillRect(xOffset + x,yOffset + y,1,1);
			}
		}
		haxe_Log.trace("min: " + min,{ fileName : "CC044.hx", lineNumber : 137, className : "art.CC044", methodName : "drawShape"});
		haxe_Log.trace("max: " + max,{ fileName : "CC044.hx", lineNumber : 138, className : "art.CC044", methodName : "drawShape"});
		window.console.group("Perlin Noise values");
		window.console.log("xValue: " + this.xValue);
		window.console.log("yValue: " + this.yValue);
		window.console.log("octaves: " + this.octaves);
		window.console.log("amplitude: " + this.amplitude);
		window.console.log("persistence: " + this.persistence);
		window.console.log("lacunarity: " + this.lacunarity);
		window.console.groupEnd();
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC044.hx", lineNumber : 151, className : "art.CC044", methodName : "setup"});
		var colorArray = cc_util_ColorUtil.niceColor100[cc_util_MathUtil.randomInt(cc_util_ColorUtil.niceColor100.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._bgColor = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._lineColor = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._fillColor = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		this.isDebug = true;
	}
	,draw: function() {
		this.drawShape();
		this.stop();
	}
	,__class__: art_CC044
});
var art_CC045 = function(ctx) {
	this.max = 1000;
	this._radius = 150;
	this.set_description("Repeating a lot of cirlces, just a nice image");
	this.set_type(["Image"]);
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC045"] = art_CC045;
art_CC045.__name__ = ["art","CC045"];
art_CC045.__interfaces__ = [art_ICCBase];
art_CC045.__super__ = art_CCBase;
art_CC045.prototype = $extend(art_CCBase.prototype,{
	drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.BLACK);
		cc_CanvasTools.strokeColourRGB(this.ctx,cc_util_ColorUtil.WHITE,0.05);
		cc_CanvasTools.strokeWeight(this.ctx,1);
		var offset = 50;
		var _g1 = 0;
		var _g = this.max;
		while(_g1 < _g) {
			var i = _g1++;
			var offsetX = cc_util_MathUtil.random(-offset,offset);
			var offsetY = cc_util_MathUtil.random(-offset,offset);
			cc_CanvasTools.strokeCircle(this.ctx,offsetX + Global.w / 2,offsetY + Global.h / 2,Global.h / 3);
		}
	}
	,draw: function() {
		this.drawShape();
		this.stop();
	}
	,__class__: art_CC045
});
var art_CC046 = function(ctx) {
	this.frameRate = 15;
	this.maxFrameRate = 60;
	this.counter = 0;
	this.set_description("");
	this.set_type(["Animation","Image"]);
	cc_draw_Text.embedGoogleFont("Share+Tech+Mono",$bind(this,this.onEmbedHandler));
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC046"] = art_CC046;
art_CC046.__name__ = ["art","CC046"];
art_CC046.__interfaces__ = [art_ICCBase];
art_CC046.__super__ = art_CCBase;
art_CC046.prototype = $extend(art_CCBase.prototype,{
	onEmbedHandler: function(e) {
		haxe_Log.trace("onEmbedHandler: \"" + e + "\"",{ fileName : "CC046.hx", lineNumber : 25, className : "art.CC046", methodName : "onEmbedHandler"});
		this.drawShape();
	}
	,drawShape: function() {
		this.counter++;
		if(this.counter % (this.maxFrameRate / this.frameRate) != 0) {
			return;
		}
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		var time = new Date();
		var hours = time.getHours();
		var min = time.getMinutes();
		var sec = time.getSeconds();
		var text = "" + StringTools.lpad(hours == null ? "null" : "" + hours,"0",2) + ":" + StringTools.lpad(min == null ? "null" : "" + min,"0",2) + ":" + StringTools.lpad(sec == null ? "null" : "" + sec,"0",2);
		this.ctx.fillStyle = cc_util_ColorUtil.getColourObj(cc_util_ColorUtil.BLACK);
		cc_draw_Text.centerFillText(this.ctx,text,Global.w / 2,Global.h / 2,"'Share Tech Mono', monospace",160);
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC046.hx", lineNumber : 60, className : "art.CC046", methodName : "setup"});
		this.isDebug = true;
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC046
});
var art_CC047 = function(ctx) {
	this.padding = 50;
	this.leaderY = Global.h / 2;
	this.leaderX = Global.w / 2;
	this.counter = 0;
	this.defaultBounce = 0.75;
	this.bounce = 0.9;
	this.defaultSpeed = 6.0;
	this.speed = 6.0;
	this.momentumy = 0.0;
	this.momentumx = 0.0;
	this.isAutoDefault = false;
	this.isAuto = false;
	this.isClearDefault = true;
	this.isClear = true;
	this._color4 = null;
	this._color3 = null;
	this._color2 = null;
	this._color1 = null;
	this._color0 = null;
	this._max = 1;
	this._cellsize = 150;
	this._radius = 150;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	this.set_description("Mouse trailer with elasticy");
	this.set_type(["Animation","Image","Interactive"]);
	this.createQuickSettings();
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC047"] = art_CC047;
art_CC047.__name__ = ["art","CC047"];
art_CC047.__interfaces__ = [art_ICCBase];
art_CC047.__super__ = art_CCBase;
art_CC047.prototype = $extend(art_CCBase.prototype,{
	createQuickSettings: function() {
		var _gthis = this;
		this.panel1 = QuickSettings.create(10,10,"Elastic mouse").setGlobalChangeHandler($bind(this,this.drawShape)).addHTML("Speed and Bounce","<b>speed</b> changes the speed of the movement (1=high, 9=slow),<br><b>bounce</b> the elasticy (0.5=less, 0.9=more)").addRange("Speed",0.0,100.0,this.defaultSpeed,1.0,function(value) {
			_gthis.setSpeed(value);
		}).addRange("Bounce",0.0,0.99,this.defaultBounce,0.01,function(value1) {
			_gthis.setBounce(value1);
		}).addBoolean("Auto",this.isAutoDefault,function(value2) {
			_gthis.setAutomatic(value2);
		}).addBoolean("Clear",this.isClearDefault,function(value3) {
			_gthis.setClear(value3);
		}).addButton("Reset",function(e) {
			_gthis.setReset();
		}).saveInLocalStorage("store-data-" + this.toString());
	}
	,setBounce: function(value) {
		this.bounce = value;
	}
	,setSpeed: function(value) {
		this.speed = value;
	}
	,setClear: function($is) {
		this.isClear = $is;
	}
	,setAutomatic: function(isAutomatic) {
		this.isAuto = isAutomatic;
		if(this.isAuto) {
			this.onAnimateHandler();
		} else if(this.go != null) {
			this.go.stop();
		}
	}
	,setReset: function() {
		this.speed = this.defaultSpeed;
		this.bounce = this.defaultBounce;
		this.isAuto = this.isAutoDefault;
		this.panel1.setValue("Speed",this.defaultSpeed);
		this.panel1.setValue("Bounce",this.defaultBounce);
		this.panel1.setValue("Auto",this.isAutoDefault);
	}
	,createShape: function(i) {
		var shape = { _id : "" + i, _type : "circle", x : Global.w / 2, y : Global.h / 2, radius : this._radius};
		return shape;
	}
	,onAnimateHandler: function() {
		if(this._leader == null) {
			haxe_Log.trace("no leader",{ fileName : "CC047.hx", lineNumber : 115, className : "art.CC047", methodName : "onAnimateHandler"});
			var Go = new cc_lets_Go({ },1);
			var _this = Go;
			_this._options.onComplete = $bind(this,this.onAnimateHandler);
			_this._options.onCompleteParams = null;
			return;
		}
		var xpos = cc_util_MathUtil.random(this.padding,Global.w - this.padding * 2);
		var ypos = cc_util_MathUtil.random(this.padding,Global.h - this.padding * 2);
		var Go1 = new cc_lets_Go(this._leader,cc_util_MathUtil.random(0.1,0.5));
		Go1._isFrom = false;
		var _this1 = Go1;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"x")) {
			objValue = Reflect.getProperty(_this1._target,"x");
		}
		var _range = { key : "x", from : _this1._isFrom ? xpos : objValue, to : !_this1._isFrom ? xpos : objValue};
		_this1._props.set("x",_range);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this2._target,"y")) {
			objValue1 = Reflect.getProperty(_this2._target,"y");
		}
		var _range1 = { key : "y", from : _this2._isFrom ? ypos : objValue1, to : !_this2._isFrom ? ypos : objValue1};
		_this2._props.set("y",_range1);
		if(_this2._isFrom) {
			_this2.updateProperties(0);
		}
		var _this3 = _this2;
		_this3._easing = cc_lets_easing_Sine.get_easeInOut();
		var _this4 = _this3;
		_this4._options.onComplete = $bind(this,this.onAnimateHandler);
		_this4._options.onCompleteParams = null;
		this.go = _this4;
	}
	,drawShape: function() {
		if(!this.isAuto && Global.mouseX == null) {
			return;
		}
		if(this.isClear) {
			this.ctx.clearRect(0,0,Global.w,Global.h);
			cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		}
		if(this.isAuto) {
			this.leaderX = this._leader.x;
			this.leaderY = this._leader.y;
			cc_CanvasTools.fillColourRGB(this.ctx,cc_util_ColorUtil.RED);
			cc_util_ShapeUtil.registerPoint(this.ctx,this.leaderX,this.leaderY);
		} else {
			this.leaderX = Global.mouseX;
			this.leaderY = Global.mouseY;
		}
		var distx = this._follow.x - this.leaderX;
		var disty = this._follow.y - this.leaderY;
		this.momentumx -= distx / this.speed;
		this.momentumy -= disty / this.speed;
		this.momentumx *= this.bounce;
		this.momentumy *= this.bounce;
		this._follow.x += this.momentumx;
		this._follow.y += this.momentumy;
		cc_CanvasTools.fillColourRGB(this.ctx,cc_util_ColorUtil.BLACK);
		cc_CanvasTools.circleFill(this.ctx,this._follow.x,this._follow.y,10);
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC047.hx", lineNumber : 185, className : "art.CC047", methodName : "setup"});
		var colorArray = cc_util_ColorUtil.niceColor100SortedString[cc_util_MathUtil.randomInt(cc_util_ColorUtil.niceColor100SortedString.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._color0 = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._color1 = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._color2 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		this._color3 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
		var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		this._color4 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
		this.isDebug = true;
		this._follow = this.createShape(0);
		this._leader = this.createShape(1);
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC047
});
var art_CC048 = function(ctx) {
	this.pixelCounter = 0;
	this._scale = 0.2;
	this._padding = 0;
	this._total = 0;
	this._sizeY = 0;
	this._sizeX = 0;
	this._color4 = null;
	this._color3 = null;
	this._color2 = null;
	this._color1 = null;
	this._color0 = null;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	this.set_description("");
	this.set_type(["Animation","Image"]);
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC048"] = art_CC048;
art_CC048.__name__ = ["art","CC048"];
art_CC048.__interfaces__ = [art_ICCBase];
art_CC048.__super__ = art_CCBase;
art_CC048.prototype = $extend(art_CCBase.prototype,{
	startCanvasImage: function() {
		haxe_Log.trace("startCanvasImage :: start",{ fileName : "CC048.hx", lineNumber : 34, className : "art.CC048", methodName : "startCanvasImage"});
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		if(this.shapeArray.length <= 0) {
			return;
		}
		this._padding = Math.round((Global.w - this.ctxHidden.canvas.width) / 2);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			var xpos = this._padding + sh.x;
			var ypos = this._padding + sh.y;
			cc_CanvasTools.fillColour(this.ctx,sh.rgba.r,sh.rgba.g,sh.rgba.b,sh.rgba.a);
			this.ctx.fillRect(xpos,ypos,1,1);
		}
		haxe_Log.trace("startCanvasImage :: done",{ fileName : "CC048.hx", lineNumber : 48, className : "art.CC048", methodName : "startCanvasImage"});
	}
	,drawShape: function() {
		if(this.shapeArray.length <= 0) {
			return;
		}
		var _g1 = 0;
		var _g = this._sizeX;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[this.pixelCounter];
			sh.x += cc_util_MathUtil.randomInt(-1,1);
			sh.y -= 1;
			var __size = 5;
			var xpos = this._padding + sh.x;
			var ypos = this._padding + sh.y;
			cc_CanvasTools.fillColour(this.ctx,sh.rgba.r,sh.rgba.g,sh.rgba.b,sh.rgba.a);
			this.ctx.fillRect(xpos,ypos,1,1);
			this.pixelCounter++;
			if(this.pixelCounter >= this._total) {
				this.pixelCounter = 0;
			}
		}
	}
	,setup: function() {
		var _gthis = this;
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC048.hx", lineNumber : 84, className : "art.CC048", methodName : "setup"});
		haxe_Log.trace("setup: start loading image",{ fileName : "CC048.hx", lineNumber : 88, className : "art.CC048", methodName : "setup"});
		var img = new Image();
		img.src = "assets/img/fresh/xiaolong-wong-1297576-unsplash_square500x500.jpg";
		img.onload = function() {
			haxe_Log.trace("setup: image loaded",{ fileName : "CC048.hx", lineNumber : 94, className : "art.CC048", methodName : "setup"});
			var option = new SketchOption();
			option.set_width(Math.round(img.width * _gthis._scale));
			option.set_height(Math.round(img.height * _gthis._scale));
			_gthis._sizeX = option.get_width();
			_gthis._sizeY = option.get_height();
			_gthis._total = _gthis._sizeX * _gthis._sizeY;
			haxe_Log.trace("setup -> _sizeX: " + _gthis._sizeX + ", _sizeY: " + _gthis._sizeY + ", total pixels: " + _gthis._total,{ fileName : "CC048.hx", lineNumber : 103, className : "art.CC048", methodName : "setup"});
			_gthis.ctxHidden = Sketch.createHiddenCanvas("imageholder",option,_gthis.isDebug);
			var _gthis1 = _gthis.ctxHidden;
			var tmp = option.get_width();
			var tmp1 = option.get_height();
			_gthis1.drawImage(img,0,0,tmp,tmp1);
			img.style.display = "none";
			var tmp2 = option.get_width();
			var tmp3 = option.get_height();
			_gthis.setupDataArray(tmp2,tmp3);
		};
	}
	,setupDataArray: function(xdir,ydir) {
		haxe_Log.trace("convert image: Start converting pixels to data",{ fileName : "CC048.hx", lineNumber : 113, className : "art.CC048", methodName : "setupDataArray"});
		var _g1 = 0;
		var _g = ydir;
		while(_g1 < _g) {
			var y = _g1++;
			var _g3 = 0;
			var _g2 = xdir;
			while(_g3 < _g2) {
				var x = _g3++;
				var pixel = { x : x, y : y, colour : this.getPixel(x,y), rgb : this.getPixelRGB(x,y), rgba : this.getPixelRGBA(x,y)};
				this.shapeArray.push(pixel);
			}
		}
		haxe_Log.trace("convert image: DONE",{ fileName : "CC048.hx", lineNumber : 126, className : "art.CC048", methodName : "setupDataArray"});
		this.pixelCounter = 0;
		this.startCanvasImage();
	}
	,getPixel: function(x,y) {
		var xpos = x;
		var ypos = y;
		var pixel = this.ctxHidden.getImageData(xpos,ypos,1,1);
		var data = pixel.data;
		var rgba = "rgba(" + data[0] + ", " + data[1] + ", " + data[2] + ", " + data[3] / 255 + ")";
		return rgba;
	}
	,getPixelRGB: function(x,y) {
		var xpos = x;
		var ypos = y;
		var pixel = this.ctxHidden.getImageData(xpos,ypos,1,1);
		var data = pixel.data;
		var RGBA = { r : data[0], g : data[1], b : data[2]};
		return RGBA;
	}
	,getPixelRGBA: function(x,y) {
		var xpos = x;
		var ypos = y;
		var pixel = this.ctxHidden.getImageData(xpos,ypos,1,1);
		var data = pixel.data;
		var RGBA = { r : data[0], g : data[1], b : data[2], a : data[3] / 255};
		return RGBA;
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC048
});
var art_CC049 = function(ctx) {
	this.onom = new lib_model_constants_Onom();
	this._gridY = 10;
	this._gridX = 10;
	this._grid = 10;
	this._stroke = 20;
	this._text = "[mck]";
	this._color4 = null;
	this._color3 = null;
	this._color2 = null;
	this._color1 = null;
	this._color0 = null;
	this._cellsize = 150;
	this._radius = 150;
	this.set_description("");
	this.set_type(["Animation","Image"]);
	this.createQuickSettings();
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC049"] = art_CC049;
art_CC049.__name__ = ["art","CC049"];
art_CC049.__interfaces__ = [art_ICCBase];
art_CC049.__super__ = art_CCBase;
art_CC049.prototype = $extend(art_CCBase.prototype,{
	createQuickSettings: function() {
		var _gthis = this;
		this.panel1 = QuickSettings.create(10,10,"Onom font").setGlobalChangeHandler($bind(this,this.drawShape)).addHTML("Onom","how to draw fonts from scratch").addText("Text","[mck]",function(value) {
			_gthis.setText(value);
		}).addRange("Stroke",1,100,this._stroke,1,function(e) {
			_gthis.setStroke(e);
		}).addRange("Grid",1,100,this._grid,1,function(e1) {
			_gthis.setGrid(e1);
		}).addRange("GridX",1,100,this._grid,1,function(e2) {
			_gthis.setGridX(e2);
		}).addRange("GridY",1,100,this._grid,1,function(e3) {
			_gthis.setGridY(e3);
		}).saveInLocalStorage("store-data-" + this.toString());
	}
	,setText: function(value) {
		this._text = value;
	}
	,setStroke: function(value) {
		this._stroke = value;
	}
	,setGrid: function(value) {
		if(this.panel1 != null) {
			this.panel1.setValue("GridX",value);
			this.panel1.setValue("GridY",value);
		}
		this._grid = value;
	}
	,setGridX: function(value) {
		this._gridX = value;
	}
	,setGridY: function(value) {
		this._gridY = value;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		var xpadding = 100;
		var ypadding = 100;
		var offsetx = 0;
		var offsety = 0;
		var inputArray = this._text.split("");
		var _g1 = 0;
		var _g = inputArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var $char = inputArray[i];
			var charPointArray = null;
			charPointArray = this.onom.getChar($char);
			this.ctx.beginPath();
			this.ctx.lineCap = "round";
			this.ctx.lineJoin = "round";
			cc_CanvasTools.strokeColourRGB(this.ctx,cc_util_ColorUtil.BLACK);
			cc_CanvasTools.strokeWeight(this.ctx,this._stroke);
			var _g3 = 0;
			var _g2 = charPointArray.length;
			while(_g3 < _g2) {
				var i1 = _g3++;
				var m = charPointArray[i1];
				var xpos = offsetx * (9 * this._gridX) + m.x * this._gridX;
				var ypos = offsety * (15 * this._gridY) + m.y * this._gridY;
				if(i1 == 0) {
					this.ctx.moveTo(xpos + xpadding,ypos + ypadding);
				} else {
					this.ctx.lineTo(xpos + xpadding,ypos + ypadding);
				}
			}
			this.ctx.stroke();
			++offsetx;
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC049.hx", lineNumber : 125, className : "art.CC049", methodName : "setup"});
		this.isDebug = true;
	}
	,draw: function() {
		haxe_Log.trace("draw: " + this.toString(),{ fileName : "CC049.hx", lineNumber : 130, className : "art.CC049", methodName : "draw"});
		this.drawShape();
		this.stop();
	}
	,testMe: function() {
		var m = this.onom.getChar("x");
		var xpadding = 100;
		var ypadding = 100;
		var scale = 50;
		haxe_Log.trace(m,{ fileName : "CC049.hx", lineNumber : 143, className : "art.CC049", methodName : "testMe"});
		this.ctx.beginPath();
		this.ctx.lineCap = "round";
		this.ctx.lineJoin = "round";
		cc_CanvasTools.strokeColourRGB(this.ctx,cc_util_ColorUtil.BLACK);
		cc_CanvasTools.strokeWeight(this.ctx,this._stroke);
		var _g1 = 0;
		var _g = m.length;
		while(_g1 < _g) {
			var i = _g1++;
			var _m = m[i];
			var xpos = _m.x * scale;
			var ypos = _m.y * scale;
			if(i == 0) {
				this.ctx.moveTo(xpos + xpadding,ypos + ypadding);
			} else {
				this.ctx.lineTo(xpos + xpadding,ypos + ypadding);
			}
		}
		this.ctx.stroke();
	}
	,__class__: art_CC049
});
var art_CC050 = function(ctx) {
	this._defaultPaddingTop = 0;
	this._paddingTop = 0;
	this._defaultPadding = 0;
	this._padding = 0;
	this._defaultLineHeight = 100;
	this._lineHeight = 100;
	this._defaultFontSize = 160;
	this._fontSize = 160;
	this.isFontLoaded = false;
	this._color4 = null;
	this._color3 = null;
	this._color2 = null;
	this._color1 = null;
	this._color0 = null;
	this.text = "It is impossible to make anything foolproof because fools are so ingenious.";
	this.set_description("A tool to create quick quotes for Instagram");
	this.set_type(["Image"]);
	cc_draw_Text.embedGoogleFont("Oswald:200,300,400,500,600,700",$bind(this,this.onEmbedHandler));
	this.createQuickSettings();
	var option = new SketchOption();
	option.set_width(1080);
	option.set_autostart(true);
	option.set_padding(10);
	option.set_scale(true);
	ctx = Sketch.create("creative_code_mck",option);
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC050"] = art_CC050;
art_CC050.__name__ = ["art","CC050"];
art_CC050.__interfaces__ = [art_ICCBase];
art_CC050.__super__ = art_CCBase;
art_CC050.prototype = $extend(art_CCBase.prototype,{
	onEmbedHandler: function(e) {
		haxe_Log.trace("onEmbedHandler: \"" + e + "\"",{ fileName : "CC050.hx", lineNumber : 47, className : "art.CC050", methodName : "onEmbedHandler"});
		this.isFontLoaded = true;
		this.drawShape();
	}
	,createQuickSettings: function() {
		var _gthis = this;
		this.panel1 = QuickSettings.create(10,10,"Quote generator").setGlobalChangeHandler($bind(this,this.drawShape)).addHTML("Reason","Sometimes I need a quick quote, to post on Instagram").addTextArea("Quote",this.text,function(value) {
			haxe_Log.trace(value,{ fileName : "CC050.hx", lineNumber : 58, className : "art.CC050", methodName : "createQuickSettings"});
		}).addBoolean("All Caps",false,function(value1) {
			_gthis.setCaps(value1);
		}).addRange("Font size",10,500,this._defaultFontSize,1,function(value2) {
			_gthis.setFontSize(value2);
		}).addRange("Line height",10,500,this._defaultLineHeight,1,function(value3) {
			_gthis.setLineHeight(value3);
		}).addRange("Padding left/right",0,500,this._defaultPadding,1,function(value4) {
			_gthis.setPadding(value4);
		}).addRange("Padding top",-100,500,this._defaultPaddingTop,1,function(value5) {
			_gthis.setPaddingTop(value5);
		}).addButton("Random Color",function(value6) {
			_gthis.randomColorize();
		}).saveInLocalStorage("store-data-" + this.toString());
	}
	,setCaps: function(isCaps) {
		if(isCaps) {
			this.text = this.text.toUpperCase();
		} else {
			this.text = this.text.toLowerCase();
		}
	}
	,setFontSize: function(value) {
		this._fontSize = value;
	}
	,setLineHeight: function(value) {
		this._lineHeight = value;
	}
	,setPadding: function(value) {
		this._padding = value;
	}
	,setPaddingTop: function(value) {
		this._paddingTop = value;
	}
	,randomColorize: function() {
		var colorArray = cc_util_ColorUtil.niceColor100SortedString[cc_util_MathUtil.randomInt(cc_util_ColorUtil.niceColor100SortedString.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._color0 = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._color1 = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._color2 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		this._color3 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
		var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		this._color4 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
	}
	,drawShape: function() {
		if(!this.isFontLoaded) {
			return;
		}
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,this._color0);
		this.ctx.fillStyle = cc_util_ColorUtil.getColourObj(this._color4);
		cc_draw_Text.fillText(this.ctx,this.text,Global.w / 2,-Global.h,"'Oswald', sans-serif;",this._fontSize);
		var lines = cc_util_TextUtil.getLines(this.ctx,this.text,this.square - 2 * this._padding);
		var _g1 = 0;
		var _g = lines.length;
		while(_g1 < _g) {
			var i = _g1++;
			var line = lines[i];
			cc_draw_Text.fillText(this.ctx,line,this._padding,this._paddingTop + (i + 1) * this._lineHeight,"'Oswald', sans-serif;",this._fontSize);
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC050.hx", lineNumber : 126, className : "art.CC050", methodName : "setup"});
		this.randomColorize();
		this.isDebug = true;
		var canvas = window.document.getElementById("creative_code_mck");
		this.square = Math.round(Math.min(Global.w,Global.h));
		haxe_Log.trace("w: " + Global.w + ", h: " + Global.h,{ fileName : "CC050.hx", lineNumber : 136, className : "art.CC050", methodName : "setup"});
		haxe_Log.trace("square: " + this.square,{ fileName : "CC050.hx", lineNumber : 137, className : "art.CC050", methodName : "setup"});
		canvas.width = this.square - 2;
		canvas.height = this.square - 2;
		canvas.style.border = "1px solid silver";
	}
	,draw: function() {
		haxe_Log.trace("draw: " + this.toString(),{ fileName : "CC050.hx", lineNumber : 145, className : "art.CC050", methodName : "draw"});
		this.drawShape();
		this.stop();
	}
	,__class__: art_CC050
});
var art_CC051 = function(ctx) {
	this.isFondEmbedded = false;
	this._color4 = null;
	this._color3 = null;
	this._color2 = null;
	this._color1 = null;
	this._color0 = null;
	var _gthis = this;
	this.set_description("Font embedding: Gunplay (not Google font)");
	this.set_type(["Tool","Image"]);
	art_CCBase.call(this,ctx);
	var font = new FontFace("Gunplay","url(assets/font/gunplay/Gunplay-Regular.woff2)",{ style : "normal", weight : "400"});
	window.document.fonts.add(font);
	font.load();
	font.loaded.then(function(fontface) {
		haxe_Log.trace(fontface.family,{ fileName : "CC051.hx", lineNumber : 41, className : "art.CC051", methodName : "new"});
		_gthis.isFondEmbedded = true;
		_gthis.drawShape();
	});
};
$hxClasses["art.CC051"] = art_CC051;
art_CC051.__name__ = ["art","CC051"];
art_CC051.__interfaces__ = [art_ICCBase];
art_CC051.__super__ = art_CCBase;
art_CC051.prototype = $extend(art_CCBase.prototype,{
	drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,this._color4);
		if(this.isFondEmbedded) {
			this.ctx.fillStyle = cc_util_ColorUtil.getColourObj(this._color0);
			cc_draw_Text.centerFillText(this.ctx,"GUNPLAY",Global.w / 2,Global.h / 2,"'Gunplay', sans-serif;",160);
			this.ctx.fillStyle = cc_util_ColorUtil.getColourObj(this._color1);
			this.ctx.font = "100px Gunplay";
			this.ctx.textAlign = "center";
			this.ctx.textBaseline = "middle";
			this.ctx.fillText("TEQ63: RAVAGER",Global.w / 2,Global.h / 2 + 200);
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC051.hx", lineNumber : 65, className : "art.CC051", methodName : "setup"});
		var colorArray = cc_util_ColorUtil.niceColor100SortedString[cc_util_MathUtil.randomInt(cc_util_ColorUtil.niceColor100SortedString.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._color0 = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._color1 = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._color2 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		this._color3 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
		var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		this._color4 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
		this.isDebug = true;
	}
	,draw: function() {
		haxe_Log.trace("draw: " + this.toString(),{ fileName : "CC051.hx", lineNumber : 78, className : "art.CC051", methodName : "draw"});
		this.drawShape();
		this.stop();
	}
	,__class__: art_CC051
});
var art_CC051a = function(ctx) {
	this.isFondEmbedded = false;
	this._color4 = null;
	this._color3 = null;
	this._color2 = null;
	this._color1 = null;
	this._color0 = null;
	var _gthis = this;
	this.set_description("");
	this.set_type(["Tool","Image"]);
	art_CCBase.call(this,ctx);
	var font = new FontFace("Miso","url(assets/font/miso/Miso.ttf)",{ style : "normal", weight : "400"});
	window.document.fonts.add(font);
	font.load();
	font.loaded.then(function(fontface) {
		haxe_Log.trace(fontface.family,{ fileName : "CC051a.hx", lineNumber : 42, className : "art.CC051a", methodName : "new"});
		_gthis.isFondEmbedded = true;
		_gthis.drawShape();
	});
};
$hxClasses["art.CC051a"] = art_CC051a;
art_CC051a.__name__ = ["art","CC051a"];
art_CC051a.__interfaces__ = [art_ICCBase];
art_CC051a.__super__ = art_CCBase;
art_CC051a.prototype = $extend(art_CCBase.prototype,{
	drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,this._color4);
		if(this.isFondEmbedded) {
			this.ctx.fillStyle = cc_util_ColorUtil.getColourObj(this._color0);
			cc_draw_Text.centerFillText(this.ctx,"Miso MISO",Global.w / 2,Global.h / 2,"'Miso', sans-serif;",this.scaling(160));
			this.ctx.fillStyle = cc_util_ColorUtil.getColourObj(this._color1);
			var tmp = "" + this.scaling(100);
			this.ctx.font = tmp + "px Miso";
			this.ctx.textAlign = "center";
			this.ctx.textBaseline = "middle";
			this.ctx.fillText("1234567890",Global.w / 2,Global.h / 2 + this.scaling(200));
			var text = "Matthijs Kamstra aka [mck]";
			this.ctx.fillStyle = cc_util_ColorUtil.getColourObj(this._color2);
			var Text = new cc_draw_Text(this.ctx,text);
			var _this = Text;
			_this._font = StringTools.replace(StringTools.replace("Miso",";",""),"+"," ");
			var _this1 = _this;
			_this1._textAlign = "center";
			var _this2 = _this1;
			var x = Global.w / 2;
			var y = this.scaling(100);
			_this2.set__x(x);
			_this2.set__y(y);
			var _this3 = _this2;
			var px = this.scaling(50);
			_this3.set__size(px);
			if(_this3.get__leading() == null) {
				_this3.set__leading(px);
			}
			var _this4 = _this3;
			var isLines = false;
			_this4._ctx.save();
			if(_this4._text.indexOf("\n") != -1) {
				_this4._lineArray = _this4._text.split("\n");
				isLines = true;
			}
			var previousColor = _this4._ctx.fillStyle;
			if(_this4._color != null) {
				cc_CanvasTools.fillColourRGB(_this4._ctx,_this4._color,_this4.get__alpha());
			} else {
				var _this5 = _this4._ctx;
				var $int = Std.parseInt(StringTools.replace(previousColor,"#","0x"));
				var tmp1 = _this4.get__alpha();
				cc_CanvasTools.fillColourRGB(_this5,{ r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255},tmp1);
			}
			var tmp2 = "" + _this4.get__size() + "px ";
			_this4._ctx.font = tmp2 + _this4._font;
			_this4._ctx.textAlign = _this4._textAlign;
			_this4._ctx.textBaseline = _this4._textBaseline;
			_this4._ctx.translate(_this4.get__x(),_this4.get__y());
			_this4._ctx.rotate(cc_util_MathUtil.radians(_this4.get__rotate()));
			if(!isLines) {
				_this4._ctx.fillText(_this4._text,0,0);
			} else {
				var _g1 = 0;
				var _g = _this4._lineArray.length;
				while(_g1 < _g) {
					var i = _g1++;
					var line = _this4._lineArray[i];
					_this4._ctx.fillText(line,0,i * _this4.get__leading());
				}
			}
			_this4._ctx.restore();
			_this4._ctx.fillStyle = previousColor;
		}
	}
	,scaling: function(value) {
		return value;
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC051a.hx", lineNumber : 81, className : "art.CC051a", methodName : "setup"});
		var colorArray = cc_util_ColorUtil.niceColor100SortedString[cc_util_MathUtil.randomInt(cc_util_ColorUtil.niceColor100SortedString.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._color0 = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._color1 = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._color2 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		this._color3 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
		var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		this._color4 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
		this.isDebug = true;
	}
	,draw: function() {
		haxe_Log.trace("draw: " + this.toString(),{ fileName : "CC051a.hx", lineNumber : 94, className : "art.CC051a", methodName : "draw"});
		this.drawShape();
		this.stop();
	}
	,__class__: art_CC051a
});
var art_CC052 = function(ctx) {
	this.padding = 5;
	this.isFontReady = false;
	this.isSvgReady = false;
	this.svgHeight = 71;
	this.svgWidth = 81;
	this.svg = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 81 71\"><path d=\"M70.6.31H10.78C5.06.31.38 4.99.38 10.71v33.53c0 5.72 4.68 10.4 10.4 10.4H21.3c1.08 0 2.11.43 2.88 1.19l13.6 13.6a4.062 4.062 0 0 0 5.75 0l13.6-13.6a4.08 4.08 0 0 1 2.88-1.19H70.6c5.72 0 10.4-4.68 10.4-10.4V10.71C81 4.99 76.32.31 70.6.31z\" fill=\"#f4555a\"/><path d=\"M43.5 22.04c0-4.03-3.26-7.29-7.29-7.29-3.39 0-6.23 2.31-7.05 5.44a7.288 7.288 0 0 0-7.05-5.44c-4.03 0-7.29 3.26-7.29 7.29 0 1.98.79 3.77 2.07 5.09l.03.03.06.06 11.66 11.66 12.29-11.31a7.178 7.178 0 0 0 2.57-5.53z\" fill=\"#fff\"/></svg>";
	this._color4 = null;
	this._color3 = null;
	this._color2 = null;
	this._color1 = null;
	this._color0 = null;
	this._cellsize = 150;
	this._radius = 150;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	this.set_description("");
	this.set_type(["Animation","Image"]);
	art_CCBase.call(this,ctx);
	this.initSVG();
};
$hxClasses["art.CC052"] = art_CC052;
art_CC052.__name__ = ["art","CC052"];
art_CC052.__interfaces__ = [art_ICCBase];
art_CC052.__super__ = art_CCBase;
art_CC052.prototype = $extend(art_CCBase.prototype,{
	initSVG: function() {
		var _gthis = this;
		this.svgImage = new Image();
		this.svgImage.onload = function() {
			haxe_Log.trace("base64 square",{ fileName : "CC052.hx", lineNumber : 48, className : "art.CC052", methodName : "initSVG"});
			haxe_Log.trace("w: " + _gthis.svgImage.width,{ fileName : "CC052.hx", lineNumber : 49, className : "art.CC052", methodName : "initSVG"});
			haxe_Log.trace("h: " + _gthis.svgImage.height,{ fileName : "CC052.hx", lineNumber : 50, className : "art.CC052", methodName : "initSVG"});
			_gthis.isSvgReady = true;
			_gthis.drawShape();
		};
		var svg64 = window.btoa(this.svg);
		var b64Start = "data:image/svg+xml;base64,";
		var image64 = b64Start + svg64;
		this.svgImage.src = image64;
	}
	,onEmbedHandler: function(e) {
		haxe_Log.trace("onEmbedHandler: \"" + e + "\"",{ fileName : "CC052.hx", lineNumber : 77, className : "art.CC052", methodName : "onEmbedHandler"});
		this.isFontReady = true;
		this.drawShape();
	}
	,createLike: function(i,point) {
		var shape = { _id : "" + i, x : point.x, y : point.y, width : this.svgWidth, height : this.svgHeight, count : i, percentage : 0};
		return shape;
	}
	,drawShape: function() {
		if(!this.isSvgReady) {
			return;
		}
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		if(this.isDebug) {
			cc_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			this.ctx.drawImage(this.svgImage,sh.x - sh.width / 2,sh.y - sh.height / 2,sh.width,sh.height);
			cc_CanvasTools.fillColourRGB(this.ctx,cc_util_ColorUtil.WHITE);
			var Text = new cc_draw_Text(this.ctx,Std.string(sh.count + 1));
			var _this = Text;
			_this._textAlign = "center";
			var _this1 = _this;
			var y = sh.y;
			_this1.set__x(sh.x + 20);
			_this1.set__y(y);
			var _this2 = _this1;
			_this2.set__size(20);
			if(_this2.get__leading() == null) {
				_this2.set__leading(20);
			}
			var _this3 = _this2;
			var isLines = false;
			_this3._ctx.save();
			if(_this3._text.indexOf("\n") != -1) {
				_this3._lineArray = _this3._text.split("\n");
				isLines = true;
			}
			var previousColor = _this3._ctx.fillStyle;
			if(_this3._color != null) {
				cc_CanvasTools.fillColourRGB(_this3._ctx,_this3._color,_this3.get__alpha());
			} else {
				var _this4 = _this3._ctx;
				var $int = Std.parseInt(StringTools.replace(previousColor,"#","0x"));
				var tmp = _this3.get__alpha();
				cc_CanvasTools.fillColourRGB(_this4,{ r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255},tmp);
			}
			var tmp1 = "" + _this3.get__size() + "px ";
			_this3._ctx.font = tmp1 + _this3._font;
			_this3._ctx.textAlign = _this3._textAlign;
			_this3._ctx.textBaseline = _this3._textBaseline;
			_this3._ctx.translate(_this3.get__x(),_this3.get__y());
			_this3._ctx.rotate(cc_util_MathUtil.radians(_this3.get__rotate()));
			if(!isLines) {
				_this3._ctx.fillText(_this3._text,0,0);
			} else {
				var _g11 = 0;
				var _g2 = _this3._lineArray.length;
				while(_g11 < _g2) {
					var i1 = _g11++;
					var line = _this3._lineArray[i1];
					_this3._ctx.fillText(line,0,i1 * _this3.get__leading());
				}
			}
			_this3._ctx.restore();
			_this3._ctx.fillStyle = previousColor;
		}
		this.stop();
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC052.hx", lineNumber : 128, className : "art.CC052", methodName : "setup"});
		var colorArray = cc_util_ColorUtil.niceColor100SortedString[cc_util_MathUtil.randomInt(cc_util_ColorUtil.niceColor100SortedString.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._color0 = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._color1 = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._color2 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		this._color3 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
		var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		this._color4 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
		this.grid.setCellSize(this.svgWidth + this.padding,this.svgHeight + this.padding);
		this.grid.setIsCenterPoint(true);
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createLike(i,this.grid.array[i]));
		}
	}
	,draw: function() {
		haxe_Log.trace("draw: " + this.toString(),{ fileName : "CC052.hx", lineNumber : 151, className : "art.CC052", methodName : "draw"});
		this.drawShape();
	}
	,didnotwork: function() {
		var _gthis = this;
		var img = new Image();
		img.onload = function() {
			haxe_Log.trace("green square",{ fileName : "CC052.hx", lineNumber : 162, className : "art.CC052", methodName : "didnotwork"});
			_gthis.ctx.drawImage(img,Global.w / 2,Global.h / 2);
		};
		img.src = "http://upload.wikimedia.org/wikipedia/commons/d/d2/Svg_example_square.svg";
		haxe_Log.trace(img.src,{ fileName : "CC052.hx", lineNumber : 168, className : "art.CC052", methodName : "didnotwork"});
		var img1 = new Image();
		img1.onload = function() {
			haxe_Log.trace("png",{ fileName : "CC052.hx", lineNumber : 172, className : "art.CC052", methodName : "didnotwork"});
			_gthis.ctx.drawImage(img1,Global.w / 2,Global.h / 2);
		};
		img1.src = "assets/img/mck.png";
		haxe_Log.trace(img1.src,{ fileName : "CC052.hx", lineNumber : 178, className : "art.CC052", methodName : "didnotwork"});
		var img2 = new Image();
		img2.onload = function() {
			haxe_Log.trace("likes",{ fileName : "CC052.hx", lineNumber : 182, className : "art.CC052", methodName : "didnotwork"});
			_gthis.ctx.drawImage(img2,Global.w / 2,Global.h / 2);
		};
		img2.src = "assets/img/likes/likes.svg";
		haxe_Log.trace(img2.src,{ fileName : "CC052.hx", lineNumber : 188, className : "art.CC052", methodName : "didnotwork"});
		var img3 = new Image();
		img3.onload = function() {
			haxe_Log.trace("likes.min",{ fileName : "CC052.hx", lineNumber : 192, className : "art.CC052", methodName : "didnotwork"});
			_gthis.ctx.drawImage(img3,Global.w / 2,Global.h / 2);
		};
		img3.src = "assets/img/likes/likes.min.svg";
		haxe_Log.trace(img3.src,{ fileName : "CC052.hx", lineNumber : 198, className : "art.CC052", methodName : "didnotwork"});
	}
	,__class__: art_CC052
});
var art_CC052a = function(ctx) {
	this.yoffset = 50;
	this.padding = 5;
	this.isFontReady = false;
	this.isSvgReady = false;
	this.svgHeight = 71;
	this.svgWidth = 81;
	this.svg = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 81 71\"><path d=\"M70.6.31H10.78C5.06.31.38 4.99.38 10.71v33.53c0 5.72 4.68 10.4 10.4 10.4H21.3c1.08 0 2.11.43 2.88 1.19l13.6 13.6a4.062 4.062 0 0 0 5.75 0l13.6-13.6a4.08 4.08 0 0 1 2.88-1.19H70.6c5.72 0 10.4-4.68 10.4-10.4V10.71C81 4.99 76.32.31 70.6.31z\" fill=\"#f4555a\"/><path d=\"M43.5 22.04c0-4.03-3.26-7.29-7.29-7.29-3.39 0-6.23 2.31-7.05 5.44a7.288 7.288 0 0 0-7.05-5.44c-4.03 0-7.29 3.26-7.29 7.29 0 1.98.79 3.77 2.07 5.09l.03.03.06.06 11.66 11.66 12.29-11.31a7.178 7.178 0 0 0 2.57-5.53z\" fill=\"#fff\"/></svg>";
	this._color4 = null;
	this._color3 = null;
	this._color2 = null;
	this._color1 = null;
	this._color0 = null;
	this._cellsize = 150;
	this._radius = 150;
	this.max = 100;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	var option = new SketchOption();
	option.set_width(1080);
	option.set_autostart(true);
	option.set_padding(10);
	option.set_scale(true);
	ctx = Sketch.create("creative_code_mck",option);
	this.set_description("Get a lot of likes animation");
	this.set_type(["Animation","Image"]);
	art_CCBase.call(this,ctx);
	this.initSVG();
};
$hxClasses["art.CC052a"] = art_CC052a;
art_CC052a.__name__ = ["art","CC052a"];
art_CC052a.__interfaces__ = [art_ICCBase];
art_CC052a.__super__ = art_CCBase;
art_CC052a.prototype = $extend(art_CCBase.prototype,{
	initSVG: function() {
		var _gthis = this;
		this.svgImage = new Image();
		this.svgImage.onload = function() {
			haxe_Log.trace("base64 square",{ fileName : "CC052a.hx", lineNumber : 69, className : "art.CC052a", methodName : "initSVG"});
			haxe_Log.trace("w: " + _gthis.svgImage.width,{ fileName : "CC052a.hx", lineNumber : 70, className : "art.CC052a", methodName : "initSVG"});
			haxe_Log.trace("h: " + _gthis.svgImage.height,{ fileName : "CC052a.hx", lineNumber : 71, className : "art.CC052a", methodName : "initSVG"});
			_gthis.isSvgReady = true;
			_gthis.drawShape();
		};
		var svg64 = window.btoa(this.svg);
		var b64Start = "data:image/svg+xml;base64,";
		var image64 = b64Start + svg64;
		this.svgImage.src = image64;
	}
	,onEmbedHandler: function(e) {
		haxe_Log.trace("onEmbedHandler: \"" + e + "\"",{ fileName : "CC052a.hx", lineNumber : 98, className : "art.CC052a", methodName : "onEmbedHandler"});
		this.isFontReady = true;
		this.drawShape();
	}
	,createLike: function(i,point) {
		var sh = { _id : "" + i, x : Global.w / 2, y : Global.h / 2, width : this.svgWidth, height : this.svgHeight, count : i, percentage : 0, radius : cc_util_MathUtil.random(20,50), speed : cc_util_MathUtil.random(-3,3), alpha : 2, angle : cc_util_MathUtil.random(360)};
		this.onAnimateHandler(sh);
		return sh;
	}
	,resetInstaLike: function(sh) {
		sh.x = cc_util_MathUtil.random(Global.w);
		sh.y = Global.h + this.yoffset;
		sh.alpha = 2;
	}
	,onAnimateHandler: function(sh) {
		this.resetInstaLike(sh);
		var Go = new cc_lets_Go(sh,cc_util_MathUtil.random(3,8));
		Go._isFrom = false;
		var _this = Go;
		_this._delay = _this.getDuration(cc_util_MathUtil.random(0.1,7));
		var _this1 = _this;
		var value = sh.x;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"x")) {
			objValue = Reflect.getProperty(_this1._target,"x");
		}
		var _range = { key : "x", from : _this1._isFrom ? value : objValue, to : !_this1._isFrom ? value : objValue};
		_this1._props.set("x",_range);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		var value1 = cc_util_MathUtil.random(Global.h / 2,0);
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this2._target,"y")) {
			objValue1 = Reflect.getProperty(_this2._target,"y");
		}
		var _range1 = { key : "y", from : _this2._isFrom ? value1 : objValue1, to : !_this2._isFrom ? value1 : objValue1};
		_this2._props.set("y",_range1);
		if(_this2._isFrom) {
			_this2.updateProperties(0);
		}
		var _this3 = _this2;
		var objValue2 = 0;
		if(Object.prototype.hasOwnProperty.call(_this3._target,"alpha")) {
			objValue2 = Reflect.getProperty(_this3._target,"alpha");
		}
		var _range2 = { key : "alpha", from : _this3._isFrom ? 0 : objValue2, to : !_this3._isFrom ? 0 : objValue2};
		_this3._props.set("alpha",_range2);
		if(_this3._isFrom) {
			_this3.updateProperties(0);
		}
		var _this4 = _this3;
		_this4._easing = cc_lets_easing_Sine.get_easeOut();
		var _this5 = _this4;
		_this5._options.onComplete = $bind(this,this.onAnimateHandler);
		_this5._options.onCompleteParams = [sh];
	}
	,drawShape: function() {
		if(!this.isSvgReady) {
			return;
		}
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			this.ctx.save();
			this.ctx.globalAlpha = sh.alpha;
			sh.angle += sh.speed;
			var xpos = sh.x + Math.cos(cc_util_MathUtil.radians(sh.angle)) * sh.radius;
			var ypos = sh.y + Math.sin(cc_util_MathUtil.radians(sh.angle)) * sh.radius;
			this.ctx.drawImage(this.svgImage,xpos,ypos,sh.width,sh.height);
			cc_CanvasTools.fillColourRGB(this.ctx,cc_util_ColorUtil.WHITE);
			var Text = new cc_draw_Text(this.ctx,Std.string(sh.count + 1));
			var _this = Text;
			_this._textAlign = "center";
			var _this1 = _this;
			var y = ypos + sh.height / 2;
			_this1.set__x(xpos + sh.width / 2 + 20);
			_this1.set__y(y);
			var _this2 = _this1;
			_this2.set__size(20);
			if(_this2.get__leading() == null) {
				_this2.set__leading(20);
			}
			var _this3 = _this2;
			var isLines = false;
			_this3._ctx.save();
			if(_this3._text.indexOf("\n") != -1) {
				_this3._lineArray = _this3._text.split("\n");
				isLines = true;
			}
			var previousColor = _this3._ctx.fillStyle;
			if(_this3._color != null) {
				cc_CanvasTools.fillColourRGB(_this3._ctx,_this3._color,_this3.get__alpha());
			} else {
				var _this4 = _this3._ctx;
				var $int = Std.parseInt(StringTools.replace(previousColor,"#","0x"));
				var tmp = _this3.get__alpha();
				cc_CanvasTools.fillColourRGB(_this4,{ r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255},tmp);
			}
			var tmp1 = "" + _this3.get__size() + "px ";
			_this3._ctx.font = tmp1 + _this3._font;
			_this3._ctx.textAlign = _this3._textAlign;
			_this3._ctx.textBaseline = _this3._textBaseline;
			_this3._ctx.translate(_this3.get__x(),_this3.get__y());
			_this3._ctx.rotate(cc_util_MathUtil.radians(_this3.get__rotate()));
			if(!isLines) {
				_this3._ctx.fillText(_this3._text,0,0);
			} else {
				var _g11 = 0;
				var _g2 = _this3._lineArray.length;
				while(_g11 < _g2) {
					var i1 = _g11++;
					var line = _this3._lineArray[i1];
					_this3._ctx.fillText(line,0,i1 * _this3.get__leading());
				}
			}
			_this3._ctx.restore();
			_this3._ctx.fillStyle = previousColor;
			this.ctx.globalAlpha = 1;
			this.ctx.restore();
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC052a.hx", lineNumber : 167, className : "art.CC052a", methodName : "setup"});
		var colorArray = cc_util_ColorUtil.niceColor100SortedString[cc_util_MathUtil.randomInt(cc_util_ColorUtil.niceColor100SortedString.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._color0 = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._color1 = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._color2 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		this._color3 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
		var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		this._color4 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.max;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createLike(i,this.grid.array[i]));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,didnotwork: function() {
		var _gthis = this;
		var img = new Image();
		img.onload = function() {
			haxe_Log.trace("green square",{ fileName : "CC052a.hx", lineNumber : 210, className : "art.CC052a", methodName : "didnotwork"});
			_gthis.ctx.drawImage(img,Global.w / 2,Global.h / 2);
		};
		img.src = "http://upload.wikimedia.org/wikipedia/commons/d/d2/Svg_example_square.svg";
		haxe_Log.trace(img.src,{ fileName : "CC052a.hx", lineNumber : 216, className : "art.CC052a", methodName : "didnotwork"});
		var img1 = new Image();
		img1.onload = function() {
			haxe_Log.trace("png",{ fileName : "CC052a.hx", lineNumber : 220, className : "art.CC052a", methodName : "didnotwork"});
			_gthis.ctx.drawImage(img1,Global.w / 2,Global.h / 2);
		};
		img1.src = "assets/img/mck.png";
		haxe_Log.trace(img1.src,{ fileName : "CC052a.hx", lineNumber : 226, className : "art.CC052a", methodName : "didnotwork"});
		var img2 = new Image();
		img2.onload = function() {
			haxe_Log.trace("likes",{ fileName : "CC052a.hx", lineNumber : 230, className : "art.CC052a", methodName : "didnotwork"});
			_gthis.ctx.drawImage(img2,Global.w / 2,Global.h / 2);
		};
		img2.src = "assets/img/likes/likes.svg";
		haxe_Log.trace(img2.src,{ fileName : "CC052a.hx", lineNumber : 236, className : "art.CC052a", methodName : "didnotwork"});
		var img3 = new Image();
		img3.onload = function() {
			haxe_Log.trace("likes.min",{ fileName : "CC052a.hx", lineNumber : 240, className : "art.CC052a", methodName : "didnotwork"});
			_gthis.ctx.drawImage(img3,Global.w / 2,Global.h / 2);
		};
		img3.src = "assets/img/likes/likes.min.svg";
		haxe_Log.trace(img3.src,{ fileName : "CC052a.hx", lineNumber : 246, className : "art.CC052a", methodName : "didnotwork"});
	}
	,toString: function() {
		return "cc052a";
	}
	,__class__: art_CC052a
});
var art_CC053 = function(ctx) {
	this.lyrics = "I said a hip hop\nHippie to the hippie\nThe hip, hip a hop, and you don't stop, a rock it out\nBubba to the bang bang boogie, boobie to the boogie\nTo the rhythm of the boogie the beat\nNow, what you hear is not a test I'm rappin' to the beat\nAnd me, the groove, and my friends are gonna try to move your feet\nSee, I am Wonder Mike, and I'd like to say hello\nTo the black, to the white, the red and the brown\nThe purple and yellow, but first, I gotta\nBang bang, the boogie to the boogie\nSay up jump the boogie to the bang bang boogie\nLet's rock, you don't stop\nRock the rhythm that'll make your body rock\nWell so far you've heard my voice but I brought two friends along\nAnd the next on the mic is my man Hank\nC'mon, Hank, sing that song, check it out\nWell, I'm Imp the Dimp, the ladies' pimp\nThe women fight for my delight\nBut I'm the grandmaster with the three MCs\nThat shock the house for the young ladies\nAnd when you come inside, into the front\nYou do the Freak, Spank, and do the Bump\nAnd when the sucker MC's try to prove a point\nWe're Treacherous Trio, we're the serious joint\nA from sun to sun and day to day\nI sit down and write a brand new rhyme\nBecause they say that miracles never cease\nI've created a devastating masterpiece\nI'm gonna rock the mic 'til you can't resist\nEverybody, I say it goes like this\nWell, I was coming home late one dark afternoon\nA reporter stopped me for an interview\nShe said she's heard stories and she's heard fables\nThat I'm vicious on the mic and the turntable\nThis young reporter I did adore\nSo I rocked some vicious rhymes like I never did before\nShe said, \"damn, fly guy, I'm in love with you\nThe Casanova legend must have been true\"\nI said, \"by the way, baby, what's your name?\"\nSaid, \"I go by name of Lois Lane\"\n\"And you could be my boyfriend, you surely can\nJust let me quit my boyfriend called Superman\"\nI said, \"he's a fairy, I do suppose\nFlyin' through the air in pantyhose\nHe may be very sexy, or even cute\nBut he looks like a sucker in a blue and red suit\"\nI said, \"you need a man man who's got finesse\nAnd his whole name across his chest\nHe may be able to fly all through the night\nBut can he rock a party 'til the early light?\nHe can't satisfy you with his little worm\nBut I can bust you out with my super sperm!\"\nI go do it, I go do it, I go do it, do it, do it\nAn' I'm here an' I'm there, I'm Big Ban Hank, I'm everywhere\nJust throw your hands up in the air\nAnd party hardy like you just don't care\nLet's do it, don't stop, y'all, a tick tock, y'all, you don't stop!\nGo ho-tel, mo-tel, whatcha gonna do today? (say what?)\nI'm gonna get a fly girl, gonna get some spank, drive off in a def OJ\nEverybody go, \"ho-tel, mo-tel, Holiday Inn\"\nYou say if your girl starts actin' up, then you take her friend\nI say skip, dive, what can I say?\nI can't fit 'em all inside my OJ\nSo I just take half, and bust 'em out\nI give the rest to Master Gee so he can shock the house\nI said M-A-S, T-E-R, a G with a double E\nI said I go by the unforgettable name\nOf the man they call the Master Gee\nWell, my name is known all over the world\nBy all the foxy ladies and the pretty girls\nI'm goin' down in history\nAs the baddest rapper there ever could be\nNow I'm feelin' the highs and you're feelin' the lows\nThe beat starts gettin' into your toes\nYou start poppin' your fingers and stompin' your feet\nAnd movin' your body while while you're sitting in your seat\nAnd then damn! Ya start doin' the freak, I said\nDamn! Right outta your seat\nThen you throw your hands high in the air\nYa rockin' to the rhythm, shake your derriere\nYa rockin' to the beat without a care\nWith the sureshot MCs for the affair\nNow, I'm not as tall as the rest of the gang\nBut I rap to the beat just the same\nI got a little face, and a pair of brown eyes\nAll I'm here to do, ladies, is hypnotize\nSingin' on'n'n'on'n'on on'n'on\nThe beat don't stop until the break of dawn\nSingin' on'n'n'on'n'on on'n'on\nLike a hot buttered pop da pop da pop dibbie dibbie\nPop da pop pop, don't you dare stop\nCome alive y'all, gimme whatcha got\nI guess by now you can take a hunch\nAnd find that I am the baby of the bunch\nBut that's okay, I still keep in stride\n'Cause all I'm here to do is just wiggle your behind\nSingin' on'n'n'on'n'on on'n'on\nThe beat don't stop until the break of dawn\nSingin' on'n'n'on'n'on on'n'on\nRock rock, y'all, throw it on the floor\nI'm gonna freak you here, I'm gona freak you there\nI'm gonna move you outta this atmosphere\n'Cause I'm one of a kind and I'll shock your mind\nI'll put TNT in your behind. I said\nOne, two, three, four, come on, girls, get on the floor\nA-come alive, y'all, a-gimme whatcha got\n'Cause I'm guaranteed to make you rock\nI said one, two, three, four, tell me, Wonder Mike\nWhat are you waiting for?\nI said a hip hop\nThe hippie to the hippie\nThe hip hip a hop, and you don't stop, a rock it\nTo the bang bang boogie, say up jump the boogie\nTo the rhythm of the boogie, the beat\nA skiddleebebop, we rock, scooby doo\nAnd guess what, America, we love you\n'Cause you rocked and a rolled with so much soul\nYou could rock 'til a hundred and one years old\nI don't mean to brag, I don't mean to boast\nBut we like hot butter on our breakfast toast\nRock it up, Baby Bubba!\nBaby Bubba to the boogie da bang bang da boogie\nTo the beat, beat, it's unique\nCome on everybody and dance to the beat!\nHave you ever went over a friends house to eat\nAnd the food just ain't no good?\nI mean the macaroni's soggy, the peas are mushed\nAnd the chicken tastes like wood\nSo you try to play it off like you think you can\nBy saying that you're full\nAnd then your friend says, \"mama, he's just being polite\nHe ain't finished, uh-uh, that's bull!\"\nSo your heart starts pumpin' and you think of a lie\nAnd you say that you already ate\nAnd your friend says \"man, there's plenty of food\"\nSo you pile some more on your plate\nWhile the stinky food's steamin', your mind starts to dreamin'\nOf the moment that it's time to leave\nAnd then you look at your plate and your chicken's slowly rottin'\nInto something that looks like cheese\nOh so you say \"that's it, I gotta leave this place\nI don't care what these people think\nI'm just sittin' here makin' myself nauseous\nWith this ugly food that stinks\"\nSo you bust out the door while it's still closed\nStill sick from the food you ate\nAnd then you run to the store for quick relief\nFrom a bottle of Kaopectate\nAnd then you call your friend two weeks later\nTo see how he has been\nAnd he says, \"I understand about the food\nBaby Bubba, but we're still friends\"\nWith a hip hop the hippie to the hippie\nThe hip hip a hop, a you don't stop the rockin'\nTo the bang bang boogie\nSay up jump the boogie to the rhythm of the boogie the beat";
	this.preformer = "The Sugarhill Gang";
	this.song = "Rapper's Delight";
	this._startAngle = -90;
	this._angle = 10;
	this._radius = 180;
	this.defaultText = "Hier moet iets staan dat de moeite waard is";
	this._isEmbedded = false;
	var option = new SketchOption();
	option.set_width(1080);
	option.set_autostart(true);
	option.set_padding(10);
	option.set_scale(true);
	ctx = Sketch.create("creative_code_mck",option);
	this.set_description("Show a large text in a spiral");
	this.set_type(["Animation","Image"]);
	this._text = this.defaultText;
	cc_draw_Text.embedGoogleFont("PT+Mono",$bind(this,this.onEmbedHandler));
	this.createQuickSettings();
	art_CCBase.call(this,ctx);
	var a = 8;
	var b = 6;
	var c = 7;
	var cosa = (Math.pow(b,2) + Math.pow(c,2) - Math.pow(a,2)) / (2 * b * c);
	haxe_Log.trace(cosa,{ fileName : "CC053.hx", lineNumber : 39, className : "art.CC053", methodName : "new"});
	haxe_Log.trace(Math.acos(cosa),{ fileName : "CC053.hx", lineNumber : 40, className : "art.CC053", methodName : "new"});
	haxe_Log.trace(cc_util_MathUtil.degrees(Math.acos(cosa)),{ fileName : "CC053.hx", lineNumber : 41, className : "art.CC053", methodName : "new"});
};
$hxClasses["art.CC053"] = art_CC053;
art_CC053.__name__ = ["art","CC053"];
art_CC053.__interfaces__ = [art_ICCBase];
art_CC053.__super__ = art_CCBase;
art_CC053.prototype = $extend(art_CCBase.prototype,{
	createQuickSettings: function() {
		var _gthis = this;
		this.panel1 = QuickSettings.create(10,10,"Test rotation").setGlobalChangeHandler($bind(this,this.drawShape)).addTextArea("Reason","Test this text in circle thing",null).addTextArea("Quote",this.defaultText,function(value) {
			_gthis.setText(value);
		}).addRange("radius",200,500,180,1,function(value1) {
			_gthis.setRadius(value1);
		}).addRange("start angle",0,360,180,1,function(value2) {
			_gthis.setStartAngle(value2);
		}).addDropDown("text",["one","two"],function(value3) {
			_gthis.dropdown("DropDown",value3);
		}).addButton("default",function(e) {
			_gthis.setText(_gthis.defaultText);
		}).saveInLocalStorage("store-data-" + this.toString());
	}
	,dropdown: function(value,index) {
		var sub = this.lyrics.split("").length;
		this._text = this.lyrics.substring(0,Math.round(sub / 6));
	}
	,setText: function(str) {
		this._text = str;
	}
	,setRadius: function(px) {
		this._radius = px;
	}
	,setStartAngle: function(degree) {
		this._startAngle = degree;
	}
	,setAngle: function(angle) {
		this._angle = angle;
	}
	,onEmbedHandler: function(e) {
		haxe_Log.trace("onEmbedHandler: \"" + e + "\"",{ fileName : "CC053.hx", lineNumber : 83, className : "art.CC053", methodName : "onEmbedHandler"});
		this._isEmbedded = true;
		this.drawShape();
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		if(!this._isEmbedded) {
			return;
		}
		var xoffset = 7;
		var Text = new cc_draw_Text(this.ctx,this.preformer);
		var _this = Text;
		_this._color = cc_util_ColorUtil.PINK;
		_this.set__alpha(cc_util_MathUtil.clamp(1,0,1));
		var _this1 = _this;
		_this1._font = StringTools.replace(StringTools.replace("PT Mono",";",""),"+"," ");
		var _this2 = _this1;
		_this2.set__size(30);
		if(_this2.get__leading() == null) {
			_this2.set__leading(30);
		}
		var _this3 = _this2;
		_this3._textAlign = "left";
		var _this4 = _this3;
		var x = this.get_w2() - xoffset;
		var y = this.get_h2() - this._radius - 60;
		_this4.set__x(x);
		_this4.set__y(y);
		var _this5 = _this4;
		var isLines = false;
		_this5._ctx.save();
		if(_this5._text.indexOf("\n") != -1) {
			_this5._lineArray = _this5._text.split("\n");
			isLines = true;
		}
		var previousColor = _this5._ctx.fillStyle;
		if(_this5._color != null) {
			cc_CanvasTools.fillColourRGB(_this5._ctx,_this5._color,_this5.get__alpha());
		} else {
			var _this6 = _this5._ctx;
			var $int = Std.parseInt(StringTools.replace(previousColor,"#","0x"));
			var tmp = _this5.get__alpha();
			cc_CanvasTools.fillColourRGB(_this6,{ r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255},tmp);
		}
		var tmp1 = "" + _this5.get__size() + "px ";
		_this5._ctx.font = tmp1 + _this5._font;
		_this5._ctx.textAlign = _this5._textAlign;
		_this5._ctx.textBaseline = _this5._textBaseline;
		_this5._ctx.translate(_this5.get__x(),_this5.get__y());
		_this5._ctx.rotate(cc_util_MathUtil.radians(_this5.get__rotate()));
		if(!isLines) {
			_this5._ctx.fillText(_this5._text,0,0);
		} else {
			var _g1 = 0;
			var _g = _this5._lineArray.length;
			while(_g1 < _g) {
				var i = _g1++;
				var line = _this5._lineArray[i];
				_this5._ctx.fillText(line,0,i * _this5.get__leading());
			}
		}
		_this5._ctx.restore();
		_this5._ctx.fillStyle = previousColor;
		var Text1 = new cc_draw_Text(this.ctx,this.song);
		var _this7 = Text1;
		_this7._font = StringTools.replace(StringTools.replace("PT Mono",";",""),"+"," ");
		var _this8 = _this7;
		_this8._color = cc_util_ColorUtil.PINK;
		_this8.set__alpha(cc_util_MathUtil.clamp(1,0,1));
		var _this9 = _this8;
		_this9._textAlign = "left";
		var _this10 = _this9;
		_this10.set__size(25);
		if(_this10.get__leading() == null) {
			_this10.set__leading(25);
		}
		var _this11 = _this10;
		var x1 = this.get_w2() - xoffset;
		var y1 = this.get_h2() - this._radius - 30;
		_this11.set__x(x1);
		_this11.set__y(y1);
		var _this12 = _this11;
		var isLines1 = false;
		_this12._ctx.save();
		if(_this12._text.indexOf("\n") != -1) {
			_this12._lineArray = _this12._text.split("\n");
			isLines1 = true;
		}
		var previousColor1 = _this12._ctx.fillStyle;
		if(_this12._color != null) {
			cc_CanvasTools.fillColourRGB(_this12._ctx,_this12._color,_this12.get__alpha());
		} else {
			var _this13 = _this12._ctx;
			var int1 = Std.parseInt(StringTools.replace(previousColor1,"#","0x"));
			var tmp2 = _this12.get__alpha();
			cc_CanvasTools.fillColourRGB(_this13,{ r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255},tmp2);
		}
		var tmp3 = "" + _this12.get__size() + "px ";
		_this12._ctx.font = tmp3 + _this12._font;
		_this12._ctx.textAlign = _this12._textAlign;
		_this12._ctx.textBaseline = _this12._textBaseline;
		_this12._ctx.translate(_this12.get__x(),_this12.get__y());
		_this12._ctx.rotate(cc_util_MathUtil.radians(_this12.get__rotate()));
		if(!isLines1) {
			_this12._ctx.fillText(_this12._text,0,0);
		} else {
			var _g11 = 0;
			var _g2 = _this12._lineArray.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				var line1 = _this12._lineArray[i1];
				_this12._ctx.fillText(line1,0,i1 * _this12.get__leading());
			}
		}
		_this12._ctx.restore();
		_this12._ctx.fillStyle = previousColor1;
		var centerX = this.get_w2();
		var centerY = this.get_h2();
		cc_CanvasTools.fillColourRGB(this.ctx,cc_util_ColorUtil.BLACK);
		cc_CanvasTools.fillColourRGB(this.ctx,cc_util_ColorUtil.BLACK);
		this.ctx.textAlign = "center";
		this.ctx.textBaseline = "bottom";
		this.ctx.font = "20px PT Mono";
		cc_util_TextUtil.drawTextAlongArc4(this.ctx,this._text,centerX,centerY,this._radius,this._startAngle);
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC053.hx", lineNumber : 134, className : "art.CC053", methodName : "setup"});
		this.isDebug = true;
	}
	,draw: function() {
		haxe_Log.trace("draw: " + this.toString(),{ fileName : "CC053.hx", lineNumber : 140, className : "art.CC053", methodName : "draw"});
		this.drawShape();
		this.stop();
	}
	,__class__: art_CC053
});
var art_CC054 = function(ctx) {
	this._color4 = null;
	this._color3 = null;
	this._color2 = null;
	this._color1 = null;
	this._color0 = null;
	this._cellsize = 150;
	this._radius = 150;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	this.set_description("");
	this.set_type(["Animation","Image"]);
	cc_draw_Text.embedGoogleFont("Oswald:200,300,400,500,600,700",$bind(this,this.onEmbedHandler));
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC054"] = art_CC054;
art_CC054.__name__ = ["art","CC054"];
art_CC054.__interfaces__ = [art_ICCBase];
art_CC054.__super__ = art_CCBase;
art_CC054.prototype = $extend(art_CCBase.prototype,{
	onEmbedHandler: function(e) {
		haxe_Log.trace("onEmbedHandler: \"" + e + "\"",{ fileName : "CC054.hx", lineNumber : 31, className : "art.CC054", methodName : "onEmbedHandler"});
		this.drawShape();
	}
	,createQuickSettings: function() {
		this.panel1 = QuickSettings.create(10,10,"Quote generator").setGlobalChangeHandler($bind(this,this.drawShape)).addHTML("Reason","Sometimes I need a quick quote, to post on Instagram").addTextArea("Quote","text",function(value) {
			haxe_Log.trace(value,{ fileName : "CC054.hx", lineNumber : 38, className : "art.CC054", methodName : "createQuickSettings"});
		}).addBoolean("All Caps",false,function(value1) {
			haxe_Log.trace(value1,{ fileName : "CC054.hx", lineNumber : 40, className : "art.CC054", methodName : "createQuickSettings"});
		}).saveInLocalStorage("store-data-" + this.toString());
	}
	,createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y, radius : this._radius};
		this.onAnimateHandler(shape);
		return shape;
	}
	,onAnimateHandler: function(circle) {
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		this.createEye();
	}
	,createEye: function() {
		var colorArr = [cc_util_ColorUtil.GREEN,cc_util_ColorUtil.PINK,cc_util_ColorUtil.BLUE,cc_util_ColorUtil.AQUA,cc_util_ColorUtil.TEAL,cc_util_ColorUtil.OLIVE];
		var outerR = 120;
		var innerR = 50;
		var c = new cc_draw_Circle(this.ctx);
		var _this = c;
		var x = this.get_w2() + cc_util_MathUtil.random(-3,3);
		var y = this.get_h2() + cc_util_MathUtil.random(-3,3);
		_this.set__x(x);
		_this.set__y(y);
		var _this1 = _this;
		_this1._color = cc_util_ColorUtil.BLACK;
		var _this2 = _this1;
		_this2.set__radius(outerR + 10);
		var _this3 = _this2;
		_this3._ctx.save();
		var previousColor = _this3._ctx.fillStyle;
		if(_this3._color != null && _this3.get__gradient() == null) {
			cc_CanvasTools.fillColourRGB(_this3._ctx,_this3._color,_this3.get__alpha());
		}
		if(_this3.get__gradient() != null) {
			_this3._ctx.fillStyle = _this3.get__gradient();
		}
		_this3.circleFill(_this3._ctx,_this3.get__x(),_this3.get__y(),_this3.get__radius());
		_this3._ctx.restore();
		_this3._ctx.fillStyle = previousColor;
		var c1 = new cc_draw_Circle(this.ctx);
		var _this4 = c1;
		var x1 = this.get_w2();
		var y1 = this.get_h2();
		_this4.set__x(x1);
		_this4.set__y(y1);
		var _this5 = _this4;
		_this5._color = colorArr[cc_util_MathUtil.randomInt(colorArr.length - 1)];
		var _this6 = _this5;
		_this6.set__radius(outerR);
		var _this7 = _this6;
		_this7._ctx.save();
		var previousColor1 = _this7._ctx.fillStyle;
		if(_this7._color != null && _this7.get__gradient() == null) {
			cc_CanvasTools.fillColourRGB(_this7._ctx,_this7._color,_this7.get__alpha());
		}
		if(_this7.get__gradient() != null) {
			_this7._ctx.fillStyle = _this7.get__gradient();
		}
		_this7.circleFill(_this7._ctx,_this7.get__x(),_this7.get__y(),_this7.get__radius());
		_this7._ctx.restore();
		_this7._ctx.fillStyle = previousColor1;
		cc_CanvasTools.strokeColourRGB(this.ctx,cc_util_ColorUtil.WHITE,0.1);
		var _g = 0;
		while(_g < 1000) {
			var i = _g++;
			var point = cc_util_MathUtil.orbit(this.get_w2(),this.get_h2(),cc_util_MathUtil.random(360),cc_util_MathUtil.random(innerR,outerR - 5));
			cc_CanvasTools.line(this.ctx,this.get_w2(),this.get_h2(),point.x,point.y);
		}
		var c2 = new cc_draw_Circle(this.ctx);
		var _this8 = c2;
		var x2 = this.get_w2();
		var y2 = this.get_h2();
		_this8.set__x(x2);
		_this8.set__y(y2);
		var _this9 = _this8;
		_this9._color = cc_util_ColorUtil.BLACK;
		var _this10 = _this9;
		_this10.set__radius(innerR);
		var _this11 = _this10;
		_this11._ctx.save();
		var previousColor2 = _this11._ctx.fillStyle;
		if(_this11._color != null && _this11.get__gradient() == null) {
			cc_CanvasTools.fillColourRGB(_this11._ctx,_this11._color,_this11.get__alpha());
		}
		if(_this11.get__gradient() != null) {
			_this11._ctx.fillStyle = _this11.get__gradient();
		}
		_this11.circleFill(_this11._ctx,_this11.get__x(),_this11.get__y(),_this11.get__radius());
		_this11._ctx.restore();
		_this11._ctx.fillStyle = previousColor2;
		var xpos = this.get_w2() - innerR + 10;
		var ypos = this.get_h2() - innerR + 20;
		var c3 = new cc_draw_Circle(this.ctx);
		var _this12 = c3;
		_this12._color = cc_util_ColorUtil.WHITE;
		var _this13 = _this12;
		_this13.set__x(xpos);
		_this13.set__y(ypos);
		var _this14 = _this13;
		_this14.set__radius(20);
		var _this15 = _this14;
		_this15.set__alpha(0.7);
		var _this16 = _this15;
		_this16._ctx.save();
		var previousColor3 = _this16._ctx.fillStyle;
		if(_this16._color != null && _this16.get__gradient() == null) {
			cc_CanvasTools.fillColourRGB(_this16._ctx,_this16._color,_this16.get__alpha());
		}
		if(_this16.get__gradient() != null) {
			_this16._ctx.fillStyle = _this16.get__gradient();
		}
		_this16.circleFill(_this16._ctx,_this16.get__x(),_this16.get__y(),_this16.get__radius());
		_this16._ctx.restore();
		_this16._ctx.fillStyle = previousColor3;
		var out = outerR - 50;
		var c4 = new cc_draw_Circle(this.ctx);
		var _this17 = c4;
		var x3 = this.get_w2() + cc_util_MathUtil.random(-out,out);
		var y3 = this.get_h2() + cc_util_MathUtil.random(-out,out);
		_this17.set__x(x3);
		_this17.set__y(y3);
		var _this18 = _this17;
		_this18._color = cc_util_ColorUtil.WHITE;
		var _this19 = _this18;
		_this19.set__radius(10);
		var _this20 = _this19;
		_this20.set__alpha(0.7);
		var _this21 = _this20;
		_this21._ctx.save();
		var previousColor4 = _this21._ctx.fillStyle;
		if(_this21._color != null && _this21.get__gradient() == null) {
			cc_CanvasTools.fillColourRGB(_this21._ctx,_this21._color,_this21.get__alpha());
		}
		if(_this21.get__gradient() != null) {
			_this21._ctx.fillStyle = _this21.get__gradient();
		}
		_this21.circleFill(_this21._ctx,_this21.get__x(),_this21.get__y(),_this21.get__radius());
		_this21._ctx.restore();
		_this21._ctx.fillStyle = previousColor4;
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC054.hx", lineNumber : 123, className : "art.CC054", methodName : "setup"});
		var colorArray = cc_util_ColorUtil.niceColor100SortedString[cc_util_MathUtil.randomInt(cc_util_ColorUtil.niceColor100SortedString.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._color0 = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._color1 = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._color2 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		this._color3 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
		var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		this._color4 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
		this.isDebug = true;
		this.grid.setCellSize(this._cellsize);
		this.grid.setIsCenterPoint(true);
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i,this.grid.array[i]));
		}
	}
	,draw: function() {
		haxe_Log.trace("draw: " + this.toString(),{ fileName : "CC054.hx", lineNumber : 146, className : "art.CC054", methodName : "draw"});
		this.drawShape();
		this.stop();
	}
	,__class__: art_CC054
});
var art_CC054a = function(ctx) {
	this.maxDistance = 200;
	this.innerR = 50.0;
	this.cell = 0.0;
	this.outerR = 0.0;
	this.colorArr = [cc_util_ColorUtil.GREEN,cc_util_ColorUtil.PINK,cc_util_ColorUtil.BLUE,cc_util_ColorUtil.AQUA,cc_util_ColorUtil.TEAL,cc_util_ColorUtil.OLIVE,cc_util_ColorUtil.PURPLE,cc_util_ColorUtil.MAROON,cc_util_ColorUtil.GRAY];
	this._cellsize = 150;
	this._radius = 150;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	this.set_description("Eyes following mouse by looking at it");
	this.set_type(["Animation","Interactive","Image"]);
	var option = new SketchOption();
	option.set_width(1080);
	option.set_autostart(true);
	option.set_padding(10);
	option.set_scale(true);
	ctx = Sketch.create("creative_code_mck",option);
	art_CCBase.call(this,ctx);
	var shuffle = cc_util_MathUtil.shuffle(this.colorArr);
};
$hxClasses["art.CC054a"] = art_CC054a;
art_CC054a.__name__ = ["art","CC054a"];
art_CC054a.__interfaces__ = [art_ICCBase];
art_CC054a.__super__ = art_CCBase;
art_CC054a.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		this.cell = Math.min(this.grid.cellHeight,this.grid.cellWidth);
		this.outerR = Math.round(this.cell / 2) - 20;
		var out = this.outerR - 50;
		var shape = { _id : "" + i, _type : "EyeObj", x : point.x, y : point.y, outline : { x : point.x + cc_util_MathUtil.random(-3,3), y : point.y + cc_util_MathUtil.random(-3,3)}, highlight : { x : point.x + (this.innerR - this.innerR / 2), y : point.y + (this.innerR - this.innerR / 2)}, randomHightlight : { x : point.x + cc_util_MathUtil.random(-out,out), y : point.y + cc_util_MathUtil.random(-out,out)}, rgb : this.colorArr[i]};
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.createEye(i,this.shapeArray[i]);
		}
	}
	,createEye: function(i,eye) {
		var c = new cc_draw_Circle(this.ctx);
		var _this = c;
		var y = eye.outline.y;
		_this.set__x(eye.outline.x);
		_this.set__y(y);
		var _this1 = _this;
		_this1._color = cc_util_ColorUtil.BLACK;
		var _this2 = _this1;
		_this2.set__radius(Math.round(this.outerR + 10));
		var _this3 = _this2;
		_this3._ctx.save();
		var previousColor = _this3._ctx.fillStyle;
		if(_this3._color != null && _this3.get__gradient() == null) {
			cc_CanvasTools.fillColourRGB(_this3._ctx,_this3._color,_this3.get__alpha());
		}
		if(_this3.get__gradient() != null) {
			_this3._ctx.fillStyle = _this3.get__gradient();
		}
		_this3.circleFill(_this3._ctx,_this3.get__x(),_this3.get__y(),_this3.get__radius());
		_this3._ctx.restore();
		_this3._ctx.fillStyle = previousColor;
		var c1 = new cc_draw_Circle(this.ctx);
		var _this4 = c1;
		var y1 = eye.y;
		_this4.set__x(eye.x);
		_this4.set__y(y1);
		var _this5 = _this4;
		_this5._color = eye.rgb;
		var _this6 = _this5;
		_this6.set__radius(Math.round(this.outerR));
		var _this7 = _this6;
		_this7._ctx.save();
		var previousColor1 = _this7._ctx.fillStyle;
		if(_this7._color != null && _this7.get__gradient() == null) {
			cc_CanvasTools.fillColourRGB(_this7._ctx,_this7._color,_this7.get__alpha());
		}
		if(_this7.get__gradient() != null) {
			_this7._ctx.fillStyle = _this7.get__gradient();
		}
		_this7.circleFill(_this7._ctx,_this7.get__x(),_this7.get__y(),_this7.get__radius());
		_this7._ctx.restore();
		_this7._ctx.fillStyle = previousColor1;
		this.ctx.save();
		var c2 = new cc_draw_Circle(this.ctx);
		var _this8 = c2;
		var y2 = eye.y;
		_this8.set__x(eye.x);
		_this8.set__y(y2);
		var _this9 = _this8;
		_this9._color = eye.rgb;
		var _this10 = _this9;
		_this10.set__radius(Math.round(this.outerR));
		var _this11 = _this10;
		_this11._ctx.save();
		var previousColor2 = _this11._ctx.fillStyle;
		if(_this11._color != null && _this11.get__gradient() == null) {
			cc_CanvasTools.fillColourRGB(_this11._ctx,_this11._color,_this11.get__alpha());
		}
		if(_this11.get__gradient() != null) {
			_this11._ctx.fillStyle = _this11.get__gradient();
		}
		_this11.circleFill(_this11._ctx,_this11.get__x(),_this11.get__y(),_this11.get__radius());
		_this11._ctx.restore();
		_this11._ctx.fillStyle = previousColor2;
		this.ctx.clip();
		var currentDistance = cc_util_MathUtil.distance(Global.mouseX,Global.mouseY,eye.x,eye.y);
		var tmp = currentDistance < this.maxDistance;
		var dirX = eye.x + (Global.mouseX - eye.x) * 0.2;
		var dirY = eye.y + (Global.mouseY - eye.y) * 0.2;
		cc_CanvasTools.strokeColourRGB(this.ctx,cc_util_ColorUtil.WHITE,0.1);
		var _g = 0;
		while(_g < 1000) {
			var i1 = _g++;
			var point = cc_util_MathUtil.orbit(dirX,dirY,cc_util_MathUtil.random(360),cc_util_MathUtil.random(this.innerR,this.outerR - 5));
			cc_CanvasTools.line(this.ctx,dirX,dirY,point.x,point.y);
		}
		var c3 = new cc_draw_Circle(this.ctx);
		var _this12 = c3;
		_this12.set__x(dirX);
		_this12.set__y(dirY);
		var _this13 = _this12;
		_this13._color = cc_util_ColorUtil.BLACK;
		var _this14 = _this13;
		_this14.set__radius(Math.round(this.innerR));
		var _this15 = _this14;
		_this15._ctx.save();
		var previousColor3 = _this15._ctx.fillStyle;
		if(_this15._color != null && _this15.get__gradient() == null) {
			cc_CanvasTools.fillColourRGB(_this15._ctx,_this15._color,_this15.get__alpha());
		}
		if(_this15.get__gradient() != null) {
			_this15._ctx.fillStyle = _this15.get__gradient();
		}
		_this15.circleFill(_this15._ctx,_this15.get__x(),_this15.get__y(),_this15.get__radius());
		_this15._ctx.restore();
		_this15._ctx.fillStyle = previousColor3;
		this.ctx.restore();
		var xpos = eye.x - this.innerR + 10;
		var ypos = eye.y - this.innerR + 20;
		var c4 = new cc_draw_Circle(this.ctx);
		var _this16 = c4;
		_this16._color = cc_util_ColorUtil.WHITE;
		var _this17 = _this16;
		_this17.set__x(xpos);
		_this17.set__y(ypos);
		var _this18 = _this17;
		_this18.set__radius(20);
		var _this19 = _this18;
		_this19.set__alpha(0.7);
		var _this20 = _this19;
		_this20._ctx.save();
		var previousColor4 = _this20._ctx.fillStyle;
		if(_this20._color != null && _this20.get__gradient() == null) {
			cc_CanvasTools.fillColourRGB(_this20._ctx,_this20._color,_this20.get__alpha());
		}
		if(_this20.get__gradient() != null) {
			_this20._ctx.fillStyle = _this20.get__gradient();
		}
		_this20.circleFill(_this20._ctx,_this20.get__x(),_this20.get__y(),_this20.get__radius());
		_this20._ctx.restore();
		_this20._ctx.fillStyle = previousColor4;
		var c5 = new cc_draw_Circle(this.ctx);
		var _this21 = c5;
		var y3 = eye.randomHightlight.y;
		_this21.set__x(eye.randomHightlight.x);
		_this21.set__y(y3);
		var _this22 = _this21;
		_this22._color = cc_util_ColorUtil.WHITE;
		var _this23 = _this22;
		_this23.set__radius(10);
		var _this24 = _this23;
		_this24.set__alpha(0.7);
		var _this25 = _this24;
		_this25._ctx.save();
		var previousColor5 = _this25._ctx.fillStyle;
		if(_this25._color != null && _this25.get__gradient() == null) {
			cc_CanvasTools.fillColourRGB(_this25._ctx,_this25._color,_this25.get__alpha());
		}
		if(_this25.get__gradient() != null) {
			_this25._ctx.fillStyle = _this25.get__gradient();
		}
		_this25.circleFill(_this25._ctx,_this25.get__x(),_this25.get__y(),_this25.get__radius());
		_this25._ctx.restore();
		_this25._ctx.fillStyle = previousColor5;
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC054a.hx", lineNumber : 158, className : "art.CC054a", methodName : "setup"});
		this.isDebug = true;
		var padding = 20;
		this.grid.setDimension(Global.w - padding * 2,Global.h - padding * 2);
		this.grid.setNumbered(3,3);
		this.grid.setIsCenterPoint(true);
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i,this.grid.array[i]));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,toString: function() {
		return "cc054a";
	}
	,__class__: art_CC054a
});
var art_CC055 = function(ctx) {
	this.src = "/assets/img/spritesheet/web_heart_animation_edge.png";
	this.isImageLoaded = false;
	this.isFontLoaded = false;
	this._color4 = null;
	this._color3 = null;
	this._color2 = null;
	this._color1 = null;
	this._color0 = null;
	this._cellsize = 100;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	this.set_description("");
	this.set_type(["Animation","Image"]);
	var option = new SketchOption();
	option.set_width(1080);
	option.set_autostart(true);
	option.set_padding(10);
	option.set_scale(true);
	ctx = Sketch.create("creative_code_mck",option);
	this.init();
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC055"] = art_CC055;
art_CC055.__name__ = ["art","CC055"];
art_CC055.__interfaces__ = [art_ICCBase];
art_CC055.__super__ = art_CCBase;
art_CC055.prototype = $extend(art_CCBase.prototype,{
	init: function() {
		this.createQuickSettings();
		cc_draw_Spritesheet.load(this.src,$bind(this,this.onSpritesheetComplete));
		cc_draw_Text.embedGoogleFont("Berkshire+Swash",$bind(this,this.onFontComplete));
	}
	,createQuickSettings: function() {
		var _gthis = this;
		this.panel1 = QuickSettings.create(10,10,"Zip exporter").setGlobalChangeHandler($bind(this,this.drawShape)).addRange("delay",0.0,5.0,2.0,0.5,function(e) {
			_gthis.setDelay(e);
		}).addRange("record",0.0,30.0,2.0,0.5,function(e1) {
			_gthis.setRecord(e1);
		}).addButton("init recording",function(e2) {
			_gthis.onClickHandler(e2);
		}).addButton("start recording",function(e3) {
			_gthis.onClickHandler(e3);
		}).addButton("stop recording",function(e4) {
			_gthis.onClickHandler(e4);
		}).saveInLocalStorage("store-data-" + this.toString());
	}
	,setDelay: function(e) {
		haxe_Log.trace(e,{ fileName : "CC055.hx", lineNumber : 71, className : "art.CC055", methodName : "setDelay"});
	}
	,setRecord: function(e) {
		haxe_Log.trace(e,{ fileName : "CC055.hx", lineNumber : 75, className : "art.CC055", methodName : "setRecord"});
	}
	,onClickHandler: function(e) {
		var input = e;
		var _g = input.value;
		switch(_g) {
		case "init recording":
			haxe_Log.trace("init recording",{ fileName : "CC055.hx", lineNumber : 83, className : "art.CC055", methodName : "onClickHandler"});
			break;
		case "start recording":
			haxe_Log.trace("start recording",{ fileName : "CC055.hx", lineNumber : 85, className : "art.CC055", methodName : "onClickHandler"});
			break;
		case "stop recording":
			haxe_Log.trace("stop recording",{ fileName : "CC055.hx", lineNumber : 87, className : "art.CC055", methodName : "onClickHandler"});
			break;
		default:
			haxe_Log.trace("case '" + input.value + "': trace ('" + input.value + "');",{ fileName : "CC055.hx", lineNumber : 89, className : "art.CC055", methodName : "onClickHandler"});
		}
	}
	,onSpritesheetComplete: function(img) {
		var _gthis = this;
		this._img = img;
		this.isImageLoaded = true;
		this.drawShape();
		haxe_Timer.delay(function() {
			_gthis.delayCallHandler();
		},2000);
	}
	,delayCallHandler: function() {
		var _g = 0;
		while(_g < 10) {
			var i = _g++;
			var spritesheet = new cc_draw_Spritesheet(this.ctx,this._img);
			var _this = spritesheet;
			_this.set__cellWidth(100);
			_this.set__cellHeight(100);
			_this._totalFrame = Math.round(_this.get__width() / _this.get__cellWidth());
			var _this1 = _this;
			_this1.set__x(i * 110);
			_this1.set__y(0);
			var _this2 = _this1;
			_this2._isAnimation = true;
			_this2._isActive = true;
			var _this3 = _this2;
			_this3._delay = 60 * i;
			var _this4 = _this3;
			if(_this4._isActive && _this4._pulse == null) {
				window.console.info("" + _this4.get__id() + " - this should happen only once! (" + _this4._pulse + " == null)");
				window.console.groupCollapsed("Spritesheet (" + _this4.get__id() + "):");
				window.console.warn("" + _this4.toString());
				window.console.groupEnd();
				_this4._pulse = window.requestAnimationFrame($bind(_this4,_this4.pulseHandler));
			}
			var xpos = 0;
			var ypos = 0;
			if(_this4.get__isCentered()) {
				xpos = -Math.round(_this4.get__cellWidth() / 2);
				ypos = -Math.round(_this4.get__cellHeight() / 2);
			}
			_this4._ctx.save();
			_this4._ctx.translate(_this4.get__x(),_this4.get__y());
			_this4._ctx.rotate(cc_util_MathUtil.radians(_this4.get__rotate()));
			_this4._ctx.clearRect(xpos * _this4.get__scale(),ypos * _this4.get__scale(),_this4.get__cellWidth() * _this4.get__scale(),_this4.get__cellHeight() * _this4.get__scale());
			var shiftX = _this4._currentSprite * _this4.get__cellWidth();
			var shiftY = 0;
			_this4._ctx.scale(_this4.get__scale(),_this4.get__scale());
			_this4._ctx.drawImage(_this4.get__img(),shiftX,shiftY,_this4.get__cellWidth(),_this4.get__cellHeight(),xpos,ypos,_this4.get__cellWidth(),_this4.get__cellHeight());
			_this4._ctx.restore();
			if(_this4._isAnimation) {
				_this4._currentSprite++;
				if(_this4._currentSprite > _this4._totalFrame) {
					if(_this4._isLoop) {
						if(_this4.get__isDebug()) {
							haxe_Log.trace("" + _this4.get__id() + " - start loop",{ fileName : "Spritesheet.hx", lineNumber : 298, className : "cc.draw.Spritesheet", methodName : "draw"});
						}
						_this4._currentSprite = _this4.get__index();
					} else {
						if(_this4.get__isDebug()) {
							haxe_Log.trace("" + _this4.get__id() + " - stop animation",{ fileName : "Spritesheet.hx", lineNumber : 302, className : "cc.draw.Spritesheet", methodName : "draw"});
						}
						_this4._isAnimation = false;
						_this4._currentSprite = _this4._totalFrame - 1;
						_this4.draw();
					}
				}
			}
		}
		var _scale = 4;
		var spritesheet1 = new cc_draw_Spritesheet(this.ctx,this._img);
		var _this5 = spritesheet1;
		_this5.set__isDebug(this.isDebug);
		var _this6 = _this5;
		_this6.set__fps(5);
		var _this7 = _this6;
		_this7.set__cellWidth(100);
		_this7.set__cellHeight(100);
		_this7._totalFrame = Math.round(_this7.get__width() / _this7.get__cellWidth());
		var _this8 = _this7;
		_this8.set__scale(_scale);
		var _this9 = _this8;
		_this9.set__x(Global.w - 100 * _scale);
		_this9.set__y(0);
		var _this10 = _this9;
		_this10._isAnimation = true;
		_this10._isActive = true;
		var _this11 = _this10;
		if(_this11._isActive && _this11._pulse == null) {
			window.console.info("" + _this11.get__id() + " - this should happen only once! (" + _this11._pulse + " == null)");
			window.console.groupCollapsed("Spritesheet (" + _this11.get__id() + "):");
			window.console.warn("" + _this11.toString());
			window.console.groupEnd();
			_this11._pulse = window.requestAnimationFrame($bind(_this11,_this11.pulseHandler));
		}
		var xpos1 = 0;
		var ypos1 = 0;
		if(_this11.get__isCentered()) {
			xpos1 = -Math.round(_this11.get__cellWidth() / 2);
			ypos1 = -Math.round(_this11.get__cellHeight() / 2);
		}
		_this11._ctx.save();
		_this11._ctx.translate(_this11.get__x(),_this11.get__y());
		_this11._ctx.rotate(cc_util_MathUtil.radians(_this11.get__rotate()));
		_this11._ctx.clearRect(xpos1 * _this11.get__scale(),ypos1 * _this11.get__scale(),_this11.get__cellWidth() * _this11.get__scale(),_this11.get__cellHeight() * _this11.get__scale());
		var shiftX1 = _this11._currentSprite * _this11.get__cellWidth();
		var shiftY1 = 0;
		_this11._ctx.scale(_this11.get__scale(),_this11.get__scale());
		_this11._ctx.drawImage(_this11.get__img(),shiftX1,shiftY1,_this11.get__cellWidth(),_this11.get__cellHeight(),xpos1,ypos1,_this11.get__cellWidth(),_this11.get__cellHeight());
		_this11._ctx.restore();
		if(_this11._isAnimation) {
			_this11._currentSprite++;
			if(_this11._currentSprite > _this11._totalFrame) {
				if(_this11._isLoop) {
					if(_this11.get__isDebug()) {
						haxe_Log.trace("" + _this11.get__id() + " - start loop",{ fileName : "Spritesheet.hx", lineNumber : 298, className : "cc.draw.Spritesheet", methodName : "draw"});
					}
					_this11._currentSprite = _this11.get__index();
				} else {
					if(_this11.get__isDebug()) {
						haxe_Log.trace("" + _this11.get__id() + " - stop animation",{ fileName : "Spritesheet.hx", lineNumber : 302, className : "cc.draw.Spritesheet", methodName : "draw"});
					}
					_this11._isAnimation = false;
					_this11._currentSprite = _this11._totalFrame - 1;
					_this11.draw();
				}
			}
		}
		var spritesheet2 = new cc_draw_Spritesheet(this.ctx,this._img);
		var _this12 = spritesheet2;
		_this12.set__isDebug(this.isDebug);
		var _this13 = _this12;
		_this13.set__fps(15);
		var _this14 = _this13;
		_this14.set__cellWidth(100);
		_this14.set__cellHeight(100);
		_this14._totalFrame = Math.round(_this14.get__width() / _this14.get__cellWidth());
		var _this15 = _this14;
		_this15.set__scale(_scale);
		var _this16 = _this15;
		var y = Global.h - 100 * _scale;
		_this16.set__x(0);
		_this16.set__y(y);
		var _this17 = _this16;
		_this17._isAnimation = true;
		_this17._isActive = true;
		var _this18 = _this17;
		if(_this18._isActive && _this18._pulse == null) {
			window.console.info("" + _this18.get__id() + " - this should happen only once! (" + _this18._pulse + " == null)");
			window.console.groupCollapsed("Spritesheet (" + _this18.get__id() + "):");
			window.console.warn("" + _this18.toString());
			window.console.groupEnd();
			_this18._pulse = window.requestAnimationFrame($bind(_this18,_this18.pulseHandler));
		}
		var xpos2 = 0;
		var ypos2 = 0;
		if(_this18.get__isCentered()) {
			xpos2 = -Math.round(_this18.get__cellWidth() / 2);
			ypos2 = -Math.round(_this18.get__cellHeight() / 2);
		}
		_this18._ctx.save();
		_this18._ctx.translate(_this18.get__x(),_this18.get__y());
		_this18._ctx.rotate(cc_util_MathUtil.radians(_this18.get__rotate()));
		_this18._ctx.clearRect(xpos2 * _this18.get__scale(),ypos2 * _this18.get__scale(),_this18.get__cellWidth() * _this18.get__scale(),_this18.get__cellHeight() * _this18.get__scale());
		var shiftX2 = _this18._currentSprite * _this18.get__cellWidth();
		var shiftY2 = 0;
		_this18._ctx.scale(_this18.get__scale(),_this18.get__scale());
		_this18._ctx.drawImage(_this18.get__img(),shiftX2,shiftY2,_this18.get__cellWidth(),_this18.get__cellHeight(),xpos2,ypos2,_this18.get__cellWidth(),_this18.get__cellHeight());
		_this18._ctx.restore();
		if(_this18._isAnimation) {
			_this18._currentSprite++;
			if(_this18._currentSprite > _this18._totalFrame) {
				if(_this18._isLoop) {
					if(_this18.get__isDebug()) {
						haxe_Log.trace("" + _this18.get__id() + " - start loop",{ fileName : "Spritesheet.hx", lineNumber : 298, className : "cc.draw.Spritesheet", methodName : "draw"});
					}
					_this18._currentSprite = _this18.get__index();
				} else {
					if(_this18.get__isDebug()) {
						haxe_Log.trace("" + _this18.get__id() + " - stop animation",{ fileName : "Spritesheet.hx", lineNumber : 302, className : "cc.draw.Spritesheet", methodName : "draw"});
					}
					_this18._isAnimation = false;
					_this18._currentSprite = _this18._totalFrame - 1;
					_this18.draw();
				}
			}
		}
		var spritesheet3 = new cc_draw_Spritesheet(this.ctx,this._img);
		var _this19 = spritesheet3;
		_this19.set__isDebug(this.isDebug);
		var _this20 = _this19;
		_this20.set__fps(30);
		var _this21 = _this20;
		_this21.set__cellWidth(100);
		_this21.set__cellHeight(100);
		_this21._totalFrame = Math.round(_this21.get__width() / _this21.get__cellWidth());
		var _this22 = _this21;
		_this22.set__scale(_scale);
		var _this23 = _this22;
		_this23.set__isCentered(true);
		var _this24 = _this23;
		var x = this.get_w3();
		var y1 = this.get_h3();
		_this24.set__x(x);
		_this24.set__y(y1);
		var _this25 = _this24;
		_this25._isAnimation = true;
		_this25._isActive = true;
		var _this26 = _this25;
		if(_this26._isActive && _this26._pulse == null) {
			window.console.info("" + _this26.get__id() + " - this should happen only once! (" + _this26._pulse + " == null)");
			window.console.groupCollapsed("Spritesheet (" + _this26.get__id() + "):");
			window.console.warn("" + _this26.toString());
			window.console.groupEnd();
			_this26._pulse = window.requestAnimationFrame($bind(_this26,_this26.pulseHandler));
		}
		var xpos3 = 0;
		var ypos3 = 0;
		if(_this26.get__isCentered()) {
			xpos3 = -Math.round(_this26.get__cellWidth() / 2);
			ypos3 = -Math.round(_this26.get__cellHeight() / 2);
		}
		_this26._ctx.save();
		_this26._ctx.translate(_this26.get__x(),_this26.get__y());
		_this26._ctx.rotate(cc_util_MathUtil.radians(_this26.get__rotate()));
		_this26._ctx.clearRect(xpos3 * _this26.get__scale(),ypos3 * _this26.get__scale(),_this26.get__cellWidth() * _this26.get__scale(),_this26.get__cellHeight() * _this26.get__scale());
		var shiftX3 = _this26._currentSprite * _this26.get__cellWidth();
		var shiftY3 = 0;
		_this26._ctx.scale(_this26.get__scale(),_this26.get__scale());
		_this26._ctx.drawImage(_this26.get__img(),shiftX3,shiftY3,_this26.get__cellWidth(),_this26.get__cellHeight(),xpos3,ypos3,_this26.get__cellWidth(),_this26.get__cellHeight());
		_this26._ctx.restore();
		if(_this26._isAnimation) {
			_this26._currentSprite++;
			if(_this26._currentSprite > _this26._totalFrame) {
				if(_this26._isLoop) {
					if(_this26.get__isDebug()) {
						haxe_Log.trace("" + _this26.get__id() + " - start loop",{ fileName : "Spritesheet.hx", lineNumber : 298, className : "cc.draw.Spritesheet", methodName : "draw"});
					}
					_this26._currentSprite = _this26.get__index();
				} else {
					if(_this26.get__isDebug()) {
						haxe_Log.trace("" + _this26.get__id() + " - stop animation",{ fileName : "Spritesheet.hx", lineNumber : 302, className : "cc.draw.Spritesheet", methodName : "draw"});
					}
					_this26._isAnimation = false;
					_this26._currentSprite = _this26._totalFrame - 1;
					_this26.draw();
				}
			}
		}
		var spritesheet4 = new cc_draw_Spritesheet(this.ctx,this._img);
		var _this27 = spritesheet4;
		_this27.set__isDebug(this.isDebug);
		var _this28 = _this27;
		_this28.set__fps(60);
		var _this29 = _this28;
		_this29.set__cellWidth(100);
		_this29.set__cellHeight(100);
		_this29._totalFrame = Math.round(_this29.get__width() / _this29.get__cellWidth());
		var _this30 = _this29;
		_this30.set__scale(_scale);
		var _this31 = _this30;
		_this31.set__isCentered(true);
		var _this32 = _this31;
		var x1 = this.get_w3() * 2;
		var y2 = this.get_h3() * 2;
		_this32.set__x(x1);
		_this32.set__y(y2);
		var _this33 = _this32;
		_this33._isAnimation = true;
		_this33._isActive = true;
		var _this34 = _this33;
		if(_this34._isActive && _this34._pulse == null) {
			window.console.info("" + _this34.get__id() + " - this should happen only once! (" + _this34._pulse + " == null)");
			window.console.groupCollapsed("Spritesheet (" + _this34.get__id() + "):");
			window.console.warn("" + _this34.toString());
			window.console.groupEnd();
			_this34._pulse = window.requestAnimationFrame($bind(_this34,_this34.pulseHandler));
		}
		var xpos4 = 0;
		var ypos4 = 0;
		if(_this34.get__isCentered()) {
			xpos4 = -Math.round(_this34.get__cellWidth() / 2);
			ypos4 = -Math.round(_this34.get__cellHeight() / 2);
		}
		_this34._ctx.save();
		_this34._ctx.translate(_this34.get__x(),_this34.get__y());
		_this34._ctx.rotate(cc_util_MathUtil.radians(_this34.get__rotate()));
		_this34._ctx.clearRect(xpos4 * _this34.get__scale(),ypos4 * _this34.get__scale(),_this34.get__cellWidth() * _this34.get__scale(),_this34.get__cellHeight() * _this34.get__scale());
		var shiftX4 = _this34._currentSprite * _this34.get__cellWidth();
		var shiftY4 = 0;
		_this34._ctx.scale(_this34.get__scale(),_this34.get__scale());
		_this34._ctx.drawImage(_this34.get__img(),shiftX4,shiftY4,_this34.get__cellWidth(),_this34.get__cellHeight(),xpos4,ypos4,_this34.get__cellWidth(),_this34.get__cellHeight());
		_this34._ctx.restore();
		if(_this34._isAnimation) {
			_this34._currentSprite++;
			if(_this34._currentSprite > _this34._totalFrame) {
				if(_this34._isLoop) {
					if(_this34.get__isDebug()) {
						haxe_Log.trace("" + _this34.get__id() + " - start loop",{ fileName : "Spritesheet.hx", lineNumber : 298, className : "cc.draw.Spritesheet", methodName : "draw"});
					}
					_this34._currentSprite = _this34.get__index();
				} else {
					if(_this34.get__isDebug()) {
						haxe_Log.trace("" + _this34.get__id() + " - stop animation",{ fileName : "Spritesheet.hx", lineNumber : 302, className : "cc.draw.Spritesheet", methodName : "draw"});
					}
					_this34._isAnimation = false;
					_this34._currentSprite = _this34._totalFrame - 1;
					_this34.draw();
				}
			}
		}
		cc_CanvasTools.strokeWeight(this.ctx,2);
		cc_CanvasTools.strokeColourRGB(this.ctx,this._color2);
		cc_CanvasTools.centreStrokeRect(this.ctx,this.get_w3() * 2,this.get_h3() * 2,100 * _scale,100 * _scale);
		cc_CanvasTools.strokeColourRGB(this.ctx,this._color3);
		cc_CanvasTools.centreStrokeRect(this.ctx,this.get_w3(),this.get_h3(),100 * _scale,100 * _scale);
	}
	,onFontComplete: function(e) {
		haxe_Log.trace("onFontComplete: \"" + e + "\"",{ fileName : "CC055.hx", lineNumber : 160, className : "art.CC055", methodName : "onFontComplete"});
		this.isFontLoaded = true;
		this.drawShape();
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,this._color0);
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC055.hx", lineNumber : 193, className : "art.CC055", methodName : "setup"});
		var colorArray = cc_util_ColorUtil.niceColor100SortedString[cc_util_MathUtil.randomInt(cc_util_ColorUtil.niceColor100SortedString.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._color0 = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._color1 = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._color2 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		this._color3 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
		var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		this._color4 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
		this.isDebug = true;
		this.grid.setCellSize(this._cellsize);
		this.grid.setIsCenterPoint(true);
	}
	,draw: function() {
		haxe_Log.trace("draw: " + this.toString(),{ fileName : "CC055.hx", lineNumber : 216, className : "art.CC055", methodName : "draw"});
		this.drawShape();
		this.stop();
	}
	,__class__: art_CC055
});
var art_CC055a = function(ctx) {
	this.src = "assets/img/spritesheet/web_heart_animation_edge.png";
	this.isFirstRun = false;
	this.isSpritesheet = false;
	this.isZip = false;
	this.isFont = false;
	this._color4 = null;
	this._color3 = null;
	this._color2 = null;
	this._color1 = null;
	this._color0 = null;
	this._cellsize = 100;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	this.set_description("Loading spritesheet, animation spritesheet");
	this.set_type(["Animation","Image"]);
	var option = new SketchOption();
	option.set_width(1080);
	option.set_autostart(true);
	option.set_padding(10);
	option.set_scale(true);
	ctx = Sketch.create("creative_code_mck",option);
	this.init();
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC055a"] = art_CC055a;
art_CC055a.__name__ = ["art","CC055a"];
art_CC055a.__interfaces__ = [art_ICCBase];
art_CC055a.__super__ = art_CCBase;
art_CC055a.prototype = $extend(art_CCBase.prototype,{
	init: function() {
		cc_draw_Spritesheet.load(this.src,$bind(this,this.onSpritesheetHandler));
		cc_draw_Text.embedGoogleFont("Berkshire+Swash",$bind(this,this.onFontHandler));
	}
	,onZipHandler: function(value) {
		haxe_Log.trace(value,{ fileName : "CC055a.hx", lineNumber : 66, className : "art.CC055a", methodName : "onZipHandler"});
		this.isZip = true;
		this.drawShape();
	}
	,onSpritesheetHandler: function(img) {
		this._img = img;
		this.isSpritesheet = true;
		this.drawShape();
	}
	,onFontHandler: function(e) {
		haxe_Log.trace("onFontHandler: \"" + e + "\"",{ fileName : "CC055a.hx", lineNumber : 78, className : "art.CC055a", methodName : "onFontHandler"});
		this.isFont = true;
		this.drawShape();
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		if(this.isDebug) {
			cc_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		if(this.isSpritesheet) {
			var _g1 = 0;
			var _g = this.grid.array.length;
			while(_g1 < _g) {
				var i = _g1++;
				var point = this.grid.array[i];
				var spritesheet = new cc_draw_Spritesheet(this.ctx,this._img);
				var _this = spritesheet;
				_this.set__fps(30);
				var _this1 = _this;
				_this1.set__isDebug(false);
				var _this2 = _this1;
				_this2.set__cellWidth(100);
				_this2.set__cellHeight(100);
				_this2._totalFrame = Math.round(_this2.get__width() / _this2.get__cellWidth());
				var _this3 = _this2;
				var y = point.y;
				_this3.set__x(point.x);
				_this3.set__y(y);
				var _this4 = _this3;
				_this4._isAnimation = true;
				_this4._isActive = true;
				var _this5 = _this4;
				_this5._delay = 5 * i;
				var _this6 = _this5;
				_this6.set__isCentered(true);
				var _this7 = _this6;
				if(_this7._isActive && _this7._pulse == null) {
					window.console.info("" + _this7.get__id() + " - this should happen only once! (" + _this7._pulse + " == null)");
					window.console.groupCollapsed("Spritesheet (" + _this7.get__id() + "):");
					window.console.warn("" + _this7.toString());
					window.console.groupEnd();
					_this7._pulse = window.requestAnimationFrame($bind(_this7,_this7.pulseHandler));
				}
				var xpos = 0;
				var ypos = 0;
				if(_this7.get__isCentered()) {
					xpos = -Math.round(_this7.get__cellWidth() / 2);
					ypos = -Math.round(_this7.get__cellHeight() / 2);
				}
				_this7._ctx.save();
				_this7._ctx.translate(_this7.get__x(),_this7.get__y());
				_this7._ctx.rotate(cc_util_MathUtil.radians(_this7.get__rotate()));
				_this7._ctx.clearRect(xpos * _this7.get__scale(),ypos * _this7.get__scale(),_this7.get__cellWidth() * _this7.get__scale(),_this7.get__cellHeight() * _this7.get__scale());
				var shiftX = _this7._currentSprite * _this7.get__cellWidth();
				var shiftY = 0;
				_this7._ctx.scale(_this7.get__scale(),_this7.get__scale());
				_this7._ctx.drawImage(_this7.get__img(),shiftX,shiftY,_this7.get__cellWidth(),_this7.get__cellHeight(),xpos,ypos,_this7.get__cellWidth(),_this7.get__cellHeight());
				_this7._ctx.restore();
				if(_this7._isAnimation) {
					_this7._currentSprite++;
					if(_this7._currentSprite > _this7._totalFrame) {
						if(_this7._isLoop) {
							if(_this7.get__isDebug()) {
								haxe_Log.trace("" + _this7.get__id() + " - start loop",{ fileName : "Spritesheet.hx", lineNumber : 298, className : "cc.draw.Spritesheet", methodName : "draw"});
							}
							_this7._currentSprite = _this7.get__index();
						} else {
							if(_this7.get__isDebug()) {
								haxe_Log.trace("" + _this7.get__id() + " - stop animation",{ fileName : "Spritesheet.hx", lineNumber : 302, className : "cc.draw.Spritesheet", methodName : "draw"});
							}
							_this7._isAnimation = false;
							_this7._currentSprite = _this7._totalFrame - 1;
							_this7.draw();
						}
					}
				}
			}
		}
		if(this.isSpritesheet && this.isFont && this.isZip && !this.isFirstRun) {
			this.isFirstRun = true;
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC055a.hx", lineNumber : 138, className : "art.CC055a", methodName : "setup"});
		var colorArray = cc_util_ColorUtil.niceColor100SortedString[cc_util_MathUtil.randomInt(cc_util_ColorUtil.niceColor100SortedString.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._color0 = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._color1 = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._color2 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		this._color3 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
		var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		this._color4 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
		this.grid.setCellSize(this._cellsize);
		this.grid.setIsCenterPoint(true);
	}
	,draw: function() {
	}
	,__class__: art_CC055a
});
var art_CC056 = function(ctx) {
	this.isFontLoaded = false;
	this._color4 = null;
	this._color3 = null;
	this._color2 = null;
	this._color1 = null;
	this._color0 = null;
	this._cellsize = 150;
	this._radius = 150;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	this.set_description("");
	this.set_type(["Animation","Image"]);
	cc_draw_Text.embedGoogleFont("Oswald:200,300,400,500,600,700",$bind(this,this.onEmbedHandler));
	var option = new SketchOption();
	option.set_width(1080);
	option.set_autostart(true);
	option.set_padding(10);
	option.set_scale(true);
	ctx = Sketch.create("creative_code_mck",option);
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC056"] = art_CC056;
art_CC056.__name__ = ["art","CC056"];
art_CC056.__interfaces__ = [art_ICCBase];
art_CC056.__super__ = art_CCBase;
art_CC056.prototype = $extend(art_CCBase.prototype,{
	onEmbedHandler: function(e) {
		haxe_Log.trace("onEmbedHandler: \"" + e + "\"",{ fileName : "CC056.hx", lineNumber : 41, className : "art.CC056", methodName : "onEmbedHandler"});
		this.isFontLoaded = true;
		this.drawShape();
	}
	,createQuickSettings: function() {
		this.panel1 = QuickSettings.create(10,10,"Quote generator").setGlobalChangeHandler($bind(this,this.drawShape)).addHTML("Reason","Sometimes I need a quick quote, to post on Instagram").addTextArea("Quote","text",function(value) {
			haxe_Log.trace(value,{ fileName : "CC056.hx", lineNumber : 51, className : "art.CC056", methodName : "createQuickSettings"});
		}).addBoolean("All Caps",false,function(value1) {
			haxe_Log.trace(value1,{ fileName : "CC056.hx", lineNumber : 52, className : "art.CC056", methodName : "createQuickSettings"});
		}).saveInLocalStorage("store-data-" + this.toString());
	}
	,createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "poly", x : point.x, y : point.y, radius : this._radius};
		this.onAnimateHandler(shape);
		return shape;
	}
	,onAnimateHandler: function(circle) {
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		var tmp = this.isDebug;
		cc_CanvasTools.strokeWeight(this.ctx,1);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.ctx.save();
			var sh = this.shapeArray[i];
			this.ctx.translate(sh.x,sh.y);
			this.ctx.rotate(cc_util_MathUtil.radians(30.));
			cc_CanvasTools.outlinedPolygon(this.ctx,0,0,6,this._cellsize / 2,cc_util_ColorUtil.getColourObj(cc_util_ColorUtil.WHITE),cc_util_ColorUtil.getColourObj(cc_util_ColorUtil.BLACK));
			this.ctx.restore();
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC056.hx", lineNumber : 92, className : "art.CC056", methodName : "setup"});
		var colorArray = cc_util_ColorUtil.niceColor100SortedString[cc_util_MathUtil.randomInt(cc_util_ColorUtil.niceColor100SortedString.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._color0 = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._color1 = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._color2 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		this._color3 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
		var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		this._color4 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
		this.isDebug = true;
		this.grid.setCellSize(this._cellsize);
		this.grid.setIsCenterPoint(true);
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i,this.grid.array[i]));
		}
	}
	,draw: function() {
		haxe_Log.trace("draw: " + this.toString(),{ fileName : "CC056.hx", lineNumber : 115, className : "art.CC056", methodName : "draw"});
		this.drawShape();
		this.stop();
	}
	,__class__: art_CC056
});
var art_CC057 = function(ctx) {
	this.isFontLoaded = false;
	this._color4 = null;
	this._color3 = null;
	this._color2 = null;
	this._color1 = null;
	this._color0 = null;
	this._cellsize = 150;
	this._radius = 150;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	this.set_description("");
	this.set_type(["Animation","Image"]);
	var option = new SketchOption();
	option.set_width(1080);
	option.set_autostart(true);
	option.set_padding(10);
	option.set_scale(true);
	ctx = Sketch.create("creative_code_mck",option);
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC057"] = art_CC057;
art_CC057.__name__ = ["art","CC057"];
art_CC057.__interfaces__ = [art_ICCBase];
art_CC057.__super__ = art_CCBase;
art_CC057.prototype = $extend(art_CCBase.prototype,{
	drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		cc_CanvasTools.fillPolygon(this.ctx,this.get_w2(),this.get_h2(),6,this.get_w3());
		this.ctx.clip();
		var max = 50;
		var _g1 = 0;
		var _g = max;
		while(_g1 < _g) {
			var i = _g1++;
			var offset = 10;
			this.ctx.save();
			this.ctx.translate(this.get_w2(),this.get_h2());
			this.ctx.rotate(cc_util_MathUtil.radians(30.));
			cc_CanvasTools.strokeColourRGB(this.ctx,cc_util_ColorUtil.BLACK);
			cc_CanvasTools.strokePolygon(this.ctx,0,0,6,offset * i);
			this.ctx.restore();
		}
	}
	,draw: function() {
		haxe_Log.trace("draw: " + this.toString(),{ fileName : "CC057.hx", lineNumber : 56, className : "art.CC057", methodName : "draw"});
		this.drawShape();
		this.stop();
	}
	,__class__: art_CC057
});
var art_CC058 = function(ctx) {
	this.isFontLoaded = false;
	this._color4 = null;
	this._color3 = null;
	this._color2 = null;
	this._color1 = null;
	this._color0 = null;
	this._cellsize = 150;
	this._radius = 150;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	this.set_description("");
	this.set_type(["Animation","Image"]);
	var option = new SketchOption();
	option.set_width(1080);
	option.set_autostart(true);
	option.set_padding(10);
	option.set_scale(true);
	ctx = Sketch.create("creative_code_mck",option);
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC058"] = art_CC058;
art_CC058.__name__ = ["art","CC058"];
art_CC058.__interfaces__ = [art_ICCBase];
art_CC058.__super__ = art_CCBase;
art_CC058.prototype = $extend(art_CCBase.prototype,{
	drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		cc_CanvasTools.fillPolygon(this.ctx,this.get_w2(),this.get_h2(),6,this.get_w3());
		this.ctx.clip();
		var max = 50;
		var _g1 = 0;
		var _g = max;
		while(_g1 < _g) {
			var i = _g1++;
			var offset = 10;
			var startDegree = 30.;
			this.ctx.save();
			this.ctx.translate(this.get_w2(),this.get_h2());
			this.ctx.rotate(cc_util_MathUtil.radians(startDegree + i));
			cc_CanvasTools.strokeColourRGB(this.ctx,cc_util_ColorUtil.BLACK);
			cc_CanvasTools.strokePolygon(this.ctx,0,0,6,offset * i);
			this.ctx.restore();
		}
	}
	,draw: function() {
		haxe_Log.trace("draw: " + this.toString(),{ fileName : "CC058.hx", lineNumber : 57, className : "art.CC058", methodName : "draw"});
		this.drawShape();
		this.stop();
	}
	,__class__: art_CC058
});
var art_CC059 = function(ctx) {
	this.max = 50;
	this.shapeArray = [];
	this.set_description("");
	this.set_type(["Animation","Image"]);
	var option = new SketchOption();
	option.set_width(1080);
	option.set_autostart(true);
	option.set_padding(10);
	option.set_scale(true);
	ctx = Sketch.create("creative_code_mck",option);
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC059"] = art_CC059;
art_CC059.__name__ = ["art","CC059"];
art_CC059.__interfaces__ = [art_ICCBase];
art_CC059.__super__ = art_CCBase;
art_CC059.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var offset = 10;
		var shape = { _id : "" + i, _type : "poly", x : this.get_w2(), y : this.get_h2(), size : i * offset, degree : 30.};
		this.onAnimateHandler(shape,i,3);
		return shape;
	}
	,onAnimateHandler: function(sh,id,count) {
		var Go = new cc_lets_Go(sh,1);
		Go._isFrom = false;
		var _this = Go;
		_this._delay = _this.getDuration(id * 0.1);
		var _this1 = _this;
		var value = 30. * count;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"degree")) {
			objValue = Reflect.getProperty(_this1._target,"degree");
		}
		var _range = { key : "degree", from : _this1._isFrom ? value : objValue, to : !_this1._isFrom ? value : objValue};
		_this1._props.set("degree",_range);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		_this2._easing = cc_lets_easing_Sine.get_easeInOut();
		var _this3 = _this2;
		_this3._options.onComplete = $bind(this,this.onAnimateHandler);
		_this3._options.onCompleteParams = [sh,id,count];
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			this.ctx.save();
			this.ctx.translate(sh.x,sh.y);
			this.ctx.rotate(cc_util_MathUtil.radians(sh.degree));
			cc_CanvasTools.strokeColourRGB(this.ctx,cc_util_ColorUtil.BLACK);
			cc_CanvasTools.strokePolygon(this.ctx,0,0,6,sh.size);
			this.ctx.restore();
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC059.hx", lineNumber : 67, className : "art.CC059", methodName : "setup"});
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.max;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC059
});
var art_CC059a = function(ctx) {
	this.max = 50;
	this.shapeArray = [];
	this.set_description("Polygon animation back and forth");
	this.set_type(["Animation","Image"]);
	var option = new SketchOption();
	option.set_width(1080);
	option.set_autostart(true);
	option.set_padding(10);
	option.set_scale(true);
	ctx = Sketch.create("creative_code_mck",option);
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC059a"] = art_CC059a;
art_CC059a.__name__ = ["art","CC059a"];
art_CC059a.__interfaces__ = [art_ICCBase];
art_CC059a.__super__ = art_CCBase;
art_CC059a.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var offset = 10;
		var shape = { _id : "" + i, _type : "poly", x : this.get_w2(), y : this.get_h2(), size : i * offset, degree : 30.};
		this.onAnimateHandler(shape,i,3);
		return shape;
	}
	,onAnimateHandler: function(sh,id,count) {
		var Go = new cc_lets_Go(sh,1);
		Go._isFrom = false;
		var _this = Go;
		_this._delay = _this.getDuration(id * 0.1);
		var _this1 = _this;
		var value = 30. * count;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"degree")) {
			objValue = Reflect.getProperty(_this1._target,"degree");
		}
		var _range = { key : "degree", from : _this1._isFrom ? value : objValue, to : !_this1._isFrom ? value : objValue};
		_this1._props.set("degree",_range);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		_this2._isYoyo = true;
		var _this3 = _this2;
		_this3._easing = cc_lets_easing_Sine.get_easeInOut();
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			this.ctx.save();
			this.ctx.translate(sh.x,sh.y);
			this.ctx.rotate(cc_util_MathUtil.radians(sh.degree));
			cc_CanvasTools.strokeColourRGB(this.ctx,cc_util_ColorUtil.BLACK);
			cc_CanvasTools.strokePolygon(this.ctx,0,0,6,sh.size);
			this.ctx.restore();
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC059a.hx", lineNumber : 68, className : "art.CC059a", methodName : "setup"});
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.max;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC059a
});
var art_CC059b = function(ctx) {
	this.max = 50;
	this.shapeArray = [];
	this.set_description("Polygon animation back and forth");
	this.set_type(["Animation","Image"]);
	var option = new SketchOption();
	option.set_width(1080);
	option.set_autostart(true);
	option.set_padding(10);
	option.set_scale(true);
	ctx = Sketch.create("creative_code_mck",option);
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC059b"] = art_CC059b;
art_CC059b.__name__ = ["art","CC059b"];
art_CC059b.__interfaces__ = [art_ICCBase];
art_CC059b.__super__ = art_CCBase;
art_CC059b.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var offset = 10;
		var shape = { _id : "" + i, _type : "poly", x : this.get_w2(), y : this.get_h2(), size : i * offset, degree : 30.};
		this.onAnimateHandler(shape,i,3);
		return shape;
	}
	,onAnimateHandler: function(sh,id,count) {
		var Go = new cc_lets_Go(sh,2);
		Go._isFrom = false;
		var _this = Go;
		_this._delay = _this.getDuration(id * 0.1);
		var _this1 = _this;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"degree")) {
			objValue = Reflect.getProperty(_this1._target,"degree");
		}
		var _range = { key : "degree", from : _this1._isFrom ? 180. : objValue, to : !_this1._isFrom ? 180. : objValue};
		_this1._props.set("degree",_range);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		_this2._easing = cc_lets_easing_Sine.get_easeInOut();
		var _this3 = _this2;
		_this3._options.onComplete = $bind(this,this.onAnimateHandler2);
		_this3._options.onCompleteParams = [sh,id,count++];
	}
	,onAnimateHandler2: function(sh,id,count) {
		var Go = new cc_lets_Go(sh,3);
		Go._isFrom = false;
		var _this = Go;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"degree")) {
			objValue = Reflect.getProperty(_this._target,"degree");
		}
		var _range = { key : "degree", from : _this._isFrom ? 90. : objValue, to : !_this._isFrom ? 90. : objValue};
		_this._props.set("degree",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		_this1._easing = cc_lets_easing_Sine.get_easeInOut();
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			this.ctx.save();
			this.ctx.translate(sh.x,sh.y);
			this.ctx.rotate(cc_util_MathUtil.radians(sh.degree));
			cc_CanvasTools.strokeColourRGB(this.ctx,cc_util_ColorUtil.BLACK);
			cc_CanvasTools.strokePolygon(this.ctx,0,0,6,sh.size);
			this.ctx.restore();
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC059b.hx", lineNumber : 76, className : "art.CC059b", methodName : "setup"});
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.max;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC059b
});
var art_CC060 = function(ctx) {
	this.imgSize = 100;
	this.src = "assets/img/cursor/hand_fill.png";
	this.animationInSeconds = 1.5;
	this.patternCounter = 0;
	this.isImageLoaded = false;
	this.isFontLoaded = false;
	this.isSvgLoaded = false;
	this.svgSize = 600;
	this.svg = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path fill=\"red\" stroke=\"black\" stroke-width=\"2\" d=\"M25 39.7l-.6-.5C11.5 28.7 8 25 8 19c0-5 4-9 9-9 4.1 0 6.4 2.3 8 4.1 1.6-1.8 3.9-4.1 8-4.1 5 0 9 4 9 9 0 6-3.5 9.7-16.4 20.2l-.6.5z\"/></svg>";
	var $int = Std.parseInt(StringTools.replace("#2D8E03","#","0x"));
	this._color6 = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
	var int1 = Std.parseInt(StringTools.replace("#8EC52D","#","0x"));
	this._color5 = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
	var int2 = Std.parseInt(StringTools.replace("#FFC506","#","0x"));
	this._color4 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
	var int3 = Std.parseInt(StringTools.replace("#FF8E5B","#","0x"));
	this._color3 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
	var int4 = Std.parseInt(StringTools.replace("#C52C03","#","0x"));
	this._color2 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
	var int5 = Std.parseInt(StringTools.replace("#FEF006","#","0x"));
	this._color1 = { r : int5 >> 16 & 255, g : int5 >> 8 & 255, b : int5 & 255};
	var int6 = Std.parseInt(StringTools.replace("#000000","#","0x"));
	this._color0 = { r : int6 >> 16 & 255, g : int6 >> 8 & 255, b : int6 & 255};
	this.set_description("Warning: like this post and you will be featured in the next animation!");
	this.set_type(["Animation","Image"]);
	var option = new SketchOption();
	option.set_width(1080);
	option.set_autostart(true);
	option.set_padding(10);
	option.set_scale(true);
	ctx = Sketch.create("creative_code_mck",option);
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC060"] = art_CC060;
art_CC060.__name__ = ["art","CC060"];
art_CC060.__interfaces__ = [art_ICCBase];
art_CC060.__super__ = art_CCBase;
art_CC060.prototype = $extend(art_CCBase.prototype,{
	onSvgHandler: function(image) {
		this.svgImage = image;
		this.isSvgLoaded = true;
		this.drawShape();
	}
	,onImageHandler: function(arr) {
		haxe_Log.trace("total images: " + arr.length,{ fileName : "CC060.hx", lineNumber : 62, className : "art.CC060", methodName : "onImageHandler"});
		this._img = arr[0].image;
		this.isImageLoaded = true;
		this.drawShape();
	}
	,onHeartYoyoHandler: function(sh) {
		var Go = new cc_lets_Go(sh,this.animationInSeconds);
		Go._isFrom = false;
		var _this = Go;
		var value = this.svgSize * .7;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"size")) {
			objValue = Reflect.getProperty(_this._target,"size");
		}
		var _range = { key : "size", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("size",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		_this1._isYoyo = true;
		var _this2 = _this1;
		_this2._easing = cc_lets_easing_Quart.get_easeInOut();
		var _this3 = _this2;
		_this3._options.onComplete = $bind(this,this.onHeartYoyoHandler);
		_this3._options.onCompleteParams = [sh];
	}
	,onShowCursorHandler: function(sh) {
		var Go = new cc_lets_Go(sh,this.animationInSeconds);
		Go._isFrom = false;
		var _this = Go;
		_this._delay = _this.getDuration(this.animationInSeconds * 3);
		var _this1 = _this;
		var value = this.get_w2();
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"x")) {
			objValue = Reflect.getProperty(_this1._target,"x");
		}
		var _range = { key : "x", from : _this1._isFrom ? value : objValue, to : !_this1._isFrom ? value : objValue};
		_this1._props.set("x",_range);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		var value1 = this.get_h2();
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this2._target,"y")) {
			objValue1 = Reflect.getProperty(_this2._target,"y");
		}
		var _range1 = { key : "y", from : _this2._isFrom ? value1 : objValue1, to : !_this2._isFrom ? value1 : objValue1};
		_this2._props.set("y",_range1);
		if(_this2._isFrom) {
			_this2.updateProperties(0);
		}
		var _this3 = _this2;
		_this3._easing = cc_lets_easing_Quart.get_easeInOut();
		var _this4 = _this3;
		_this4._options.onComplete = $bind(this,this.onHideCursorHandler);
		_this4._options.onCompleteParams = [this.cursorObj];
	}
	,onHideCursorHandler: function(sh) {
		var Go = new cc_lets_Go(sh,this.animationInSeconds);
		Go._isFrom = false;
		var _this = Go;
		_this._delay = _this.getDuration(.5);
		var _this1 = _this;
		var value = Global.w + this.imgSize;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"x")) {
			objValue = Reflect.getProperty(_this1._target,"x");
		}
		var _range = { key : "x", from : _this1._isFrom ? value : objValue, to : !_this1._isFrom ? value : objValue};
		_this1._props.set("x",_range);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		var value1 = Global.h + this.imgSize;
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this2._target,"y")) {
			objValue1 = Reflect.getProperty(_this2._target,"y");
		}
		var _range1 = { key : "y", from : _this2._isFrom ? value1 : objValue1, to : !_this2._isFrom ? value1 : objValue1};
		_this2._props.set("y",_range1);
		if(_this2._isFrom) {
			_this2.updateProperties(0);
		}
		var _this3 = _this2;
		_this3._easing = cc_lets_easing_Quart.get_easeInOut();
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.BLACK);
		if(!this.isFontLoaded && !this.isSvgLoaded) {
			return;
		}
		var size = 1080;
		var strokeW = 50;
		var _g1 = 0;
		var _g = size;
		while(_g1 < _g) {
			var i = _g1++;
			this.ctx.save();
			this.ctx.translate(strokeW * i - size + this.patternCounter,0);
			cc_CanvasTools.strokeWeight(this.ctx,strokeW);
			if(i % 2 == 0) {
				cc_CanvasTools.lineColourRGB(this.ctx,this._color1);
			} else {
				cc_CanvasTools.lineColourRGB(this.ctx,this._color0);
			}
			this.ctx.lineCap = "square";
			cc_CanvasTools.line(this.ctx,size,size,0,0);
			this.ctx.restore();
		}
		var xpos = this.get_w2();
		var ypos = this.get_h4() - 70;
		var padding = 50;
		cc_CanvasTools.fillColourRGB(this.ctx,this._color0);
		this.ctx.fillRect(padding,padding,Global.w - 2 * padding,250);
		var Text = new cc_draw_Text(this.ctx,"warning".toUpperCase());
		var _this = Text;
		_this.set__x(xpos);
		_this.set__y(ypos);
		var _this1 = _this;
		_this1._color = this._color1;
		_this1.set__alpha(cc_util_MathUtil.clamp(1,0,1));
		var _this2 = _this1;
		_this2._textAlign = "center";
		var _this3 = _this2;
		_this3._textBaseline = "middle";
		var _this4 = _this3;
		_this4._font = StringTools.replace(StringTools.replace("Gunplay",";",""),"+"," ");
		var _this5 = _this4;
		_this5.set__size(200);
		if(_this5.get__leading() == null) {
			_this5.set__leading(200);
		}
		var _this6 = _this5;
		var isLines = false;
		_this6._ctx.save();
		if(_this6._text.indexOf("\n") != -1) {
			_this6._lineArray = _this6._text.split("\n");
			isLines = true;
		}
		var previousColor = _this6._ctx.fillStyle;
		if(_this6._color != null) {
			cc_CanvasTools.fillColourRGB(_this6._ctx,_this6._color,_this6.get__alpha());
		} else {
			var _this7 = _this6._ctx;
			var $int = Std.parseInt(StringTools.replace(previousColor,"#","0x"));
			var tmp = _this6.get__alpha();
			cc_CanvasTools.fillColourRGB(_this7,{ r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255},tmp);
		}
		var tmp1 = "" + _this6.get__size() + "px ";
		_this6._ctx.font = tmp1 + _this6._font;
		_this6._ctx.textAlign = _this6._textAlign;
		_this6._ctx.textBaseline = _this6._textBaseline;
		_this6._ctx.translate(_this6.get__x(),_this6.get__y());
		_this6._ctx.rotate(cc_util_MathUtil.radians(_this6.get__rotate()));
		if(!isLines) {
			_this6._ctx.fillText(_this6._text,0,0);
		} else {
			var _g11 = 0;
			var _g2 = _this6._lineArray.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				var line = _this6._lineArray[i1];
				_this6._ctx.fillText(line,0,i1 * _this6.get__leading());
			}
		}
		_this6._ctx.restore();
		_this6._ctx.fillStyle = previousColor;
		var text = _this6;
		var xpos1 = this.get_w2();
		var ypos1 = this.get_h4() * 3 - 10;
		var bHeight = 300;
		cc_CanvasTools.fillColourRGB(this.ctx,this._color0);
		this.ctx.fillRect(padding,Global.h - padding - bHeight,Global.w - 2 * padding,bHeight);
		var Text1 = new cc_draw_Text(this.ctx,"this post and you\nwill be featured in\nthe next animation!".toUpperCase());
		var _this8 = Text1;
		_this8.set__x(xpos1);
		_this8.set__y(ypos1);
		var _this9 = _this8;
		_this9._color = this._color1;
		_this9.set__alpha(cc_util_MathUtil.clamp(1,0,1));
		var _this10 = _this9;
		_this10._textAlign = "center";
		var _this11 = _this10;
		_this11._textBaseline = "middle";
		var _this12 = _this11;
		_this12._font = StringTools.replace(StringTools.replace("Gunplay",";",""),"+"," ");
		var _this13 = _this12;
		_this13.set__size(90);
		if(_this13.get__leading() == null) {
			_this13.set__leading(90);
		}
		var _this14 = _this13;
		var isLines1 = false;
		_this14._ctx.save();
		if(_this14._text.indexOf("\n") != -1) {
			_this14._lineArray = _this14._text.split("\n");
			isLines1 = true;
		}
		var previousColor1 = _this14._ctx.fillStyle;
		if(_this14._color != null) {
			cc_CanvasTools.fillColourRGB(_this14._ctx,_this14._color,_this14.get__alpha());
		} else {
			var _this15 = _this14._ctx;
			var int1 = Std.parseInt(StringTools.replace(previousColor1,"#","0x"));
			var tmp2 = _this14.get__alpha();
			cc_CanvasTools.fillColourRGB(_this15,{ r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255},tmp2);
		}
		var tmp3 = "" + _this14.get__size() + "px ";
		_this14._ctx.font = tmp3 + _this14._font;
		_this14._ctx.textAlign = _this14._textAlign;
		_this14._ctx.textBaseline = _this14._textBaseline;
		_this14._ctx.translate(_this14.get__x(),_this14.get__y());
		_this14._ctx.rotate(cc_util_MathUtil.radians(_this14.get__rotate()));
		if(!isLines1) {
			_this14._ctx.fillText(_this14._text,0,0);
		} else {
			var _g12 = 0;
			var _g3 = _this14._lineArray.length;
			while(_g12 < _g3) {
				var i2 = _g12++;
				var line1 = _this14._lineArray[i2];
				_this14._ctx.fillText(line1,0,i2 * _this14.get__leading());
			}
		}
		_this14._ctx.restore();
		_this14._ctx.fillStyle = previousColor1;
		var text1 = _this14;
		this.ctx.drawImage(this.svgImage,this.heartObj.x + (this.svgSize - this.heartObj.size) / 2,this.heartObj.y + (this.svgSize - this.heartObj.size) / 2,this.heartObj.size,this.heartObj.size);
		if(this.isImageLoaded) {
			this.ctx.drawImage(this._img,this.cursorObj.x,this.cursorObj.y,this.imgSize,this.imgSize);
		}
		this.patternCounter++;
		if(this.patternCounter >= strokeW * 2) {
			this.patternCounter = 0;
		}
	}
	,setup: function() {
		var _gthis = this;
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC060.hx", lineNumber : 161, className : "art.CC060", methodName : "setup"});
		var font = new FontFace("Gunplay","url(assets/font/gunplay/Gunplay-Regular.woff2)",{ style : "normal", weight : "400"});
		window.document.fonts.add(font);
		font.load();
		font.loaded.then(function(fontface) {
			haxe_Log.trace(fontface.family,{ fileName : "CC060.hx", lineNumber : 169, className : "art.CC060", methodName : "setup"});
			_gthis.isFontLoaded = true;
			_gthis.drawShape();
		});
		this.heartObj = { x : this.get_w2() - this.svgSize / 2, y : this.get_h2() - this.svgSize / 2, size : this.svgSize};
		var _svg = StringTools.replace(this.svg,"fill=\"red\"","fill=\"" + cc_util_ColorUtil.getColourObj(this._color2) + "\"");
		cc_tool_convert_SvgToImage.convert(_svg,$bind(this,this.onSvgHandler));
		this.onHeartYoyoHandler(this.heartObj);
		this.cursorObj = { x : Global.w + this.imgSize, y : Global.h + this.imgSize, size : this.imgSize};
		var loader = new cc_tool_Loader(null);
		var _this = loader;
		_this.set__isDebug(this.isDebug);
		var _this1 = _this;
		var path = this.src;
		var _type = _this1.fileType(path);
		var _obj = { path : path, type : _type, func : null};
		if(_this1.get__isDebug()) {
			haxe_Log.trace(_obj,{ fileName : "Loader.hx", lineNumber : 68, className : "cc.tool.Loader", methodName : "add"});
		}
		_this1.get__loadingArray().push(_obj);
		var _this2 = _this1;
		_this2._onComplete = $bind(this,this.onImageHandler);
		_this2._onCompleteParams = null;
		var _this3 = _this2;
		_this3.set__isDebug(this.isDebug);
		var _this4 = _this3;
		if(_this4.get__isDebug()) {
			haxe_Log.trace("start loading",{ fileName : "Loader.hx", lineNumber : 99, className : "cc.tool.Loader", methodName : "load"});
		}
		_this4.loadingHandler();
		var load = _this4;
		this.onShowCursorHandler(this.cursorObj);
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC060
});
var art_CC061 = function(ctx) {
	this.size = 400;
	this.max = 20;
	this.shapeArray = [];
	this.set_description("Polygon animation, rotate with hidden others");
	this.set_type(["Animation","Image"]);
	var option = new SketchOption();
	option.set_width(1080);
	option.set_autostart(true);
	option.set_padding(10);
	option.set_scale(true);
	ctx = Sketch.create("creative_code_mck",option);
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC061"] = art_CC061;
art_CC061.__name__ = ["art","CC061"];
art_CC061.__interfaces__ = [art_ICCBase];
art_CC061.__super__ = art_CCBase;
art_CC061.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var offset = 10;
		var shape = { _id : "" + i, _type : "poly", x : this.get_w2(), y : this.get_h2(), size : this.size, degree : 30.};
		this.onAnimateHandler(shape,i,3);
		return shape;
	}
	,onAnimateHandler: function(sh,id,count) {
		var Go = new cc_lets_Go(sh,2);
		Go._isFrom = false;
		var _this = Go;
		_this._delay = _this.getDuration(id * 0.1);
		var _this1 = _this;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"degree")) {
			objValue = Reflect.getProperty(_this1._target,"degree");
		}
		var _range = { key : "degree", from : _this1._isFrom ? 90. : objValue, to : !_this1._isFrom ? 90. : objValue};
		_this1._props.set("degree",_range);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		_this2._easing = cc_lets_easing_Sine.get_easeInOut();
		var _this3 = _this2;
		_this3._options.onComplete = $bind(this,this.onAnimateHandler);
		_this3._options.onCompleteParams = [sh,id,count++];
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			this.ctx.save();
			this.ctx.translate(sh.x,sh.y);
			this.ctx.rotate(cc_util_MathUtil.radians(sh.degree));
			cc_CanvasTools.strokeColourRGB(this.ctx,cc_util_ColorUtil.BLACK);
			cc_CanvasTools.strokePolygon(this.ctx,0,0,6,sh.size);
			this.ctx.restore();
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC061.hx", lineNumber : 80, className : "art.CC061", methodName : "setup"});
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.max;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC061
});
var art_CC062 = function(ctx) {
	this._rotationCounter = 0;
	this.size = 400;
	this.max = 20;
	this.shapeArray = [];
	this.set_description("Triangles animation with delay, rotation complete");
	this.set_type(["Animation","Image"]);
	var option = new SketchOption();
	option.set_width(1080);
	option.set_autostart(true);
	option.set_padding(10);
	option.set_scale(true);
	ctx = Sketch.create("creative_code_mck",option);
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC062"] = art_CC062;
art_CC062.__name__ = ["art","CC062"];
art_CC062.__interfaces__ = [art_ICCBase];
art_CC062.__super__ = art_CCBase;
art_CC062.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var offset = 10;
		var shape = { _id : "" + i, _type : "poly", x : this.get_w2(), y : this.get_h2(), size : this.size, degree : 30.};
		this.onAnimateHandler(shape,i,3);
		return shape;
	}
	,onAnimateHandler: function(sh,id,count) {
		var Go = new cc_lets_Go(sh,2);
		Go._isFrom = false;
		var _this = Go;
		_this._delay = _this.getDuration(id * 0.1);
		var _this1 = _this;
		var value = 30. * count;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"degree")) {
			objValue = Reflect.getProperty(_this1._target,"degree");
		}
		var _range = { key : "degree", from : _this1._isFrom ? value : objValue, to : !_this1._isFrom ? value : objValue};
		_this1._props.set("degree",_range);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		_this2._easing = cc_lets_easing_Sine.get_easeInOut();
		var _this3 = _this2;
		_this3._options.onComplete = $bind(this,this.onAnimateHandler2);
		_this3._options.onCompleteParams = [sh,id,count + 3];
	}
	,onAnimateHandler2: function(sh,id,count) {
		this._rotationCounter++;
		if(this._rotationCounter == this.max * 3) {
			haxe_Log.trace("stop export",{ fileName : "CC062.hx", lineNumber : 58, className : "art.CC062", methodName : "onAnimateHandler2"});
		}
		var Go = new cc_lets_Go(sh,3);
		Go._isFrom = false;
		var _this = Go;
		_this._delay = _this.getDuration(2);
		var _this1 = _this;
		var value = 30. * count;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"degree")) {
			objValue = Reflect.getProperty(_this1._target,"degree");
		}
		var _range = { key : "degree", from : _this1._isFrom ? value : objValue, to : !_this1._isFrom ? value : objValue};
		_this1._props.set("degree",_range);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		_this2._easing = cc_lets_easing_Sine.get_easeInOut();
		var _this3 = _this2;
		_this3._options.onComplete = $bind(this,this.onAnimateHandler2);
		_this3._options.onCompleteParams = [sh,id,count + 3];
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			this.ctx.save();
			this.ctx.translate(sh.x,sh.y);
			this.ctx.rotate(cc_util_MathUtil.radians(sh.degree));
			cc_CanvasTools.strokeColourRGB(this.ctx,cc_util_ColorUtil.BLACK);
			cc_CanvasTools.strokePolygon(this.ctx,0,0,3,sh.size);
			this.ctx.restore();
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC062.hx", lineNumber : 87, className : "art.CC062", methodName : "setup"});
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.max;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC062
});
var art_CC063 = function(ctx) {
	this.strokeWidth = 5;
	this.maxCircleSize = 30;
	this.minRadius = -100;
	this.maxRadius = Global.h / 3;
	this.shapeMax = 15;
	this.shapeArray2 = [];
	this.shapeArray = [];
	this.set_description("Circles in a circle, connected");
	this.set_type(["Animation"]);
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC063"] = art_CC063;
art_CC063.__name__ = ["art","CC063"];
art_CC063.__interfaces__ = [art_ICCBase];
art_CC063.__super__ = art_CCBase;
art_CC063.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,radius,speed) {
		var shape = { _id : "" + i, _type : "circle", x : this.get_w2(), y : this.get_h2(), rgb : cc_util_ColorUtil.BLACK, radius : radius, size : 20, angle : 360 / this.shapeMax * i, speed : speed};
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundRGB(this.ctx,cc_util_ColorUtil.WHITE);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			sh.angle += sh.speed;
			sh.x = Global.w / 2 + Math.cos(cc_util_MathUtil.radians(sh.angle)) * sh.radius;
			sh.y = Global.h / 2 + Math.sin(cc_util_MathUtil.radians(sh.angle)) * sh.radius;
			this.ctx.fillStyle = cc_util_ColorUtil.getColourObj(cc_util_ColorUtil.WHITE);
			this.ctx.strokeStyle = cc_util_ColorUtil.getColourObj(sh.rgb);
			cc_CanvasTools.strokeWeight(this.ctx,this.strokeWidth);
			cc_CanvasTools.circleFillStroke(this.ctx,sh.x,sh.y,sh.size);
		}
		var _g11 = 0;
		var _g2 = this.shapeArray2.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var sh1 = this.shapeArray2[i1];
			sh1.angle += sh1.speed;
			sh1.x = Global.w / 2 + Math.cos(cc_util_MathUtil.radians(sh1.angle)) * sh1.radius;
			sh1.y = Global.h / 2 + Math.sin(cc_util_MathUtil.radians(sh1.angle)) * sh1.radius;
			this.ctx.fillStyle = cc_util_ColorUtil.getColourObj(cc_util_ColorUtil.WHITE);
			this.ctx.strokeStyle = cc_util_ColorUtil.getColourObj(sh1.rgb);
			cc_CanvasTools.strokeWeight(this.ctx,this.strokeWidth);
			cc_CanvasTools.circleFillStroke(this.ctx,sh1.x,sh1.y,sh1.size);
		}
		var _g12 = 0;
		var _g3 = this.shapeArray2.length;
		while(_g12 < _g3) {
			var i2 = _g12++;
			var sh11 = this.shapeArray[i2];
			var sh2 = this.shapeArray2[i2];
			if(this.minDistance == null) {
				this.minDistance = cc_util_MathUtil.distance(sh11.x,sh11.y,sh2.x,sh2.y);
				haxe_Log.trace("start export",{ fileName : "CC063.hx", lineNumber : 78, className : "art.CC063", methodName : "drawShape"});
				this._startT = new Date().getTime();
			} else if(this.minDistance == cc_util_MathUtil.distance(sh11.x,sh11.y,sh2.x,sh2.y)) {
				haxe_Log.trace("stop export",{ fileName : "CC063.hx", lineNumber : 83, className : "art.CC063", methodName : "drawShape"});
				haxe_Log.trace((new Date().getTime() - this._startT) / 1000 + ".sec",{ fileName : "CC063.hx", lineNumber : 84, className : "art.CC063", methodName : "drawShape"});
			}
			cc_CanvasTools.lineColourRGB(this.ctx,cc_util_ColorUtil.BLACK);
			this.ctx.lineWidth = this.strokeWidth;
			this.ctx.lineCap = "round";
			cc_CanvasTools.line(this.ctx,sh11.x,sh11.y,sh2.x,sh2.y);
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC063.hx", lineNumber : 97, className : "art.CC063", methodName : "setup"});
		var _g1 = 0;
		var _g = this.shapeMax;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i,this.maxRadius,0.25));
			this.shapeArray2.push(this.createShape(i,this.maxRadius + this.minRadius,0.5));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC063
});
var art_CC064 = function(ctx) {
	this.runCounter = 0;
	this._rotationCounter = 0;
	this._offsetSize = 50;
	this._maxSize = Global.w;
	this.max = 20;
	this.shapeArray = [];
	this.set_description("Triangles animation with delay, rotation complete");
	this.set_type(["Animation","Image"]);
	var option = new SketchOption();
	option.set_width(1080);
	option.set_autostart(true);
	option.set_padding(10);
	option.set_scale(true);
	ctx = Sketch.create("creative_code_mck",option);
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC064"] = art_CC064;
art_CC064.__name__ = ["art","CC064"];
art_CC064.__interfaces__ = [art_ICCBase];
art_CC064.__super__ = art_CCBase;
art_CC064.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var _gthis = this;
		var shape = { _id : "" + i, _type : "square", x : this.get_w2(), y : this.get_h2(), size : this._maxSize - i * this._offsetSize};
		haxe_Timer.delay(function() {
			_gthis.onAnimationContinue(shape,i,1);
		},i * 100);
		return shape;
	}
	,onAnimationContinue: function(sh,id,count) {
		var Go = new cc_lets_Go(sh,3);
		Go._isFrom = false;
		var _this = Go;
		_this._delay = _this.getDuration(2);
		var _this1 = _this;
		var value = -90. * count;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"angle")) {
			objValue = Reflect.getProperty(_this1._target,"angle");
		}
		var _range = { key : "angle", from : _this1._isFrom ? value : objValue, to : !_this1._isFrom ? value : objValue};
		_this1._props.set("angle",_range);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		_this2._easing = cc_lets_easing_Elastic.get_easeInOut();
		var _this3 = _this2;
		_this3._options.onComplete = $bind(this,this.onAnimationContinue);
		_this3._options.onCompleteParams = [sh,id,++count];
		this.runCounter++;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			this.ctx.save();
			this.ctx.translate(sh.x,sh.y);
			this.ctx.rotate(cc_util_MathUtil.radians(sh.angle));
			cc_CanvasTools.shadowColorRGB(this.ctx,cc_util_ColorUtil.BLACK,0.1);
			this.ctx.shadowBlur = 15;
			cc_CanvasTools.centreFillRect(this.ctx,0,0,sh.size);
			this.ctx.restore();
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC064.hx", lineNumber : 87, className : "art.CC064", methodName : "setup"});
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.max;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
		var delayMS = this.shapeArray.length * 100 + 5000;
		var Go = new cc_lets_Go({ },Math.round(delayMS / 1000));
		var _this = Go;
		_this._options.onComplete = function() {
		};
		_this._options.onCompleteParams = null;
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC064
});
var art_CC065 = function(ctx) {
	this._rotationCounter = 0;
	this._offsetSize = 50;
	this._maxSize = Global.w;
	this.max = 20;
	this.shapeArray = [];
	this.set_description("Circle animation with delay, rotation complete");
	this.set_type(["Animation","Image"]);
	var option = new SketchOption();
	option.set_width(1080);
	option.set_autostart(true);
	option.set_padding(10);
	option.set_scale(true);
	ctx = Sketch.create("creative_code_mck",option);
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC065"] = art_CC065;
art_CC065.__name__ = ["art","CC065"];
art_CC065.__interfaces__ = [art_ICCBase];
art_CC065.__super__ = art_CCBase;
art_CC065.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var _gthis = this;
		var shape = { _id : "" + i, _type : "CircleExtra", x : this.get_w2(), y : this.get_h2(), size : this._maxSize - i * this._offsetSize, scale : 1};
		shape["shadowBlur"] = 15;
		haxe_Timer.delay(function() {
			_gthis.onAnimationContinue(shape,i,1);
		},i * 100);
		return shape;
	}
	,onAnimationContinue: function(sh,id,count) {
		var Go = new cc_lets_Go(sh,5);
		Go._isFrom = false;
		var _this = Go;
		_this._delay = _this.getDuration(0.1);
		var _this1 = _this;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"scale")) {
			objValue = Reflect.getProperty(_this1._target,"scale");
		}
		var _range = { key : "scale", from : _this1._isFrom ? 3 : objValue, to : !_this1._isFrom ? 3 : objValue};
		_this1._props.set("scale",_range);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		_this2._isYoyo = true;
		var _this3 = _this2;
		_this3._easing = cc_lets_easing_Elastic.get_easeInOut();
		var _this4 = _this3;
		_this4._options.onComplete = $bind(this,this.onAnimationContinue);
		_this4._options.onCompleteParams = [sh,id,++count];
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			this.ctx.save();
			this.ctx.translate(sh.x,sh.y);
			this.ctx.rotate(cc_util_MathUtil.radians(sh.angle));
			cc_CanvasTools.shadowColorRGB(this.ctx,cc_util_ColorUtil.BLACK,0.1);
			this.ctx.shadowBlur = sh.shadowBlur;
			cc_CanvasTools.centreFillRect(this.ctx,0,0,sh.size * sh.scale);
			this.ctx.restore();
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC065.hx", lineNumber : 80, className : "art.CC065", methodName : "setup"});
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.max;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC065
});
var art_CCExportBase = function(ctx) {
	this._isDebug = false;
	this.imageStringArray = [];
	this["export"] = new cc_tool_export_ExportWrapper(ctx,this.toString());
	this["export"].delay(0);
	this["export"].recordInSeconds(10);
	this["export"].menu(false);
	this["export"].type(cc_tool_export_ExportType.NONE);
	this["export"].onRecordStart($bind(this,this.onRecordStartHandler));
	this["export"].onRecordComplete($bind(this,this.onRecordCompleteHandler));
	this["export"].onExportComplete($bind(this,this.onExportCompleteHandler));
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CCExportBase"] = art_CCExportBase;
art_CCExportBase.__name__ = ["art","CCExportBase"];
art_CCExportBase.__super__ = art_CCBase;
art_CCExportBase.prototype = $extend(art_CCBase.prototype,{
	onRecordStartHandler: function() {
		if(this["export"].get__isDebug()) {
			haxe_Log.trace("" + this.toString() + " onRecordStartHandler",{ fileName : "CCExportBase.hx", lineNumber : 29, className : "art.CCExportBase", methodName : "onRecordStartHandler"});
		}
	}
	,onRecordCompleteHandler: function() {
		if(this["export"].get__isDebug()) {
			haxe_Log.trace("" + this.toString() + " onRecordCompleteHandler",{ fileName : "CCExportBase.hx", lineNumber : 34, className : "art.CCExportBase", methodName : "onRecordCompleteHandler"});
		}
		this.stop();
	}
	,onExportCompleteHandler: function() {
		if(this["export"].get__isDebug()) {
			haxe_Log.trace("" + this.toString() + " onExportCompleteHandler",{ fileName : "CCExportBase.hx", lineNumber : 40, className : "art.CCExportBase", methodName : "onExportCompleteHandler"});
		}
		this.start();
	}
	,debug: function(isDebug) {
		if(isDebug == null) {
			isDebug = false;
		}
		this._isDebug = isDebug;
	}
	,__export: function() {
		this["export"].pulse();
	}
	,__class__: art_CCExportBase
});
var art_CC066 = function(ctx) {
	this._padding = 50;
	this._blobSize = 50;
	this._strokeW = 15;
	this.divide = Math.round(51.4285714285714306);
	this.radius1 = 350;
	this.radius0 = 150;
	this.shapeMax = 7;
	this.shapeArray2 = [];
	this.shapeArray = [];
	this.set_description("Bio spere");
	this.divide = Math.round(360 / this.shapeMax);
	this.radius1 = Math.round(this.get_w2() - 2 * this._padding);
	art_CCExportBase.call(this,ctx);
};
$hxClasses["art.CC066"] = art_CC066;
art_CC066.__name__ = ["art","CC066"];
art_CC066.__interfaces__ = [art_ICCBase];
art_CC066.__super__ = art_CCExportBase;
art_CC066.prototype = $extend(art_CCExportBase.prototype,{
	createShape: function(i) {
		var angle = i * this.divide;
		var line = { _id : i, x1 : Global.w / 2 + Math.cos(cc_util_MathUtil.radians(angle)) * this.radius0, y1 : Global.h / 2 + Math.sin(cc_util_MathUtil.radians(angle)) * this.radius0, x2 : Global.w / 2 + Math.cos(cc_util_MathUtil.radians(angle)) * this.radius1, y2 : Global.h / 2 + Math.sin(cc_util_MathUtil.radians(angle)) * this.radius1, stroke : this._strokeW, radius : cc_util_MathUtil.random(this.radius0 + this._blobSize,this.radius1)};
		this.onAnimationHandler(line);
		return line;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.BLACK);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var line = this.shapeArray[i];
			var angle = i * this.divide;
			line.x2 = Global.w / 2 + Math.cos(cc_util_MathUtil.radians(angle)) * line.radius;
			line.y2 = Global.h / 2 + Math.sin(cc_util_MathUtil.radians(angle)) * line.radius;
			cc_CanvasTools.lineColour(this.ctx,cc_util_ColorUtil.WHITE.r,cc_util_ColorUtil.WHITE.g,cc_util_ColorUtil.WHITE.b,1);
			this.ctx.lineWidth = line.stroke;
			cc_CanvasTools.line(this.ctx,line.x1,line.y1,line.x2,line.y2);
			cc_CanvasTools.circleFillStroke(this.ctx,line.x2,line.y2,this._blobSize);
		}
		cc_CanvasTools.strokeWeight(this.ctx,this._strokeW);
		cc_CanvasTools.circleFillStroke(this.ctx,this.get_w2(),this.get_h2(),this.radius0);
	}
	,onAnimationHandler: function(line) {
		var Go = new cc_lets_Go(line,cc_util_MathUtil.random(0.5,1.5));
		Go._isFrom = false;
		var _this = Go;
		var value = cc_util_MathUtil.random(this.radius0 + this._blobSize,this.radius1);
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"radius")) {
			objValue = Reflect.getProperty(_this._target,"radius");
		}
		var _range = { key : "radius", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("radius",_range);
		if(_this._isFrom) {
			_this.updateProperties(0);
		}
		var _this1 = _this;
		_this1._easing = cc_lets_easing_Sine.get_easeInOut();
		var _this2 = _this1;
		_this2._options.onComplete = $bind(this,this.onAnimationHandler);
		_this2._options.onCompleteParams = [line];
	}
	,setup: function() {
		var _g1 = 0;
		var _g = this.shapeMax;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC066
});
var art_CC067 = function(ctx) {
	this.max = 20;
	this.strokeW = 50;
	this._maxR = 150;
	this._minR = 20;
	this.shapeArray = [];
	this.set_description("Blobs wiggling");
	this.set_type(["Animation","Image"]);
	art_CCExportBase.call(this,ctx);
};
$hxClasses["art.CC067"] = art_CC067;
art_CC067.__name__ = ["art","CC067"];
art_CC067.__interfaces__ = [art_ICCBase];
art_CC067.__super__ = art_CCExportBase;
art_CC067.prototype = $extend(art_CCExportBase.prototype,{
	createShape: function(i,point) {
		var padding = this._maxR + this.strokeW / 2;
		var shape = { _id : "" + i, _type : "circle", x : padding + cc_util_MathUtil.random(Global.w - padding * 2), y : padding + cc_util_MathUtil.random(Global.h - padding * 2), radius : cc_util_MathUtil.random(this._minR,this._maxR)};
		this.onAnimateHandler(shape);
		return shape;
	}
	,onAnimateHandler: function(circle) {
		var target = circle;
		var x = circle.x;
		var y = circle.y;
		var _go = 1 + Math.random();
		var _go1 = new cc_lets_Go(target,_go);
		_go1._isWiggle = true;
		var max = 20;
		var min = -20;
		var value = Math.random() * (max - min);
		var value1 = x + value + min;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_go1._target,"x")) {
			objValue = Reflect.getProperty(_go1._target,"x");
		}
		var _range = { key : "x", from : _go1._isFrom ? value1 : objValue, to : !_go1._isFrom ? value1 : objValue};
		_go1._props.set("x",_range);
		if(_go1._isFrom) {
			_go1.updateProperties(0);
		}
		var value2 = Math.random() * (max - min);
		var value3 = y + value2 + min;
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_go1._target,"y")) {
			objValue1 = Reflect.getProperty(_go1._target,"y");
		}
		var _range1 = { key : "y", from : _go1._isFrom ? value3 : objValue1, to : !_go1._isFrom ? value3 : objValue1};
		_go1._props.set("y",_range1);
		if(_go1._isFrom) {
			_go1.updateProperties(0);
		}
		_go1._easing = cc_lets_easing_Sine.get_easeInOut();
		_go1._options.onComplete = function() {
			cc_lets_Go.wiggle(target,x,y,20);
		};
		_go1._options.onCompleteParams = null;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			cc_CanvasTools.fillColourRGB(this.ctx,cc_util_ColorUtil.BLACK);
			cc_CanvasTools.strokeColourRGB(this.ctx,cc_util_ColorUtil.BLACK);
			cc_CanvasTools.strokeWeight(this.ctx,this.strokeW);
			cc_CanvasTools.circleFillStroke(this.ctx,sh.x,sh.y,sh.radius);
		}
		var _g11 = 0;
		var _g2 = this.shapeArray.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var sh1 = this.shapeArray[i1];
			cc_CanvasTools.fillColourRGB(this.ctx,cc_util_ColorUtil.WHITE);
			cc_CanvasTools.fillCircle(this.ctx,sh1.x,sh1.y,sh1.radius);
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC067.hx", lineNumber : 60, className : "art.CC067", methodName : "setup"});
		this.isDebug = true;
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.max;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC067
});
var art_CC068 = function(ctx) {
	this.aniMax = 0;
	this._cellsize = 150;
	this._radius = 150;
	this.grid2 = new cc_util_GridUtil();
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	this.set_description("Bigger as a group, then when you are single");
	this.set_type(["Animation","Image"]);
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC068"] = art_CC068;
art_CC068.__name__ = ["art","CC068"];
art_CC068.__interfaces__ = [art_ICCBase];
art_CC068.__super__ = art_CCBase;
art_CC068.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "Square", x : point.x, y : point.y};
		this.onAnimateHandler(shape,i);
		return shape;
	}
	,onAnimateHandler: function(sh,i) {
		if(this.aniCounter == null) {
			haxe_Log.trace("export start",{ fileName : "CC068.hx", lineNumber : 48, className : "art.CC068", methodName : "onAnimateHandler"});
			this.startT = new Date().getTime();
			this.aniCounter = 0;
		}
		if(this.aniCounter == this.aniMax) {
			this.endT = new Date().getTime();
			haxe_Log.trace("export stop (" + (this.endT - this.startT) / 1000 + " sec)",{ fileName : "CC068.hx", lineNumber : 56, className : "art.CC068", methodName : "onAnimateHandler"});
		}
		var sh2 = this.grid2.array[i];
		this.aniCounter++;
		var Go = new cc_lets_Go(sh,5);
		Go._isFrom = false;
		var _this = Go;
		_this._delay = _this.getDuration(1.5);
		var _this1 = _this;
		var x = sh2.x;
		var y = sh2.y;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"x")) {
			objValue = Reflect.getProperty(_this1._target,"x");
		}
		var _range = { key : "x", from : _this1._isFrom ? x : objValue, to : !_this1._isFrom ? x : objValue};
		_this1._props.set("x",_range);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"y")) {
			objValue1 = Reflect.getProperty(_this1._target,"y");
		}
		var _range1 = { key : "y", from : _this1._isFrom ? y : objValue1, to : !_this1._isFrom ? y : objValue1};
		_this1._props.set("y",_range1);
		if(_this1._isFrom) {
			_this1.updateProperties(0);
		}
		var _this2 = _this1;
		_this2._isYoyo = true;
		var _this3 = _this2;
		_this3._easing = cc_lets_easing_Sine.get_easeInOut();
		var _this4 = _this3;
		_this4._options.onComplete = $bind(this,this.onAnimateHandler);
		_this4._options.onCompleteParams = [sh,i];
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		if(this.isDebug) {
			cc_util_ShapeUtil.gridField(this.ctx,this.grid);
			cc_util_ShapeUtil.gridField(this.ctx,this.grid2);
		}
		var _color = cc_util_ColorUtil.WHITE;
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			cc_CanvasTools.fillColourRGB(this.ctx,_color);
			cc_CanvasTools.shadowSet(this.ctx,cc_util_ColorUtil.BLACK,0.2,15);
			cc_CanvasTools.centreFillRect(this.ctx,sh.x,sh.y,this.grid.cellWidth,this.grid.cellHeight);
		}
		var _g11 = 0;
		var _g2 = this.shapeArray.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var sh1 = this.shapeArray[i1];
			cc_CanvasTools.fillColourRGB(this.ctx,_color);
			this.ctx.shadowBlur = 0;
			cc_CanvasTools.centreFillRect(this.ctx,sh1.x,sh1.y,this.grid.cellWidth,this.grid.cellHeight);
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC068.hx", lineNumber : 94, className : "art.CC068", methodName : "setup"});
		var padding = Global.w * .3;
		this.grid.setDimension(Global.w - padding,Global.h - padding);
		this.grid.setNumbered(3,3);
		this.grid.setIsCenterPoint(true);
		this.grid2.setDimension(Global.w,Global.h);
		this.grid2.setNumbered(3,3);
		this.grid2.setIsCenterPoint(true);
		this.aniMax = this.grid.array.length;
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i,this.grid.array[i]));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC068
});
var art_CC069 = function(ctx) {
	this._cellsize = 150;
	this._radius = 150;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	this.set_description("");
	this.set_type(["Animation","Image"]);
	art_CCBase.call(this,ctx);
};
$hxClasses["art.CC069"] = art_CC069;
art_CC069.__name__ = ["art","CC069"];
art_CC069.__interfaces__ = [art_ICCBase];
art_CC069.__super__ = art_CCBase;
art_CC069.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y, radius : this._radius};
		this.onAnimateHandler(shape);
		return shape;
	}
	,onAnimateHandler: function(circle) {
	}
	,drawShape: function() {
		var padding = 70;
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		var maskWidth = 200;
		var maskHeight = Global.h - padding * 2;
		var total = 50;
		var offset = Math.round(maskHeight / total);
		haxe_Log.trace(maskHeight,{ fileName : "CC069.hx", lineNumber : 46, className : "art.CC069", methodName : "drawShape", customParams : [total,offset]});
		var _g1 = 0;
		var _g = total - 2;
		while(_g1 < _g) {
			var i = _g1++;
			var xpos1 = this.get_w2() - maskWidth / 2;
			var xpos2 = this.get_w2() + maskWidth / 2;
			var ypos1 = padding + (i + 1) * offset + cc_util_MathUtil.random(-offset / 2,offset / 2);
			var ypos2 = padding + (i + 1) * offset + cc_util_MathUtil.random(-offset / 2,offset / 2);
			cc_CanvasTools.strokeColourRGB(this.ctx,cc_util_ColorUtil.BLACK,0.4);
			cc_CanvasTools.strokeWeight(this.ctx,2);
			cc_CanvasTools.line(this.ctx,xpos1,ypos1,xpos2,ypos2);
		}
		cc_CanvasTools.shadowSet(this.ctx,cc_util_ColorUtil.BLACK,0.2,15);
		var mask = new cc_draw_Mask(this.ctx);
		var _this = mask;
		_this.set__x(0);
		_this.set__y(0);
		var _this1 = _this;
		var height = Global.h;
		_this1.set__outerWidth(Global.w);
		_this1.set__outerHeight(height);
		var _this2 = _this1;
		_this2.set__innerWidth(maskWidth);
		_this2.set__innerHeight(maskHeight);
		var _this3 = _this2;
		_this3._color = cc_util_ColorUtil.WHITE;
		var _this4 = _this3;
		_this4._ctx.beginPath();
		var _centerx = _this4.get__outerWidth() / 2;
		var _centery = _this4.get__outerHeight() / 2;
		var _outerW2 = _this4.get__outerWidth() / 2;
		var _outerH2 = _this4.get__outerHeight() / 2;
		var _innerW2 = _this4.get__innerWidth() / 2;
		var _innerH2 = _this4.get__innerHeight() / 2;
		_this4._ctx.moveTo(_this4.get__x(),_this4.get__y());
		_this4._ctx.lineTo(_this4.get__x() + _this4.get__outerWidth(),_this4.get__y());
		_this4._ctx.lineTo(_this4.get__x() + _this4.get__outerWidth(),_this4.get__y() + _this4.get__outerHeight());
		_this4._ctx.lineTo(_this4.get__x(),_this4.get__y() + _this4.get__outerHeight());
		_this4._ctx.lineTo(_this4.get__x(),_this4.get__y());
		_this4._ctx.closePath();
		_this4._ctx.moveTo(_centerx - _innerW2,_centery - _innerH2);
		_this4._ctx.lineTo(_centerx - _innerW2,_centery + _innerH2);
		_this4._ctx.lineTo(_centerx + _innerW2,_centery + _innerH2);
		_this4._ctx.lineTo(_centerx + _innerW2,_centery - _innerH2);
		_this4._ctx.lineTo(_centerx - _innerW2,_centery - _innerH2);
		_this4._ctx.closePath();
		if(_this4._color != null) {
			cc_CanvasTools.fillColourRGB(_this4._ctx,_this4._color,_this4.get__alpha());
			_this4._ctx.fill();
		}
		if(_this4._colorstoke != null) {
			cc_CanvasTools.strokeColourRGB(_this4._ctx,_this4._colorstoke);
			_this4._ctx.lineWidth = 1;
			_this4._ctx.stroke();
		}
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC069.hx", lineNumber : 70, className : "art.CC069", methodName : "setup"});
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i,this.grid.array[i]));
		}
	}
	,draw: function() {
		haxe_Log.trace("draw: " + this.toString(),{ fileName : "CC069.hx", lineNumber : 79, className : "art.CC069", methodName : "draw"});
		this.drawShape();
		this.stop();
	}
	,__class__: art_CC069
});
var art_CC070 = function(ctx) {
	this.isFontLoaded = false;
	this._color4 = null;
	this._color3 = null;
	this._color2 = null;
	this._color1 = null;
	this._color0 = null;
	this._cellsize = 150;
	this._radius = 150;
	this.grid = new cc_util_GridUtil();
	this.shapeArray = [];
	this.set_description("");
	this.set_type(["Animation","Image"]);
	cc_draw_Text.embedGoogleFont("Wallpoet",$bind(this,this.onEmbedHandler));
	art_CCExportBase.call(this,ctx);
	this["export"].setting({ delay : 15, record : 300, debug : true, type : cc_tool_export_ExportType.NODE});
	this["export"].start();
};
$hxClasses["art.CC070"] = art_CC070;
art_CC070.__name__ = ["art","CC070"];
art_CC070.__interfaces__ = [art_ICCBase];
art_CC070.__super__ = art_CCExportBase;
art_CC070.prototype = $extend(art_CCExportBase.prototype,{
	onEmbedHandler: function(e) {
		haxe_Log.trace("onEmbedHandler: \"" + e + "\"",{ fileName : "CC070.hx", lineNumber : 41, className : "art.CC070", methodName : "onEmbedHandler"});
		this.isFontLoaded = true;
		this.drawShape();
	}
	,createQuickSettings: function() {
		this.panel1 = QuickSettings.create(10,10,"Quote generator").setGlobalChangeHandler($bind(this,this.drawShape)).addHTML("Reason","Sometimes I need a quick quote, to post on Instagram").addTextArea("Quote","text",function(value) {
			haxe_Log.trace(value,{ fileName : "CC070.hx", lineNumber : 51, className : "art.CC070", methodName : "createQuickSettings"});
		}).addBoolean("All Caps",false,function(value1) {
			haxe_Log.trace(value1,{ fileName : "CC070.hx", lineNumber : 52, className : "art.CC070", methodName : "createQuickSettings"});
		}).saveInLocalStorage("store-data-" + this.toString());
	}
	,createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y, radius : this._radius};
		this.onAnimateHandler(shape);
		return shape;
	}
	,onAnimateHandler: function(circle) {
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundObj(this.ctx,cc_util_ColorUtil.WHITE);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
		}
		var rgb = cc_util_ColorUtil.randomColourObject();
		cc_CanvasTools.strokeColour(this.ctx,rgb.r,rgb.g,rgb.b);
		cc_util_ShapeUtil.xcross(this.ctx,Global.w / 2,Global.h / 2,cc_util_MathUtil.randomInt(200,Math.round(this.get_w2())));
		this.ctx.fillStyle = cc_util_ColorUtil.getColourObj(this._color4);
		var Text = new cc_draw_Text(this.ctx,this.toString());
		var _this = Text;
		_this._textAlign = "center";
		var _this1 = _this;
		_this1._textBaseline = "middle";
		var _this2 = _this1;
		_this2._color = this._color4;
		_this2.set__alpha(cc_util_MathUtil.clamp(1,0,1));
		var _this3 = _this2;
		_this3.set__size(160);
		if(_this3.get__leading() == null) {
			_this3.set__leading(160);
		}
		var _this4 = _this3;
		_this4.set__x(this.get_w2());
		var _this5 = _this4;
		_this5.set__y(this.get_h2());
		var _this6 = _this5;
		_this6._font = StringTools.replace(StringTools.replace("Wallpoet",";",""),"+"," ");
		var _this7 = _this6;
		var isLines = false;
		_this7._ctx.save();
		if(_this7._text.indexOf("\n") != -1) {
			_this7._lineArray = _this7._text.split("\n");
			isLines = true;
		}
		var previousColor = _this7._ctx.fillStyle;
		if(_this7._color != null) {
			cc_CanvasTools.fillColourRGB(_this7._ctx,_this7._color,_this7.get__alpha());
		} else {
			var _this8 = _this7._ctx;
			var $int = Std.parseInt(StringTools.replace(previousColor,"#","0x"));
			var tmp = _this7.get__alpha();
			cc_CanvasTools.fillColourRGB(_this8,{ r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255},tmp);
		}
		var tmp1 = "" + _this7.get__size() + "px ";
		_this7._ctx.font = tmp1 + _this7._font;
		_this7._ctx.textAlign = _this7._textAlign;
		_this7._ctx.textBaseline = _this7._textBaseline;
		_this7._ctx.translate(_this7.get__x(),_this7.get__y());
		_this7._ctx.rotate(cc_util_MathUtil.radians(_this7.get__rotate()));
		if(!isLines) {
			_this7._ctx.fillText(_this7._text,0,0);
		} else {
			var _g11 = 0;
			var _g2 = _this7._lineArray.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				var line = _this7._lineArray[i1];
				_this7._ctx.fillText(line,0,i1 * _this7.get__leading());
			}
		}
		_this7._ctx.restore();
		_this7._ctx.fillStyle = previousColor;
	}
	,setup: function() {
		haxe_Log.trace("setup: " + this.toString(),{ fileName : "CC070.hx", lineNumber : 102, className : "art.CC070", methodName : "setup"});
		var colorArray = cc_util_ColorUtil.niceColor100SortedString[cc_util_MathUtil.randomInt(cc_util_ColorUtil.niceColor100SortedString.length - 1)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._color0 = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._color1 = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._color2 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
		this._color3 = { r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255};
		var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
		this._color4 = { r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255};
		this.isDebug = true;
		this.grid.setCellSize(this._cellsize);
		this.grid.setIsCenterPoint(true);
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i,this.grid.array[i]));
		}
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC070
});
var cc_tool_export_IExportWrapper = function() { };
$hxClasses["cc.tool.export.IExportWrapper"] = cc_tool_export_IExportWrapper;
cc_tool_export_IExportWrapper.__name__ = ["cc","tool","export","IExportWrapper"];
cc_tool_export_IExportWrapper.prototype = {
	__class__: cc_tool_export_IExportWrapper
	,__properties__: {set__isDebug:"set__isDebug",get__isDebug:"get__isDebug"}
};
var cc_tool_export_ExportWrapper = function(ctx,fileName) {
	this.imageStringArray = [];
	this._type = cc_tool_export_ExportType.NONE;
	this._isMenu = true;
	this._record = 600;
	this._delay = 120;
	this.description = "";
	this._progressBarHeight = 3;
	this._recordCounter = 0;
	this._delayCounter = 0;
	this.isExportActive = false;
	this.fps = 60;
	haxe_Log.trace("constructor " + this.toString(),{ fileName : "ExportWrapper.hx", lineNumber : 60, className : "cc.tool.export.ExportWrapper", methodName : "new"});
	this.createQuicktoExportObj();
	this.create_ProgressBar();
	if(ctx == null) {
		window.console.warn("This is not acceptable, I need a context!");
		return;
	}
	this._filename = fileName == null ? this.toString() : fileName;
	this.set__ctx(ctx);
	this.out("ExportWrapper ready");
};
$hxClasses["cc.tool.export.ExportWrapper"] = cc_tool_export_ExportWrapper;
cc_tool_export_ExportWrapper.__name__ = ["cc","tool","export","ExportWrapper"];
cc_tool_export_ExportWrapper.__interfaces__ = [cc_tool_export_IExportWrapper];
cc_tool_export_ExportWrapper.prototype = {
	startExport: function() {
		this._startT = new Date().getTime();
		this.isExportActive = true;
		this.imageStringArray = [];
		this._delayCounter = 0;
		this._recordCounter = 0;
		this.type(this.get__type());
		this.out("" + this.toString() + " - start export - 0ms");
		if(this.get__isDebug()) {
			haxe_Log.trace(this.toString() + " - start export - 0ms",{ fileName : "ExportWrapper.hx", lineNumber : 86, className : "cc.tool.export.ExportWrapper", methodName : "startExport"});
			haxe_Log.trace(this.toExportObj(),{ fileName : "ExportWrapper.hx", lineNumber : 87, className : "cc.tool.export.ExportWrapper", methodName : "startExport"});
		}
	}
	,stopExport: function() {
		this._endT = new Date().getTime();
		this.record(this.imageStringArray.length);
		this.isExportActive = false;
		this.out(this.toString() + (" - stop export - " + (this._endT - this._startT) / 1000 + "sec"));
		if(this.get__isDebug()) {
			haxe_Log.trace(this.toString() + (" - stop export - " + (this._endT - this._startT) / 1000 + "sec"),{ fileName : "ExportWrapper.hx", lineNumber : 98, className : "cc.tool.export.ExportWrapper", methodName : "stopExport"});
			haxe_Log.trace(this.toExportObj(),{ fileName : "ExportWrapper.hx", lineNumber : 99, className : "cc.tool.export.ExportWrapper", methodName : "stopExport"});
		}
		if(Reflect.isFunction(this._onComplete)) {
			var arr = this._onCompleteParams != null ? this._onCompleteParams : [];
			this._onComplete.apply(this._onComplete,arr);
		}
		if(Reflect.isFunction(this._onRecordComplete)) {
			var arr1 = this._onRecordCompleteParams != null ? this._onRecordCompleteParams : [];
			this._onRecordComplete.apply(this._onRecordComplete,arr1);
		}
		var timeStamp = this._endT;
		haxe_Log.trace(this.exportType.toString(),{ fileName : "ExportWrapper.hx", lineNumber : 115, className : "cc.tool.export.ExportWrapper", methodName : "stopExport"});
		this.exportType.progress($bind(this,this.progressGeneration));
		this.exportType.complete(this._onExportComplete);
		this.exportType.debug(this.get__isDebug());
		this.exportType["export"](this.toExportObj());
	}
	,init: function() {
		haxe_Log.trace("" + this.toString() + ".init : " + Std.string(this.toExportObj()),{ fileName : "ExportWrapper.hx", lineNumber : 129, className : "cc.tool.export.ExportWrapper", methodName : "init"});
		if($bind(this,this.pulse) == null) {
			window.console.warn("no pulse detected, hook into the animation");
			return;
		}
	}
	,start: function() {
		this.startExport();
	}
	,startNow: function() {
		this.startRecording();
	}
	,startRecording: function() {
		this.delay(0);
		this.recordInSeconds(60);
		this.init();
		this.startExport();
	}
	,stop: function() {
		this.stopExport();
	}
	,debug: function(isDebug) {
		if(isDebug == null) {
			isDebug = true;
		}
		this.set__isDebug(isDebug);
	}
	,onComplete: function(func,arr) {
		this._onComplete = func;
		this._onCompleteParams = arr;
	}
	,onRecordStart: function(func,arr) {
		this._onRecordStart = func;
		this._onRecordStartParams = arr;
	}
	,onRecordComplete: function(func,arr) {
		this._onRecordComplete = func;
		this._onRecordCompleteParams = arr;
	}
	,onExportComplete: function(func,arr) {
		this._onExportComplete = func;
		this._onExportCompleteParams = arr;
	}
	,menu: function(isVisible) {
		if(isVisible == null) {
			isVisible = false;
		}
		this.set__isMenu(isVisible);
		if(!this.get__isMenu()) {
			this.panel1.hide();
		}
	}
	,type: function(type) {
		if(this.get__type() == type) {
			haxe_Log.trace("" + Std.string(this.get__type()) + " == " + Std.string(type),{ fileName : "ExportWrapper.hx", lineNumber : 239, className : "cc.tool.export.ExportWrapper", methodName : "type"});
			return;
		}
		this.set__type(type);
		var _g = this.get__type();
		switch(_g[1]) {
		case 0:
			this.exportType = new cc_tool_export_ExportZip();
			break;
		case 1:
			this.exportType = new cc_tool_export_ExportNodeServer();
			break;
		case 2:case 3:
			this.exportType = new cc_tool_export_ExportNone();
			break;
		}
		haxe_Log.trace("ExportWrapper.type: " + Std.string(Type["typeof"](this.exportType)),{ fileName : "ExportWrapper.hx", lineNumber : 253, className : "cc.tool.export.ExportWrapper", methodName : "type"});
		haxe_Log.trace("ExportWrapper.obj: " + Std.string(this.toExportObj()),{ fileName : "ExportWrapper.hx", lineNumber : 254, className : "cc.tool.export.ExportWrapper", methodName : "type"});
	}
	,exporttype: function(type) {
		this.type(type);
	}
	,delay: function(frames) {
		this.set__delay(frames);
	}
	,delayInSeconds: function(sec) {
		this.set__delay(Math.round(sec * this.fps));
		this.panel1.setValue("delay in seconds",sec);
	}
	,record: function(frames) {
		this.set__record(frames);
	}
	,recordInSeconds: function(sec) {
		this.set__record(Math.round(sec * this.fps));
		this.panel1.setValue("record in seconds",sec);
	}
	,setting: function(obj) {
		haxe_Log.trace("settings: " + Std.string(obj),{ fileName : "ExportWrapper.hx", lineNumber : 311, className : "cc.tool.export.ExportWrapper", methodName : "setting"});
		this.set__type(null);
		this.exportType = null;
		this.set__record(obj.record);
		this.set__delay(obj.delay == null ? 0 : obj.delay);
		this.set__isDebug(obj.isDebug == null ? false : obj.isDebug);
		this.type(obj.type);
		this.init();
	}
	,toExportObj: function() {
		var obj = { filename : this._filename, export_type : this.get__type(), delay : this.get__delay(), record : this.get__record(), delay_in_seconds : this.get__delay() / 60, record_in_seconds : this.get__record() / 60, imageStringArray : this.imageStringArray, timestamp : new Date().getTime(), description : ""};
		return obj;
	}
	,isDebug: function(isDebug) {
		if(isDebug == null) {
			isDebug = true;
		}
		this.set__isDebug(isDebug);
	}
	,pulse: function() {
		if(this.isExportActive) {
			if(this._delayCounter < this.get__delay()) {
				if(this.get__isDebug()) {
					window.console.log("" + this.toString() + " delay: " + this._delayCounter + " < " + this.get__delay());
				}
			}
			if(this._delayCounter == this.get__delay()) {
				if(this.get__isDebug()) {
					window.console.log("" + this.toString() + " onRecordStart: " + this._delayCounter + " == " + this.get__delay());
				}
				if(Reflect.isFunction(this._onRecordStart)) {
					var arr = this._onRecordStartParams != null ? this._onRecordStartParams : [];
					this._onRecordStart.apply(this._onRecordStart,arr);
				}
			}
			if(this._delayCounter >= this.get__delay()) {
				if(this._recordCounter < this.get__record()) {
					if(this.get__isDebug()) {
						window.console.log("" + this.toString() + " recording: " + this._recordCounter + " < " + this.get__record());
					}
					this.imageStringArray.push(this.get__ctx().canvas.toDataURL("image/png").split("base64,")[1]);
					this.progressRecording(this._recordCounter / this.get__record() * 100);
					this._recordCounter++;
				} else {
					this.stopExport();
				}
			}
		}
		this._delayCounter++;
	}
	,createQuicktoExportObj: function() {
		var _gthis = this;
		this.panel1 = QuickSettings.create(10,10,"ExportWrapper settings").addRange("delay in seconds",0.0,5.0,2.0,0.5,function(e) {
			_gthis.setDelay(e);
		}).addRange("record in seconds",0.0,60.0,2.0,0.5,function(e1) {
			_gthis.setRecord(e1);
		}).addButton("recording",function(e2) {
			_gthis.onClickHandler(e2);
		}).addText("feedback","x",function(e3) {
		});
	}
	,out: function(str) {
		if(this.panel1 == null) {
			return;
		}
		this.panel1.setValue("feedback",str);
	}
	,setDelay: function(e) {
		this.out("delay in seconds: " + (e == null ? "null" : "" + e));
		this.set__delay(Math.round(this.fps * e));
	}
	,setRecord: function(e) {
		this.out("recording in seconds: " + (e == null ? "null" : "" + e));
		this.set__record(Math.round(this.fps * e));
	}
	,onClickHandler: function(e) {
		var input = e;
		var _g = input.value;
		switch(_g) {
		case "init recording":
			haxe_Log.trace("init recording",{ fileName : "ExportWrapper.hx", lineNumber : 419, className : "cc.tool.export.ExportWrapper", methodName : "onClickHandler"});
			this.setDelay(this.panel1.getValue("delay in seconds"));
			this.setRecord(this.panel1.getValue("record in seconds"));
			this.start();
			haxe_Log.trace(JSON.parse(JSON.stringify(this)),{ fileName : "ExportWrapper.hx", lineNumber : 423, className : "cc.tool.export.ExportWrapper", methodName : "onClickHandler"});
			break;
		case "recording":
			break;
		case "start recording":
			break;
		case "stop recording":
			haxe_Log.trace("stop recording",{ fileName : "ExportWrapper.hx", lineNumber : 425, className : "cc.tool.export.ExportWrapper", methodName : "onClickHandler"});
			this.stop();
			break;
		default:
			haxe_Log.trace("case '" + input.value + "': trace ('" + input.value + "');",{ fileName : "ExportWrapper.hx", lineNumber : 428, className : "cc.tool.export.ExportWrapper", methodName : "onClickHandler"});
		}
	}
	,create_ProgressBar: function(percentage) {
		if(percentage == null) {
			percentage = 10;
		}
		var body = window.document.querySelector("body");
		var div = window.document.createElement("div");
		div.setAttribute("id","zip-progress");
		div.innerHTML = "<span style=\"display:none\">" + percentage + "%</span>";
		div.style.position = "absolute";
		div.style.left = "0px";
		div.style.top = "0px";
		div.style.width = "100%";
		div.style.height = "" + this._progressBarHeight + "px";
		div.style.backgroundColor = "silver";
		body.appendChild(div);
		this._progressBar = div;
	}
	,progressGeneration: function(percent) {
		this._progressBar.style.width = "" + percent + "%";
		this._progressBar.style.backgroundColor = "navy";
	}
	,progressRecording: function(percent) {
		this._progressBar.style.width = "" + percent + "%";
		this._progressBar.style.backgroundColor = "red";
	}
	,get__isDebug: function() {
		return this._isDebug;
	}
	,set__isDebug: function(value) {
		return this._isDebug = value;
	}
	,get__ctx: function() {
		return this._ctx;
	}
	,set__ctx: function(value) {
		return this._ctx = value;
	}
	,get__delay: function() {
		return this._delay;
	}
	,set__delay: function(value) {
		return this._delay = value;
	}
	,get__record: function() {
		return this._record;
	}
	,set__record: function(value) {
		return this._record = value;
	}
	,get_description: function() {
		return this.description;
	}
	,set_description: function(value) {
		return this.description = value;
	}
	,get__isMenu: function() {
		return this._isMenu;
	}
	,set__isMenu: function(value) {
		return this._isMenu = value;
	}
	,get__type: function() {
		return this._type;
	}
	,set__type: function(value) {
		return this._type = value;
	}
	,toString: function() {
		return "[ExportWrapper]";
	}
	,__class__: cc_tool_export_ExportWrapper
	,__properties__: {set__type:"set__type",get__type:"get__type",set__isDebug:"set__isDebug",get__isDebug:"get__isDebug",set__isMenu:"set__isMenu",get__isMenu:"get__isMenu",set__ctx:"set__ctx",get__ctx:"get__ctx",set__record:"set__record",get__record:"get__record",set__delay:"set__delay",get__delay:"get__delay",set_description:"set_description",get_description:"get_description"}
};
var art_CCExport = function(ctx,fileName) {
	cc_tool_export_ExportWrapper.call(this,ctx,fileName);
};
$hxClasses["art.CCExport"] = art_CCExport;
art_CCExport.__name__ = ["art","CCExport"];
art_CCExport.__super__ = cc_tool_export_ExportWrapper;
art_CCExport.prototype = $extend(cc_tool_export_ExportWrapper.prototype,{
	type: function(val) {
	}
	,recordInSeconds: function(val) {
	}
	,stop: function() {
		art_CCBase._endT = new Date().getTime();
		haxe_Log.trace("[Export] stop " + (art_CCBase._endT - art_CCBase._startT) / 1000 + ".sec",{ fileName : "CCBase.hx", lineNumber : 93, className : "art.CCExport", methodName : "stop"});
	}
	,start: function() {
		art_CCBase._startT = new Date().getTime();
		haxe_Log.trace("[Export] start",{ fileName : "CCBase.hx", lineNumber : 98, className : "art.CCExport", methodName : "start"});
	}
	,__class__: art_CCExport
});
var cc_AST = function() { };
$hxClasses["cc.AST"] = cc_AST;
cc_AST.__name__ = ["cc","AST"];
var cc_CanvasTools = function() { };
$hxClasses["cc.CanvasTools"] = cc_CanvasTools;
cc_CanvasTools.__name__ = ["cc","CanvasTools"];
cc_CanvasTools.square = function(ctx,x,y,width,height) {
	if(height == null) {
		height = width;
	}
	ctx.fillRect(x,y,width,height);
};
cc_CanvasTools.leftStrokeRect = function(ctx,x,y,width,height) {
	if(height == null) {
		height = width;
	}
	ctx.strokeRect(x,y,width,height);
};
cc_CanvasTools.centreStrokeRect = function(ctx,x,y,width,height) {
	if(height == null) {
		height = width;
	}
	ctx.strokeRect(x - width / 2,y - height / 2,width,height);
};
cc_CanvasTools.centreFillRect = function(ctx,x,y,width,height) {
	if(height == null) {
		height = width;
	}
	ctx.fillRect(x - width / 2,y - height / 2,width,height);
};
cc_CanvasTools.roundRect = function(ctx,_x,_y,_width,_height,_radius,_fill,_stroke) {
	if(_stroke == null) {
		_stroke = false;
	}
	if(_fill == null) {
		_fill = true;
	}
	if(_radius == null) {
		_radius = 5;
	}
	_width = Math.abs(_width);
	_height = Math.abs(_height);
	_x -= _width / 2;
	_y -= _height / 2;
	var radius_tr;
	var radius_tl;
	var radius_br;
	var radius_bl;
	radius_tl = _radius;
	radius_tr = _radius;
	radius_br = _radius;
	radius_bl = _radius;
	ctx.beginPath();
	ctx.moveTo(_x + radius_tl,_y);
	ctx.lineTo(_x + _width - radius_tr,_y);
	ctx.quadraticCurveTo(_x + _width,_y,_x + _width,_y + radius_tr);
	ctx.lineTo(_x + _width,_y + _height - radius_br);
	ctx.quadraticCurveTo(_x + _width,_y + _height,_x + _width - radius_br,_y + _height);
	ctx.lineTo(_x + radius_bl,_y + _height);
	ctx.quadraticCurveTo(_x,_y + _height,_x,_y + _height - radius_bl);
	ctx.lineTo(_x,_y + radius_tl);
	ctx.quadraticCurveTo(_x,_y,_x + radius_tl,_y);
	ctx.closePath();
	if(_fill) {
		ctx.fill();
	}
	if(_stroke) {
		ctx.stroke();
	}
};
cc_CanvasTools.makeCircle = function(ctx,x,y,radius) {
	ctx.beginPath();
	ctx.arc(x,y,radius,0,Math.PI * 2,true);
};
cc_CanvasTools.circle = function(ctx,x,y,radius) {
	cc_CanvasTools.makeCircle(ctx,x,y,radius);
	ctx.fill();
	ctx.closePath();
};
cc_CanvasTools.circleFillStroke = function(ctx,x,y,radius) {
	cc_CanvasTools.makeCircle(ctx,x,y,radius);
	ctx.fill();
	ctx.stroke();
	ctx.closePath();
};
cc_CanvasTools.circleFill = function(ctx,x,y,radius) {
	cc_CanvasTools.fillCircle(ctx,x,y,radius);
};
cc_CanvasTools.fillCircle = function(ctx,x,y,radius) {
	cc_CanvasTools.makeCircle(ctx,x,y,radius);
	ctx.fill();
	ctx.closePath();
};
cc_CanvasTools.circleStroke = function(ctx,x,y,radius) {
	cc_CanvasTools.strokeCircle(ctx,x,y,radius);
};
cc_CanvasTools.strokeCircle = function(ctx,x,y,radius) {
	cc_CanvasTools.makeCircle(ctx,x,y,radius);
	ctx.stroke();
	ctx.closePath();
};
cc_CanvasTools.strokePolygon = function(ctx,x,y,sides,size) {
	cc_CanvasTools.polygon(ctx,x,y,sides,size);
	ctx.stroke();
};
cc_CanvasTools.fillPolygon = function(ctx,x,y,sides,size) {
	cc_CanvasTools.polygon(ctx,x,y,sides,size);
	ctx.fill();
};
cc_CanvasTools.outlinedPolygon = function(ctx,x,y,_sides,_size,_fill,_stroke) {
	ctx.fillStyle = _fill;
	cc_CanvasTools.fillPolygon(ctx,x,y,_sides,_size);
	ctx.strokeStyle = _stroke;
	cc_CanvasTools.strokePolygon(ctx,x,y,_sides,_size);
};
cc_CanvasTools.polygon = function(ctx,x,y,sides,size) {
	ctx.beginPath();
	ctx.moveTo(x + size * Math.cos(0),y + size * Math.sin(0));
	var _g1 = 0;
	var _g = sides;
	while(_g1 < _g) {
		var i = _g1++;
		ctx.lineTo(x + size * Math.cos(i * 2 * Math.PI / sides),y + size * Math.sin(i * 2 * Math.PI / sides));
	}
	ctx.closePath();
};
cc_CanvasTools.eellipse = function(ctx,x,y,width,height) {
	ctx.beginPath();
	var i = 0;
	var counter = 0;
	while(i < Math.PI * 2) {
		haxe_Log.trace("" + counter + ". - " + i + " < " + Math.PI * 2,{ fileName : "CanvasTools.hx", lineNumber : 174, className : "cc.CanvasTools", methodName : "eellipse"});
		ctx.lineTo(x + Math.cos(i) * width / 2,y + Math.sin(i) * height / 2);
		i += Math.PI / 16;
		++counter;
	}
	ctx.closePath();
};
cc_CanvasTools.ellipseFill = function(ctx,x,y,width,height) {
	cc_CanvasTools.fillEllipse(ctx,x,y,width,height);
};
cc_CanvasTools.fillEllipse = function(ctx,x,y,width,height) {
	ctx.beginPath();
	ctx.ellipse(x,y,width,height,0,0,2 * Math.PI);
	ctx.fill();
};
cc_CanvasTools.ellipseStroke = function(ctx,x,y,width,height) {
	cc_CanvasTools.strokeEllipse(ctx,x,y,width,height);
};
cc_CanvasTools.strokeEllipse = function(ctx,x,y,width,height) {
	ctx.beginPath();
	ctx.ellipse(x,y,width,height,0,0,2 * Math.PI);
	ctx.stroke();
};
cc_CanvasTools.ellipseFillStroke = function(ctx,x,y,width,height) {
	cc_CanvasTools.fillStrokeEllipse(ctx,x,y,width,height);
};
cc_CanvasTools.fillStrokeEllipse = function(ctx,x,y,width,height) {
	ctx.beginPath();
	ctx.ellipse(x,y,width,height,0,0,2 * Math.PI);
	ctx.fill();
	ctx.stroke();
};
cc_CanvasTools.line = function(ctx,x1,y1,x2,y2) {
	ctx.beginPath();
	ctx.moveTo(x1,y1);
	ctx.lineTo(x2,y2);
	ctx.stroke();
	ctx.beginPath();
};
cc_CanvasTools.triangle = function(ctx,x1,y1,x2,y2,x3,y3) {
	ctx.beginPath();
	ctx.moveTo(x1,y1);
	ctx.lineTo(x2,y2);
	ctx.lineTo(x3,y3);
	ctx.lineTo(x1,y1);
	ctx.stroke();
	ctx.closePath();
};
cc_CanvasTools.strokeTriangle = function(ctx,x1,y1,x2,y2,x3,y3) {
	ctx.beginPath();
	ctx.moveTo(x1,y1);
	ctx.lineTo(x2,y2);
	ctx.lineTo(x3,y3);
	ctx.lineTo(x1,y1);
	ctx.stroke();
	ctx.closePath();
};
cc_CanvasTools.fillTriangle = function(ctx,x1,y1,x2,y2,x3,y3) {
	ctx.beginPath();
	ctx.moveTo(x1,y1);
	ctx.lineTo(x2,y2);
	ctx.lineTo(x3,y3);
	ctx.lineTo(x1,y1);
	ctx.fill();
	ctx.closePath();
};
cc_CanvasTools.eqDownFillTriangle = function(ctx,x,y,sz) {
	ctx.translate(x,y);
	ctx.rotate(cc_util_MathUtil.radians(180));
	cc_CanvasTools.fillTriangle(ctx,0,0 - sz,sz,sz / 2,0 - sz,sz / 2);
	ctx.rotate(cc_util_MathUtil.radians(-180));
	ctx.translate(-x,-y);
};
cc_CanvasTools.eqDownTriangle = function(ctx,x,y,sz) {
	ctx.translate(x,y);
	ctx.rotate(cc_util_MathUtil.radians(180));
	cc_CanvasTools.triangle(ctx,0,0 - sz,sz,sz / 2,0 - sz,sz / 2);
	ctx.rotate(cc_util_MathUtil.radians(-180));
	ctx.translate(-x,-y);
};
cc_CanvasTools.eqFillTriangle = function(ctx,x,y,sz) {
	cc_CanvasTools.fillTriangle(ctx,x,y - sz,x + sz,y + sz / 2,x - sz,y + sz / 2);
};
cc_CanvasTools.eqTriangle = function(ctx,x,y,sz) {
	cc_CanvasTools.triangle(ctx,x,y - sz,x + sz,y + sz / 2,x - sz,y + sz / 2);
};
cc_CanvasTools.strokeWeight = function(ctx,inPx) {
	ctx.lineWidth = inPx;
};
cc_CanvasTools.fillColour = function(ctx,r,g,b,a) {
	cc_CanvasTools.colour(ctx,r,g,b,a);
};
cc_CanvasTools.fillColourRGB = function(ctx,rgb,a) {
	cc_CanvasTools.colour(ctx,rgb.r,rgb.g,rgb.b,a);
};
cc_CanvasTools.colour = function(ctx,r,g,b,a) {
	var c = cc_util_ColorUtil.getColour(r,g,b,a);
	ctx.fillStyle = c;
};
cc_CanvasTools.colourObj = function(ctx,rgb,a) {
	var c = cc_util_ColorUtil.getColour(rgb.r,rgb.g,rgb.b,a);
	ctx.fillStyle = c;
};
cc_CanvasTools.shadowColorRGB = function(ctx,rgb,a) {
	var c = cc_util_ColorUtil.getColour(rgb.r,rgb.g,rgb.b,a);
	ctx.shadowColor = c;
};
cc_CanvasTools.shadowSet = function(ctx,rgb,a,blur) {
	if(blur == null) {
		blur = 15;
	}
	if(a == null) {
		a = 1;
	}
	var c = cc_util_ColorUtil.getColour(rgb.r,rgb.g,rgb.b,a);
	ctx.shadowColor = c;
	ctx.shadowBlur = blur;
};
cc_CanvasTools.strokeColourObj = function(ctx,rgb,a) {
	cc_CanvasTools.lineColour(ctx,rgb.r,rgb.g,rgb.b,a);
};
cc_CanvasTools.lineColourRGB = function(ctx,rgb,a) {
	cc_CanvasTools.lineColour(ctx,rgb.r,rgb.g,rgb.b,a);
};
cc_CanvasTools.strokeColourRGB = function(ctx,rgb,a) {
	cc_CanvasTools.lineColour(ctx,rgb.r,rgb.g,rgb.b,a);
};
cc_CanvasTools.strokeColour = function(ctx,r,g,b,a) {
	cc_CanvasTools.lineColour(ctx,r,g,b,a);
};
cc_CanvasTools.lineColour = function(ctx,r,g,b,a) {
	ctx.strokeStyle = cc_util_ColorUtil.getColour(r,g,b,a);
};
cc_CanvasTools.colourName = function(ctx,name) {
	ctx.fillStyle = name;
};
cc_CanvasTools.background = function(ctx,r,g,b,a) {
	if(g == null) {
		ctx.fillStyle = cc_util_ColorUtil.rgb(r,r,r);
	} else if(b == null && a == null) {
		ctx.fillStyle = cc_util_ColorUtil.rgba(r,r,r,g);
	} else if(a == null) {
		ctx.fillStyle = cc_util_ColorUtil.rgb(r,g,b);
	} else {
		ctx.fillStyle = cc_util_ColorUtil.rgba(r,g,b,a);
	}
	ctx.fillRect(0,0,Global.w,Global.h);
};
cc_CanvasTools.backgroundObj = function(ctx,rgb) {
	cc_CanvasTools.background(ctx,rgb.r,rgb.g,rgb.b);
};
cc_CanvasTools.backgroundRGB = function(ctx,rgb) {
	cc_CanvasTools.background(ctx,rgb.r,rgb.g,rgb.b);
};
var cc_draw_Circle = function(ctx) {
	this._rotate = 0;
	this._alpha = 1;
	this._radius = 100;
	this._y = 100;
	this._x = 100;
	this._ctx = ctx;
};
$hxClasses["cc.draw.Circle"] = cc_draw_Circle;
cc_draw_Circle.__name__ = ["cc","draw","Circle"];
cc_draw_Circle.create = function(ctx) {
	var c = new cc_draw_Circle(ctx);
	return c;
};
cc_draw_Circle.prototype = {
	x: function(x) {
		this.set__x(x);
		return this;
	}
	,y: function(y) {
		this.set__y(y);
		return this;
	}
	,pos: function(x,y) {
		this.set__x(x);
		this.set__y(y);
		return this;
	}
	,radius: function(px) {
		this.set__radius(px);
		return this;
	}
	,rotate: function(degree) {
		this.set__rotate(degree);
		return this;
	}
	,rotateLeft: function() {
		this.set__rotate(-90);
		return this;
	}
	,rotateRight: function() {
		this.set__rotate(90);
		return this;
	}
	,rotateDown: function() {
		this.set__rotate(180);
		return this;
	}
	,color: function(value) {
		this._color = value;
		return this;
	}
	,gradient: function(value) {
		this.set__gradient(value);
		return this;
	}
	,fill: function(value) {
		this._color = value;
		return this;
	}
	,stroke: function(value) {
		this._colorstoke = value;
		return this;
	}
	,alpha: function(value) {
		this.set__alpha(value);
		return this;
	}
	,draw: function() {
		this._ctx.save();
		var previousColor = this._ctx.fillStyle;
		if(this._color != null && this.get__gradient() == null) {
			cc_CanvasTools.fillColourRGB(this._ctx,this._color,this.get__alpha());
		}
		if(this.get__gradient() != null) {
			this._ctx.fillStyle = this.get__gradient();
		}
		this.circleFill(this._ctx,this.get__x(),this.get__y(),this.get__radius());
		this._ctx.restore();
		this._ctx.fillStyle = previousColor;
		return this;
	}
	,makeCircle: function(ctx,x,y,radius) {
		ctx.beginPath();
		ctx.arc(x,y,radius,0,Math.PI * 2,true);
	}
	,circleFillStroke: function(ctx,x,y,radius) {
		this.makeCircle(ctx,x,y,radius);
		ctx.fill();
		ctx.stroke();
		ctx.closePath();
	}
	,circleFill: function(ctx,x,y,radius) {
		this.makeCircle(ctx,x,y,radius);
		ctx.fill();
		ctx.closePath();
	}
	,circleStroke: function(ctx,x,y,radius) {
		this.makeCircle(ctx,x,y,radius);
		ctx.stroke();
		ctx.closePath();
	}
	,get__x: function() {
		return this._x;
	}
	,set__x: function(value) {
		return this._x = value;
	}
	,get__y: function() {
		return this._y;
	}
	,set__y: function(value) {
		return this._y = value;
	}
	,get__radius: function() {
		return this._radius;
	}
	,set__radius: function(value) {
		return this._radius = value;
	}
	,get__alpha: function() {
		return this._alpha;
	}
	,set__alpha: function(value) {
		return this._alpha = value;
	}
	,get__rotate: function() {
		return this._rotate;
	}
	,set__rotate: function(value) {
		return this._rotate = value;
	}
	,get__gradient: function() {
		return this._gradient;
	}
	,set__gradient: function(value) {
		return this._gradient = value;
	}
	,toString: function() {
		return "Circle: " + Std.string(JSON.parse(JSON.stringify(this)));
	}
	,__class__: cc_draw_Circle
	,__properties__: {set__gradient:"set__gradient",get__gradient:"get__gradient",set__rotate:"set__rotate",get__rotate:"get__rotate",set__alpha:"set__alpha",get__alpha:"get__alpha",set__radius:"set__radius",get__radius:"get__radius",set__y:"set__y",get__y:"get__y",set__x:"set__x",get__x:"get__x"}
};
var cc_draw_Gradient = function(ctx) {
	this._radial = false;
	this._linear = true;
	this._dir = "l";
	this._endPoint = { x : 100, y : 100};
	this._startPoint = { x : 0, y : 0};
	this._height = 100;
	this._width = 100;
	this._y = 0;
	this._x = 0;
	this.setDir(this._dir);
	this._colorArray = [{ stop : 0, color : "black"},{ stop : 1, color : "white"}];
	this._ctx = ctx;
};
$hxClasses["cc.draw.Gradient"] = cc_draw_Gradient;
cc_draw_Gradient.__name__ = ["cc","draw","Gradient"];
cc_draw_Gradient.create = function(ctx) {
	var c = new cc_draw_Gradient(ctx);
	return c;
};
cc_draw_Gradient.prototype = {
	x: function(x) {
		this._x = x;
		return this;
	}
	,y: function(y) {
		this._y = y;
		return this;
	}
	,pos: function(x,y) {
		this._x = x;
		this._y = y;
		return this;
	}
	,size: function(w,h) {
		this._width = w;
		this._height = h;
		return this;
	}
	,linear: function() {
		this.set__linear(true);
		this.set__radial(false);
		return this;
	}
	,radial: function() {
		this.set__linear(false);
		this.set__radial(true);
		return this;
	}
	,circle: function(circle) {
		this._circle = circle;
		haxe_Log.trace(circle.toString(),{ fileName : "Gradient.hx", lineNumber : 106, className : "cc.draw.Gradient", methodName : "circle"});
		this._x = circle.get__x() - circle.get__radius();
		this._y = circle.get__y() - circle.get__radius();
		this._width = circle.get__radius() * 2;
		this._height = circle.get__radius() * 2;
		return this;
	}
	,left: function() {
		this.setDir("l");
		return this;
	}
	,right: function() {
		this.setDir("r");
		return this;
	}
	,top: function() {
		this.setDir("t");
		return this;
	}
	,bottom: function() {
		this.setDir("b");
		return this;
	}
	,direction: function(startPoint,endPoint) {
		this._startPoint = startPoint;
		this._endPoint = endPoint;
		return this;
	}
	,color: function(stop,color) {
		stop = cc_util_MathUtil.clamp(stop,0,1);
		this._colorArray.push({ stop : stop, color : color});
		return this;
	}
	,setDir: function(dir) {
		this._dir = dir;
		switch(dir) {
		case "b":
			this._startPoint = { x : this._x, y : this._y + this._height};
			this._endPoint = { x : this._x, y : this._y};
			break;
		case "l":
			this._startPoint = { x : this._x, y : this._y};
			this._endPoint = { x : this._x + this._width, y : this._y};
			break;
		case "r":
			this._startPoint = { x : this._x + this._width, y : this._y};
			this._endPoint = { x : this._x, y : this._y};
			break;
		case "t":
			this._startPoint = { x : this._x, y : this._y};
			this._endPoint = { x : this._x, y : this._y + this._height};
			break;
		default:
			this._startPoint = { x : this._x, y : this._y};
			this._endPoint = { x : this._x + this._width, y : this._y};
			haxe_Log.trace("case '" + dir + "': trace ('" + dir + "');",{ fileName : "Gradient.hx", lineNumber : 170, className : "cc.draw.Gradient", methodName : "setDir"});
		}
	}
	,draw: function() {
		this.setDir(this._dir);
		if(this.get__linear()) {
			this._get = this._ctx.createLinearGradient(this._startPoint.x,this._startPoint.y,this._endPoint.x,this._endPoint.y);
		} else {
			haxe_Log.trace("WIP",{ fileName : "Gradient.hx", lineNumber : 179, className : "cc.draw.Gradient", methodName : "draw"});
		}
		var _g1 = 0;
		var _g = this._colorArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var _c = this._colorArray[i];
			this._get.addColorStop(_c.stop,_c.color);
		}
		this._ctx.fillStyle = this._get;
		return this;
	}
	,get_width: function() {
		return this._width;
	}
	,set_width: function(value) {
		return this._width = value;
	}
	,get_height: function() {
		return this._height;
	}
	,set_height: function(value) {
		return this._height = value;
	}
	,get_get: function() {
		this._get = this._ctx.createLinearGradient(this._startPoint.x,this._startPoint.y,this._endPoint.x,this._endPoint.y);
		var _g1 = 0;
		var _g = this._colorArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var _c = this._colorArray[i];
			this._get.addColorStop(_c.stop,_c.color);
		}
		this._ctx.fillStyle = this._get;
		return this._get;
	}
	,get_xpos: function() {
		return this._x;
	}
	,get_ypos: function() {
		return this._y;
	}
	,get__linear: function() {
		return this._linear;
	}
	,set__linear: function(value) {
		return this._linear = value;
	}
	,get__radial: function() {
		return this._radial;
	}
	,set__radial: function(value) {
		return this._radial = value;
	}
	,toString: function() {
		return "Gradient: " + Std.string(JSON.parse(JSON.stringify(this)));
	}
	,__class__: cc_draw_Gradient
	,__properties__: {get_ypos:"get_ypos",get_xpos:"get_xpos",get_get:"get_get",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set__radial:"set__radial",get__radial:"get__radial",set__linear:"set__linear",get__linear:"get__linear"}
};
var cc_draw_Mask = function(ctx) {
	this._centered = true;
	this._alpha = 1;
	this._y = 0;
	this._x = 0;
	this._ctx = ctx;
};
$hxClasses["cc.draw.Mask"] = cc_draw_Mask;
cc_draw_Mask.__name__ = ["cc","draw","Mask"];
cc_draw_Mask.create = function(ctx) {
	var mask = new cc_draw_Mask(ctx);
	return mask;
};
cc_draw_Mask.prototype = {
	x: function(x) {
		this.set__x(x);
		return this;
	}
	,y: function(y) {
		this.set__y(y);
		return this;
	}
	,pos: function(x,y) {
		this.set__x(x);
		this.set__y(y);
		return this;
	}
	,outerSquare: function(width,height) {
		this.set__outerWidth(width);
		this.set__outerHeight(height);
		return this;
	}
	,innerSquare: function(width,height) {
		this.set__innerWidth(width);
		this.set__innerHeight(height);
		return this;
	}
	,centered: function(isCentered) {
		if(isCentered == null) {
			isCentered = true;
		}
		this.set__centered(isCentered);
		return this;
	}
	,color: function(value) {
		this._color = value;
		return this;
	}
	,fill: function(value) {
		this._color = value;
		return this;
	}
	,stroke: function(value) {
		this._colorstoke = value;
		return this;
	}
	,alpha: function(value) {
		this.set__alpha(value);
		return this;
	}
	,draw: function() {
		this._ctx.beginPath();
		var _centerx = this.get__outerWidth() / 2;
		var _centery = this.get__outerHeight() / 2;
		var _outerW2 = this.get__outerWidth() / 2;
		var _outerH2 = this.get__outerHeight() / 2;
		var _innerW2 = this.get__innerWidth() / 2;
		var _innerH2 = this.get__innerHeight() / 2;
		this._ctx.moveTo(this.get__x(),this.get__y());
		this._ctx.lineTo(this.get__x() + this.get__outerWidth(),this.get__y());
		this._ctx.lineTo(this.get__x() + this.get__outerWidth(),this.get__y() + this.get__outerHeight());
		this._ctx.lineTo(this.get__x(),this.get__y() + this.get__outerHeight());
		this._ctx.lineTo(this.get__x(),this.get__y());
		this._ctx.closePath();
		this._ctx.moveTo(_centerx - _innerW2,_centery - _innerH2);
		this._ctx.lineTo(_centerx - _innerW2,_centery + _innerH2);
		this._ctx.lineTo(_centerx + _innerW2,_centery + _innerH2);
		this._ctx.lineTo(_centerx + _innerW2,_centery - _innerH2);
		this._ctx.lineTo(_centerx - _innerW2,_centery - _innerH2);
		this._ctx.closePath();
		if(this._color != null) {
			cc_CanvasTools.fillColourRGB(this._ctx,this._color,this.get__alpha());
			this._ctx.fill();
		}
		if(this._colorstoke != null) {
			cc_CanvasTools.strokeColourRGB(this._ctx,this._colorstoke);
			this._ctx.lineWidth = 1;
			this._ctx.stroke();
		}
		return this;
	}
	,get__x: function() {
		return this._x;
	}
	,set__x: function(value) {
		return this._x = value;
	}
	,get__y: function() {
		return this._y;
	}
	,set__y: function(value) {
		return this._y = value;
	}
	,get__outerWidth: function() {
		return this._outerWidth;
	}
	,set__outerWidth: function(value) {
		return this._outerWidth = value;
	}
	,get__outerHeight: function() {
		return this._outerHeight;
	}
	,set__outerHeight: function(value) {
		return this._outerHeight = value;
	}
	,get__innerWidth: function() {
		return this._innerWidth;
	}
	,set__innerWidth: function(value) {
		return this._innerWidth = value;
	}
	,get__innerHeight: function() {
		return this._innerHeight;
	}
	,set__innerHeight: function(value) {
		return this._innerHeight = value;
	}
	,get__centered: function() {
		return this._centered;
	}
	,set__centered: function(value) {
		return this._centered = value;
	}
	,get__alpha: function() {
		return this._alpha;
	}
	,set__alpha: function(value) {
		return this._alpha = value;
	}
	,toString: function() {
		return "Masks: " + Std.string(JSON.parse(JSON.stringify(this)));
	}
	,__class__: cc_draw_Mask
	,__properties__: {set__centered:"set__centered",get__centered:"get__centered",set__alpha:"set__alpha",get__alpha:"get__alpha",set__innerHeight:"set__innerHeight",get__innerHeight:"get__innerHeight",set__innerWidth:"set__innerWidth",get__innerWidth:"get__innerWidth",set__outerHeight:"set__outerHeight",get__outerHeight:"get__outerHeight",set__outerWidth:"set__outerWidth",get__outerWidth:"get__outerWidth",set__y:"set__y",get__y:"get__y",set__x:"set__x",get__x:"get__x"}
};
var cc_draw_Spritesheet = function(ctx,img) {
	this._delay = 0;
	this._delayCounter = 0;
	this._fpsCounter = 0;
	this._pulse = null;
	this._currentSprite = 0;
	this._isLoop = false;
	this._isActive = false;
	this._isAnimation = false;
	this._scale = 1;
	this._fps = 60;
	this._isCentered = false;
	this._isDebug = false;
	this._index = 0;
	this._rotate = 0;
	this._alpha = 1;
	this._radius = 100;
	this._y = 100;
	this._x = 100;
	this._ctx = ctx;
	this.set__img(img);
	cc_draw_Spritesheet._idCounter++;
	this.set__id("spritesheet-" + cc_draw_Spritesheet._idCounter + "-" + new Date().getTime());
	this.set__width(this.get__img().width);
	this.set__height(this.get__img().height);
	this._totalFrame = Math.round(this.get__width() / this.get__cellWidth());
	if(this.get__index() > this._totalFrame) {
		this.set__index(this._totalFrame);
	}
};
$hxClasses["cc.draw.Spritesheet"] = cc_draw_Spritesheet;
cc_draw_Spritesheet.__name__ = ["cc","draw","Spritesheet"];
cc_draw_Spritesheet.create = function(ctx,img) {
	var spritesheet = new cc_draw_Spritesheet(ctx,img);
	return spritesheet;
};
cc_draw_Spritesheet.load = function(src,onLoadComplete) {
	var _img = new Image();
	_img.crossOrigin = "Anonymous";
	_img.src = src;
	_img.onload = function() {
		if(Reflect.isFunction(onLoadComplete)) {
			onLoadComplete.apply(onLoadComplete,[_img]);
		}
	};
};
cc_draw_Spritesheet.prototype = {
	img: function(img) {
		this.set__img(img);
		return this;
	}
	,x: function(x) {
		this.set__x(x);
		return this;
	}
	,y: function(y) {
		this.set__y(y);
		return this;
	}
	,pos: function(x,y) {
		this.set__x(x);
		this.set__y(y);
		return this;
	}
	,cell: function(width,height) {
		this.set__cellWidth(width);
		this.set__cellHeight(height);
		this._totalFrame = Math.round(this.get__width() / this.get__cellWidth());
		return this;
	}
	,center: function() {
		this.set__isCentered(true);
		return this;
	}
	,scale: function(scale) {
		this.set__scale(scale);
		return this;
	}
	,show: function(index) {
		if(index == null) {
			index = 0;
		}
		this.set__index(index);
		return this;
	}
	,index: function(index) {
		if(index == null) {
			index = 0;
		}
		this.set__index(index);
		return this;
	}
	,animate: function() {
		this._isAnimation = true;
		this._isActive = true;
		return this;
	}
	,loop: function(nr) {
		if(nr == null) {
			nr = -1;
		}
		this._isLoop = true;
		this._loopRepeat = nr;
		return this;
	}
	,start: function() {
		this._isActive = true;
		return this;
	}
	,stop: function() {
		this._isActive = false;
		return this;
	}
	,debug: function(value) {
		this.set__isDebug(value);
		return this;
	}
	,fps: function(value) {
		this.set__fps(value);
		return this;
	}
	,delay: function(frames) {
		this._delay = frames;
		return this;
	}
	,rotate: function(degree) {
		this.set__rotate(degree);
		return this;
	}
	,rotateLeft: function() {
		this.set__rotate(-90);
		return this;
	}
	,rotateRight: function() {
		this.set__rotate(90);
		return this;
	}
	,rotateDown: function() {
		this.set__rotate(180);
		return this;
	}
	,alpha: function(alpha) {
		this.set__alpha(cc_util_MathUtil.clamp(alpha,0,1));
		return this;
	}
	,draw: function() {
		if(this._isActive && this._pulse == null) {
			window.console.info("" + this.get__id() + " - this should happen only once! (" + this._pulse + " == null)");
			window.console.groupCollapsed("Spritesheet (" + this.get__id() + "):");
			window.console.warn("" + this.toString());
			window.console.groupEnd();
			this._pulse = window.requestAnimationFrame($bind(this,this.pulseHandler));
		}
		var xpos = 0;
		var ypos = 0;
		if(this.get__isCentered()) {
			xpos = -Math.round(this.get__cellWidth() / 2);
			ypos = -Math.round(this.get__cellHeight() / 2);
		}
		this._ctx.save();
		this._ctx.translate(this.get__x(),this.get__y());
		this._ctx.rotate(cc_util_MathUtil.radians(this.get__rotate()));
		this._ctx.clearRect(xpos * this.get__scale(),ypos * this.get__scale(),this.get__cellWidth() * this.get__scale(),this.get__cellHeight() * this.get__scale());
		var shiftX = this._currentSprite * this.get__cellWidth();
		var shiftY = 0;
		this._ctx.scale(this.get__scale(),this.get__scale());
		this._ctx.drawImage(this.get__img(),shiftX,shiftY,this.get__cellWidth(),this.get__cellHeight(),xpos,ypos,this.get__cellWidth(),this.get__cellHeight());
		this._ctx.restore();
		if(this._isAnimation) {
			this._currentSprite++;
			if(this._currentSprite > this._totalFrame) {
				if(this._isLoop) {
					if(this.get__isDebug()) {
						haxe_Log.trace("" + this.get__id() + " - start loop",{ fileName : "Spritesheet.hx", lineNumber : 298, className : "cc.draw.Spritesheet", methodName : "draw"});
					}
					this._currentSprite = this.get__index();
				} else {
					if(this.get__isDebug()) {
						haxe_Log.trace("" + this.get__id() + " - stop animation",{ fileName : "Spritesheet.hx", lineNumber : 302, className : "cc.draw.Spritesheet", methodName : "draw"});
					}
					this._isAnimation = false;
					this._currentSprite = this._totalFrame - 1;
					this.draw();
				}
			}
		}
		return this;
	}
	,pulseHandler: function(nr) {
		if(this._isActive) {
			if(this._delayCounter >= this._delay) {
				if(this._isAnimation) {
					var tmp = this.get__isDebug();
					if(this._fpsCounter % (60 / this.get__fps()) == 0) {
						this.draw();
					}
				}
			} else {
				this._delayCounter++;
			}
			window.requestAnimationFrame($bind(this,this.pulseHandler));
			this._fpsCounter++;
		}
	}
	,get__x: function() {
		return this._x;
	}
	,set__x: function(value) {
		return this._x = value;
	}
	,get__y: function() {
		return this._y;
	}
	,set__y: function(value) {
		return this._y = value;
	}
	,get__radius: function() {
		return this._radius;
	}
	,set__radius: function(value) {
		return this._radius = value;
	}
	,get__alpha: function() {
		return this._alpha;
	}
	,set__alpha: function(value) {
		return this._alpha = value;
	}
	,get__rotate: function() {
		return this._rotate;
	}
	,set__rotate: function(value) {
		return this._rotate = value;
	}
	,get__cellHeight: function() {
		return this._cellHeight;
	}
	,set__cellHeight: function(value) {
		return this._cellHeight = value;
	}
	,get__cellWidth: function() {
		return this._cellWidth;
	}
	,set__cellWidth: function(value) {
		return this._cellWidth = value;
	}
	,get__height: function() {
		return this._height;
	}
	,set__height: function(value) {
		return this._height = value;
	}
	,get__width: function() {
		return this._width;
	}
	,set__width: function(value) {
		return this._width = value;
	}
	,get__index: function() {
		return this._index;
	}
	,set__index: function(value) {
		this._currentSprite = value;
		return this._index = value;
	}
	,get__isDebug: function() {
		return this._isDebug;
	}
	,set__isDebug: function(value) {
		return this._isDebug = value;
	}
	,get__img: function() {
		return this._img;
	}
	,set__img: function(value) {
		return this._img = value;
	}
	,get__isCentered: function() {
		return this._isCentered;
	}
	,set__isCentered: function(value) {
		return this._isCentered = value;
	}
	,get__fps: function() {
		return this._fps;
	}
	,set__fps: function(value) {
		return this._fps = value;
	}
	,get__scale: function() {
		return this._scale;
	}
	,set__scale: function(value) {
		return this._scale = value;
	}
	,get__id: function() {
		return this._id;
	}
	,set__id: function(value) {
		return this._id = value;
	}
	,toString: function() {
		return "Spritesheet: " + Std.string(JSON.parse(JSON.stringify(this)));
	}
	,__class__: cc_draw_Spritesheet
	,__properties__: {set__id:"set__id",get__id:"get__id",set__scale:"set__scale",get__scale:"get__scale",set__fps:"set__fps",get__fps:"get__fps",set__img:"set__img",get__img:"get__img",set__isCentered:"set__isCentered",get__isCentered:"get__isCentered",set__isDebug:"set__isDebug",get__isDebug:"get__isDebug",set__index:"set__index",get__index:"get__index",set__cellHeight:"set__cellHeight",get__cellHeight:"get__cellHeight",set__cellWidth:"set__cellWidth",get__cellWidth:"get__cellWidth",set__height:"set__height",get__height:"get__height",set__width:"set__width",get__width:"get__width",set__rotate:"set__rotate",get__rotate:"get__rotate",set__alpha:"set__alpha",get__alpha:"get__alpha",set__radius:"set__radius",get__radius:"get__radius",set__y:"set__y",get__y:"get__y",set__x:"set__x",get__x:"get__x"}
};
var cc_draw_Text = function(ctx,text) {
	this._textBaseline = "alphabetic";
	this._textAlign = "left";
	this._font = "Arial";
	this._rotate = 0;
	this._alpha = 1;
	this._radius = 100;
	this._y = 100;
	this._x = 100;
	this._ctx = ctx;
	this._text = text;
};
$hxClasses["cc.draw.Text"] = cc_draw_Text;
cc_draw_Text.__name__ = ["cc","draw","Text"];
cc_draw_Text.create = function(ctx,text) {
	var Text = new cc_draw_Text(ctx,text);
	return Text;
};
cc_draw_Text.fillText = function(ctx,text,x,y,css,size) {
	if(size == null) {
		size = 20;
	}
	ctx.font = "" + size + "px " + StringTools.replace(css,";","");
	ctx.textAlign = "left";
	ctx.fillText(text,x,y);
};
cc_draw_Text.centerFillText = function(ctx,text,x,y,css,size) {
	if(size == null) {
		size = 20;
	}
	ctx.font = "" + size + "px " + StringTools.replace(css,";","");
	ctx.textAlign = "center";
	ctx.fillText(text,x,y);
};
cc_draw_Text.embedGoogleFont = function(family,callback,callbackArray) {
	var _id = "embededGoogleFonts";
	var _url = "https://fonts.googleapis.com/css?family=";
	var link = window.document.getElementById(_id);
	if(link != null) {
		var temp = StringTools.replace(link.href,_url,"");
		family = temp + "|" + family;
	} else {
		link = window.document.createElement("link");
	}
	if(callbackArray == null) {
		callbackArray = [family];
	}
	link.href = "" + _url + family;
	link.rel = "stylesheet";
	link.id = _id;
	link.onload = function() {
		if(callback != null) {
			callback.apply(callback,callbackArray);
		}
	};
	window.document.head.appendChild(link);
};
cc_draw_Text.prototype = {
	text: function(text) {
		this._text = text;
		return this;
	}
	,x: function(x) {
		this.set__x(x);
		return this;
	}
	,y: function(y) {
		this.set__y(y);
		return this;
	}
	,pos: function(x,y) {
		this.set__x(x);
		this.set__y(y);
		return this;
	}
	,font: function(font) {
		this._font = StringTools.replace(StringTools.replace(font,";",""),"+"," ");
		return this;
	}
	,size: function(px) {
		this.set__size(px);
		if(this.get__leading() == null) {
			this.set__leading(px);
		}
		return this;
	}
	,leading: function(px) {
		this.set__leading(px);
		return this;
	}
	,textAlign: function(pos) {
		this._textAlign = pos;
		return this;
	}
	,leftAlign: function() {
		this._textAlign = "left";
		return this;
	}
	,rightAlign: function() {
		this._textAlign = "right";
		return this;
	}
	,centerAlign: function() {
		this._textAlign = "center";
		return this;
	}
	,topBaseline: function() {
		this._textBaseline = "top";
		return this;
	}
	,middleBaseline: function() {
		this._textBaseline = "middle";
		return this;
	}
	,bottomBaseline: function() {
		this._textBaseline = "bottom";
		return this;
	}
	,textBaseline: function(pos) {
		this._textBaseline = pos;
		return this;
	}
	,rotate: function(degree) {
		this.set__rotate(degree);
		return this;
	}
	,rotateLeft: function() {
		this.set__rotate(-90);
		return this;
	}
	,rotateRight: function() {
		this.set__rotate(90);
		return this;
	}
	,rotateDown: function() {
		this.set__rotate(180);
		return this;
	}
	,color: function(value,alpha) {
		if(alpha == null) {
			alpha = 1;
		}
		this._color = value;
		this.set__alpha(cc_util_MathUtil.clamp(alpha,0,1));
		return this;
	}
	,alpha: function(alpha) {
		this.set__alpha(cc_util_MathUtil.clamp(alpha,0,1));
		return this;
	}
	,visible: function(isVisible) {
		if(isVisible) {
			this.set__alpha(cc_util_MathUtil.clamp(1,0,1));
		} else {
			this.set__alpha(cc_util_MathUtil.clamp(0,0,1));
		}
		return this;
	}
	,draw: function() {
		var isLines = false;
		this._ctx.save();
		if(this._text.indexOf("\n") != -1) {
			this._lineArray = this._text.split("\n");
			isLines = true;
		}
		var previousColor = this._ctx.fillStyle;
		if(this._color != null) {
			cc_CanvasTools.fillColourRGB(this._ctx,this._color,this.get__alpha());
		} else {
			var tmp = this._ctx;
			var $int = Std.parseInt(StringTools.replace(previousColor,"#","0x"));
			var tmp1 = this.get__alpha();
			cc_CanvasTools.fillColourRGB(tmp,{ r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255},tmp1);
		}
		var tmp2 = "" + this.get__size() + "px ";
		this._ctx.font = tmp2 + this._font;
		this._ctx.textAlign = this._textAlign;
		this._ctx.textBaseline = this._textBaseline;
		this._ctx.translate(this.get__x(),this.get__y());
		this._ctx.rotate(cc_util_MathUtil.radians(this.get__rotate()));
		if(!isLines) {
			this._ctx.fillText(this._text,0,0);
		} else {
			var _g1 = 0;
			var _g = this._lineArray.length;
			while(_g1 < _g) {
				var i = _g1++;
				var line = this._lineArray[i];
				this._ctx.fillText(line,0,i * this.get__leading());
			}
		}
		this._ctx.restore();
		this._ctx.fillStyle = previousColor;
		return this;
	}
	,get__x: function() {
		return this._x;
	}
	,set__x: function(value) {
		return this._x = value;
	}
	,get__y: function() {
		return this._y;
	}
	,set__y: function(value) {
		return this._y = value;
	}
	,get__radius: function() {
		return this._radius;
	}
	,set__radius: function(value) {
		return this._radius = value;
	}
	,get__alpha: function() {
		return this._alpha;
	}
	,set__alpha: function(value) {
		return this._alpha = value;
	}
	,get__rotate: function() {
		return this._rotate;
	}
	,set__rotate: function(value) {
		return this._rotate = value;
	}
	,get__gradient: function() {
		return this._gradient;
	}
	,set__gradient: function(value) {
		return this._gradient = value;
	}
	,get__size: function() {
		return this._size;
	}
	,set__size: function(value) {
		return this._size = value;
	}
	,get__leading: function() {
		return this._leading;
	}
	,set__leading: function(value) {
		return this._leading = value;
	}
	,toString: function() {
		return "Text: " + Std.string(JSON.parse(JSON.stringify(this)));
	}
	,__class__: cc_draw_Text
	,__properties__: {set__leading:"set__leading",get__leading:"get__leading",set__gradient:"set__gradient",get__gradient:"get__gradient",set__size:"set__size",get__size:"get__size",set__rotate:"set__rotate",get__rotate:"get__rotate",set__alpha:"set__alpha",get__alpha:"get__alpha",set__radius:"set__radius",get__radius:"get__radius",set__y:"set__y",get__y:"get__y",set__x:"set__x",get__x:"get__x"}
};
var cc_lets_Easing = function() { };
$hxClasses["cc.lets.Easing"] = cc_lets_Easing;
cc_lets_Easing.__name__ = ["cc","lets","Easing"];
cc_lets_Easing.linear = function(v) {
	return v;
};
cc_lets_Easing.quad = function(v) {
	return v * v;
};
cc_lets_Easing.cubic = function(v) {
	return v * v * v;
};
cc_lets_Easing.quart = function(v) {
	return v * v * v;
};
cc_lets_Easing.quint = function(v) {
	return v * v * v;
};
cc_lets_Easing.sine = function(v) {
	return 1 - Math.cos(v * Math.PI / 2);
};
cc_lets_Easing.circ = function(v) {
	return 1 - Math.sqrt(1 - v * v);
};
cc_lets_Easing.expo = function(v) {
	if(v == 0) {
		return 0;
	} else {
		return Math.pow(2,10 * (v - 1));
	}
};
cc_lets_Easing.back = function(v) {
	var s = 1.70158;
	return v * v * ((s + 1) * v - s);
};
cc_lets_Easing.bounce = function(v) {
	v = 1 - v;
	return 1 - (v < 0.363636363636363646 ? 7.5625 * v * v : v < 0.727272727272727293 ? 7.5625 * (v -= 0.545454545454545414) * v + .75 : v < 0.909090909090909061 ? 7.5625 * (v -= 0.818181818181818232) * v + .9375 : 7.5625 * (v -= 0.954545454545454586) * v + .984375);
};
cc_lets_Easing.elastic = function(v) {
	if(v == 0) {
		return 0;
	}
	if(v == 1) {
		return 1;
	}
	var p = .3;
	var s = p / 4;
	return -(Math.pow(2,10 * --v) * Math.sin((v - 0.075) * (2 * Math.PI) / 0.3));
};
cc_lets_Easing.reverse = function(f) {
	return function(v) {
		return 1 - f(1 - v);
	};
};
cc_lets_Easing.reflect = function(f) {
	return function(v) {
		if(v < 0.5) {
			return f(v * 2) / 2;
		} else {
			return 1 - f(2 - v * 2) / 2;
		}
	};
};
var cc_lets_Go = function(target,duration) {
	this.VERSION = "1.0.7";
	this.DEBUG = false;
	this.FRAME_RATE = 60;
	this._arc = 0;
	this._seconds = 0;
	this._delay = 0;
	this._initTime = 0;
	this._isDelayDone = false;
	this._isTimeBased = false;
	this._isOrbit = false;
	this._isWiggle = false;
	this._isYoyo = false;
	this._isFrom = false;
	this._props = new haxe_ds_StringMap();
	this._options = { };
	this._easing = cc_lets_easing_Quad.get_easeOut();
	this._id = "[lets.Go]" + this.VERSION + "." + new Date().getTime();
	this._seconds = duration;
	this._target = target;
	this._duration = this.getDuration(duration);
	if(this._isTimeBased) {
		this._initTime = this.getTimer();
	} else {
		this._initTime = this._duration;
	}
	cc_lets_Go._tweens.push(this);
	if(this.DEBUG) {
		window.console.log("New Go - _id: \"" + this._id + "\" / _duration: " + this._duration + " / _initTime: " + this._initTime + " / _tweens.length: " + cc_lets_Go._tweens.length);
	}
	haxe_Timer.delay($bind(this,this.init),1);
};
$hxClasses["cc.lets.Go"] = cc_lets_Go;
cc_lets_Go.__name__ = ["cc","lets","Go"];
cc_lets_Go.to = function(target,duration) {
	var Go = new cc_lets_Go(target,duration);
	Go._isFrom = false;
	return Go;
};
cc_lets_Go.from = function(target,duration) {
	var Go = new cc_lets_Go(target,duration);
	Go._isFrom = true;
	Go.updateProperties(0);
	return Go;
};
cc_lets_Go.timer = function(duration) {
	var Go = new cc_lets_Go({ },duration);
	return Go;
};
cc_lets_Go.frames = function(frames) {
	var Go = new cc_lets_Go({ },frames * 60);
	return Go;
};
cc_lets_Go.wiggle = function(target,x,y,wiggleRoom) {
	if(wiggleRoom == null) {
		wiggleRoom = 10;
	}
	var _go = 1 + Math.random();
	var _go1 = new cc_lets_Go(target,_go);
	_go1._isWiggle = true;
	var max = wiggleRoom;
	var min = -wiggleRoom;
	var value = Math.random() * (max - min);
	var value1 = x + value + min;
	var objValue = 0;
	if(Object.prototype.hasOwnProperty.call(_go1._target,"x")) {
		objValue = Reflect.getProperty(_go1._target,"x");
	}
	var _range = { key : "x", from : _go1._isFrom ? value1 : objValue, to : !_go1._isFrom ? value1 : objValue};
	_go1._props.set("x",_range);
	if(_go1._isFrom) {
		_go1.updateProperties(0);
	}
	var value2 = Math.random() * (max - min);
	var value3 = y + value2 + min;
	var objValue1 = 0;
	if(Object.prototype.hasOwnProperty.call(_go1._target,"y")) {
		objValue1 = Reflect.getProperty(_go1._target,"y");
	}
	var _range1 = { key : "y", from : _go1._isFrom ? value3 : objValue1, to : !_go1._isFrom ? value3 : objValue1};
	_go1._props.set("y",_range1);
	if(_go1._isFrom) {
		_go1.updateProperties(0);
	}
	_go1._easing = cc_lets_easing_Sine.get_easeInOut();
	_go1._options.onComplete = function() {
		cc_lets_Go.wiggle(target,x,y,wiggleRoom);
	};
	_go1._options.onCompleteParams = null;
	return _go1;
};
cc_lets_Go.orbit = function(target,x,y,radius,speed) {
	var _go = new cc_lets_Go(target,1 + Math.random());
	_go._isOrbit = true;
	var objValue = 0;
	if(Object.prototype.hasOwnProperty.call(_go._target,"x")) {
		objValue = Reflect.getProperty(_go._target,"x");
	}
	var _range = { key : "x", from : _go._isFrom ? x : objValue, to : !_go._isFrom ? x : objValue};
	_go._props.set("x",_range);
	if(_go._isFrom) {
		_go.updateProperties(0);
	}
	var objValue1 = 0;
	if(Object.prototype.hasOwnProperty.call(_go._target,"y")) {
		objValue1 = Reflect.getProperty(_go._target,"y");
	}
	var _range1 = { key : "y", from : _go._isFrom ? y : objValue1, to : !_go._isFrom ? y : objValue1};
	_go._props.set("y",_range1);
	if(_go._isFrom) {
		_go.updateProperties(0);
	}
	var objValue2 = 0;
	if(Object.prototype.hasOwnProperty.call(_go._target,"cx")) {
		objValue2 = Reflect.getProperty(_go._target,"cx");
	}
	var _range2 = { key : "cx", from : _go._isFrom ? x : objValue2, to : !_go._isFrom ? x : objValue2};
	_go._props.set("cx",_range2);
	if(_go._isFrom) {
		_go.updateProperties(0);
	}
	var objValue3 = 0;
	if(Object.prototype.hasOwnProperty.call(_go._target,"cy")) {
		objValue3 = Reflect.getProperty(_go._target,"cy");
	}
	var _range3 = { key : "cy", from : _go._isFrom ? y : objValue3, to : !_go._isFrom ? y : objValue3};
	_go._props.set("cy",_range3);
	if(_go._isFrom) {
		_go.updateProperties(0);
	}
	var objValue4 = 0;
	if(Object.prototype.hasOwnProperty.call(_go._target,"radius")) {
		objValue4 = Reflect.getProperty(_go._target,"radius");
	}
	var _range4 = { key : "radius", from : _go._isFrom ? radius : objValue4, to : !_go._isFrom ? radius : objValue4};
	_go._props.set("radius",_range4);
	if(_go._isFrom) {
		_go.updateProperties(0);
	}
	var objValue5 = 0;
	if(Object.prototype.hasOwnProperty.call(_go._target,"speed")) {
		objValue5 = Reflect.getProperty(_go._target,"speed");
	}
	var _range5 = { key : "speed", from : _go._isFrom ? speed : objValue5, to : !_go._isFrom ? speed : objValue5};
	_go._props.set("speed",_range5);
	if(_go._isFrom) {
		_go.updateProperties(0);
	}
	var objValue6 = 0;
	if(Object.prototype.hasOwnProperty.call(_go._target,"angle")) {
		objValue6 = Reflect.getProperty(_go._target,"angle");
	}
	var _range6 = { key : "angle", from : _go._isFrom ? speed : objValue6, to : !_go._isFrom ? speed : objValue6};
	_go._props.set("angle",_range6);
	if(_go._isFrom) {
		_go.updateProperties(0);
	}
	target["cx"] = x;
	target["cy"] = y;
	target["angle"] = 0;
	target["speed"] = speed;
	target["radius"] = radius;
	return _go;
};
cc_lets_Go.prototype = {
	isTimeBased: function(isTimeBased) {
		if(isTimeBased == null) {
			isTimeBased = true;
		}
		haxe_Log.trace("Fixme: this doesn\t work right now",{ fileName : "Go.hx", lineNumber : 190, className : "cc.lets.Go", methodName : "isTimeBased"});
		this._isTimeBased = isTimeBased;
		this._duration = this._duration / this.FRAME_RATE | 0;
		return this;
	}
	,width: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"width")) {
			objValue = Reflect.getProperty(this._target,"width");
		}
		var _range = { key : "width", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("width",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,height: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"height")) {
			objValue = Reflect.getProperty(this._target,"height");
		}
		var _range = { key : "height", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("height",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,x: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"x")) {
			objValue = Reflect.getProperty(this._target,"x");
		}
		var _range = { key : "x", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("x",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,y: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"y")) {
			objValue = Reflect.getProperty(this._target,"y");
		}
		var _range = { key : "y", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("y",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,pos: function(x,y) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"x")) {
			objValue = Reflect.getProperty(this._target,"x");
		}
		var _range = { key : "x", from : this._isFrom ? x : objValue, to : !this._isFrom ? x : objValue};
		this._props.set("x",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"y")) {
			objValue1 = Reflect.getProperty(this._target,"y");
		}
		var _range1 = { key : "y", from : this._isFrom ? y : objValue1, to : !this._isFrom ? y : objValue1};
		this._props.set("y",_range1);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,rotation: function(degree) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"rotation")) {
			objValue = Reflect.getProperty(this._target,"rotation");
		}
		var _range = { key : "rotation", from : this._isFrom ? degree : objValue, to : !this._isFrom ? degree : objValue};
		this._props.set("rotation",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,degree: function(degree) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"rotation")) {
			objValue = Reflect.getProperty(this._target,"rotation");
		}
		var _range = { key : "rotation", from : this._isFrom ? degree : objValue, to : !this._isFrom ? degree : objValue};
		this._props.set("rotation",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,radians: function(degree) {
		var value = degree * Math.PI / 180;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"rotation")) {
			objValue = Reflect.getProperty(this._target,"rotation");
		}
		var _range = { key : "rotation", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("rotation",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,alpha: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"alpha")) {
			objValue = Reflect.getProperty(this._target,"alpha");
		}
		var _range = { key : "alpha", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("alpha",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,scale: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"scaleX")) {
			objValue = Reflect.getProperty(this._target,"scaleX");
		}
		var _range = { key : "scaleX", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("scaleX",_range);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"scaleY")) {
			objValue1 = Reflect.getProperty(this._target,"scaleY");
		}
		var _range1 = { key : "scaleY", from : this._isFrom ? value : objValue1, to : !this._isFrom ? value : objValue1};
		this._props.set("scaleY",_range1);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		var objValue2 = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"scale")) {
			objValue2 = Reflect.getProperty(this._target,"scale");
		}
		var _range2 = { key : "scale", from : this._isFrom ? value : objValue2, to : !this._isFrom ? value : objValue2};
		this._props.set("scale",_range2);
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,yoyo: function() {
		this._isYoyo = true;
		return this;
	}
	,arc: function(dir) {
		this._arc = 0;
		return this;
	}
	,delay: function(duration) {
		this._delay = this.getDuration(duration);
		return this;
	}
	,prop: function(key,value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,key)) {
			objValue = Reflect.getProperty(this._target,key);
		}
		var _range = { key : key, from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		var _this = this._props;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,_range);
		} else {
			_this.h[key] = _range;
		}
		if(this._isFrom) {
			this.updateProperties(0);
		}
		return this;
	}
	,onComplete: function(func,arr) {
		this._options.onComplete = func;
		this._options.onCompleteParams = arr;
		return this;
	}
	,onAnimationStart: function(func,arr) {
		this._options.onAnimationStart = func;
		this._options.onAnimationStartParams = arr;
		return this;
	}
	,onUpdate: function(func,arr) {
		this._options.onUpdate = func;
		this._options.onUpdateParams = arr;
		return this;
	}
	,ease: function(easing) {
		this._easing = easing;
		return this;
	}
	,stop: function() {
		this.destroy();
	}
	,init: function() {
		if(this._isTimeBased) {
			haxe_Log.trace("TODO: build timebased animation",{ fileName : "Go.hx", lineNumber : 441, className : "cc.lets.Go", methodName : "init"});
		} else if(cc_lets_Go._requestId == null) {
			cc_lets_Go._requestId = window.requestAnimationFrame($bind(this,this.onEnterFrameHandler));
		}
	}
	,onEnterFrameHandler: function(time) {
		if(cc_lets_Go._tweens.length <= 0) {
			if(!this._isTimeBased) {
				window.cancelAnimationFrame(cc_lets_Go._requestId);
				return;
			}
		} else {
			var _g1 = 0;
			var _g = cc_lets_Go._tweens.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(cc_lets_Go._tweens[i] != null) {
					cc_lets_Go._tweens[i].update();
				}
			}
		}
		cc_lets_Go._requestId = window.requestAnimationFrame($bind(this,this.onEnterFrameHandler));
	}
	,update: function() {
		if(this._delay > 0 && this._isTimeBased) {
			haxe_Log.trace("FIXME this doesn't work yet",{ fileName : "Go.hx", lineNumber : 480, className : "cc.lets.Go", methodName : "update"});
		}
		if(this._delay > 0) {
			this._delay--;
			return;
		}
		if(!this._isDelayDone) {
			if(this.DEBUG) {
				haxe_Log.trace("should trigger only once: " + this._id,{ fileName : "Go.hx", lineNumber : 487, className : "cc.lets.Go", methodName : "update"});
			}
			if(Reflect.isFunction(this._options.onAnimationStart)) {
				var func = this._options.onAnimationStart;
				var arr = this._options.onAnimationStartParams != null ? this._options.onAnimationStartParams : [];
				func.apply(func,arr);
			}
		}
		this._isDelayDone = true;
		this._initTime--;
		var progressed = this._duration - this._initTime;
		if(this._isTimeBased) {
			progressed = this.getTimer() - this._initTime;
		}
		if(progressed >= this._duration) {
			this.updateProperties(this._duration);
			this.complete();
		} else {
			this.updateProperties(progressed);
		}
	}
	,updateProperties: function(time) {
		if(Reflect.isFunction(this._options.onUpdate)) {
			var func = this._options.onUpdate;
			var arr = this._options.onUpdateParams != null ? this._options.onUpdateParams : [];
			func.apply(func,arr);
		}
		if(this._props == null) {
			return;
		}
		var n = this._props.keys();
		while(n.hasNext()) {
			var n1 = n.next();
			var _this = this._props;
			var range = __map_reserved[n1] != null ? _this.getReserved(n1) : _this.h[n1];
			if(this._isOrbit) {
				var _this1 = this._props;
				var __cx = __map_reserved["cx"] != null ? _this1.getReserved("cx") : _this1.h["cx"];
				var _this2 = this._props;
				var __cy = __map_reserved["cy"] != null ? _this2.getReserved("cy") : _this2.h["cy"];
				var _this3 = this._props;
				var __angle = __map_reserved["angle"] != null ? _this3.getReserved("angle") : _this3.h["angle"];
				var _this4 = this._props;
				var __speed = __map_reserved["speed"] != null ? _this4.getReserved("speed") : _this4.h["speed"];
				var _this5 = this._props;
				var __rad = __map_reserved["radius"] != null ? _this5.getReserved("radius") : _this5.h["radius"];
				haxe_Log.trace("cx: " + __cx.to + ",  cy: " + __cy.to + " , " + __angle.to + ", " + __speed.to + ", " + __rad.to,{ fileName : "Go.hx", lineNumber : 545, className : "cc.lets.Go", methodName : "updateProperties"});
				haxe_Log.trace("" + n1 + " == \"angle\" : " + Std.string(n1 == "angle"),{ fileName : "Go.hx", lineNumber : 556, className : "cc.lets.Go", methodName : "updateProperties"});
				haxe_Log.trace(this._target,{ fileName : "Go.hx", lineNumber : 558, className : "cc.lets.Go", methodName : "updateProperties"});
				if(n1 == "angle") {
					var aa = __angle.to + __speed.to;
					Reflect.setProperty(this._target,n1,aa);
				}
			} else {
				Reflect.setProperty(this._target,n1,this._easing.ease(time,range.from,range.to - range.from,this._duration));
			}
		}
	}
	,complete: function() {
		if(this.DEBUG) {
			haxe_Log.trace("complete :: \"" + this._id + "\", _duration: " + this._duration + ", _seconds: " + this._seconds + ", _initTime: " + this._initTime + " / _tweens.length: " + cc_lets_Go._tweens.length,{ fileName : "Go.hx", lineNumber : 581, className : "cc.lets.Go", methodName : "complete"});
		}
		if(this._isYoyo) {
			var n = this._props.keys();
			while(n.hasNext()) {
				var n1 = n.next();
				var _this = this._props;
				var range = __map_reserved[n1] != null ? _this.getReserved(n1) : _this.h[n1];
				var _rangeReverse = { key : n1, from : range.to, to : range.from};
				var _this1 = this._props;
				if(__map_reserved[n1] != null) {
					_this1.setReserved(n1,_rangeReverse);
				} else {
					_this1.h[n1] = _rangeReverse;
				}
			}
			if(this._isTimeBased) {
				this._initTime = this.getTimer();
			} else {
				this._initTime = this._duration;
			}
			this._isYoyo = false;
			return;
		}
		var func = this._options.onComplete;
		var arr = this._options.onCompleteParams != null ? this._options.onCompleteParams : [];
		this.destroy();
		if(Reflect.isFunction(func)) {
			func.apply(func,arr);
		}
	}
	,getDuration: function(duration) {
		var d = 0;
		if(this._isTimeBased) {
			d = duration * 1000 | 0;
		} else {
			if(duration <= 0) {
				duration = 0.1;
			}
			d = duration * this.FRAME_RATE | 0;
		}
		return d;
	}
	,getTimer: function() {
		return new Date().getTime() | 0;
	}
	,destroy: function() {
		if(Lambda.has(cc_lets_Go._tweens,this)) {
			HxOverrides.remove(cc_lets_Go._tweens,this);
		}
		if(this._options) {
			this._easing = cc_lets_easing_Quad.get_easeOut();
			this._options = { };
			this._target = null;
			this._props = null;
			this._duration = 0;
			this._initTime = 0;
			this._delay = 0;
		}
	}
	,__class__: cc_lets_Go
};
var cc_lets_easing_Elastic = function() { };
$hxClasses["cc.lets.easing.Elastic"] = cc_lets_easing_Elastic;
cc_lets_easing_Elastic.__name__ = ["cc","lets","easing","Elastic"];
cc_lets_easing_Elastic.__properties__ = {get_easeOut:"get_easeOut",get_easeInOut:"get_easeInOut",get_easeIn:"get_easeIn"};
cc_lets_easing_Elastic.get_easeIn = function() {
	return new cc_lets_easing_ElasticEaseIn(0.1,0.4);
};
cc_lets_easing_Elastic.get_easeInOut = function() {
	return new cc_lets_easing_ElasticEaseInOut(0.1,0.4);
};
cc_lets_easing_Elastic.get_easeOut = function() {
	return new cc_lets_easing_ElasticEaseOut(0.1,0.4);
};
var cc_lets_easing_IEasing = function() { };
$hxClasses["cc.lets.easing.IEasing"] = cc_lets_easing_IEasing;
cc_lets_easing_IEasing.__name__ = ["cc","lets","easing","IEasing"];
cc_lets_easing_IEasing.prototype = {
	__class__: cc_lets_easing_IEasing
};
var cc_lets_easing_ElasticEaseIn = function(a,p) {
	this.a = a;
	this.p = p;
};
$hxClasses["cc.lets.easing.ElasticEaseIn"] = cc_lets_easing_ElasticEaseIn;
cc_lets_easing_ElasticEaseIn.__name__ = ["cc","lets","easing","ElasticEaseIn"];
cc_lets_easing_ElasticEaseIn.__interfaces__ = [cc_lets_easing_IEasing];
cc_lets_easing_ElasticEaseIn.prototype = {
	calculate: function(k) {
		if(k == 0) {
			return 0;
		}
		if(k == 1) {
			return 1;
		}
		var s;
		if(this.a < 1) {
			this.a = 1;
			s = this.p / 4;
		} else {
			s = this.p / (2 * Math.PI) * Math.asin(1 / this.a);
		}
		return -(this.a * Math.pow(2,10 * --k) * Math.sin((k - s) * (2 * Math.PI) / this.p));
	}
	,ease: function(t,b,c,d) {
		if(t == 0) {
			return b;
		}
		if((t /= d) == 1) {
			return b + c;
		}
		var s;
		if(this.a < Math.abs(c)) {
			this.a = c;
			s = this.p / 4;
		} else {
			s = this.p / (2 * Math.PI) * Math.asin(c / this.a);
		}
		return -(this.a * Math.pow(2,10 * --t) * Math.sin((t * d - s) * (2 * Math.PI) / this.p)) + b;
	}
	,__class__: cc_lets_easing_ElasticEaseIn
};
var cc_lets_easing_ElasticEaseInOut = function(a,p) {
	this.a = a;
	this.p = p;
};
$hxClasses["cc.lets.easing.ElasticEaseInOut"] = cc_lets_easing_ElasticEaseInOut;
cc_lets_easing_ElasticEaseInOut.__name__ = ["cc","lets","easing","ElasticEaseInOut"];
cc_lets_easing_ElasticEaseInOut.__interfaces__ = [cc_lets_easing_IEasing];
cc_lets_easing_ElasticEaseInOut.prototype = {
	calculate: function(k) {
		if(k == 0) {
			return 0;
		}
		if((k /= 0.5) == 2) {
			return 1;
		}
		var p = 0.449999999999999956;
		var a = 1;
		var s = p / 4;
		if(k < 1) {
			return -0.5 * (Math.pow(2,10 * --k) * Math.sin((k - s) * (2 * Math.PI) / p));
		}
		return Math.pow(2,-10 * --k) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;
	}
	,ease: function(t,b,c,d) {
		if(t == 0) {
			return b;
		}
		if((t /= d / 2) == 2) {
			return b + c;
		}
		var s;
		if(this.a < Math.abs(c)) {
			this.a = c;
			s = this.p / 4;
		} else {
			s = this.p / (2 * Math.PI) * Math.asin(c / this.a);
		}
		if(t < 1) {
			return -0.5 * (this.a * Math.pow(2,10 * --t) * Math.sin((t * d - s) * (2 * Math.PI) / this.p)) + b;
		}
		return this.a * Math.pow(2,-10 * --t) * Math.sin((t * d - s) * (2 * Math.PI) / this.p) * 0.5 + c + b;
	}
	,__class__: cc_lets_easing_ElasticEaseInOut
};
var cc_lets_easing_ElasticEaseOut = function(a,p) {
	this.a = a;
	this.p = p;
};
$hxClasses["cc.lets.easing.ElasticEaseOut"] = cc_lets_easing_ElasticEaseOut;
cc_lets_easing_ElasticEaseOut.__name__ = ["cc","lets","easing","ElasticEaseOut"];
cc_lets_easing_ElasticEaseOut.__interfaces__ = [cc_lets_easing_IEasing];
cc_lets_easing_ElasticEaseOut.prototype = {
	calculate: function(k) {
		if(k == 0) {
			return 0;
		}
		if(k == 1) {
			return 1;
		}
		var s;
		if(this.a < 1) {
			this.a = 1;
			s = this.p / 4;
		} else {
			s = this.p / (2 * Math.PI) * Math.asin(1 / this.a);
		}
		return this.a * Math.pow(2,-10 * k) * Math.sin((k - s) * (2 * Math.PI) / this.p) + 1;
	}
	,ease: function(t,b,c,d) {
		if(t == 0) {
			return b;
		}
		if((t /= d) == 1) {
			return b + c;
		}
		var s;
		if(this.a < Math.abs(c)) {
			this.a = c;
			s = this.p / 4;
		} else {
			s = this.p / (2 * Math.PI) * Math.asin(c / this.a);
		}
		return this.a * Math.pow(2,-10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / this.p) + c + b;
	}
	,__class__: cc_lets_easing_ElasticEaseOut
};
var cc_lets_easing_Quad = function() { };
$hxClasses["cc.lets.easing.Quad"] = cc_lets_easing_Quad;
cc_lets_easing_Quad.__name__ = ["cc","lets","easing","Quad"];
cc_lets_easing_Quad.__properties__ = {get_easeOut:"get_easeOut",get_easeInOut:"get_easeInOut",get_easeIn:"get_easeIn"};
cc_lets_easing_Quad.get_easeIn = function() {
	return new cc_lets_easing_QuadEaseIn();
};
cc_lets_easing_Quad.get_easeInOut = function() {
	return new cc_lets_easing_QuadEaseInOut();
};
cc_lets_easing_Quad.get_easeOut = function() {
	return new cc_lets_easing_QuadEaseOut();
};
var cc_lets_easing_QuadEaseIn = function() {
};
$hxClasses["cc.lets.easing.QuadEaseIn"] = cc_lets_easing_QuadEaseIn;
cc_lets_easing_QuadEaseIn.__name__ = ["cc","lets","easing","QuadEaseIn"];
cc_lets_easing_QuadEaseIn.__interfaces__ = [cc_lets_easing_IEasing];
cc_lets_easing_QuadEaseIn.prototype = {
	calculate: function(k) {
		return k * k;
	}
	,ease: function(t,b,c,d) {
		return c * (t /= d) * t + b;
	}
	,__class__: cc_lets_easing_QuadEaseIn
};
var cc_lets_easing_QuadEaseInOut = function() {
};
$hxClasses["cc.lets.easing.QuadEaseInOut"] = cc_lets_easing_QuadEaseInOut;
cc_lets_easing_QuadEaseInOut.__name__ = ["cc","lets","easing","QuadEaseInOut"];
cc_lets_easing_QuadEaseInOut.__interfaces__ = [cc_lets_easing_IEasing];
cc_lets_easing_QuadEaseInOut.prototype = {
	calculate: function(k) {
		if((k *= 2) < 1) {
			return 0.5 * k * k;
		}
		return -0.5 * ((k - 1) * (k - 3) - 1);
	}
	,ease: function(t,b,c,d) {
		if((t /= d / 2) < 1) {
			return c / 2 * t * t + b;
		}
		return -c / 2 * ((t - 1) * (t - 3) - 1) + b;
	}
	,__class__: cc_lets_easing_QuadEaseInOut
};
var cc_lets_easing_QuadEaseOut = function() {
};
$hxClasses["cc.lets.easing.QuadEaseOut"] = cc_lets_easing_QuadEaseOut;
cc_lets_easing_QuadEaseOut.__name__ = ["cc","lets","easing","QuadEaseOut"];
cc_lets_easing_QuadEaseOut.__interfaces__ = [cc_lets_easing_IEasing];
cc_lets_easing_QuadEaseOut.prototype = {
	calculate: function(k) {
		return -k * (k - 2);
	}
	,ease: function(t,b,c,d) {
		return -c * (t /= d) * (t - 2) + b;
	}
	,__class__: cc_lets_easing_QuadEaseOut
};
var cc_lets_easing_Quart = function() { };
$hxClasses["cc.lets.easing.Quart"] = cc_lets_easing_Quart;
cc_lets_easing_Quart.__name__ = ["cc","lets","easing","Quart"];
cc_lets_easing_Quart.__properties__ = {get_easeOut:"get_easeOut",get_easeInOut:"get_easeInOut",get_easeIn:"get_easeIn"};
cc_lets_easing_Quart.get_easeIn = function() {
	return new cc_lets_easing_QuartEaseIn();
};
cc_lets_easing_Quart.get_easeInOut = function() {
	return new cc_lets_easing_QuartEaseInOut();
};
cc_lets_easing_Quart.get_easeOut = function() {
	return new cc_lets_easing_QuartEaseOut();
};
var cc_lets_easing_QuartEaseIn = function() {
};
$hxClasses["cc.lets.easing.QuartEaseIn"] = cc_lets_easing_QuartEaseIn;
cc_lets_easing_QuartEaseIn.__name__ = ["cc","lets","easing","QuartEaseIn"];
cc_lets_easing_QuartEaseIn.__interfaces__ = [cc_lets_easing_IEasing];
cc_lets_easing_QuartEaseIn.prototype = {
	calculate: function(k) {
		return k * k * k * k;
	}
	,ease: function(t,b,c,d) {
		return c * (t /= d) * t * t * t + b;
	}
	,__class__: cc_lets_easing_QuartEaseIn
};
var cc_lets_easing_QuartEaseInOut = function() {
};
$hxClasses["cc.lets.easing.QuartEaseInOut"] = cc_lets_easing_QuartEaseInOut;
cc_lets_easing_QuartEaseInOut.__name__ = ["cc","lets","easing","QuartEaseInOut"];
cc_lets_easing_QuartEaseInOut.__interfaces__ = [cc_lets_easing_IEasing];
cc_lets_easing_QuartEaseInOut.prototype = {
	calculate: function(k) {
		if((k *= 2) < 1) {
			return 0.5 * k * k * k * k;
		}
		return -0.5 * ((k -= 2) * k * k * k - 2);
	}
	,ease: function(t,b,c,d) {
		if((t /= d / 2) < 1) {
			return c / 2 * t * t * t * t + b;
		}
		return -c / 2 * ((t -= 2) * t * t * t - 2) + b;
	}
	,__class__: cc_lets_easing_QuartEaseInOut
};
var cc_lets_easing_QuartEaseOut = function() {
};
$hxClasses["cc.lets.easing.QuartEaseOut"] = cc_lets_easing_QuartEaseOut;
cc_lets_easing_QuartEaseOut.__name__ = ["cc","lets","easing","QuartEaseOut"];
cc_lets_easing_QuartEaseOut.__interfaces__ = [cc_lets_easing_IEasing];
cc_lets_easing_QuartEaseOut.prototype = {
	calculate: function(k) {
		return -(--k * k * k * k - 1);
	}
	,ease: function(t,b,c,d) {
		t = t / d - 1;
		return -c * (t * t * t * t - 1) + b;
	}
	,__class__: cc_lets_easing_QuartEaseOut
};
var cc_lets_easing_Sine = function() { };
$hxClasses["cc.lets.easing.Sine"] = cc_lets_easing_Sine;
cc_lets_easing_Sine.__name__ = ["cc","lets","easing","Sine"];
cc_lets_easing_Sine.__properties__ = {get_easeOut:"get_easeOut",get_easeInOut:"get_easeInOut",get_easeIn:"get_easeIn"};
cc_lets_easing_Sine.get_easeIn = function() {
	return new cc_lets_easing_SineEaseIn();
};
cc_lets_easing_Sine.get_easeInOut = function() {
	return new cc_lets_easing_SineEaseInOut();
};
cc_lets_easing_Sine.get_easeOut = function() {
	return new cc_lets_easing_SineEaseOut();
};
var cc_lets_easing_SineEaseIn = function() {
};
$hxClasses["cc.lets.easing.SineEaseIn"] = cc_lets_easing_SineEaseIn;
cc_lets_easing_SineEaseIn.__name__ = ["cc","lets","easing","SineEaseIn"];
cc_lets_easing_SineEaseIn.__interfaces__ = [cc_lets_easing_IEasing];
cc_lets_easing_SineEaseIn.prototype = {
	calculate: function(k) {
		return 1 - Math.cos(k * (Math.PI / 2));
	}
	,ease: function(t,b,c,d) {
		return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;
	}
	,__class__: cc_lets_easing_SineEaseIn
};
var cc_lets_easing_SineEaseInOut = function() {
};
$hxClasses["cc.lets.easing.SineEaseInOut"] = cc_lets_easing_SineEaseInOut;
cc_lets_easing_SineEaseInOut.__name__ = ["cc","lets","easing","SineEaseInOut"];
cc_lets_easing_SineEaseInOut.__interfaces__ = [cc_lets_easing_IEasing];
cc_lets_easing_SineEaseInOut.prototype = {
	calculate: function(k) {
		return -(Math.cos(Math.PI * k) - 1) / 2;
	}
	,ease: function(t,b,c,d) {
		return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;
	}
	,__class__: cc_lets_easing_SineEaseInOut
};
var cc_lets_easing_SineEaseOut = function() {
};
$hxClasses["cc.lets.easing.SineEaseOut"] = cc_lets_easing_SineEaseOut;
cc_lets_easing_SineEaseOut.__name__ = ["cc","lets","easing","SineEaseOut"];
cc_lets_easing_SineEaseOut.__interfaces__ = [cc_lets_easing_IEasing];
cc_lets_easing_SineEaseOut.prototype = {
	calculate: function(k) {
		return Math.sin(k * (Math.PI / 2));
	}
	,ease: function(t,b,c,d) {
		return c * Math.sin(t / d * (Math.PI / 2)) + b;
	}
	,__class__: cc_lets_easing_SineEaseOut
};
var cc_noise_OpenSimplexNoise = function() {
	this.setup(cc_noise_OpenSimplexNoise.DEFAULT_SEED);
};
$hxClasses["cc.noise.OpenSimplexNoise"] = cc_noise_OpenSimplexNoise;
cc_noise_OpenSimplexNoise.__name__ = ["cc","noise","OpenSimplexNoise"];
cc_noise_OpenSimplexNoise.fastFloor = function(x) {
	return Math.floor(x);
};
cc_noise_OpenSimplexNoise.prototype = {
	setup: function(seed) {
		this.perm = [];
		this.permGradIndex3D = [];
		var source = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			source.push(i);
		}
		seed = seed * 636413622 + 14426950;
		seed = seed * 636413622 + 14426950;
		seed = seed * 636413622 + 14426950;
		var i1 = 255;
		while(i1 >= 0) {
			seed = seed * 636413622 + 14426950;
			var r = (seed + 31) % (i1 + 1);
			if(r < 0) {
				r += i1 + 1;
			}
			this.perm[i1] = source[r];
			this.permGradIndex3D[i1] = this.perm[i1] % Math.floor(cc_noise_OpenSimplexNoise.gradients3D.length / 3) * 3;
			source[r] = source[i1];
			--i1;
		}
	}
	,'eval': function(x,y) {
		var stretchOffset = (x + y) * cc_noise_OpenSimplexNoise.STRETCH_CONSTANT_2D;
		var xs = x + stretchOffset;
		var ys = y + stretchOffset;
		var xsb = cc_noise_OpenSimplexNoise.fastFloor(xs);
		var ysb = cc_noise_OpenSimplexNoise.fastFloor(ys);
		var squishOffset = (xsb + ysb) * cc_noise_OpenSimplexNoise.SQUISH_CONSTANT_2D;
		var xb = xsb + squishOffset;
		var yb = ysb + squishOffset;
		var xins = xs - xsb;
		var yins = ys - ysb;
		var inSum = xins + yins;
		var dx0 = x - xb;
		var dy0 = y - yb;
		var dx_ext = 0;
		var dy_ext = 0;
		var xsv_ext = 0;
		var ysv_ext = 0;
		var sv_ext = 0;
		var value = 0;
		var dx1 = dx0 - 1 - cc_noise_OpenSimplexNoise.SQUISH_CONSTANT_2D;
		var dy1 = dy0 - cc_noise_OpenSimplexNoise.SQUISH_CONSTANT_2D;
		var attn1 = 2 - dx1 * dx1 - dy1 * dy1;
		if(attn1 > 0) {
			attn1 *= attn1;
			value += attn1 * attn1 * this.extrapolate(xsb + 1,ysb,dx1,dy1);
		}
		var dx2 = dx0 - cc_noise_OpenSimplexNoise.SQUISH_CONSTANT_2D;
		var dy2 = dy0 - 1 - cc_noise_OpenSimplexNoise.SQUISH_CONSTANT_2D;
		var attn2 = 2 - dx2 * dx2 - dy2 * dy2;
		if(attn2 > 0) {
			attn2 *= attn2;
			value += attn2 * attn2 * this.extrapolate(xsb,ysb + 1,dx2,dy2);
		}
		if(inSum <= 1) {
			var zins = 1 - inSum;
			if(zins > xins || zins > yins) {
				if(xins > yins) {
					xsv_ext = xsb + 1;
					ysv_ext = ysb - 1;
					dx_ext = dx0 - 1;
					dy_ext = dy0 + 1;
				} else {
					xsv_ext = xsb - 1;
					ysv_ext = ysb + 1;
					dx_ext = dx0 + 1;
					dy_ext = dy0 - 1;
				}
			} else {
				xsv_ext = xsb + 1;
				ysv_ext = ysb + 1;
				dx_ext = dx0 - 1 - 2 * cc_noise_OpenSimplexNoise.SQUISH_CONSTANT_2D;
				dy_ext = dy0 - 1 - 2 * cc_noise_OpenSimplexNoise.SQUISH_CONSTANT_2D;
			}
		} else {
			var zins1 = 2 - inSum;
			if(zins1 < xins || zins1 < yins) {
				if(xins > yins) {
					xsv_ext = xsb + 2;
					ysv_ext = ysb;
					dx_ext = dx0 - 2 - 2 * cc_noise_OpenSimplexNoise.SQUISH_CONSTANT_2D;
					dy_ext = dy0 - 2 * cc_noise_OpenSimplexNoise.SQUISH_CONSTANT_2D;
				} else {
					xsv_ext = xsb;
					ysv_ext = ysb + 2;
					dx_ext = dx0 - 2 * cc_noise_OpenSimplexNoise.SQUISH_CONSTANT_2D;
					dy_ext = dy0 - 2 - 2 * cc_noise_OpenSimplexNoise.SQUISH_CONSTANT_2D;
				}
			} else {
				dx_ext = dx0;
				dy_ext = dy0;
				xsv_ext = xsb;
				ysv_ext = ysb;
			}
			++xsb;
			++ysb;
			dx0 = dx0 - 1 - 2 * cc_noise_OpenSimplexNoise.SQUISH_CONSTANT_2D;
			dy0 = dy0 - 1 - 2 * cc_noise_OpenSimplexNoise.SQUISH_CONSTANT_2D;
		}
		var attn0 = 2 - dx0 * dx0 - dy0 * dy0;
		if(attn0 > 0) {
			attn0 *= attn0;
			value += attn0 * attn0 * this.extrapolate(xsb,ysb,dx0,dy0);
		}
		var attn_ext = 2 - dx_ext * dx_ext - dy_ext * dy_ext;
		if(attn_ext > 0) {
			attn_ext *= attn_ext;
			value += attn_ext * attn_ext * this.extrapolate(xsv_ext,ysv_ext,dx_ext,dy_ext);
		}
		return value / cc_noise_OpenSimplexNoise.NORM_CONSTANT_2D;
	}
	,extrapolate: function(xsb,ysb,dx,dy) {
		var index = this.perm[this.perm[xsb & 255] + ysb & 255] & 14;
		return cc_noise_OpenSimplexNoise.gradients2D[index] * dx + cc_noise_OpenSimplexNoise.gradients2D[index + 1] * dy;
	}
	,__class__: cc_noise_OpenSimplexNoise
};
var cc_noise_Gradient = function(x,y,z) {
	this.x = x;
	this.y = y;
	this.z = z;
};
$hxClasses["cc.noise.Gradient"] = cc_noise_Gradient;
cc_noise_Gradient.__name__ = ["cc","noise","Gradient"];
cc_noise_Gradient.prototype = {
	dot2: function(x,y) {
		return this.x * x + this.y * y;
	}
	,dot3: function(x,y,z) {
		return this.x * x + this.y * y + this.z * z;
	}
	,__class__: cc_noise_Gradient
};
var cc_noise_Perlin = function(seed) {
	this.perm = [];
	this.gradP = [];
	var _g = 0;
	while(_g < 512) {
		var i = _g++;
		this.perm.push(0);
		this.gradP.push(null);
	}
	if(seed == null) {
		seed = Math.random() * 65536 | 0;
	}
	seed %= 65536;
	if(seed < 256) {
		seed |= seed << 8;
	}
	var v;
	var _g1 = 0;
	while(_g1 < 256) {
		var i1 = _g1++;
		if((i1 & 1) == 1) {
			v = cc_noise_Perlin.P[i1] ^ seed & 255;
		} else {
			v = cc_noise_Perlin.P[i1] ^ seed >> 8 & 255;
		}
		var tmp = this.perm[i1 + 256] = v;
		this.perm[i1] = tmp;
		var tmp1 = this.gradP[i1 + 256] = cc_noise_Perlin.GRAD3[v % 12];
		this.gradP[i1] = tmp1;
	}
};
$hxClasses["cc.noise.Perlin"] = cc_noise_Perlin;
cc_noise_Perlin.__name__ = ["cc","noise","Perlin"];
cc_noise_Perlin.prototype = {
	fade: function(t) {
		return t * t * t * (t * (t * 6 - 15) + 10);
	}
	,lerp: function(a,b,t) {
		return (1 - t) * a + t * b;
	}
	,n2d: function(x,y) {
		var X = Math.floor(x);
		var Y = Math.floor(y);
		x -= X;
		y -= Y;
		X &= 255;
		Y &= 255;
		var n00 = this.gradP[X + this.perm[Y]].dot2(x,y);
		var n01 = this.gradP[X + this.perm[Y + 1]].dot2(x,y - 1);
		var n10 = this.gradP[X + 1 + this.perm[Y]].dot2(x - 1,y);
		var n11 = this.gradP[X + 1 + this.perm[Y + 1]].dot2(x - 1,y - 1);
		var u = this.fade(x);
		var result = this.lerp(this.lerp(n00,n10,u),this.lerp(n01,n11,u),this.fade(y));
		return result;
	}
	,n3d: function(x,y,z) {
		var X = Math.floor(x);
		var Y = Math.floor(y);
		var Z = Math.floor(z);
		x -= X;
		y -= Y;
		z -= Z;
		X &= 255;
		Y &= 255;
		Z &= 255;
		var n000 = this.gradP[X + this.perm[Y + this.perm[Z]]].dot3(x,y,z);
		var n001 = this.gradP[X + this.perm[Y + this.perm[Z + 1]]].dot3(x,y,z - 1);
		var n010 = this.gradP[X + this.perm[Y + 1 + this.perm[Z]]].dot3(x,y - 1,z);
		var n011 = this.gradP[X + this.perm[Y + 1 + this.perm[Z + 1]]].dot3(x,y - 1,z - 1);
		var n100 = this.gradP[X + 1 + this.perm[Y + this.perm[Z]]].dot3(x - 1,y,z);
		var n101 = this.gradP[X + 1 + this.perm[Y + this.perm[Z + 1]]].dot3(x - 1,y,z - 1);
		var n110 = this.gradP[X + 1 + this.perm[Y + 1 + this.perm[Z]]].dot3(x - 1,y - 1,z);
		var n111 = this.gradP[X + 1 + this.perm[Y + 1 + this.perm[Z + 1]]].dot3(x - 1,y - 1,z - 1);
		var u = this.fade(x);
		var v = this.fade(y);
		var w = this.fade(z);
		var result = this.lerp(this.lerp(this.lerp(n000,n100,u),this.lerp(n001,n101,u),w),this.lerp(this.lerp(n010,n110,u),this.lerp(n011,n111,u),w),v);
		return result;
	}
	,noise2d: function(x,y,octaves,amplitude,persistence,lacunarity) {
		if(lacunarity == null) {
			lacunarity = 2;
		}
		if(persistence == null) {
			persistence = 0.9;
		}
		if(amplitude == null) {
			amplitude = 1;
		}
		if(octaves == null) {
			octaves = 1;
		}
		if(octaves == 1) {
			return amplitude * this.n2d(x,y);
		}
		var sum = 0;
		var _g1 = 0;
		var _g = octaves;
		while(_g1 < _g) {
			var i = _g1++;
			sum += amplitude * this.n2d(x,y);
			amplitude *= persistence;
			x *= lacunarity;
			y *= lacunarity;
		}
		return sum;
	}
	,noise3d: function(x,y,z,octaves,amplitude,persistence,lacunarity) {
		if(lacunarity == null) {
			lacunarity = 2;
		}
		if(persistence == null) {
			persistence = 0.9;
		}
		if(amplitude == null) {
			amplitude = 1;
		}
		if(octaves == null) {
			octaves = 1;
		}
		if(octaves == 1) {
			return amplitude * this.n3d(x,y,z);
		}
		var sum = 0;
		var _g1 = 0;
		var _g = octaves;
		while(_g1 < _g) {
			var i = _g1++;
			sum += amplitude * this.n3d(x,y,z);
			amplitude *= persistence;
			x *= lacunarity;
			y *= lacunarity;
		}
		return sum;
	}
	,__class__: cc_noise_Perlin
};
var cc_tool_Embed = function() {
};
$hxClasses["cc.tool.Embed"] = cc_tool_Embed;
cc_tool_Embed.__name__ = ["cc","tool","Embed"];
cc_tool_Embed.check = function(id) {
	if(window.document.getElementById(id) != null) {
		return true;
	} else {
		return false;
	}
};
cc_tool_Embed.script = function(id,src,callback,callbackArray) {
	var el = window.document.createElement("script");
	el.id = id;
	el.src = src;
	el.crossOrigin = "anonymous";
	el.onload = function() {
		if(callback != null) {
			if(callbackArray == null) {
				callback.apply(callback,[id]);
			} else {
				callback.apply(callback,callbackArray);
			}
		}
	};
	window.document.body.appendChild(el);
};
cc_tool_Embed.prototype = {
	__class__: cc_tool_Embed
};
var cc_tool_ExportFile = function() { };
$hxClasses["cc.tool.ExportFile"] = cc_tool_ExportFile;
cc_tool_ExportFile.__name__ = ["cc","tool","ExportFile"];
cc_tool_ExportFile.downloadImage = function(ctx,isJpg,fileName) {
	if(isJpg == null) {
		isJpg = false;
	}
	if(fileName == null) {
		var hash = window.location.hash;
		hash = StringTools.replace(hash,"#","").toLowerCase();
		if(hash == "") {
			hash = "image";
		}
		fileName = "" + hash + "-" + new Date().getTime();
	}
	var link = window.document.createElement("a");
	link.href = ctx.canvas.toDataURL(isJpg ? "image/jpeg" : "",1);
	link.download = fileName;
	link.click();
};
cc_tool_ExportFile.onBase64Handler = function(ctx,isJpg) {
	if(isJpg == null) {
		isJpg = false;
	}
	var base64 = ctx.canvas.toDataURL(isJpg ? "image/jpeg" : "",1);
	cc_tool_ExportFile.clipboard(base64);
};
cc_tool_ExportFile.downloadTextFile = function(text,fileName) {
	if(fileName == null) {
		fileName = "CC-txt-" + new Date().getTime() + ".txt";
	}
	var element = window.document.createElement("a");
	element.setAttribute("href","data:text/plain;charset=utf-8," + encodeURIComponent(text));
	element.setAttribute("download",fileName);
	element.style.display = "none";
	window.document.body.appendChild(element);
	element.click();
	window.document.body.removeChild(element);
};
cc_tool_ExportFile.clipboard = function(text) {
	var win = "Ctrl+C";
	var mac = "Cmd+C";
	var copyCombo = win;
	var userAgent = window.navigator.userAgent;
	var ereg = new EReg("iPhone|iPod|iPad|Android|BlackBerry","i");
	var ismac = ereg.match(userAgent);
	if(ismac) {
		copyCombo = mac;
	}
	window.prompt("Copy to clipboard: " + copyCombo + ", Enter",text);
};
cc_tool_ExportFile.downloadImageBg = function(ctx,isJpg,fileName) {
	if(isJpg == null) {
		isJpg = false;
	}
	var canvas = ctx.canvas;
	if(fileName == null) {
		var hash = window.location.hash;
		hash = StringTools.replace(hash,"#","").toLowerCase();
		if(hash == "") {
			hash = "image";
		}
		fileName = "" + hash + "-" + new Date().getTime();
	}
	var w = canvas.width;
	var h = canvas.height;
	var data;
	var compositeOperation;
	data = ctx.getImageData(0,0,w,h);
	compositeOperation = ctx.globalCompositeOperation;
	ctx.globalCompositeOperation = "destination-over";
	ctx.fillStyle = "#ffffff";
	ctx.fillRect(0,0,w,h);
	var link = window.document.createElement("a");
	link.href = ctx.canvas.toDataURL(isJpg ? "image/jpeg" : "",1);
	link.download = fileName;
	link.click();
};
cc_tool_ExportFile.prototype = {
	toString: function() {
		return "[ExportFile]";
	}
	,__class__: cc_tool_ExportFile
};
var cc_tool_Loader = function(id) {
	this._loadCounter = 0;
	this._isDebug = false;
	this.completeArray = [];
	this._loadingArray = [];
	if(id == null) {
		this.set__id("" + this.toString() + "_" + new Date().getTime());
	} else {
		this.set__id(id);
	}
};
$hxClasses["cc.tool.Loader"] = cc_tool_Loader;
cc_tool_Loader.__name__ = ["cc","tool","Loader"];
cc_tool_Loader.create = function(id) {
	var loader = new cc_tool_Loader(id);
	return loader;
};
cc_tool_Loader.prototype = {
	isDebug: function(isDebug) {
		if(isDebug == null) {
			isDebug = true;
		}
		this.set__isDebug(isDebug);
		return this;
	}
	,add: function(path,func,type) {
		var _type = type == null ? this.fileType(path) : type;
		var _obj = { path : path, type : _type, func : func};
		if(this.get__isDebug()) {
			haxe_Log.trace(_obj,{ fileName : "Loader.hx", lineNumber : 68, className : "cc.tool.Loader", methodName : "add"});
		}
		this.get__loadingArray().push(_obj);
		return this;
	}
	,onComplete: function(func,arr) {
		this._onComplete = func;
		this._onCompleteParams = arr;
		return this;
	}
	,onUpdate: function(func,arr) {
		this._onUpdate = func;
		this._onUpdateParams = arr;
		return this;
	}
	,onProgress: function(func,arr) {
		this._onProgress = func;
		this._onProgressParams = arr;
		return this;
	}
	,onError: function(func,arr) {
		this._onError = func;
		this._onErrorParams = arr;
		return this;
	}
	,load: function() {
		if(this.get__isDebug()) {
			haxe_Log.trace("start loading",{ fileName : "Loader.hx", lineNumber : 99, className : "cc.tool.Loader", methodName : "load"});
		}
		this.loadingHandler();
		return this;
	}
	,fileType: function(path) {
		var type = cc_tool_FileType.Unknown;
		var ext = path.split(".")[1];
		var _g = ext.toLowerCase();
		switch(_g) {
		case "gif":
			type = cc_tool_FileType.Gif;
			break;
		case "jpeg":case "jpg":
			type = cc_tool_FileType.JPG;
			break;
		case "json":
			type = cc_tool_FileType.Json;
			break;
		case "png":
			type = cc_tool_FileType.Png;
			break;
		case "txt":
			type = cc_tool_FileType.Txt;
			break;
		case "xml":
			type = cc_tool_FileType.Xml;
			break;
		default:
			type = cc_tool_FileType.Unknown;
		}
		return type;
	}
	,loadingHandler: function() {
		if(this._loadCounter >= this.get__loadingArray().length) {
			if(this.get__isDebug()) {
				haxe_Log.trace("" + this.toString() + " :: Loading queue is done",{ fileName : "Loader.hx", lineNumber : 141, className : "cc.tool.Loader", methodName : "loadingHandler"});
			}
			if(this.get__isDebug()) {
				haxe_Log.trace("show completed array: " + Std.string(this.completeArray),{ fileName : "Loader.hx", lineNumber : 143, className : "cc.tool.Loader", methodName : "loadingHandler"});
			}
			if(this.get__isDebug()) {
				haxe_Log.trace("length of complete files: " + this.completeArray.length,{ fileName : "Loader.hx", lineNumber : 145, className : "cc.tool.Loader", methodName : "loadingHandler"});
			}
			if(Reflect.isFunction(this._onComplete)) {
				this._onComplete.apply(this._onComplete,[this.completeArray]);
			}
			return;
		}
		var _l = this.get__loadingArray()[this._loadCounter];
		var _g = _l.type;
		switch(_g[1]) {
		case 3:case 5:case 13:case 15:
			this.textLoader(_l);
			break;
		case 1:case 7:case 9:case 11:case 12:
			this.imageLoader(_l);
			break;
		default:
			haxe_Log.trace("?????????",{ fileName : "Loader.hx", lineNumber : 160, className : "cc.tool.Loader", methodName : "loadingHandler"});
		}
	}
	,imageLoader: function(_l) {
		var _gthis = this;
		var _img = new Image();
		_img.crossOrigin = "Anonymous";
		_img.src = _l.path;
		_img.onload = function() {
			if(_gthis.get__isDebug()) {
				haxe_Log.trace("w: " + _img.width,{ fileName : "Loader.hx", lineNumber : 170, className : "cc.tool.Loader", methodName : "imageLoader"});
			}
			if(_gthis.get__isDebug()) {
				haxe_Log.trace("h: " + _img.height,{ fileName : "Loader.hx", lineNumber : 172, className : "cc.tool.Loader", methodName : "imageLoader"});
			}
			if(_gthis.get__isDebug()) {
				haxe_Log.trace(_gthis.completeArray.length,{ fileName : "Loader.hx", lineNumber : 174, className : "cc.tool.Loader", methodName : "imageLoader"});
			}
			_l.image = _img;
			_gthis.completeArray.push(_l);
			if(_gthis.get__isDebug()) {
				haxe_Log.trace(_gthis.completeArray,{ fileName : "Loader.hx", lineNumber : 178, className : "cc.tool.Loader", methodName : "imageLoader"});
			}
			if(_gthis.get__isDebug()) {
				haxe_Log.trace(_gthis.completeArray.length,{ fileName : "Loader.hx", lineNumber : 180, className : "cc.tool.Loader", methodName : "imageLoader"});
			}
			if(Reflect.isFunction(_l.func)) {
				_l.func.apply(_l.func,[_l]);
			}
			if(Reflect.isFunction(_gthis._onUpdate)) {
				_gthis._onUpdate.apply(_gthis._onUpdate,[_img]);
			}
			_gthis._loadCounter++;
			_gthis.loadingHandler();
		};
		_img.onerror = function() {
			if(Reflect.isFunction(_gthis._onError)) {
				_gthis._onError.apply(_gthis._onError,[_img]);
			}
			_gthis._loadCounter++;
			_gthis.loadingHandler();
		};
		_img.onprogress = function() {
			if(Reflect.isFunction(_gthis._onProgress)) {
				_gthis._onProgress.apply(_gthis._onProgress,[_img]);
			}
		};
	}
	,textLoader: function(_l) {
		var _gthis = this;
		var url = _l.path;
		var req = new haxe_Http(url);
		req.onData = function(data) {
			try {
				_l.str = data;
				_l.json = JSON.parse(data);
				_gthis.completeArray.push(_l);
				if(Reflect.isFunction(_l.func)) {
					_l.func.apply(_l.func,[_l]);
				}
				if(Reflect.isFunction(_gthis._onUpdate)) {
					_gthis._onUpdate.apply(_gthis._onUpdate,["_img"]);
				}
				_gthis._loadCounter++;
				_gthis.loadingHandler();
			} catch( e ) {
				if (e instanceof js__$Boot_HaxeError) e = e.val;
				if(_gthis.get__isDebug()) {
					haxe_Log.trace(e,{ fileName : "Loader.hx", lineNumber : 224, className : "cc.tool.Loader", methodName : "textLoader"});
				}
				_gthis._loadCounter++;
				_gthis.loadingHandler();
			}
		};
		req.onError = function(error) {
			if(_gthis.get__isDebug()) {
				haxe_Log.trace("error: " + error,{ fileName : "Loader.hx", lineNumber : 232, className : "cc.tool.Loader", methodName : "textLoader"});
			}
			_gthis._loadCounter++;
			_gthis.loadingHandler();
		};
		req.onStatus = function(status) {
			if(_gthis.get__isDebug()) {
				haxe_Log.trace("status: " + status,{ fileName : "Loader.hx", lineNumber : 238, className : "cc.tool.Loader", methodName : "textLoader"});
			}
		};
		req.request(true);
	}
	,get__id: function() {
		return this._id;
	}
	,set__id: function(value) {
		return this._id = value;
	}
	,get__loadingArray: function() {
		return this._loadingArray;
	}
	,set__loadingArray: function(value) {
		return this._loadingArray = value;
	}
	,get__isDebug: function() {
		return this._isDebug;
	}
	,set__isDebug: function(value) {
		return this._isDebug = value;
	}
	,toString: function() {
		return "[Loader]";
	}
	,__class__: cc_tool_Loader
	,__properties__: {set__isDebug:"set__isDebug",get__isDebug:"get__isDebug",set__loadingArray:"set__loadingArray",get__loadingArray:"get__loadingArray",set__id:"set__id",get__id:"get__id"}
};
var cc_tool_FileType = { __ename__ : true, __constructs__ : ["Unknown","Img","IMG","Txt","TXT","Json","JSON","Gif","GIF","Png","PNG","JPEG","JPG","Xml","XML","Svg","SVG"] };
cc_tool_FileType.Unknown = ["Unknown",0];
cc_tool_FileType.Unknown.toString = $estr;
cc_tool_FileType.Unknown.__enum__ = cc_tool_FileType;
cc_tool_FileType.Img = ["Img",1];
cc_tool_FileType.Img.toString = $estr;
cc_tool_FileType.Img.__enum__ = cc_tool_FileType;
cc_tool_FileType.IMG = ["IMG",2];
cc_tool_FileType.IMG.toString = $estr;
cc_tool_FileType.IMG.__enum__ = cc_tool_FileType;
cc_tool_FileType.Txt = ["Txt",3];
cc_tool_FileType.Txt.toString = $estr;
cc_tool_FileType.Txt.__enum__ = cc_tool_FileType;
cc_tool_FileType.TXT = ["TXT",4];
cc_tool_FileType.TXT.toString = $estr;
cc_tool_FileType.TXT.__enum__ = cc_tool_FileType;
cc_tool_FileType.Json = ["Json",5];
cc_tool_FileType.Json.toString = $estr;
cc_tool_FileType.Json.__enum__ = cc_tool_FileType;
cc_tool_FileType.JSON = ["JSON",6];
cc_tool_FileType.JSON.toString = $estr;
cc_tool_FileType.JSON.__enum__ = cc_tool_FileType;
cc_tool_FileType.Gif = ["Gif",7];
cc_tool_FileType.Gif.toString = $estr;
cc_tool_FileType.Gif.__enum__ = cc_tool_FileType;
cc_tool_FileType.GIF = ["GIF",8];
cc_tool_FileType.GIF.toString = $estr;
cc_tool_FileType.GIF.__enum__ = cc_tool_FileType;
cc_tool_FileType.Png = ["Png",9];
cc_tool_FileType.Png.toString = $estr;
cc_tool_FileType.Png.__enum__ = cc_tool_FileType;
cc_tool_FileType.PNG = ["PNG",10];
cc_tool_FileType.PNG.toString = $estr;
cc_tool_FileType.PNG.__enum__ = cc_tool_FileType;
cc_tool_FileType.JPEG = ["JPEG",11];
cc_tool_FileType.JPEG.toString = $estr;
cc_tool_FileType.JPEG.__enum__ = cc_tool_FileType;
cc_tool_FileType.JPG = ["JPG",12];
cc_tool_FileType.JPG.toString = $estr;
cc_tool_FileType.JPG.__enum__ = cc_tool_FileType;
cc_tool_FileType.Xml = ["Xml",13];
cc_tool_FileType.Xml.toString = $estr;
cc_tool_FileType.Xml.__enum__ = cc_tool_FileType;
cc_tool_FileType.XML = ["XML",14];
cc_tool_FileType.XML.toString = $estr;
cc_tool_FileType.XML.__enum__ = cc_tool_FileType;
cc_tool_FileType.Svg = ["Svg",15];
cc_tool_FileType.Svg.toString = $estr;
cc_tool_FileType.Svg.__enum__ = cc_tool_FileType;
cc_tool_FileType.SVG = ["SVG",16];
cc_tool_FileType.SVG.toString = $estr;
cc_tool_FileType.SVG.__enum__ = cc_tool_FileType;
var cc_tool_convert_SvgToImage = function() {
};
$hxClasses["cc.tool.convert.SvgToImage"] = cc_tool_convert_SvgToImage;
cc_tool_convert_SvgToImage.__name__ = ["cc","tool","convert","SvgToImage"];
cc_tool_convert_SvgToImage.convert = function(svg,callback) {
	var svgImage = new Image();
	svgImage.onload = function() {
		callback.apply(callback,[svgImage]);
	};
	var svg64 = window.btoa(svg);
	var b64Start = "data:image/svg+xml;base64,";
	var image64 = b64Start + svg64;
	svgImage.src = image64;
};
cc_tool_convert_SvgToImage.prototype = {
	__class__: cc_tool_convert_SvgToImage
};
var cc_tool_export_ExportNames = function() {
};
$hxClasses["cc.tool.export.ExportNames"] = cc_tool_export_ExportNames;
cc_tool_export_ExportNames.__name__ = ["cc","tool","export","ExportNames"];
cc_tool_export_ExportNames.prototype = {
	__class__: cc_tool_export_ExportNames
};
var cc_tool_export_ExportWrapperBase = function() {
	this._isDebug = false;
};
$hxClasses["cc.tool.export.ExportWrapperBase"] = cc_tool_export_ExportWrapperBase;
cc_tool_export_ExportWrapperBase.__name__ = ["cc","tool","export","ExportWrapperBase"];
cc_tool_export_ExportWrapperBase.prototype = {
	progress: function(func) {
		this._onProgressHandler = func;
	}
	,complete: function(func) {
		this._onExportComplete = func;
	}
	,getMarkdown: function(obj) {
		var md = "# " + this.toString() + "\n\n- Generated on: " + Std.string(new Date()) + "\n- total images: " + obj.imageStringArray.length + "\n- calculated time: " + obj.imageStringArray.length / 60 + " sec\n- file name: `_" + obj.filename + "_" + obj.timestamp + ".zip`\n- delay: " + obj.delay + " frames (" + obj.delay / 60 + " sec)\n- record: " + obj.record + " frames (" + obj.record / 60 + " sec)\n\n## Instagram\n\n```\nsketch." + obj.filename + " :: " + obj.description + "\n\n#codeart #coding #creativecode #generative #generativeArt\n#minimalism #minimalist #minimal\n#haxe #javascript #js #nodejs\n#illustration #graphicdesign #graphic\n#animation #motion #motiondesign #motiongraphics\n```\n\n## convert\n\nopen terminal\n\n```\nsh convert.sh\n```\n\n## Folder structure\n\n```\n+ _" + obj.filename + "_" + obj.timestamp + ".zip\n+ _" + obj.filename + "\n\t- convert.sh\n\t- README.MD\n\t+ sequence\n\t\t- image_" + StringTools.lpad("0","0",4) + ".png\n\t\t- image_" + StringTools.lpad("1","0",4) + ".png\n\t\t- ...\n```\n";
		return md;
	}
	,getBashConvert: function(obj) {
		var bash = "#!/bin/bash\n\necho 'Start convertions png sequence to mp4'\n\nffmpeg -y -r 30 -i sequence/image_%04d.png -c:v libx264 -strict -2 -pix_fmt yuv420p -shortest -filter:v \"setpts=0.5*PTS\"  " + obj.filename + "_output_30fps.mp4\n# eh?\n# ffmpeg -y -r 30 -i sequence/image_%04d.png -c:v libx264 -strict -2 -pix_fmt yuv420p -shortest -filter:v \"setpts=0.5*PTS\"  sequence/_output_30fps.mp4\n# rendercan fix\n# ffmpeg -y -r 30 -i framescemage_%09d.png -c:v libx264 -strict -2 -pix_fmt yuv420p -shortest -filter:v \"setpts=0.5*PTS\"  sequence/_output_30fps.mp4\n\necho 'End convertions png sequence to mp4'\n\n";
		return bash;
	}
	,getBashConvertPng: function(obj) {
		var bash2 = "\n#!/bin/bash\n\necho 'Start remove transparancy from images sequence'\n\ncd sequence\nmkdir output\nfor i in *.png; do\n   convert \"$" + "i\" -background white -alpha remove output/\"$" + "i\"\n   echo \"$" + "i\"\ndone\n\necho 'End remove transparancy from images sequence'\necho 'Start convertions png sequence to mp4'\n\nffmpeg -y -r 30 -i output/image_%04d.png -c:v libx264 -strict -2 -pix_fmt yuv420p -shortest -filter:v \"setpts=0.5*PTS\"  ../" + obj.filename + "_white_output_30fps.mp4\n\necho 'End convertions png sequence to mp4'\n\n";
		return bash2;
	}
	,debug: function(isDebug) {
		this._isDebug = isDebug;
	}
	,toString: function() {
		return "[ExportTypeBase]";
	}
	,__class__: cc_tool_export_ExportWrapperBase
};
var cc_tool_export_IExport = function() { };
$hxClasses["cc.tool.export.IExport"] = cc_tool_export_IExport;
cc_tool_export_IExport.__name__ = ["cc","tool","export","IExport"];
cc_tool_export_IExport.prototype = {
	__class__: cc_tool_export_IExport
};
var cc_tool_export_ExportNodeServer = function() {
	this._isEmbeded = false;
	this._folder = "sequence";
	this._name = "image";
	this._exportCounter = 0;
	this._isRecording = false;
	this._isClear = false;
	this._isTimer = false;
	this._isSocketReady = false;
	this._isExportServerReady = false;
	haxe_Log.trace("constructor " + this.toString(),{ fileName : "ExportNodeServer.hx", lineNumber : 31, className : "cc.tool.export.ExportNodeServer", methodName : "new"});
	cc_tool_export_ExportWrapperBase.call(this);
	this.embedScripts($bind(this,this.onEmbedComplete));
};
$hxClasses["cc.tool.export.ExportNodeServer"] = cc_tool_export_ExportNodeServer;
cc_tool_export_ExportNodeServer.__name__ = ["cc","tool","export","ExportNodeServer"];
cc_tool_export_ExportNodeServer.__interfaces__ = [cc_tool_export_IExport];
cc_tool_export_ExportNodeServer.__super__ = cc_tool_export_ExportWrapperBase;
cc_tool_export_ExportNodeServer.prototype = $extend(cc_tool_export_ExportWrapperBase.prototype,{
	'export': function(obj) {
		if(this._isDebug) {
			haxe_Log.trace("" + this.toString() + " - export",{ fileName : "ExportNodeServer.hx", lineNumber : 41, className : "cc.tool.export.ExportNodeServer", methodName : "export"});
		}
		this._exportObj = obj;
		this._folder = obj.filename;
		this._exportArray = obj.imageStringArray;
		this._exportCounter = 0;
		this.deleteFolder();
	}
	,startExport: function() {
		if(this._isDebug) {
			haxe_Log.trace("startExport: " + this._exportCounter + " / " + this._exportArray.length,{ fileName : "ExportNodeServer.hx", lineNumber : 55, className : "cc.tool.export.ExportNodeServer", methodName : "startExport"});
		}
		if(Reflect.isFunction(this._onProgressHandler)) {
			this._onProgressHandler.apply(this._onProgressHandler,[this._exportCounter / this._exportArray.length * 100]);
		}
		if(this._exportCounter >= this._exportArray.length) {
			this._isRecording = false;
			if(Reflect.isFunction(this._onExportComplete)) {
				this._onExportComplete.apply(this._onExportComplete,[]);
			}
			if(this._isDebug) {
				haxe_Log.trace("" + this.toString() + " STOP recording base on total frames",{ fileName : "ExportNodeServer.hx", lineNumber : 66, className : "cc.tool.export.ExportNodeServer", methodName : "startExport"});
			}
			this.convertExport();
			return;
		}
		var id = Std.string(new Date().getTime());
		var data = { _id : id, file : this._exportArray[this._exportCounter], name : "" + this._name + "_" + StringTools.lpad(Std.string(this._exportCounter),"0",4), folder : "" + this._folder};
		if(this._isDebug) {
			haxe_Log.trace("" + this.toString() + " renderSequence : " + data._id,{ fileName : "ExportNodeServer.hx", lineNumber : 79, className : "cc.tool.export.ExportNodeServer", methodName : "startExport"});
		}
		this._socket.emit(cc_tool_export_ExportNames.SEQUENCE,data);
		if(this._exportCounter % 60 == 1) {
			if(this._isDebug) {
				haxe_Log.trace("current frame render: " + this._exportCounter + "/" + this._exportArray.length,{ fileName : "ExportNodeServer.hx", lineNumber : 86, className : "cc.tool.export.ExportNodeServer", methodName : "startExport"});
			}
		}
	}
	,convertExport: function() {
		var data = { name : "" + this._name, folder : "" + this._folder, clear : this._isClear, description : "export this file "};
		this._socket.emit(cc_tool_export_ExportNames.COMBINE,data);
		var data1 = { name : "" + this._name, folder : "" + this._folder, content : this.getMarkdown(this._exportObj)};
		data1["name"] = "README.MD";
		data1["content"] = this.getMarkdown(this._exportObj);
		this._socket.emit("export.file",data1);
		data1["name"] = "convert.sh";
		data1["content"] = this.getBashConvert(this._exportObj);
		this._socket.emit("export.file",data1);
		data1["name"] = "png.sh";
		data1["content"] = this.getBashConvertPng(this._exportObj);
		this._socket.emit("export.file",data1);
	}
	,deleteFolder: function() {
		var data = { name : "" + this._name, clear : this._isClear, folder : "" + this._folder};
		this._socket.emit(cc_tool_export_ExportNames.RENDER_CLEAR,data);
	}
	,initSocket: function() {
		var _gthis = this;
		haxe_Log.trace("" + this.toString() + " Init Socket",{ fileName : "ExportNodeServer.hx", lineNumber : 129, className : "cc.tool.export.ExportNodeServer", methodName : "initSocket"});
		if(!this._isEmbeded) {
			haxe_Log.trace("_isEmbeded : " + Std.string(this._isEmbeded),{ fileName : "ExportNodeServer.hx", lineNumber : 132, className : "cc.tool.export.ExportNodeServer", methodName : "initSocket"});
			return;
		}
		haxe_Log.trace(this._host,{ fileName : "ExportNodeServer.hx", lineNumber : 136, className : "cc.tool.export.ExportNodeServer", methodName : "initSocket", customParams : [this._port]});
		this._socket = io("http://localhost:5000");
		this._socket.on("connect_error",function(err) {
			window.console.group("Connection error export server");
			window.console.warn("" + _gthis.toString() + " Error connecting to server \"" + err + "\", closing connection");
			window.console.info("this probably means that cc-export project isn't running");
			window.console.groupEnd();
			_gthis._socket.close();
			_gthis._isRecording = false;
			_gthis._isExportServerReady = false;
		});
		this._socket.on("connect",function(err1) {
			if(err1 == "undefined") {
				haxe_Log.trace("" + _gthis.toString() + " connect: " + err1,{ fileName : "ExportNodeServer.hx", lineNumber : 157, className : "cc.tool.export.ExportNodeServer", methodName : "initSocket"});
			} else {
				haxe_Log.trace("" + _gthis.toString() + " connect",{ fileName : "ExportNodeServer.hx", lineNumber : 159, className : "cc.tool.export.ExportNodeServer", methodName : "initSocket"});
			}
			if(err1 == null) {
				_gthis._isSocketReady = true;
			}
		});
		this._socket.on("disconnect",function(err2) {
			haxe_Log.trace("" + _gthis.toString() + " disconnect: " + err2,{ fileName : "ExportNodeServer.hx", lineNumber : 166, className : "cc.tool.export.ExportNodeServer", methodName : "initSocket"});
		});
		this._socket.on("connect_failed",function(err3) {
			haxe_Log.trace("" + _gthis.toString() + " connect_failed: " + err3,{ fileName : "ExportNodeServer.hx", lineNumber : 171, className : "cc.tool.export.ExportNodeServer", methodName : "initSocket"});
		});
		this._socket.on("error",function(err4) {
			haxe_Log.trace("" + _gthis.toString() + " error: " + err4,{ fileName : "ExportNodeServer.hx", lineNumber : 174, className : "cc.tool.export.ExportNodeServer", methodName : "initSocket"});
		});
		this._socket.on("message",function(data) {
			if(data.message != null) {
				window.console.log("" + _gthis.toString() + " message: " + data.message);
			} else {
				window.console.log("" + _gthis.toString() + " There is a problem: " + Std.string(data));
			}
		});
		this._socket.emit(cc_tool_export_ExportNames.CHECKIN);
		this._socket.on(cc_tool_export_ExportNames.SERVER_CHECKIN,function(data1) {
			if(data1.checkin != null && data1.checkin == true) {
				_gthis._isExportServerReady = true;
				window.console.log("" + _gthis.toString() + " data:  + " + Std.string(data1) + ", & _isExportServerReady: " + (_gthis._isExportServerReady == null ? "null" : "" + _gthis._isExportServerReady));
			} else {
				window.console.log("" + _gthis.toString() + " There is a problem: " + Std.string(data1));
			}
		});
		this._socket.on(cc_tool_export_ExportNames.RENDER_DONE,function(data2) {
			window.console.log(data2);
		});
		this._socket.on(cc_tool_export_ExportNames.RENDER_CLEAR_DONE,function(data3) {
			if(_gthis._isDebug) {
				window.console.log(data3.message);
			}
			_gthis.startExport();
		});
		this._socket.on(cc_tool_export_ExportNames.SEQUENCE_NEXT,function(data4) {
			if(_gthis._isDebug) {
				window.console.log("SEQUENCE_NEXT: " + data4.message);
			}
			_gthis._exportCounter++;
			_gthis.startExport();
		});
	}
	,onEmbedComplete: function(value) {
		var _gthis = this;
		if(this._isDebug) {
			window.console.log("" + this.toString() + " " + value);
		}
		this._isEmbeded = true;
		haxe_Timer.delay(function() {
			_gthis.initSocket();
		},1);
	}
	,embedScripts: function(callback,callbackArray) {
		var id = "embedSocketIO";
		haxe_Log.trace("Check if \"" + id + "\" is embedded",{ fileName : "ExportNodeServer.hx", lineNumber : 232, className : "cc.tool.export.ExportNodeServer", methodName : "embedScripts"});
		if(!cc_tool_Embed.check(id)) {
			window.console.warn("" + id + " = not Embedded");
			this._isEmbeded = false;
			cc_tool_Embed.script(id,"https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js",$bind(this,this.onEmbedComplete),["socket.io is embedded and loaded"]);
		} else {
			window.console.warn("" + id + " = already embeded");
		}
	}
	,toString: function() {
		return "[Export via Node]";
	}
	,__class__: cc_tool_export_ExportNodeServer
});
var cc_tool_export_ExportNone = function() {
	cc_tool_export_ExportWrapperBase.call(this);
};
$hxClasses["cc.tool.export.ExportNone"] = cc_tool_export_ExportNone;
cc_tool_export_ExportNone.__name__ = ["cc","tool","export","ExportNone"];
cc_tool_export_ExportNone.__interfaces__ = [cc_tool_export_IExport];
cc_tool_export_ExportNone.__super__ = cc_tool_export_ExportWrapperBase;
cc_tool_export_ExportNone.prototype = $extend(cc_tool_export_ExportWrapperBase.prototype,{
	'export': function(obj) {
		var _gthis = this;
		haxe_Timer.delay(function() {
			_gthis._progress(25);
		},250);
		haxe_Timer.delay(function() {
			_gthis._progress(50);
		},500);
		haxe_Timer.delay(function() {
			_gthis._progress(75);
		},750);
		haxe_Timer.delay(function() {
			_gthis._progress(100);
		},1000);
		haxe_Timer.delay(function() {
			_gthis._complete(100);
		},1000);
	}
	,_progress: function(value) {
		if(Reflect.isFunction(this._onProgressHandler)) {
			haxe_Log.trace("onProgressHandler (" + value + ")",{ fileName : "ExportNone.hx", lineNumber : 32, className : "cc.tool.export.ExportNone", methodName : "_progress"});
			this._onProgressHandler.apply(this._onProgressHandler,[value]);
		}
	}
	,_complete: function(value) {
		if(Reflect.isFunction(this._onExportComplete)) {
			haxe_Log.trace("onExportComplete (" + value + ")",{ fileName : "ExportNone.hx", lineNumber : 39, className : "cc.tool.export.ExportNone", methodName : "_complete"});
			this._onExportComplete.apply(this._onExportComplete,[]);
		}
	}
	,toString: function() {
		return "[Export via TEST/NONE]";
	}
	,__class__: cc_tool_export_ExportNone
});
var cc_tool_export_ExportType = { __ename__ : true, __constructs__ : ["ZIP","NODE","NONE","TEST"] };
cc_tool_export_ExportType.ZIP = ["ZIP",0];
cc_tool_export_ExportType.ZIP.toString = $estr;
cc_tool_export_ExportType.ZIP.__enum__ = cc_tool_export_ExportType;
cc_tool_export_ExportType.NODE = ["NODE",1];
cc_tool_export_ExportType.NODE.toString = $estr;
cc_tool_export_ExportType.NODE.__enum__ = cc_tool_export_ExportType;
cc_tool_export_ExportType.NONE = ["NONE",2];
cc_tool_export_ExportType.NONE.toString = $estr;
cc_tool_export_ExportType.NONE.__enum__ = cc_tool_export_ExportType;
cc_tool_export_ExportType.TEST = ["TEST",3];
cc_tool_export_ExportType.TEST.toString = $estr;
cc_tool_export_ExportType.TEST.__enum__ = cc_tool_export_ExportType;
var cc_tool_export_ExportZip = function() {
	cc_tool_export_ExportWrapperBase.call(this);
	this.embedScripts($bind(this,this.onEmbedComplete));
};
$hxClasses["cc.tool.export.ExportZip"] = cc_tool_export_ExportZip;
cc_tool_export_ExportZip.__name__ = ["cc","tool","export","ExportZip"];
cc_tool_export_ExportZip.__interfaces__ = [cc_tool_export_IExport];
cc_tool_export_ExportZip.__super__ = cc_tool_export_ExportWrapperBase;
cc_tool_export_ExportZip.prototype = $extend(cc_tool_export_ExportWrapperBase.prototype,{
	'export': function(obj) {
		var _gthis = this;
		var startT = new Date().getTime();
		if(obj.imageStringArray.length == 0) {
			haxe_Log.trace("NO images created / use start() - " + (new Date().getTime() - startT) / 1000 + "sec",{ fileName : "ExportZip.hx", lineNumber : 28, className : "cc.tool.export.ExportZip", methodName : "export"});
			return;
		}
		haxe_Log.trace("Start creation zip file - " + (new Date().getTime() - startT) / 1000 + "sec",{ fileName : "ExportZip.hx", lineNumber : 32, className : "cc.tool.export.ExportZip", methodName : "export"});
		var zip = new JSZip();
		zip.file("_" + obj.filename + "/README.MD",this.getMarkdown(obj));
		zip.file("_" + obj.filename + "/convert.sh",this.getBashConvert(obj));
		zip.file("_" + obj.filename + "/png.sh",this.getBashConvertPng(obj));
		var _g1 = 0;
		var _g = obj.imageStringArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this._isDebug) {
				haxe_Log.trace("/" + obj.imageStringArray.length + ". add image to file",{ fileName : "ExportZip.hx", lineNumber : 39, className : "cc.tool.export.ExportZip", methodName : "export"});
			}
			var img = obj.imageStringArray[i];
			zip.file("_" + obj.filename + "/sequence/image_" + StringTools.lpad(i == null ? "null" : "" + i,"0",4) + ".png",img,{ base64 : true});
		}
		haxe_Log.trace("Generate zip file - " + (new Date().getTime() - startT) / 1000 + "sec",{ fileName : "ExportZip.hx", lineNumber : 43, className : "cc.tool.export.ExportZip", methodName : "export"});
		var updateCallback = function(metadata) {
			if(_gthis._isDebug) {
				window.console.log("progression: " + metadata.percent.toFixed(2) + " %");
			}
			if(Reflect.isFunction(_gthis._onProgressHandler)) {
				var o = _gthis._onProgressHandler;
				var func = _gthis._onProgressHandler;
				var args = [parseFloat(metadata.percent.toFixed(2))];
				func.apply(o,args);
			}
		};
		zip.generateAsync({ type : "blob"},updateCallback).then(function(blob) {
			window.console.log("Save zip file complete - " + (new Date().getTime() - startT) / 1000 + "sec");
			saveAs(blob,"_" + obj.filename + "_" + obj.timestamp + ".zip");
			if(Reflect.isFunction(_gthis._onExportComplete)) {
				_gthis._onExportComplete.apply(_gthis._onExportComplete,[]);
			}
		},function(err) {
			window.console.log(err);
		});
	}
	,embedScripts: function(callback,callbackArray) {
		if(!cc_tool_Embed.check("jszip")) {
			cc_tool_Embed.script("jszip","https://cdnjs.cloudflare.com/ajax/libs/jszip/3.2.0/jszip.min.js",$bind(this,this.onLoadComplete),["jszip",callback,callbackArray]);
		}
		if(!cc_tool_Embed.check("jsfilesaver")) {
			cc_tool_Embed.script("jsfilesaver","https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/1.3.8/FileSaver.min.js",$bind(this,this.onLoadComplete),["jsfilesaver",callback,callbackArray]);
		}
	}
	,onLoadComplete: function(str,callback,callbackArray) {
		switch(str) {
		case "jsfilesaver":
			cc_tool_export_ExportZip.isFileLoaded = true;
			break;
		case "jszip":
			cc_tool_export_ExportZip.isZipLoaded = true;
			break;
		default:
			haxe_Log.trace("case '" + str + "': trace ('" + str + "');",{ fileName : "ExportZip.hx", lineNumber : 101, className : "cc.tool.export.ExportZip", methodName : "onLoadComplete"});
		}
		if(cc_tool_export_ExportZip.isFileLoaded && cc_tool_export_ExportZip.isZipLoaded) {
			callback.apply(callback,["JsZip and jsFilesaver are embedded and loaded"]);
		}
	}
	,onEmbedComplete: function(value) {
		window.console.log("" + this.toString() + " - " + value);
	}
	,toString: function() {
		return "[Export via Zip]";
	}
	,__class__: cc_tool_export_ExportZip
});
var cc_util_AnimateUtil = function() {
};
$hxClasses["cc.util.AnimateUtil"] = cc_util_AnimateUtil;
cc_util_AnimateUtil.__name__ = ["cc","util","AnimateUtil"];
cc_util_AnimateUtil.tween = function(pos,target,speed) {
	if(speed == null) {
		speed = 20;
	}
	pos += (target - pos) / speed;
	return pos;
};
cc_util_AnimateUtil.bounce = function(num,min,max,sz) {
	if(sz == null) {
		sz = 0;
	}
	if(num >= max - sz / 2 || num - sz / 2 <= min) {
		return true;
	} else {
		return false;
	}
};
cc_util_AnimateUtil.prototype = {
	__class__: cc_util_AnimateUtil
};
var cc_util_ColorUtil = function() {
};
$hxClasses["cc.util.ColorUtil"] = cc_util_ColorUtil;
cc_util_ColorUtil.__name__ = ["cc","util","ColorUtil"];
cc_util_ColorUtil.getColour = function(r,g,b,a) {
	var c;
	if(g == null) {
		c = cc_util_ColorUtil.rgb(r,r,r);
	} else if(b == null && a == null) {
		c = cc_util_ColorUtil.rgba(r,r,r,g);
	} else if(a == null) {
		c = cc_util_ColorUtil.rgb(r,g,b);
	} else {
		c = cc_util_ColorUtil.rgba(r,g,b,a);
	}
	return c;
};
cc_util_ColorUtil.getColourObj = function(rgb,a) {
	return cc_util_ColorUtil.getColour(rgb.r,rgb.g,rgb.b,a);
};
cc_util_ColorUtil.rgb = function(r,g,b) {
	if(g == null) {
		g = r;
	}
	if(b == null) {
		b = r;
	}
	return "rgb(" + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(g),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(b),0,255) + ")";
};
cc_util_ColorUtil.rgba = function(r,g,b,a) {
	if(g == null) {
		return "rgb(" + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(r),0,255) + ")";
	} else if(b == null) {
		return "rgba(" + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(g,0,1) + ")";
	} else if(a == null) {
		return "rgba(" + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(g),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(b),0,255) + ", 1)";
	} else {
		return "rgba(" + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(g),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(b),0,255) + ", " + cc_util_MathUtil.clamp(a,0,1) + ")";
	}
};
cc_util_ColorUtil.rgbToHex = function(r,g,b) {
	return StringTools.hex(r,2) + StringTools.hex(g,2) + StringTools.hex(b,2);
};
cc_util_ColorUtil.rgb2hex = function(r,g,b,a) {
	if(a == null) {
		a = 255;
	}
	return a << 24 | r << 16 | g << 8 | b;
};
cc_util_ColorUtil.randomColour = function() {
	var r = cc_util_MathUtil.randomInt(255);
	var g = cc_util_MathUtil.randomInt(255);
	var b = cc_util_MathUtil.randomInt(255);
	return cc_util_ColorUtil.rgb(r,g,b);
};
cc_util_ColorUtil.randomColourObject = function() {
	var r = cc_util_MathUtil.randomInt(255);
	var g = cc_util_MathUtil.randomInt(255);
	var b = cc_util_MathUtil.randomInt(255);
	return { r : r, g : g, b : b};
};
cc_util_ColorUtil.toRGB = function($int) {
	return { r : Math.round($int >> 16 & 255), g : Math.round($int >> 8 & 255), b : Math.round($int & 255)};
};
cc_util_ColorUtil.ttoRGB = function($int) {
	return { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
};
cc_util_ColorUtil.hex2RGB = function(hex) {
	var $int = Std.parseInt(StringTools.replace(hex,"#","0x"));
	return { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
};
cc_util_ColorUtil.prototype = {
	__class__: cc_util_ColorUtil
};
var cc_util_EffectUtil = function() {
};
$hxClasses["cc.util.EffectUtil"] = cc_util_EffectUtil;
cc_util_EffectUtil.__name__ = ["cc","util","EffectUtil"];
cc_util_EffectUtil.flip = function(ctx,isHorizontal) {
	if(isHorizontal == null) {
		isHorizontal = true;
	}
	if(ctx == null) {
		return;
	}
	var w = ctx.canvas.width;
	var h = ctx.canvas.height;
	ctx.save();
	if(isHorizontal) {
		ctx.translate(w,0);
		ctx.scale(-1,1);
	} else {
		ctx.translate(0,h);
		ctx.scale(1,-1);
	}
	ctx.drawImage(ctx.canvas,0,0,w,h);
	ctx.restore();
};
cc_util_EffectUtil.mirror = function(ctx,isHorizontal) {
	if(isHorizontal == null) {
		isHorizontal = false;
	}
	if(ctx == null) {
		return;
	}
	var w = ctx.canvas.width;
	var h = ctx.canvas.height;
	ctx.save();
	if(isHorizontal) {
		ctx.translate(w,0);
		ctx.scale(-1,1);
		ctx.drawImage(ctx.canvas,0,0,w / 2,h,0,0,w / 2,h);
	} else {
		ctx.translate(0,h);
		ctx.scale(1,-1);
		ctx.drawImage(ctx.canvas,0,0,w,h / 2,0,0,w,h / 2);
	}
	ctx.restore();
};
cc_util_EffectUtil.prototype = {
	__class__: cc_util_EffectUtil
};
var cc_util_FilterUtil = function() {
};
$hxClasses["cc.util.FilterUtil"] = cc_util_FilterUtil;
cc_util_FilterUtil.__name__ = ["cc","util","FilterUtil"];
cc_util_FilterUtil.convertCSSPercentage = function(value) {
	if(value > 1) {
		return "" + value + "%";
	} else {
		return "" + value;
	}
};
cc_util_FilterUtil.grayscale = function(ctx,value) {
	if(value == null) {
		value = 100;
	}
	ctx.filter = "grayscale( " + cc_util_FilterUtil.convertCSSPercentage(value) + " )";
};
cc_util_FilterUtil.brightness = function(ctx,value) {
	if(value == null) {
		value = 100;
	}
	ctx.filter = "brightness( " + cc_util_FilterUtil.convertCSSPercentage(value) + " )";
};
cc_util_FilterUtil.contrast = function(ctx,value) {
	if(value == null) {
		value = 100;
	}
	ctx.filter = "contrast( " + cc_util_FilterUtil.convertCSSPercentage(value) + " )";
};
cc_util_FilterUtil.invert = function(ctx,value) {
	if(value == null) {
		value = 100;
	}
	ctx.filter = "invert( " + cc_util_FilterUtil.convertCSSPercentage(value) + " )";
};
cc_util_FilterUtil.opacity = function(ctx,value) {
	if(value == null) {
		value = 100;
	}
	ctx.filter = "opacity( " + cc_util_FilterUtil.convertCSSPercentage(value) + " )";
};
cc_util_FilterUtil.saturate = function(ctx,value) {
	if(value == null) {
		value = 100;
	}
	ctx.filter = "saturate( " + cc_util_FilterUtil.convertCSSPercentage(value) + " )";
};
cc_util_FilterUtil.sepia = function(ctx,value) {
	if(value == null) {
		value = 100;
	}
	ctx.filter = "sepia( " + cc_util_FilterUtil.convertCSSPercentage(value) + " )";
};
cc_util_FilterUtil.huerotate = function(ctx,angle) {
	if(angle == null) {
		angle = 360;
	}
	ctx.filter = "hue-rotate( " + angle + " )";
};
cc_util_FilterUtil.none = function(ctx) {
	ctx.filter = null;
};
cc_util_FilterUtil.prototype = {
	__class__: cc_util_FilterUtil
};
var cc_util_GridUtil = function(ctx) {
	this._isDebug = false;
	this._isPosition = false;
	this._isDimension = false;
	this._isNumbered = false;
	this._isCellSize = false;
	this.numVer = null;
	this.numHor = null;
	this.cellHeight = null;
	this.cellWidth = null;
	this.isFullscreen = false;
	this.isCentered = false;
	this.gridY = 0;
	this.gridX = 0;
	this.height = null;
	this.width = null;
	this.y = null;
	this.x = null;
	this.total = null;
	this.array = [];
	if(ctx != null) {
		this._ctx = ctx;
	}
};
$hxClasses["cc.util.GridUtil"] = cc_util_GridUtil;
cc_util_GridUtil.__name__ = ["cc","util","GridUtil"];
cc_util_GridUtil.create = function(ctx) {
	var GridUtil = new cc_util_GridUtil(ctx);
	return GridUtil;
};
cc_util_GridUtil.createGrid = function(x,y,width,height,numHor,numVer) {
	if(numVer == null) {
		numVer = 1;
	}
	if(numHor == null) {
		numHor = 1;
	}
	var gridW = width / (numHor - 1);
	var gridH = height / (numVer - 1);
	var total = numHor * numVer;
	var xpos = 0;
	var ypos = 0;
	var arr = [];
	var _g1 = 0;
	var _g = total;
	while(_g1 < _g) {
		var i = _g1++;
		var point = { x : x + xpos * gridW, y : y + ypos * gridH};
		arr.push(point);
		++xpos;
		if(xpos >= numHor) {
			xpos = 0;
			++ypos;
		}
	}
	return arr;
};
cc_util_GridUtil.calcGrid = function(x,y,width,height,gridX,gridY,numHor,numVer) {
	if(numVer == null) {
		numVer = 1;
	}
	if(numHor == null) {
		numHor = 1;
	}
	if(gridY == null) {
		gridY = 1;
	}
	if(gridX == null) {
		gridX = 1;
	}
	if(height == null) {
		height = -1;
	}
	if(width == null) {
		width = -1;
	}
	if(y == null) {
		y = -1;
	}
	if(x == null) {
		x = -1;
	}
	var grid = new cc_util_GridUtil();
	grid.array = [];
	grid.x = 0;
	grid.y = 0;
	grid.width = 0;
	grid.height = 0;
	grid.gridX = 0;
	grid.gridY = 0;
	return grid;
};
cc_util_GridUtil.prototype = {
	xpos: function(x) {
		this._x = x;
		return this;
	}
	,ypos: function(y) {
		this._y = y;
		return this;
	}
	,pos: function(x,y) {
		this._x = x;
		this._y = y;
		return this;
	}
	,dimension: function(w,h) {
		this._w = w;
		this._h = h;
		return this;
	}
	,grid: function(hor,ver) {
		this._hor = hor;
		this._ver = ver;
		return this;
	}
	,size: function(w,h) {
		this._cellw = w;
		this._cellh = h;
		return this;
	}
	,centered: function() {
		this._center = true;
		return this;
	}
	,debug: function() {
		this._debug = true;
		return this;
	}
	,fullscreen: function() {
		this._fullscreen = true;
		return this;
	}
	,color: function(value) {
		this._color = value;
		return this;
	}
	,calc: function() {
		haxe_Log.trace("WIP",{ fileName : "GridUtil.hx", lineNumber : 155, className : "cc.util.GridUtil", methodName : "calc"});
		return this;
	}
	,draw: function(isDebug) {
		if(isDebug == null) {
			isDebug = false;
		}
		var isDebug1 = isDebug;
		return this;
	}
	,setPosition: function(x,y) {
		if(this._isDebug) {
			window.console.log("" + this.toString() + " setPostion");
		}
		this.x = x;
		this.y = y;
		this._isPosition = true;
		this.calculate();
	}
	,setIsCenterPoint: function(isCentered) {
		if(isCentered == null) {
			isCentered = true;
		}
		if(this._isDebug) {
			window.console.log("" + this.toString() + " setCenterPoint");
		}
		this.isCentered = isCentered;
		this.calculate();
	}
	,setDebug: function(isDebug) {
		if(isDebug == null) {
			isDebug = true;
		}
		this._isDebug = isDebug;
		if(this._isDebug) {
			window.console.log("" + this.toString() + " setDebug");
		}
	}
	,setIsFullscreen: function(isFullscreen) {
		if(isFullscreen == null) {
			isFullscreen = true;
		}
		if(this._isDebug) {
			window.console.log("" + this.toString() + " setIsFullscreen");
		}
		this.isFullscreen = isFullscreen;
		this.calculate();
	}
	,setDimension: function(width,height) {
		if(this._isDebug) {
			window.console.log("" + this.toString() + " setDimension (width: " + width + ", height: " + height + ")");
		}
		this.width = width;
		this.height = height;
		this._isDimension = true;
		this.calculate();
	}
	,setNumbered: function(numHor,numVer) {
		if(this._isDebug) {
			window.console.log("" + this.toString() + " setNumbers (numHor: " + numHor + ", numVer: " + numVer + ")");
		}
		this.numHor = numHor;
		this.numVer = numVer;
		this._isNumbered = true;
		this.calculate();
	}
	,setCellSize: function(cellWidth,cellHeight) {
		if(cellHeight == null) {
			cellHeight = cellWidth;
		}
		if(this._isDebug) {
			window.console.log("" + this.toString() + " setCellSize (cellWidth: " + cellWidth + ", cellHeight: " + cellHeight + ")");
		}
		this.cellWidth = cellWidth;
		this.cellHeight = cellHeight;
		this._isCellSize = true;
		this.calculate();
	}
	,reset: function() {
		this.array = [];
	}
	,calculate: function() {
		if(this._isDebug) {
			window.console.log("" + this.toString() + " calculate()");
		}
		if(this._isCellSize && !this._isDimension) {
			if(this._isDebug) {
				window.console.info("" + this.toString() + " solution #1: cellSize is set");
			}
			this.numHor = Math.floor(Global.w / this.cellWidth);
			this.numVer = Math.floor(Global.h / this.cellHeight);
			this.width = this.numHor * this.cellWidth;
			this.height = this.numVer * this.cellHeight;
			this.x = (Global.w - this.width) / 2;
			this.y = (Global.h - this.height) / 2;
		}
		if(this._isNumbered && !this._isDimension) {
			if(this._isDebug) {
				window.console.info("" + this.toString() + " solution #2: numbered cells set");
			}
			var _w = this.width != null ? this.width : Global.w;
			var _h = this.height != null ? this.height : Global.h;
			this.cellWidth = _w / this.numHor;
			this.cellHeight = _h / this.numVer;
			this.width = this.numHor * this.cellWidth;
			this.height = this.numVer * this.cellHeight;
			this.x = (Global.w - this.width) / 2;
			this.y = (Global.h - this.height) / 2;
			window.console.info("cellWidth: " + this.cellWidth + ", cellHeight: " + this.cellHeight + ", width: " + this.width + ", height: " + this.height + ", x: " + this.x + ", y: " + this.y);
		}
		if(this._isDimension && !this._isNumbered && !this._isCellSize) {
			if(this._isDebug) {
				window.console.info("" + this.toString() + " solution #3: width/height set (" + this.width + ", " + this.height + ")");
			}
			var _cellWidth = this.cellWidth != null ? this.cellWidth : 50;
			var _cellHeight = this.cellHeight != null ? this.cellHeight : 50;
			this.numHor = Math.floor(this.width / _cellWidth);
			this.numVer = Math.floor(this.height / _cellHeight);
			this.width = this.numHor * _cellWidth;
			this.height = this.numVer * _cellHeight;
			this.cellWidth = this.width / this.numHor;
			this.cellHeight = this.height / this.numVer;
			this.x = (Global.w - this.width) / 2;
			this.y = (Global.h - this.height) / 2;
		}
		if(this._isDimension && !this._isCellSize) {
			if(this._isDebug) {
				window.console.info("" + this.toString() + " solution #3a: width/height set (" + this.width + ", " + this.height + ") AND number row/cols (" + this.numHor + ", " + this.numVer + ")");
			}
			this.cellWidth = Math.floor(this.width / this.numHor);
			this.cellHeight = Math.floor(this.height / this.numVer);
			this.width = this.numHor * this.cellWidth;
			this.height = this.numVer * this.cellHeight;
			if(!this._isPosition) {
				this.x = (Global.w - this.width) / 2;
				this.y = (Global.h - this.height) / 2;
			}
		}
		if(this._isDimension && this._isNumbered && !this._isCellSize) {
			if(this._isDebug) {
				window.console.info("" + this.toString() + " solution #3b: w/h set (" + this.width + ", " + this.height + ") AND number row/cols (" + this.numHor + ", " + this.numVer + ")");
				window.console.info("" + this.toString() + "  (" + Global.w + ", " + Global.h + ")");
			}
			this.cellWidth = Math.floor(this.width / this.numHor);
			this.cellHeight = Math.floor(this.height / this.numVer);
			this.width = this.numHor * this.cellWidth;
			this.height = this.numVer * this.cellHeight;
		}
		if(this._isCellSize && this._isDimension) {
			if(this._isDebug) {
				window.console.info("" + this.toString() + " solution #4: cellSize is set and width/height");
			}
			this.numHor = Math.floor(this.width / this.cellWidth);
			this.numVer = Math.floor(this.height / this.cellHeight);
			this.width = this.numHor * this.cellWidth;
			this.height = this.numVer * this.cellHeight;
			if(!this._isPosition) {
				this.x = (Global.w - this.width) / 2;
				this.y = (Global.h - this.height) / 2;
			}
		}
		if(this.isFullscreen && this._isCellSize) {
			if(this._isDebug) {
				window.console.info("" + this.toString() + " solution #5: fullscreen and cellSize is set");
			}
			this.width = Global.w;
			this.height = Global.h;
			this.numHor = Math.ceil(this.width / this.cellWidth);
			this.numVer = Math.ceil(this.height / this.cellHeight);
			this.width = this.numHor * this.cellWidth;
			this.height = this.numVer * this.cellHeight;
			this.x = (Global.w - this.width) / 2;
			this.y = (Global.h - this.height) / 2;
		}
		var cx = 0.0;
		var cy = 0.0;
		if(this.isCentered) {
			cx = this.cellWidth / 2;
			cy = this.cellHeight / 2;
		}
		this.array = [];
		var total = Math.round(this.numHor * this.numVer);
		var xpos = 0;
		var ypos = 0;
		var _g1 = 0;
		var _g = total;
		while(_g1 < _g) {
			var i = _g1++;
			var point = { x : Math.round(this.x + xpos * this.cellWidth + cx), y : Math.round(this.y + ypos * this.cellHeight + cy)};
			this.array.push(point);
			++xpos;
			if(xpos >= this.numHor) {
				xpos = 0;
				++ypos;
			}
		}
		total = this.array.length;
		if(this._isDebug) {
			window.console.groupCollapsed("" + this.toString() + " Sata");
			window.console.log("x: " + this.x + ", y: " + this.y + ", width: " + this.width + ", height: " + this.height + ", cellWidth: " + this.cellWidth + ", cellHeight: " + this.cellHeight + ", numHor: " + this.numHor + ", numVer: " + this.numVer + ", array: " + this.array.length);
			window.console.table(this.array);
			window.console.groupEnd();
		}
	}
	,toString: function() {
		return "[GridUtil]";
	}
	,__class__: cc_util_GridUtil
};
var cc_util_HelperUtil = function() {
};
$hxClasses["cc.util.HelperUtil"] = cc_util_HelperUtil;
cc_util_HelperUtil.__name__ = ["cc","util","HelperUtil"];
cc_util_HelperUtil.stats = function() {
	var script = document.createElement('script');script.onload = function() {var stats = new Stats();document.body.appendChild(stats.dom);requestAnimationFrame(function loop() {stats.update();requestAnimationFrame(loop)});};script.src = '//mrdoob.github.io/stats.js/build/stats.min.js';document.head.appendChild(script);
};
cc_util_HelperUtil.prototype = {
	__class__: cc_util_HelperUtil
};
var cc_util_MathUtil = function() { };
$hxClasses["cc.util.MathUtil"] = cc_util_MathUtil;
cc_util_MathUtil.__name__ = ["cc","util","MathUtil"];
cc_util_MathUtil.radians = function(deg) {
	return deg * Math.PI / 180;
};
cc_util_MathUtil.degrees = function(rad) {
	return rad * 180 / Math.PI;
};
cc_util_MathUtil.degreesToPoint = function(deg,diameter) {
	var rad = Math.PI * deg / 180;
	var r = diameter / 2;
	return { x : r * Math.cos(rad), y : r * Math.sin(rad)};
};
cc_util_MathUtil.distributeAngles = function(me,total) {
	return me / total * 360;
};
cc_util_MathUtil.distance = function(x1,y1,x2,y2) {
	return cc_util_MathUtil.dist(x1,y1,x2,y2);
};
cc_util_MathUtil.dist = function(x1,y1,x2,y2) {
	x2 -= x1;
	y2 -= y1;
	return Math.sqrt(x2 * x2 + y2 * y2);
};
cc_util_MathUtil.pythagoreanTheorem = function(a,b,c) {
	if(a == null && b == null && c == null) {
		haxe_Log.trace("Really? Perhaps you should use some data",{ fileName : "MathUtil.hx", lineNumber : 77, className : "cc.util.MathUtil", methodName : "pythagoreanTheorem"});
		return 0;
	}
	var value = 0.0;
	if(c == null || c == 0) {
		value = Math.sqrt(a * a + b * b);
	}
	if(a == null || a == 0) {
		value = Math.sqrt(c * c - b * b);
	}
	if(b == null || b == 0) {
		value = Math.sqrt(c * c - a * a);
	}
	return value;
};
cc_util_MathUtil.circumferenceCircle = function(radius) {
	return Math.PI * radius * 2;
};
cc_util_MathUtil.areaCircle = function(radius) {
	return Math.PI * Math.sqrt(radius);
};
cc_util_MathUtil.randomInteger = function(min,max) {
	if(max == null) {
		max = min;
		min = 0;
	}
	return Math.floor(Math.random() * (max + 1 - min)) + min;
};
cc_util_MathUtil.randomInt = function(min,max) {
	return cc_util_MathUtil.randomInteger(min,max);
};
cc_util_MathUtil.random = function(min,max) {
	if(min == null) {
		min = 0;
		max = 1;
	} else if(max == null) {
		max = min;
		min = 0;
	}
	return Math.random() * (max - min) + min;
};
cc_util_MathUtil.randomP = function(min,max) {
	if(min == null) {
		min = 0.1;
		max = 1;
	} else if(max == null) {
		max = min;
		min = 0.1;
	}
	return Math.random() * (max - min) + min;
};
cc_util_MathUtil.chance = function(value) {
	return cc_util_MathUtil.random(value) > value - 1;
};
cc_util_MathUtil.posNeg = function() {
	return cc_util_MathUtil.randomInt(0,1) * 2 - 1;
};
cc_util_MathUtil.angle = function(cx,cy,ex,ey) {
	var dy = ey - cy;
	var dx = ex - cx;
	var theta = Math.atan2(dy,dx);
	theta *= 180 / Math.PI;
	if(theta < 0) {
		theta = 360 + theta;
	}
	if(theta == 360) {
		theta = 0;
	}
	return theta;
};
cc_util_MathUtil.map = function(value,min1,max1,min2,max2,clampResult) {
	var returnvalue = (value - min1) / (max1 - min1) * (max2 - min2) + min2;
	if(clampResult) {
		return cc_util_MathUtil.clamp(returnvalue,min2,max2);
	} else {
		return returnvalue;
	}
};
cc_util_MathUtil.orbit = function(xpos,ypos,angle,radius) {
	var _xpos = xpos + Math.cos(cc_util_MathUtil.radians(angle)) * radius;
	var _ypos = ypos + Math.sin(cc_util_MathUtil.radians(angle)) * radius;
	return { x : _xpos, y : _ypos};
};
cc_util_MathUtil.shuffle = function(array) {
	var currentIndex = array.length;
	var temporaryValue;
	var randomIndex;
	while(0 != currentIndex) {
		randomIndex = Math.floor(Math.random() * currentIndex);
		--currentIndex;
		temporaryValue = array[currentIndex];
		array[currentIndex] = array[randomIndex];
		array[randomIndex] = temporaryValue;
	}
	return array;
};
cc_util_MathUtil.clamp = function(value,min,max) {
	return Math.min(Math.max(value,Math.min(min,max)),Math.max(min,max));
};
var cc_util_ShapeUtil = function() { };
$hxClasses["cc.util.ShapeUtil"] = cc_util_ShapeUtil;
cc_util_ShapeUtil.__name__ = ["cc","util","ShapeUtil"];
cc_util_ShapeUtil.cross = function(ctx,x,y,width,height) {
	if(height == null) {
		height = 60;
	}
	if(width == null) {
		width = 20;
	}
	cc_CanvasTools.colour(ctx,cc_util_ColorUtil.PINK.r,cc_util_ColorUtil.PINK.g,cc_util_ColorUtil.PINK.b,1);
	ctx.fillRect(x - width / 2,y - height / 2,width,height);
	ctx.fillRect(x - height / 2,y - width / 2,height,width);
};
cc_util_ShapeUtil.registerPoint = function(ctx,x,y) {
	var _w = 10;
	var _h = 10;
	var _d = 2;
	cc_CanvasTools.colour(ctx,cc_util_ColorUtil.PINK.r,cc_util_ColorUtil.PINK.g,cc_util_ColorUtil.PINK.b,1);
	ctx.fillRect(x - _w / 2,y - _d / 2,_w,_d);
	ctx.fillRect(x - _d / 2,y - _h / 2,_d,_h);
};
cc_util_ShapeUtil.xcross = function(ctx,x,y,size,weight) {
	if(weight == null) {
		weight = 100;
	}
	if(size == null) {
		size = 200;
	}
	cc_CanvasTools.strokeWeight(ctx,weight);
	cc_CanvasTools.line(ctx,x - size / 2,y - size / 2,x - size / 2 + size,y - size / 2 + size);
	cc_CanvasTools.line(ctx,x + size - size / 2,y - size / 2,x - size / 2,y + size - size / 2);
};
cc_util_ShapeUtil.gridRegister = function(ctx,arr) {
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		var point = arr[i];
		cc_util_ShapeUtil.registerPoint(ctx,point.x,point.y);
	}
};
cc_util_ShapeUtil.gridRegisters = function(ctx,grid) {
	var _g1 = 0;
	var _g = grid.array.length;
	while(_g1 < _g) {
		var i = _g1++;
		var point = grid.array[i];
		cc_util_ShapeUtil.cross(ctx,point.x,point.y,5,20);
	}
};
cc_util_ShapeUtil.gridField = function(ctx,grid) {
	var _g1 = 0;
	var _g = grid.array.length;
	while(_g1 < _g) {
		var i = _g1++;
		var point = grid.array[i];
		cc_util_ShapeUtil.registerPoint(ctx,point.x,point.y);
	}
	ctx.lineWidth = 1;
	cc_CanvasTools.lineColour(ctx,cc_util_ColorUtil.GRAY.r,cc_util_ColorUtil.GRAY.g,cc_util_ColorUtil.GRAY.b,0.5);
	ctx.strokeRect(grid.x,grid.y,grid.width,grid.height);
};
cc_util_ShapeUtil.gridDots = function(ctx,grid) {
	var _g1 = 0;
	var _g = grid.array.length;
	while(_g1 < _g) {
		var i = _g1++;
		var point = grid.array[i];
		cc_CanvasTools.colour(ctx,cc_util_ColorUtil.PINK.r,cc_util_ColorUtil.PINK.g,cc_util_ColorUtil.PINK.b,1);
		cc_CanvasTools.circle(ctx,point.x,point.y,1);
	}
	ctx.lineWidth = 1;
	cc_CanvasTools.lineColour(ctx,cc_util_ColorUtil.GRAY.r,cc_util_ColorUtil.GRAY.g,cc_util_ColorUtil.GRAY.b,0.5);
	ctx.strokeRect(grid.x,grid.y,grid.width,grid.height);
};
var cc_util_TextUtil = function() {
};
$hxClasses["cc.util.TextUtil"] = cc_util_TextUtil;
cc_util_TextUtil.__name__ = ["cc","util","TextUtil"];
cc_util_TextUtil.getLines = function(ctx,text,maxWidth) {
	var words = text.split(" ");
	var lines = [];
	var currentLine = words[0];
	var _g1 = 1;
	var _g = words.length;
	while(_g1 < _g) {
		var i = _g1++;
		var word = words[i];
		var width = ctx.measureText(currentLine + " " + word).width;
		if(width < maxWidth) {
			currentLine += " " + word;
		} else {
			lines.push(currentLine);
			currentLine = word;
		}
	}
	lines.push(currentLine);
	return lines;
};
cc_util_TextUtil.drawTextAlongArc = function(ctx,str,centerX,centerY,radius,angle) {
	var charArr = str.split("");
	ctx.save();
	ctx.translate(centerX,centerY);
	ctx.rotate(-1 * angle / 2);
	ctx.rotate(-1 * (angle / charArr.length) / 2);
	var _g1 = 0;
	var _g = charArr.length;
	while(_g1 < _g) {
		var i = _g1++;
		var _char = charArr[i];
		ctx.rotate(angle / charArr.length);
		ctx.save();
		ctx.translate(0,-1 * radius);
		ctx.fillText(_char,0,0);
		ctx.restore();
	}
	ctx.restore();
};
cc_util_TextUtil.drawTextAlongArc4 = function(ctx,str,centerX,centerY,radius,startDegree) {
	if(startDegree == null) {
		startDegree = -90;
	}
	var monoW = ctx.measureText(" ").width;
	var charArr = str.split("");
	ctx.save();
	var angle = 0.0;
	var _g1 = 0;
	var _g = charArr.length;
	while(_g1 < _g) {
		var i = _g1++;
		radius -= 0.15 + i * 0.0005;
		var a = monoW;
		var b = radius;
		var c = radius;
		var cosa = (Math.pow(b,2) + Math.pow(c,2) - Math.pow(a,2)) / (2 * b * c);
		var pAngle = cc_util_MathUtil.degrees(Math.acos(cosa));
		var _char = charArr[i];
		angle = startDegree + i * pAngle;
		var xpos = centerX + Math.cos(cc_util_MathUtil.radians(angle)) * radius;
		var ypos = centerY + Math.sin(cc_util_MathUtil.radians(angle)) * radius;
		ctx.save();
		ctx.translate(xpos,ypos);
		ctx.rotate(cc_util_MathUtil.radians(angle + 90));
		ctx.fillText(_char,0,0);
		ctx.restore();
	}
	ctx.restore();
};
cc_util_TextUtil.drawTextAlongArc3 = function(ctx,str,centerX,centerY,radius) {
	var charArr = str.split("");
	ctx.save();
	var angle = 0;
	var _g1 = 0;
	var _g = charArr.length;
	while(_g1 < _g) {
		var i = _g1++;
		var _char = charArr[i];
		angle = i;
		var xpos = centerX + Math.cos(cc_util_MathUtil.radians(angle)) * radius;
		var ypos = centerY + Math.sin(cc_util_MathUtil.radians(angle)) * radius;
		haxe_Log.trace(_char,{ fileName : "TextUtil.hx", lineNumber : 133, className : "cc.util.TextUtil", methodName : "drawTextAlongArc3", customParams : [i,xpos,ypos]});
		ctx.translate(xpos,ypos);
		ctx.rotate(angle / charArr.length);
		ctx.fillText(_char,0,0);
		ctx.restore();
	}
	ctx.restore();
};
cc_util_TextUtil.drawTextAlongArc2 = function(ctx,str,centerX,centerY,radius) {
	var charArr = str.split("");
	var width = ctx.measureText(" ").width;
	ctx.save();
	ctx.translate(centerX,centerY);
	var _angle = 1.0;
	var _g1 = 0;
	var _g = charArr.length;
	while(_g1 < _g) {
		var i = _g1++;
		var _char = charArr[i];
		var _rotation = cc_util_MathUtil.radians(_angle);
		ctx.rotate(_angle * Math.PI / 360);
		haxe_Log.trace("" + i + " // _char = " + _char + " : _angle: " + _angle + " - _rotation: " + _rotation,{ fileName : "TextUtil.hx", lineNumber : 173, className : "cc.util.TextUtil", methodName : "drawTextAlongArc2"});
		ctx.save();
		ctx.translate(0,-1 * radius);
		ctx.fillText(_char,0,0);
		ctx.restore();
		_angle += 0.5;
	}
	ctx.restore();
};
cc_util_TextUtil.prototype = {
	__class__: cc_util_TextUtil
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe_Http = function(url) {
	this.url = url;
	this.headers = new List();
	this.params = new List();
	this.async = true;
	this.withCredentials = false;
};
$hxClasses["haxe.Http"] = haxe_Http;
haxe_Http.__name__ = ["haxe","Http"];
haxe_Http.prototype = {
	setHeader: function(header,value) {
		this.headers = Lambda.filter(this.headers,function(h) {
			return h.header != header;
		});
		this.headers.push({ header : header, value : value});
		return this;
	}
	,setPostData: function(data) {
		this.postData = data;
		return this;
	}
	,cancel: function() {
		if(this.req == null) {
			return;
		}
		this.req.abort();
		this.req = null;
	}
	,request: function(post) {
		var me = this;
		me.responseData = null;
		var r = this.req = js_Browser.createXMLHttpRequest();
		var onreadystatechange = function(_) {
			if(r.readyState != 4) {
				return;
			}
			var s;
			try {
				s = r.status;
			} catch( e ) {
				s = null;
			}
			if(s != null && "undefined" !== typeof window) {
				var protocol = window.location.protocol.toLowerCase();
				var rlocalProtocol = new EReg("^(?:about|app|app-storage|.+-extension|file|res|widget):$","");
				var isLocal = rlocalProtocol.match(protocol);
				if(isLocal) {
					if(r.responseText != null) {
						s = 200;
					} else {
						s = 404;
					}
				}
			}
			if(s == undefined) {
				s = null;
			}
			if(s != null) {
				me.onStatus(s);
			}
			if(s != null && s >= 200 && s < 400) {
				me.req = null;
				me.onData(me.responseData = r.responseText);
			} else if(s == null) {
				me.req = null;
				me.onError("Failed to connect or resolve host");
			} else {
				switch(s) {
				case 12007:
					me.req = null;
					me.onError("Unknown host");
					break;
				case 12029:
					me.req = null;
					me.onError("Failed to connect to host");
					break;
				default:
					me.req = null;
					me.responseData = r.responseText;
					me.onError("Http Error #" + r.status);
				}
			}
		};
		if(this.async) {
			r.onreadystatechange = onreadystatechange;
		}
		var uri = this.postData;
		if(uri != null) {
			post = true;
		} else {
			var _g_head = this.params.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				var p = val;
				if(uri == null) {
					uri = "";
				} else {
					uri += "&";
				}
				var s1 = p.param;
				var uri1 = encodeURIComponent(s1) + "=";
				var s2 = p.value;
				uri += uri1 + encodeURIComponent(s2);
			}
		}
		try {
			if(post) {
				r.open("POST",this.url,this.async);
			} else if(uri != null) {
				var question = this.url.split("?").length <= 1;
				r.open("GET",this.url + (question ? "?" : "&") + uri,this.async);
				uri = null;
			} else {
				r.open("GET",this.url,this.async);
			}
		} catch( e1 ) {
			if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
			me.req = null;
			this.onError(e1.toString());
			return;
		}
		r.withCredentials = this.withCredentials;
		if(!Lambda.exists(this.headers,function(h) {
			return h.header == "Content-Type";
		}) && post && this.postData == null) {
			r.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
		}
		var _g_head1 = this.headers.h;
		while(_g_head1 != null) {
			var val1 = _g_head1.item;
			_g_head1 = _g_head1.next;
			var h1 = val1;
			r.setRequestHeader(h1.header,h1.value);
		}
		r.send(uri);
		if(!this.async) {
			onreadystatechange(null);
		}
	}
	,onData: function(data) {
	}
	,onError: function(msg) {
	}
	,onStatus: function(status) {
	}
	,__class__: haxe_Http
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = ["haxe","Log"];
haxe_Log.trace = function(v,infos) {
	js_Boot.__trace(v,infos);
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = ["haxe","Timer"];
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ds_ArraySort = function() { };
$hxClasses["haxe.ds.ArraySort"] = haxe_ds_ArraySort;
haxe_ds_ArraySort.__name__ = ["haxe","ds","ArraySort"];
haxe_ds_ArraySort.sort = function(a,cmp) {
	haxe_ds_ArraySort.rec(a,cmp,0,a.length);
};
haxe_ds_ArraySort.rec = function(a,cmp,from,to) {
	var middle = from + to >> 1;
	if(to - from < 12) {
		if(to <= from) {
			return;
		}
		var _g1 = from + 1;
		var _g = to;
		while(_g1 < _g) {
			var i = _g1++;
			var j = i;
			while(j > from) {
				if(cmp(a[j],a[j - 1]) < 0) {
					haxe_ds_ArraySort.swap(a,j - 1,j);
				} else {
					break;
				}
				--j;
			}
		}
		return;
	}
	haxe_ds_ArraySort.rec(a,cmp,from,middle);
	haxe_ds_ArraySort.rec(a,cmp,middle,to);
	haxe_ds_ArraySort.doMerge(a,cmp,from,middle,to,middle - from,to - middle);
};
haxe_ds_ArraySort.doMerge = function(a,cmp,from,pivot,to,len1,len2) {
	var first_cut;
	var second_cut;
	var len11;
	var len22;
	var new_mid;
	if(len1 == 0 || len2 == 0) {
		return;
	}
	if(len1 + len2 == 2) {
		if(cmp(a[pivot],a[from]) < 0) {
			haxe_ds_ArraySort.swap(a,pivot,from);
		}
		return;
	}
	if(len1 > len2) {
		len11 = len1 >> 1;
		first_cut = from + len11;
		second_cut = haxe_ds_ArraySort.lower(a,cmp,pivot,to,first_cut);
		len22 = second_cut - pivot;
	} else {
		len22 = len2 >> 1;
		second_cut = pivot + len22;
		first_cut = haxe_ds_ArraySort.upper(a,cmp,from,pivot,second_cut);
		len11 = first_cut - from;
	}
	haxe_ds_ArraySort.rotate(a,cmp,first_cut,pivot,second_cut);
	new_mid = first_cut + len22;
	haxe_ds_ArraySort.doMerge(a,cmp,from,first_cut,new_mid,len11,len22);
	haxe_ds_ArraySort.doMerge(a,cmp,new_mid,second_cut,to,len1 - len11,len2 - len22);
};
haxe_ds_ArraySort.rotate = function(a,cmp,from,mid,to) {
	var n;
	if(from == mid || mid == to) {
		return;
	}
	n = haxe_ds_ArraySort.gcd(to - from,mid - from);
	while(n-- != 0) {
		var val = a[from + n];
		var shift = mid - from;
		var p1 = from + n;
		var p2 = from + n + shift;
		while(p2 != from + n) {
			a[p1] = a[p2];
			p1 = p2;
			if(to - p2 > shift) {
				p2 += shift;
			} else {
				p2 = from + (shift - (to - p2));
			}
		}
		a[p1] = val;
	}
};
haxe_ds_ArraySort.gcd = function(m,n) {
	while(n != 0) {
		var t = m % n;
		m = n;
		n = t;
	}
	return m;
};
haxe_ds_ArraySort.upper = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[val],a[mid]) < 0) {
			len = half;
		} else {
			from = mid + 1;
			len = len - half - 1;
		}
	}
	return from;
};
haxe_ds_ArraySort.lower = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[mid],a[val]) < 0) {
			from = mid + 1;
			len = len - half - 1;
		} else {
			len = half;
		}
	}
	return from;
};
haxe_ds_ArraySort.swap = function(a,i,j) {
	var tmp = a[i];
	a[i] = a[j];
	a[j] = tmp;
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_xml_XmlParserException = function(message,xml,position) {
	this.xml = xml;
	this.message = message;
	this.position = position;
	this.lineNumber = 1;
	this.positionAtLine = 0;
	var _g1 = 0;
	var _g = position;
	while(_g1 < _g) {
		var i = _g1++;
		var c = xml.charCodeAt(i);
		if(c == 10) {
			this.lineNumber++;
			this.positionAtLine = 0;
		} else if(c != 13) {
			this.positionAtLine++;
		}
	}
};
$hxClasses["haxe.xml.XmlParserException"] = haxe_xml_XmlParserException;
haxe_xml_XmlParserException.__name__ = ["haxe","xml","XmlParserException"];
haxe_xml_XmlParserException.prototype = {
	toString: function() {
		return Type.getClassName(js_Boot.getClass(this)) + ": " + this.message + " at line " + this.lineNumber + " char " + this.positionAtLine;
	}
	,__class__: haxe_xml_XmlParserException
};
var haxe_xml_Parser = function() { };
$hxClasses["haxe.xml.Parser"] = haxe_xml_Parser;
haxe_xml_Parser.__name__ = ["haxe","xml","Parser"];
haxe_xml_Parser.parse = function(str,strict) {
	if(strict == null) {
		strict = false;
	}
	var doc = Xml.createDocument();
	haxe_xml_Parser.doParse(str,strict,0,doc);
	return doc;
};
haxe_xml_Parser.doParse = function(str,strict,p,parent) {
	if(p == null) {
		p = 0;
	}
	var xml = null;
	var state = 1;
	var next = 1;
	var aname = null;
	var start = 0;
	var nsubs = 0;
	var nbrackets = 0;
	var c = str.charCodeAt(p);
	var buf = new StringBuf();
	var escapeNext = 1;
	var attrValQuote = -1;
	while(c == c) {
		switch(state) {
		case 0:
			switch(c) {
			case 9:case 10:case 13:case 32:
				break;
			default:
				state = next;
				continue;
			}
			break;
		case 1:
			if(c == 60) {
				state = 0;
				next = 2;
			} else {
				start = p;
				state = 13;
				continue;
			}
			break;
		case 2:
			switch(c) {
			case 33:
				if(str.charCodeAt(p + 1) == 91) {
					p += 2;
					if(HxOverrides.substr(str,p,6).toUpperCase() != "CDATA[") {
						throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <![CDATA[",str,p));
					}
					p += 5;
					state = 17;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) == 68 || str.charCodeAt(p + 1) == 100) {
					if(HxOverrides.substr(str,p + 2,6).toUpperCase() != "OCTYPE") {
						throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <!DOCTYPE",str,p));
					}
					p += 8;
					state = 16;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) != 45 || str.charCodeAt(p + 2) != 45) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <!--",str,p));
				} else {
					p += 2;
					state = 15;
					start = p + 1;
				}
				break;
			case 47:
				if(parent == null) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				start = p + 1;
				state = 0;
				next = 10;
				break;
			case 63:
				state = 14;
				start = p;
				break;
			default:
				state = 3;
				start = p;
				continue;
			}
			break;
		case 3:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(p == start) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				xml = Xml.createElement(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml);
				++nsubs;
				state = 0;
				next = 4;
				continue;
			}
			break;
		case 4:
			switch(c) {
			case 47:
				state = 11;
				break;
			case 62:
				state = 9;
				break;
			default:
				state = 5;
				start = p;
				continue;
			}
			break;
		case 5:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				var tmp;
				if(start == p) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected attribute name",str,p));
				}
				tmp = HxOverrides.substr(str,start,p - start);
				aname = tmp;
				if(xml.exists(aname)) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Duplicate attribute [" + aname + "]",str,p));
				}
				state = 0;
				next = 6;
				continue;
			}
			break;
		case 6:
			if(c == 61) {
				state = 0;
				next = 7;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected =",str,p));
			}
			break;
		case 7:
			switch(c) {
			case 34:case 39:
				buf = new StringBuf();
				state = 8;
				start = p + 1;
				attrValQuote = c;
				break;
			default:
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected \"",str,p));
			}
			break;
		case 8:
			switch(c) {
			case 38:
				var len = p - start;
				buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
				state = 18;
				escapeNext = 8;
				start = p + 1;
				break;
			case 60:case 62:
				if(strict) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Invalid unescaped " + String.fromCharCode(c) + " in attribute value",str,p));
				} else if(c == attrValQuote) {
					var len1 = p - start;
					buf.b += len1 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len1);
					var val = buf.b;
					buf = new StringBuf();
					xml.set(aname,val);
					state = 0;
					next = 4;
				}
				break;
			default:
				if(c == attrValQuote) {
					var len2 = p - start;
					buf.b += len2 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len2);
					var val1 = buf.b;
					buf = new StringBuf();
					xml.set(aname,val1);
					state = 0;
					next = 4;
				}
			}
			break;
		case 9:
			p = haxe_xml_Parser.doParse(str,strict,p,xml);
			start = p;
			state = 1;
			break;
		case 10:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				var v = HxOverrides.substr(str,start,p - start);
				if(parent.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + parent.nodeType);
				}
				if(v != parent.nodeName) {
					if(parent.nodeType != Xml.Element) {
						throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + parent.nodeType);
					}
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected </" + parent.nodeName + ">",str,p));
				}
				state = 0;
				next = 12;
				continue;
			}
			break;
		case 11:
			if(c == 62) {
				state = 1;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 12:
			if(c == 62) {
				if(nsubs == 0) {
					parent.addChild(Xml.createPCData(""));
				}
				return p;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 13:
			if(c == 60) {
				var len3 = p - start;
				buf.b += len3 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len3);
				var child = Xml.createPCData(buf.b);
				buf = new StringBuf();
				parent.addChild(child);
				++nsubs;
				state = 0;
				next = 2;
			} else if(c == 38) {
				var len4 = p - start;
				buf.b += len4 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len4);
				state = 18;
				escapeNext = 13;
				start = p + 1;
			}
			break;
		case 14:
			if(c == 63 && str.charCodeAt(p + 1) == 62) {
				++p;
				var str1 = HxOverrides.substr(str,start + 1,p - start - 2);
				parent.addChild(Xml.createProcessingInstruction(str1));
				++nsubs;
				state = 1;
			}
			break;
		case 15:
			if(c == 45 && str.charCodeAt(p + 1) == 45 && str.charCodeAt(p + 2) == 62) {
				parent.addChild(Xml.createComment(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 16:
			if(c == 91) {
				++nbrackets;
			} else if(c == 93) {
				--nbrackets;
			} else if(c == 62 && nbrackets == 0) {
				parent.addChild(Xml.createDocType(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				state = 1;
			}
			break;
		case 17:
			if(c == 93 && str.charCodeAt(p + 1) == 93 && str.charCodeAt(p + 2) == 62) {
				var child1 = Xml.createCData(HxOverrides.substr(str,start,p - start));
				parent.addChild(child1);
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 18:
			if(c == 59) {
				var s = HxOverrides.substr(str,start,p - start);
				if(s.charCodeAt(0) == 35) {
					var c1 = s.charCodeAt(1) == 120 ? Std.parseInt("0" + HxOverrides.substr(s,1,s.length - 1)) : Std.parseInt(HxOverrides.substr(s,1,s.length - 1));
					buf.b += String.fromCharCode(c1);
				} else {
					var _this = haxe_xml_Parser.escapes;
					if(!(__map_reserved[s] != null ? _this.existsReserved(s) : _this.h.hasOwnProperty(s))) {
						if(strict) {
							throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Undefined entity: " + s,str,p));
						}
						buf.b += Std.string("&" + s + ";");
					} else {
						var _this1 = haxe_xml_Parser.escapes;
						var x = __map_reserved[s] != null ? _this1.getReserved(s) : _this1.h[s];
						buf.b += Std.string(x);
					}
				}
				start = p + 1;
				state = escapeNext;
			} else if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45) && c != 35) {
				if(strict) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Invalid character in entity: " + String.fromCharCode(c),str,p));
				}
				buf.b += "&";
				var len5 = p - start;
				buf.b += len5 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len5);
				start = p--;
				state = escapeNext;
			}
			break;
		}
		c = str.charCodeAt(++p);
	}
	if(state == 1) {
		start = p;
		state = 13;
	}
	if(state == 13) {
		if(p != start || nsubs == 0) {
			var len6 = p - start;
			buf.b += len6 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len6);
			parent.addChild(Xml.createPCData(buf.b));
			++nsubs;
		}
		return p;
	}
	if(!strict && state == 18 && escapeNext == 13) {
		buf.b += "&";
		var len7 = p - start;
		buf.b += len7 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len7);
		parent.addChild(Xml.createPCData(buf.b));
		++nsubs;
		return p;
	}
	throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Unexpected end",str,p));
};
var hxColorToolkit_ColorToolkit = function() { };
$hxClasses["hxColorToolkit.ColorToolkit"] = hxColorToolkit_ColorToolkit;
hxColorToolkit_ColorToolkit.__name__ = ["hxColorToolkit","ColorToolkit"];
hxColorToolkit_ColorToolkit.setColorOpaque = function(color,opaqueValue) {
	if(opaqueValue == null) {
		opaqueValue = 255;
	}
	return opaqueValue << 24 | color & 16777215;
};
hxColorToolkit_ColorToolkit.desaturate = function(color) {
	return new hxColorToolkit_spaces_Gray().setColor(color).getColor();
};
hxColorToolkit_ColorToolkit.getComplement = function(color) {
	return hxColorToolkit_ColorToolkit.rybRotate(color,180);
};
hxColorToolkit_ColorToolkit.shiftBrighteness = function(color,degree) {
	var col = new hxColorToolkit_spaces_HSB().setColor(color);
	var _g = col;
	_g.set_brightness(_g.get_brightness() + degree);
	return col.getColor();
};
hxColorToolkit_ColorToolkit.shiftSaturation = function(color,degree) {
	var col = new hxColorToolkit_spaces_HSB().setColor(color);
	var _g = col;
	_g.set_saturation(_g.get_saturation() + degree);
	return col.getColor();
};
hxColorToolkit_ColorToolkit.shiftHue = function(color,degree) {
	var col = new hxColorToolkit_spaces_HSB().setColor(color);
	var _g = col;
	_g.set_hue(_g.get_hue() + degree);
	return col.getColor();
};
hxColorToolkit_ColorToolkit.toLab = function(color) {
	return new hxColorToolkit_spaces_Lab().setColor(color);
};
hxColorToolkit_ColorToolkit.toGray = function(color) {
	return new hxColorToolkit_spaces_Gray().setColor(color);
};
hxColorToolkit_ColorToolkit.toRGB = function(color) {
	return new hxColorToolkit_spaces_RGB(color >> 16 & 255,color >> 8 & 255,color & 255);
};
hxColorToolkit_ColorToolkit.toARGB = function(color) {
	return new hxColorToolkit_spaces_ARGB(color >> 24 & 255,color >> 16 & 255,color >> 8 & 255,color & 255);
};
hxColorToolkit_ColorToolkit.toHSB = function(color) {
	return new hxColorToolkit_spaces_HSB().setColor(color);
};
hxColorToolkit_ColorToolkit.toHSL = function(color) {
	return new hxColorToolkit_spaces_HSL().setColor(color);
};
hxColorToolkit_ColorToolkit.toCMYK = function(color) {
	return new hxColorToolkit_spaces_CMYK().setColor(color);
};
hxColorToolkit_ColorToolkit.toXYZ = function(color) {
	return new hxColorToolkit_spaces_XYZ().setColor(color);
};
hxColorToolkit_ColorToolkit.toYUV = function(color) {
	return new hxColorToolkit_spaces_YUV().setColor(color);
};
hxColorToolkit_ColorToolkit.toHex = function(color) {
	return new hxColorToolkit_spaces_Hex(color);
};
hxColorToolkit_ColorToolkit.getAnalogousScheme = function(color,angle,contrast) {
	if(contrast == null) {
		contrast = 25;
	}
	if(angle == null) {
		angle = 10;
	}
	return new hxColorToolkit_schemes_Analogous(new hxColorToolkit_spaces_Hex(color),angle,contrast);
};
hxColorToolkit_ColorToolkit.getComplementaryScheme = function(color) {
	return new hxColorToolkit_schemes_Complementary(new hxColorToolkit_spaces_Hex(color));
};
hxColorToolkit_ColorToolkit.getCompoundScheme = function(color) {
	return new hxColorToolkit_schemes_Compound(new hxColorToolkit_spaces_Hex(color));
};
hxColorToolkit_ColorToolkit.getFlippedCompoundScheme = function(color) {
	return new hxColorToolkit_schemes_FlippedCompound(new hxColorToolkit_spaces_Hex(color));
};
hxColorToolkit_ColorToolkit.getMonochromeScheme = function(color) {
	return new hxColorToolkit_schemes_Monochrome(new hxColorToolkit_spaces_Hex(color));
};
hxColorToolkit_ColorToolkit.getSplitComplementaryScheme = function(color) {
	return new hxColorToolkit_schemes_SplitComplementary(new hxColorToolkit_spaces_Hex(color));
};
hxColorToolkit_ColorToolkit.getTetradScheme = function(color,angle,alt) {
	if(alt == null) {
		alt = false;
	}
	if(angle == null) {
		angle = 90;
	}
	return new hxColorToolkit_schemes_Tetrad(new hxColorToolkit_spaces_Hex(color),angle,alt);
};
hxColorToolkit_ColorToolkit.getTriadScheme = function(color,angle) {
	if(angle == null) {
		angle = 120;
	}
	return new hxColorToolkit_schemes_Triad(new hxColorToolkit_spaces_Hex(color),angle);
};
hxColorToolkit_ColorToolkit.rybRotate = function(color,angle) {
	var hsb = new hxColorToolkit_spaces_HSB().setColor(color);
	var a = 0;
	var _g1 = 0;
	var _g = hxColorToolkit_ColorToolkit.rybWheel.length;
	while(_g1 < _g) {
		var i = _g1++;
		var x0 = hxColorToolkit_ColorToolkit.rybWheel[i][0];
		var y0 = hxColorToolkit_ColorToolkit.rybWheel[i][1];
		var x1 = hxColorToolkit_ColorToolkit.rybWheel[i + 1][0];
		var y1 = hxColorToolkit_ColorToolkit.rybWheel[i + 1][1];
		if(y1 < y0) {
			y1 += 360;
		}
		if(y0 <= hsb.get_hue() && hsb.get_hue() <= y1) {
			a = 1.0 * x0 + (x1 - x0) * (hsb.get_hue() - y0) / (y1 - y0);
			break;
		}
	}
	a += angle % 360;
	if(a < 0) {
		a = 360 + a;
	}
	if(a > 360) {
		a -= 360;
	}
	a %= 360;
	var newHue = 0;
	var _g11 = 0;
	var _g2 = hxColorToolkit_ColorToolkit.rybWheel.length;
	while(_g11 < _g2) {
		var k = _g11++;
		var xx0 = hxColorToolkit_ColorToolkit.rybWheel[k][0];
		var yy0 = hxColorToolkit_ColorToolkit.rybWheel[k][1];
		var xx1 = hxColorToolkit_ColorToolkit.rybWheel[k + 1][0];
		var yy1 = hxColorToolkit_ColorToolkit.rybWheel[k + 1][1];
		if(yy1 < yy0) {
			yy1 += 360;
		}
		if(xx0 <= a && a <= xx1) {
			newHue = yy0 + (yy1 - yy0) * (a - xx0) / (xx1 - xx0);
			break;
		}
	}
	hsb.set_hue(newHue);
	return hsb.getColor();
};
hxColorToolkit_ColorToolkit.intArray = function(colors) {
	var a = [];
	var c = colors.iterator();
	while(c.hasNext()) {
		var c1 = c.next();
		a.push(c1.getColor());
	}
	return a;
};
var hxColorToolkit_ColorSpaceToolkit = function() { };
$hxClasses["hxColorToolkit.ColorSpaceToolkit"] = hxColorToolkit_ColorSpaceToolkit;
hxColorToolkit_ColorSpaceToolkit.__name__ = ["hxColorToolkit","ColorSpaceToolkit"];
hxColorToolkit_ColorSpaceToolkit.toLab = function(color) {
	return new hxColorToolkit_spaces_Lab().fromRGB(color.toRGB());
};
hxColorToolkit_ColorSpaceToolkit.toGray = function(color) {
	return new hxColorToolkit_spaces_Gray().fromRGB(color.toRGB());
};
hxColorToolkit_ColorSpaceToolkit.toHSB = function(color) {
	return new hxColorToolkit_spaces_HSB().fromRGB(color.toRGB());
};
hxColorToolkit_ColorSpaceToolkit.toHSL = function(color) {
	return new hxColorToolkit_spaces_HSL().fromRGB(color.toRGB());
};
hxColorToolkit_ColorSpaceToolkit.toCMYK = function(color) {
	return new hxColorToolkit_spaces_CMYK().fromRGB(color.toRGB());
};
hxColorToolkit_ColorSpaceToolkit.toXYZ = function(color) {
	return new hxColorToolkit_spaces_XYZ().fromRGB(color.toRGB());
};
hxColorToolkit_ColorSpaceToolkit.toYUV = function(color) {
	return new hxColorToolkit_spaces_YUV().fromRGB(color.toRGB());
};
hxColorToolkit_ColorSpaceToolkit.toARGB = function(color) {
	return new hxColorToolkit_spaces_ARGB().fromRGB(color.toRGB());
};
hxColorToolkit_ColorSpaceToolkit.toHex = function(color) {
	return new hxColorToolkit_spaces_Hex(color.getColor());
};
var hxColorToolkit_schemes_ColorScheme = function() { };
$hxClasses["hxColorToolkit.schemes.ColorScheme"] = hxColorToolkit_schemes_ColorScheme;
hxColorToolkit_schemes_ColorScheme.__name__ = ["hxColorToolkit","schemes","ColorScheme"];
hxColorToolkit_schemes_ColorScheme.prototype = {
	__class__: hxColorToolkit_schemes_ColorScheme
};
var hxColorToolkit_schemes_ColorWheelScheme = function(primaryColor) {
	this._colors = [];
	this._primaryColor = primaryColor;
	this.numOfColors = 1;
};
$hxClasses["hxColorToolkit.schemes.ColorWheelScheme"] = hxColorToolkit_schemes_ColorWheelScheme;
hxColorToolkit_schemes_ColorWheelScheme.__name__ = ["hxColorToolkit","schemes","ColorWheelScheme"];
hxColorToolkit_schemes_ColorWheelScheme.__interfaces__ = [hxColorToolkit_schemes_ColorScheme];
hxColorToolkit_schemes_ColorWheelScheme.prototype = {
	clone: function() {
		throw new js__$Boot_HaxeError("need to be overrided");
	}
	,getColor: function(index) {
		return this._colors[index];
	}
	,iterator: function() {
		return HxOverrides.iter(this._colors);
	}
	,get_primaryColor: function() {
		return this._primaryColor;
	}
	,set_primaryColor: function(val) {
		this._primaryColor = val;
		this.generate();
		return this.get_primaryColor();
	}
	,generate: function() {
		throw new js__$Boot_HaxeError("Method must be called by child class");
	}
	,wrap: function(x,min,threshold,plus) {
		if(x - min < threshold) {
			return x + plus;
		} else {
			return x - min;
		}
	}
	,mutateFromPrimary: function(newColor) {
		if(js_Boot.__instanceof(newColor,this._class)) {
			return newColor.clone();
		} else {
			return this.get_primaryColor().clone().fromRGB(newColor.toRGB());
		}
	}
	,__class__: hxColorToolkit_schemes_ColorWheelScheme
	,__properties__: {set_primaryColor:"set_primaryColor",get_primaryColor:"get_primaryColor"}
};
var hxColorToolkit_schemes_Analogous = function(primaryColor,angle,contrast) {
	if(contrast == null) {
		contrast = 25;
	}
	if(angle == null) {
		angle = 10;
	}
	hxColorToolkit_schemes_ColorWheelScheme.call(this,primaryColor);
	this._angle = angle;
	this._contrast = contrast;
	this.generate();
};
$hxClasses["hxColorToolkit.schemes.Analogous"] = hxColorToolkit_schemes_Analogous;
hxColorToolkit_schemes_Analogous.__name__ = ["hxColorToolkit","schemes","Analogous"];
hxColorToolkit_schemes_Analogous.__super__ = hxColorToolkit_schemes_ColorWheelScheme;
hxColorToolkit_schemes_Analogous.prototype = $extend(hxColorToolkit_schemes_ColorWheelScheme.prototype,{
	clone: function() {
		return new hxColorToolkit_schemes_Analogous(this.get_primaryColor(),this.get_angle(),this.get_contrast());
	}
	,get_angle: function() {
		return this._angle;
	}
	,set_angle: function(val) {
		this._angle = val;
		this.generate();
		return this.get_angle();
	}
	,get_contrast: function() {
		return this._contrast;
	}
	,set_contrast: function(val) {
		this._contrast = val;
		this.generate();
		return this._contrast;
	}
	,generate: function() {
		this._colors = [this.get_primaryColor()];
		var _primaryHSB;
		if(js_Boot.__instanceof(this.get_primaryColor(),hxColorToolkit_spaces_HSB)) {
			_primaryHSB = this.get_primaryColor();
		} else {
			_primaryHSB = new hxColorToolkit_spaces_HSB().fromRGB(this.get_primaryColor().toRGB());
		}
		var newHSB = new hxColorToolkit_spaces_HSB();
		var array = [[1.0,2.2],[2.0,1.0],[-1.0,-0.5],[-2.0,1.0]];
		var _g1 = 0;
		var _g = array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var one = array[i][0];
			var two = array[i][1];
			newHSB.setColor(hxColorToolkit_ColorToolkit.rybRotate(_primaryHSB.getColor(),this.get_angle() * one));
			var t = 0.44 - two * 0.1;
			if(_primaryHSB.get_brightness() - this.get_contrast() * two < t) {
				newHSB.set_brightness(t * 100);
			} else {
				newHSB.set_brightness(_primaryHSB.get_brightness() - this.get_contrast() * two);
			}
			newHSB.set_saturation(newHSB.get_saturation() - 5);
			this._colors.push(this.mutateFromPrimary(newHSB));
		}
		this.numOfColors = this._colors.length;
	}
	,__class__: hxColorToolkit_schemes_Analogous
	,__properties__: $extend(hxColorToolkit_schemes_ColorWheelScheme.prototype.__properties__,{set_contrast:"set_contrast",get_contrast:"get_contrast",set_angle:"set_angle",get_angle:"get_angle"})
});
var hxColorToolkit_schemes_Complementary = function(primaryColor) {
	hxColorToolkit_schemes_ColorWheelScheme.call(this,primaryColor);
	this.generate();
};
$hxClasses["hxColorToolkit.schemes.Complementary"] = hxColorToolkit_schemes_Complementary;
hxColorToolkit_schemes_Complementary.__name__ = ["hxColorToolkit","schemes","Complementary"];
hxColorToolkit_schemes_Complementary.__super__ = hxColorToolkit_schemes_ColorWheelScheme;
hxColorToolkit_schemes_Complementary.prototype = $extend(hxColorToolkit_schemes_ColorWheelScheme.prototype,{
	clone: function() {
		return new hxColorToolkit_schemes_Complementary(this.get_primaryColor());
	}
	,generate: function() {
		this._colors = [this.get_primaryColor()];
		var _primaryHSB;
		if(js_Boot.__instanceof(this.get_primaryColor(),hxColorToolkit_spaces_HSB)) {
			_primaryHSB = this.get_primaryColor();
		} else {
			_primaryHSB = new hxColorToolkit_spaces_HSB().fromRGB(this.get_primaryColor().toRGB());
		}
		var contrasting = _primaryHSB.clone();
		if(_primaryHSB.get_brightness() > 40) {
			contrasting.set_brightness(10 + _primaryHSB.get_brightness() * 0.25);
		} else {
			contrasting.set_brightness(100 - _primaryHSB.get_brightness() * 0.25);
		}
		this._colors.push(this.mutateFromPrimary(contrasting));
		var supporting = _primaryHSB.clone();
		supporting.set_brightness(30 + _primaryHSB.get_brightness());
		supporting.set_saturation(10 + _primaryHSB.get_saturation() * 0.3);
		this._colors.push(this.mutateFromPrimary(supporting));
		var complement = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(this._primaryColor.getColor(),180));
		this._colors.push(this.mutateFromPrimary(complement));
		var contrastingComplement = complement.clone();
		if(complement.get_brightness() > 30) {
			contrastingComplement.set_brightness(10 + complement.get_brightness() * 0.25);
		} else {
			contrastingComplement.set_brightness(100 - complement.get_brightness() * 0.25);
		}
		this._colors.push(this.mutateFromPrimary(contrastingComplement));
		var supportingComplement = complement.clone();
		supportingComplement.set_brightness(30 + complement.get_brightness());
		supportingComplement.set_saturation(10 + complement.get_saturation() * 0.3);
		this._colors.push(this.mutateFromPrimary(supportingComplement));
		this.numOfColors = this._colors.length;
	}
	,__class__: hxColorToolkit_schemes_Complementary
});
var hxColorToolkit_schemes_Compound = function(primaryColor) {
	hxColorToolkit_schemes_ColorWheelScheme.call(this,primaryColor);
	this.generate();
};
$hxClasses["hxColorToolkit.schemes.Compound"] = hxColorToolkit_schemes_Compound;
hxColorToolkit_schemes_Compound.__name__ = ["hxColorToolkit","schemes","Compound"];
hxColorToolkit_schemes_Compound.__super__ = hxColorToolkit_schemes_ColorWheelScheme;
hxColorToolkit_schemes_Compound.prototype = $extend(hxColorToolkit_schemes_ColorWheelScheme.prototype,{
	clone: function() {
		return new hxColorToolkit_schemes_Compound(this.get_primaryColor());
	}
	,generate: function() {
		this._colors = [this.get_primaryColor()];
		var _primaryHSB;
		if(js_Boot.__instanceof(this.get_primaryColor(),hxColorToolkit_spaces_HSB)) {
			_primaryHSB = this.get_primaryColor();
		} else {
			_primaryHSB = new hxColorToolkit_spaces_HSB().fromRGB(this.get_primaryColor().toRGB());
		}
		var _primary = this._primaryColor.getColor();
		var c1 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,30));
		var x = _primaryHSB.get_brightness();
		c1.set_brightness(x - 25 < 60 ? x + 25 : x - 25);
		this._colors.push(this.mutateFromPrimary(c1));
		var c2 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,30));
		var x1 = _primaryHSB.get_brightness();
		c2.set_brightness(x1 - 40 < 10 ? x1 + 40 : x1 - 40);
		var x2 = _primaryHSB.get_saturation();
		c2.set_saturation(x2 - 40 < 20 ? x2 + 40 : x2 - 40);
		this._colors.push(this.mutateFromPrimary(c2));
		var c3 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,160));
		c3.set_brightness(Math.max(20,_primaryHSB.get_brightness()));
		var x3 = _primaryHSB.get_saturation();
		c3.set_saturation(x3 - 25 < 10 ? x3 + 25 : x3 - 25);
		this._colors.push(this.mutateFromPrimary(c3));
		var c4 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,150));
		var x4 = _primaryHSB.get_brightness();
		c4.set_brightness(x4 - 30 < 60 ? x4 + 30 : x4 - 30);
		var x5 = _primaryHSB.get_saturation();
		c4.set_saturation(x5 - 10 < 80 ? x5 + 10 : x5 - 10);
		this._colors.push(this.mutateFromPrimary(c4));
		var c5 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,150));
		var x6 = _primaryHSB.get_brightness();
		c5.set_brightness(x6 - 40 < 20 ? x6 + 40 : x6 - 40);
		var x7 = _primaryHSB.get_saturation();
		c5.set_saturation(x7 - 10 < 80 ? x7 + 10 : x7 - 10);
		this._colors.push(this.mutateFromPrimary(c5));
		this.numOfColors = this._colors.length;
	}
	,__class__: hxColorToolkit_schemes_Compound
});
var hxColorToolkit_schemes_FlippedCompound = function(primaryColor) {
	hxColorToolkit_schemes_ColorWheelScheme.call(this,primaryColor);
	this.generate();
};
$hxClasses["hxColorToolkit.schemes.FlippedCompound"] = hxColorToolkit_schemes_FlippedCompound;
hxColorToolkit_schemes_FlippedCompound.__name__ = ["hxColorToolkit","schemes","FlippedCompound"];
hxColorToolkit_schemes_FlippedCompound.__super__ = hxColorToolkit_schemes_ColorWheelScheme;
hxColorToolkit_schemes_FlippedCompound.prototype = $extend(hxColorToolkit_schemes_ColorWheelScheme.prototype,{
	clone: function() {
		return new hxColorToolkit_schemes_FlippedCompound(this.get_primaryColor());
	}
	,generate: function() {
		this._colors = [this.get_primaryColor()];
		var _primaryHSB;
		if(js_Boot.__instanceof(this.get_primaryColor(),hxColorToolkit_spaces_HSB)) {
			_primaryHSB = this.get_primaryColor();
		} else {
			_primaryHSB = new hxColorToolkit_spaces_HSB().fromRGB(this.get_primaryColor().toRGB());
		}
		var _primary = this._primaryColor.getColor();
		var d = 1;
		var c1 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,-30));
		var x = _primaryHSB.get_brightness();
		c1.set_brightness(x - 25 < 60 ? x + 25 : x - 25);
		this._colors.push(this.mutateFromPrimary(c1));
		var c2 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,-30));
		var x1 = _primaryHSB.get_brightness();
		c2.set_brightness(x1 - 40 < 10 ? x1 + 40 : x1 - 40);
		var x2 = _primaryHSB.get_saturation();
		c2.set_saturation(x2 - 40 < 20 ? x2 + 40 : x2 - 40);
		this._colors.push(this.mutateFromPrimary(c2));
		var c3 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,-160));
		c3.set_brightness(Math.max(20,_primaryHSB.get_brightness()));
		var x3 = _primaryHSB.get_saturation();
		c3.set_saturation(x3 - 25 < 10 ? x3 + 25 : x3 - 25);
		this._colors.push(this.mutateFromPrimary(c3));
		var c4 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,-150));
		var x4 = _primaryHSB.get_brightness();
		c4.set_brightness(x4 - 30 < 60 ? x4 + 30 : x4 - 30);
		var x5 = _primaryHSB.get_saturation();
		c4.set_saturation(x5 - 10 < 80 ? x5 + 10 : x5 - 10);
		this._colors.push(this.mutateFromPrimary(c4));
		var c5 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,-150));
		var x6 = _primaryHSB.get_brightness();
		c5.set_brightness(x6 - 40 < 20 ? x6 + 40 : x6 - 40);
		var x7 = _primaryHSB.get_saturation();
		c5.set_saturation(x7 - 10 < 80 ? x7 + 10 : x7 - 10);
		this._colors.push(this.mutateFromPrimary(c5));
		this.numOfColors = this._colors.length;
	}
	,__class__: hxColorToolkit_schemes_FlippedCompound
});
var hxColorToolkit_schemes_Monochrome = function(primaryColor) {
	hxColorToolkit_schemes_ColorWheelScheme.call(this,primaryColor);
	this.generate();
};
$hxClasses["hxColorToolkit.schemes.Monochrome"] = hxColorToolkit_schemes_Monochrome;
hxColorToolkit_schemes_Monochrome.__name__ = ["hxColorToolkit","schemes","Monochrome"];
hxColorToolkit_schemes_Monochrome.__super__ = hxColorToolkit_schemes_ColorWheelScheme;
hxColorToolkit_schemes_Monochrome.prototype = $extend(hxColorToolkit_schemes_ColorWheelScheme.prototype,{
	clone: function() {
		return new hxColorToolkit_schemes_Monochrome(this.get_primaryColor());
	}
	,generate: function() {
		this._colors = [this.get_primaryColor()];
		var _primaryHSB;
		if(js_Boot.__instanceof(this.get_primaryColor(),hxColorToolkit_spaces_HSB)) {
			_primaryHSB = this.get_primaryColor();
		} else {
			_primaryHSB = new hxColorToolkit_spaces_HSB().fromRGB(this.get_primaryColor().toRGB());
		}
		var c1 = _primaryHSB.clone();
		var x = _primaryHSB.get_brightness();
		c1.set_brightness(x - 50 < 20 ? x + 30 : x - 50);
		var x1 = _primaryHSB.get_saturation();
		c1.set_saturation(x1 - 30 < 10 ? x1 + 20 : x1 - 30);
		this._colors.push(this.mutateFromPrimary(c1));
		var c2 = _primaryHSB.clone();
		var x2 = _primaryHSB.get_brightness();
		c2.set_brightness(x2 - 20 < 20 ? x2 + 60 : x2 - 20);
		this._colors.push(this.mutateFromPrimary(c2));
		var c3 = _primaryHSB.clone();
		c3.set_brightness(Math.max(20,_primaryHSB.get_brightness() + (100 - _primaryHSB.get_brightness()) * 0.2));
		var x3 = _primaryHSB.get_saturation();
		c3.set_saturation(x3 - 30 < 10 ? x3 + 30 : x3 - 30);
		this._colors.push(this.mutateFromPrimary(c3));
		var c4 = _primaryHSB.clone();
		var x4 = _primaryHSB.get_brightness();
		c4.set_brightness(x4 - 50 < 20 ? x4 + 30 : x4 - 50);
		this._colors.push(this.mutateFromPrimary(c4));
		this.numOfColors = this._colors.length;
	}
	,__class__: hxColorToolkit_schemes_Monochrome
});
var hxColorToolkit_schemes_SplitComplementary = function(primaryColor) {
	hxColorToolkit_schemes_ColorWheelScheme.call(this,primaryColor);
	this.generate();
};
$hxClasses["hxColorToolkit.schemes.SplitComplementary"] = hxColorToolkit_schemes_SplitComplementary;
hxColorToolkit_schemes_SplitComplementary.__name__ = ["hxColorToolkit","schemes","SplitComplementary"];
hxColorToolkit_schemes_SplitComplementary.__super__ = hxColorToolkit_schemes_ColorWheelScheme;
hxColorToolkit_schemes_SplitComplementary.prototype = $extend(hxColorToolkit_schemes_ColorWheelScheme.prototype,{
	clone: function() {
		return new hxColorToolkit_schemes_SplitComplementary(this.get_primaryColor());
	}
	,generate: function() {
		this._colors = [this.get_primaryColor()];
		var _primary = this._primaryColor.getColor();
		var c1 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,150));
		var c2 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,210));
		var _g = c1;
		_g.set_brightness(_g.get_brightness() + 10);
		var _g1 = c2;
		_g1.set_brightness(_g1.get_brightness() + 10);
		this._colors.push(this.mutateFromPrimary(c1));
		this._colors.push(this.mutateFromPrimary(c2));
		this.numOfColors = this._colors.length;
	}
	,__class__: hxColorToolkit_schemes_SplitComplementary
});
var hxColorToolkit_schemes_Tetrad = function(primaryColor,angle,alt) {
	if(alt == null) {
		alt = false;
	}
	if(angle == null) {
		angle = 90;
	}
	hxColorToolkit_schemes_ColorWheelScheme.call(this,primaryColor);
	this._angle = angle;
	this._alt = alt;
	this.generate();
};
$hxClasses["hxColorToolkit.schemes.Tetrad"] = hxColorToolkit_schemes_Tetrad;
hxColorToolkit_schemes_Tetrad.__name__ = ["hxColorToolkit","schemes","Tetrad"];
hxColorToolkit_schemes_Tetrad.__super__ = hxColorToolkit_schemes_ColorWheelScheme;
hxColorToolkit_schemes_Tetrad.prototype = $extend(hxColorToolkit_schemes_ColorWheelScheme.prototype,{
	clone: function() {
		return new hxColorToolkit_schemes_Tetrad(this.get_primaryColor(),this.get_angle(),this.get_alt());
	}
	,get_angle: function() {
		return this._angle;
	}
	,set_angle: function(value) {
		this._angle = value;
		this.generate();
		return value;
	}
	,get_alt: function() {
		return this._alt;
	}
	,set_alt: function(val) {
		this._alt = val;
		this.generate();
		return this.get_alt();
	}
	,generate: function() {
		this._colors = [this.get_primaryColor()];
		var _primaryHSB;
		if(js_Boot.__instanceof(this.get_primaryColor(),hxColorToolkit_spaces_HSB)) {
			_primaryHSB = this.get_primaryColor();
		} else {
			_primaryHSB = new hxColorToolkit_spaces_HSB().fromRGB(this.get_primaryColor().toRGB());
		}
		var _primary = this._primaryColor.getColor();
		var c1 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,this._angle));
		var multiplier;
		if(!this.get_alt()) {
			if(_primaryHSB.get_brightness() < 50) {
				var _g = c1;
				_g.set_brightness(_g.get_brightness() + 20);
			} else {
				var _g1 = c1;
				_g1.set_brightness(_g1.get_brightness() - 20);
			}
		} else {
			multiplier = (50 - _primaryHSB.get_brightness()) / 50;
			c1.set_brightness(c1.get_brightness() + Math.min(20,Math.max(-20,20 * multiplier)));
		}
		this._colors.push(this.mutateFromPrimary(c1));
		var c2 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,this._angle * 2));
		if(!this.get_alt()) {
			if(_primaryHSB.get_brightness() > 50) {
				var _g2 = c2;
				_g2.set_brightness(_g2.get_brightness() + 10);
			} else {
				var _g3 = c2;
				_g3.set_brightness(_g3.get_brightness() - 10);
			}
		} else {
			multiplier = (50 - _primaryHSB.get_brightness()) / 50;
			c2.set_brightness(c2.get_brightness() + Math.min(10,Math.max(-10,10 * multiplier)));
		}
		this._colors.push(this.mutateFromPrimary(c2));
		var c3 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,this._angle * 3));
		var _g4 = c3;
		_g4.set_brightness(_g4.get_brightness() + 10);
		this._colors.push(this.mutateFromPrimary(c3));
		this.numOfColors = this._colors.length;
	}
	,__class__: hxColorToolkit_schemes_Tetrad
	,__properties__: $extend(hxColorToolkit_schemes_ColorWheelScheme.prototype.__properties__,{set_alt:"set_alt",get_alt:"get_alt",set_angle:"set_angle",get_angle:"get_angle"})
});
var hxColorToolkit_schemes_Triad = function(primaryColor,angle) {
	if(angle == null) {
		angle = 120;
	}
	hxColorToolkit_schemes_ColorWheelScheme.call(this,primaryColor);
	this._angle = angle;
	this.generate();
};
$hxClasses["hxColorToolkit.schemes.Triad"] = hxColorToolkit_schemes_Triad;
hxColorToolkit_schemes_Triad.__name__ = ["hxColorToolkit","schemes","Triad"];
hxColorToolkit_schemes_Triad.__super__ = hxColorToolkit_schemes_ColorWheelScheme;
hxColorToolkit_schemes_Triad.prototype = $extend(hxColorToolkit_schemes_ColorWheelScheme.prototype,{
	clone: function() {
		return new hxColorToolkit_schemes_Triad(this.get_primaryColor(),this.get_angle());
	}
	,get_angle: function() {
		return this._angle;
	}
	,set_angle: function(value) {
		this._angle = value;
		this.generate();
		return this.get_angle();
	}
	,generate: function() {
		this._colors = [this.get_primaryColor()];
		var _primary = this._primaryColor.getColor();
		var c1 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,this._angle));
		var _g = c1;
		_g.set_brightness(_g.get_brightness() + 10);
		this._colors.push(this.mutateFromPrimary(c1));
		var c2 = new hxColorToolkit_spaces_HSB().setColor(hxColorToolkit_ColorToolkit.rybRotate(_primary,-this._angle));
		var _g1 = c2;
		_g1.set_brightness(_g1.get_brightness() + 10);
		this._colors.push(this.mutateFromPrimary(c2));
		this.numOfColors = this._colors.length;
	}
	,__class__: hxColorToolkit_schemes_Triad
	,__properties__: $extend(hxColorToolkit_schemes_ColorWheelScheme.prototype.__properties__,{set_angle:"set_angle",get_angle:"get_angle"})
});
var hxColorToolkit_spaces_Color = function() { };
$hxClasses["hxColorToolkit.spaces.Color"] = hxColorToolkit_spaces_Color;
hxColorToolkit_spaces_Color.__name__ = ["hxColorToolkit","spaces","Color"];
hxColorToolkit_spaces_Color.prototype = {
	__class__: hxColorToolkit_spaces_Color
};
var hxColorToolkit_spaces_RGB = function(r,g,b) {
	if(b == null) {
		b = 0;
	}
	if(g == null) {
		g = 0;
	}
	if(r == null) {
		r = 0;
	}
	this.numOfChannels = 3;
	this.data = [];
	this.set_red(r);
	this.set_green(g);
	this.set_blue(b);
};
$hxClasses["hxColorToolkit.spaces.RGB"] = hxColorToolkit_spaces_RGB;
hxColorToolkit_spaces_RGB.__name__ = ["hxColorToolkit","spaces","RGB"];
hxColorToolkit_spaces_RGB.__interfaces__ = [hxColorToolkit_spaces_Color];
hxColorToolkit_spaces_RGB.prototype = {
	getValue: function(channel) {
		return this.data[channel];
	}
	,setValue: function(channel,val) {
		this.data[channel] = Math.min(255,Math.max(val,0));
		return val;
	}
	,minValue: function(channel) {
		return 0;
	}
	,maxValue: function(channel) {
		return 255;
	}
	,get_red: function() {
		return this.getValue(0);
	}
	,set_red: function(value) {
		return this.setValue(0,value);
	}
	,get_green: function() {
		return this.getValue(1);
	}
	,set_green: function(value) {
		return this.setValue(1,value);
	}
	,get_blue: function() {
		return this.getValue(2);
	}
	,set_blue: function(value) {
		return this.setValue(2,value);
	}
	,toRGB: function() {
		return this.clone();
	}
	,getColor: function() {
		return Math.round(this.get_red()) << 16 | Math.round(this.get_green()) << 8 | Math.round(this.get_blue());
	}
	,fromRGB: function(rgb) {
		this.set_red(rgb.get_red());
		this.set_green(rgb.get_green());
		this.set_blue(rgb.get_blue());
		return this;
	}
	,setColor: function(color) {
		this.set_red(color >> 16 & 255);
		this.set_green(color >> 8 & 255);
		this.set_blue(color & 255);
		return this;
	}
	,clone: function() {
		return new hxColorToolkit_spaces_RGB(this.get_red(),this.get_green(),this.get_blue());
	}
	,interpolate: function(target,ratio) {
		if(ratio == null) {
			ratio = 0.5;
		}
		var target1 = js_Boot.__instanceof(target,hxColorToolkit_spaces_RGB) ? target : new hxColorToolkit_spaces_RGB().fromRGB(target.toRGB());
		return new hxColorToolkit_spaces_RGB(this.get_red() + (target1.get_red() - this.get_red()) * ratio,this.get_green() + (target1.get_green() - this.get_green()) * ratio,this.get_blue() + (target1.get_blue() - this.get_blue()) * ratio);
	}
	,__class__: hxColorToolkit_spaces_RGB
	,__properties__: {set_blue:"set_blue",get_blue:"get_blue",set_green:"set_green",get_green:"get_green",set_red:"set_red",get_red:"get_red"}
};
var hxColorToolkit_spaces_ARGB = function(a,r,g,b) {
	if(b == null) {
		b = 0;
	}
	if(g == null) {
		g = 0;
	}
	if(r == null) {
		r = 0;
	}
	if(a == null) {
		a = 255;
	}
	hxColorToolkit_spaces_RGB.call(this,r,g,b);
	this.numOfChannels = 4;
	this.set_alpha(a);
};
$hxClasses["hxColorToolkit.spaces.ARGB"] = hxColorToolkit_spaces_ARGB;
hxColorToolkit_spaces_ARGB.__name__ = ["hxColorToolkit","spaces","ARGB"];
hxColorToolkit_spaces_ARGB.__super__ = hxColorToolkit_spaces_RGB;
hxColorToolkit_spaces_ARGB.prototype = $extend(hxColorToolkit_spaces_RGB.prototype,{
	get_alpha: function() {
		return this.getValue(0);
	}
	,set_alpha: function(value) {
		return this.setValue(0,value);
	}
	,get_red: function() {
		return this.getValue(1);
	}
	,set_red: function(value) {
		return this.setValue(1,value);
	}
	,get_green: function() {
		return this.getValue(2);
	}
	,set_green: function(value) {
		return this.setValue(2,value);
	}
	,get_blue: function() {
		return this.getValue(3);
	}
	,set_blue: function(value) {
		return this.setValue(3,value);
	}
	,toRGB: function() {
		return new hxColorToolkit_spaces_RGB(this.get_red(),this.get_green(),this.get_blue());
	}
	,toARGB: function() {
		return this.clone();
	}
	,getColor: function() {
		return Math.round(this.get_alpha()) << 24 | Math.round(this.get_red()) << 16 | Math.round(this.get_green()) << 8 | Math.round(this.get_blue());
	}
	,fromRGB: function(rgb) {
		this.set_alpha(255);
		this.set_red(rgb.get_red());
		this.set_green(rgb.get_green());
		this.set_blue(rgb.get_blue());
		return this;
	}
	,setColor: function(color) {
		this.set_alpha(color >> 24 & 255);
		this.set_red(color >> 16 & 255);
		this.set_green(color >> 8 & 255);
		this.set_blue(color & 255);
		return this;
	}
	,clone: function() {
		return new hxColorToolkit_spaces_ARGB(this.get_alpha(),this.get_red(),this.get_green(),this.get_blue());
	}
	,interpolate: function(target,ratio) {
		if(ratio == null) {
			ratio = 0.5;
		}
		var target1 = js_Boot.__instanceof(target,hxColorToolkit_spaces_ARGB) ? target : new hxColorToolkit_spaces_ARGB().fromRGB(target.toRGB());
		return new hxColorToolkit_spaces_ARGB(this.get_alpha() + (target1.get_alpha() - this.get_alpha()) * ratio,this.get_red() + (target1.get_red() - this.get_red()) * ratio,this.get_green() + (target1.get_green() - this.get_green()) * ratio,this.get_blue() + (target1.get_blue() - this.get_blue()) * ratio);
	}
	,__class__: hxColorToolkit_spaces_ARGB
	,__properties__: $extend(hxColorToolkit_spaces_RGB.prototype.__properties__,{set_alpha:"set_alpha",get_alpha:"get_alpha"})
});
var hxColorToolkit_spaces_CMYK = function(cyan,magenta,yellow,black) {
	if(black == null) {
		black = 0;
	}
	if(yellow == null) {
		yellow = 0;
	}
	if(magenta == null) {
		magenta = 0;
	}
	if(cyan == null) {
		cyan = 0;
	}
	this.numOfChannels = 4;
	this.data = [];
	this.set_cyan(cyan);
	this.set_magenta(magenta);
	this.set_yellow(yellow);
	this.set_black(black);
};
$hxClasses["hxColorToolkit.spaces.CMYK"] = hxColorToolkit_spaces_CMYK;
hxColorToolkit_spaces_CMYK.__name__ = ["hxColorToolkit","spaces","CMYK"];
hxColorToolkit_spaces_CMYK.__interfaces__ = [hxColorToolkit_spaces_Color];
hxColorToolkit_spaces_CMYK.prototype = {
	getValue: function(channel) {
		return this.data[channel];
	}
	,setValue: function(channel,val) {
		this.data[channel] = Math.min(100,Math.max(val,0));
		return val;
	}
	,minValue: function(channel) {
		return 0;
	}
	,maxValue: function(channel) {
		return 100;
	}
	,get_cyan: function() {
		return this.getValue(0);
	}
	,set_cyan: function(value) {
		return this.setValue(0,value);
	}
	,get_magenta: function() {
		return this.getValue(1);
	}
	,set_magenta: function(value) {
		return this.setValue(1,value);
	}
	,get_yellow: function() {
		return this.getValue(2);
	}
	,set_yellow: function(value) {
		return this.setValue(2,value);
	}
	,get_black: function() {
		return this.getValue(3);
	}
	,set_black: function(value) {
		return this.setValue(3,value);
	}
	,toRGB: function() {
		var cyan = Math.min(100,this.get_cyan() + this.get_black());
		var magenta = Math.min(100,this.get_magenta() + this.get_black());
		var yellow = Math.min(100,this.get_yellow() + this.get_black());
		return new hxColorToolkit_spaces_RGB((100 - cyan) * 2.55,(100 - magenta) * 2.55,(100 - yellow) * 2.55);
	}
	,getColor: function() {
		return this.toRGB().getColor();
	}
	,fromRGB: function(rgb) {
		var r = rgb.get_red();
		var g = rgb.get_green();
		var b = rgb.get_blue();
		var c = 1 - r / 255;
		var m = 1 - g / 255;
		var y = 1 - b / 255;
		var k;
		var var_K = 1;
		if(c < var_K) {
			var_K = c;
		}
		if(m < var_K) {
			var_K = m;
		}
		if(y < var_K) {
			var_K = y;
		}
		if(var_K == 1) {
			y = 0;
			m = y;
			c = m;
		} else {
			c = (c - var_K) / (1 - var_K) * 100;
			m = (m - var_K) / (1 - var_K) * 100;
			y = (y - var_K) / (1 - var_K) * 100;
		}
		k = var_K * 100;
		this.set_cyan(c);
		this.set_magenta(m);
		this.set_yellow(y);
		this.set_black(k);
		return this;
	}
	,setColor: function(color) {
		return this.fromRGB(new hxColorToolkit_spaces_RGB(color >> 16 & 255,color >> 8 & 255,color & 255));
	}
	,clone: function() {
		return new hxColorToolkit_spaces_CMYK(this.get_cyan(),this.get_magenta(),this.get_yellow(),this.get_black());
	}
	,interpolate: function(target,ratio) {
		if(ratio == null) {
			ratio = 0.5;
		}
		var target1 = js_Boot.__instanceof(target,hxColorToolkit_spaces_CMYK) ? target : new hxColorToolkit_spaces_CMYK().fromRGB(target.toRGB());
		return new hxColorToolkit_spaces_CMYK(this.get_cyan() + (target1.get_cyan() - this.get_cyan()) * ratio,this.get_magenta() + (target1.get_magenta() - this.get_magenta()) * ratio,this.get_yellow() + (target1.get_yellow() - this.get_yellow()) * ratio,this.get_black() + (target1.get_black() - this.get_black()) * ratio);
	}
	,__class__: hxColorToolkit_spaces_CMYK
	,__properties__: {set_yellow:"set_yellow",get_yellow:"get_yellow",set_magenta:"set_magenta",get_magenta:"get_magenta",set_cyan:"set_cyan",get_cyan:"get_cyan",set_black:"set_black",get_black:"get_black"}
};
var hxColorToolkit_spaces_Gray = function(gray) {
	if(gray == null) {
		gray = 0;
	}
	this.numOfChannels = 1;
	this.data = [];
	this.set_gray(gray);
};
$hxClasses["hxColorToolkit.spaces.Gray"] = hxColorToolkit_spaces_Gray;
hxColorToolkit_spaces_Gray.__name__ = ["hxColorToolkit","spaces","Gray"];
hxColorToolkit_spaces_Gray.__interfaces__ = [hxColorToolkit_spaces_Color];
hxColorToolkit_spaces_Gray.prototype = {
	getValue: function(channel) {
		return this.data[channel];
	}
	,setValue: function(channel,val) {
		this.data[channel] = Math.min(255,Math.max(val,0));
		return val;
	}
	,minValue: function(channel) {
		return 0;
	}
	,maxValue: function(channel) {
		return 255;
	}
	,get_gray: function() {
		return this.getValue(0);
	}
	,set_gray: function(value) {
		return this.setValue(0,value);
	}
	,toRGB: function() {
		return new hxColorToolkit_spaces_RGB(this.get_gray(),this.get_gray(),this.get_gray());
	}
	,getColor: function() {
		return this.toRGB().getColor();
	}
	,fromRGB: function(rgb) {
		this.set_gray(0.3 * rgb.get_red() + 0.59 * rgb.get_green() + 0.11 * rgb.get_blue());
		return this;
	}
	,setColor: function(color) {
		return this.fromRGB(new hxColorToolkit_spaces_RGB(color >> 16 & 255,color >> 8 & 255,color & 255));
	}
	,clone: function() {
		return new hxColorToolkit_spaces_Gray(this.get_gray());
	}
	,interpolate: function(target,ratio) {
		if(ratio == null) {
			ratio = 0.5;
		}
		var target1 = js_Boot.__instanceof(target,hxColorToolkit_spaces_Gray) ? target : new hxColorToolkit_spaces_Gray().fromRGB(target.toRGB());
		return new hxColorToolkit_spaces_Gray(this.get_gray() + (target1.get_gray() - this.get_gray()) * ratio);
	}
	,__class__: hxColorToolkit_spaces_Gray
	,__properties__: {set_gray:"set_gray",get_gray:"get_gray"}
};
var hxColorToolkit_spaces_HSB = function(hue,saturation,brightness) {
	if(brightness == null) {
		brightness = 0;
	}
	if(saturation == null) {
		saturation = 0;
	}
	if(hue == null) {
		hue = 0;
	}
	this.numOfChannels = 3;
	this.data = [];
	this.set_hue(hue);
	this.set_saturation(saturation);
	this.set_brightness(brightness);
};
$hxClasses["hxColorToolkit.spaces.HSB"] = hxColorToolkit_spaces_HSB;
hxColorToolkit_spaces_HSB.__name__ = ["hxColorToolkit","spaces","HSB"];
hxColorToolkit_spaces_HSB.__interfaces__ = [hxColorToolkit_spaces_Color];
hxColorToolkit_spaces_HSB.loop = function(index,length) {
	if(index < 0) {
		index = length + index % length;
	}
	if(index >= length) {
		index %= length;
	}
	return index;
};
hxColorToolkit_spaces_HSB.prototype = {
	getValue: function(channel) {
		return this.data[channel];
	}
	,setValue: function(channel,val) {
		this.data[channel] = channel == 0 ? hxColorToolkit_spaces_HSB.loop(val,360) : Math.min(channel == 0 ? 360 : 100,Math.max(val,0));
		return val;
	}
	,minValue: function(channel) {
		return 0;
	}
	,maxValue: function(channel) {
		if(channel == 0) {
			return 360;
		} else {
			return 100;
		}
	}
	,get_hue: function() {
		return this.getValue(0);
	}
	,set_hue: function(val) {
		this.data[0] = hxColorToolkit_spaces_HSB.loop(val,360);
		return val;
	}
	,get_saturation: function() {
		return this.getValue(1);
	}
	,set_saturation: function(val) {
		this.data[1] = Math.min(100,Math.max(val,0));
		return val;
	}
	,get_brightness: function() {
		return this.getValue(2);
	}
	,set_brightness: function(val) {
		this.data[2] = Math.min(100,Math.max(val,0));
		return val;
	}
	,toRGB: function() {
		var hue = this.get_hue();
		var saturation = this.get_saturation();
		var brightness = this.get_brightness();
		var r = 0;
		var g = 0;
		var b = 0;
		var i;
		var f;
		var p;
		var q;
		var t;
		hue %= 360;
		if(brightness == 0) {
			return new hxColorToolkit_spaces_RGB();
		}
		saturation *= 0.01;
		brightness *= 0.01;
		hue /= 60;
		i = Math.floor(hue);
		f = hue - i;
		p = brightness * (1 - saturation);
		q = brightness * (1 - saturation * f);
		t = brightness * (1 - saturation * (1 - f));
		if(i == 0) {
			r = brightness;
			g = t;
			b = p;
		} else if(i == 1) {
			r = q;
			g = brightness;
			b = p;
		} else if(i == 2) {
			r = p;
			g = brightness;
			b = t;
		} else if(i == 3) {
			r = p;
			g = q;
			b = brightness;
		} else if(i == 4) {
			r = t;
			g = p;
			b = brightness;
		} else if(i == 5) {
			r = brightness;
			g = p;
			b = q;
		}
		return new hxColorToolkit_spaces_RGB(r * 255,g * 255,b * 255);
	}
	,getColor: function() {
		return this.toRGB().getColor();
	}
	,fromRGB: function(rgb) {
		var r = rgb.get_red();
		var g = rgb.get_green();
		var b = rgb.get_blue();
		r /= 255;
		g /= 255;
		b /= 255;
		var h;
		var s;
		var v;
		var min;
		var max;
		var delta;
		min = Math.min(r,Math.min(g,b));
		max = Math.max(r,Math.max(g,b));
		v = max * 100;
		delta = max - min;
		if(max != 0) {
			s = delta / max * 100;
		} else {
			s = 0;
			h = -1;
			this.set_hue(h);
			this.set_saturation(s);
			this.set_brightness(v);
			return this;
		}
		if(delta == 0) {
			this.set_hue(0);
			this.set_saturation(s);
			this.set_brightness(v);
			return this;
		}
		if(r == max) {
			h = (g - b) / delta;
		} else if(g == max) {
			h = 2 + (b - r) / delta;
		} else {
			h = 4 + (r - g) / delta;
		}
		h *= 60;
		if(h < 0) {
			h += 360;
		}
		this.set_hue(h);
		this.set_saturation(s);
		this.set_brightness(v);
		return this;
	}
	,setColor: function(color) {
		return this.fromRGB(new hxColorToolkit_spaces_RGB(color >> 16 & 255,color >> 8 & 255,color & 255));
	}
	,clone: function() {
		return new hxColorToolkit_spaces_HSB(this.get_hue(),this.get_saturation(),this.get_brightness());
	}
	,interpolate: function(target,ratio) {
		if(ratio == null) {
			ratio = 0.5;
		}
		var target1 = js_Boot.__instanceof(target,hxColorToolkit_spaces_HSB) ? target : new hxColorToolkit_spaces_HSB().fromRGB(target.toRGB());
		return new hxColorToolkit_spaces_HSB(this.get_hue() + (target1.get_hue() - this.get_hue()) * ratio,this.get_saturation() + (target1.get_saturation() - this.get_saturation()) * ratio,this.get_brightness() + (target1.get_brightness() - this.get_brightness()) * ratio);
	}
	,__class__: hxColorToolkit_spaces_HSB
	,__properties__: {set_brightness:"set_brightness",get_brightness:"get_brightness",set_saturation:"set_saturation",get_saturation:"get_saturation",set_hue:"set_hue",get_hue:"get_hue"}
};
var hxColorToolkit_spaces_HSL = function(hue,saturation,lightness) {
	if(lightness == null) {
		lightness = 0;
	}
	if(saturation == null) {
		saturation = 0;
	}
	if(hue == null) {
		hue = 0;
	}
	this.numOfChannels = 3;
	this.data = [];
	this.set_hue(hue);
	this.set_saturation(saturation);
	this.set_lightness(lightness);
};
$hxClasses["hxColorToolkit.spaces.HSL"] = hxColorToolkit_spaces_HSL;
hxColorToolkit_spaces_HSL.__name__ = ["hxColorToolkit","spaces","HSL"];
hxColorToolkit_spaces_HSL.__interfaces__ = [hxColorToolkit_spaces_Color];
hxColorToolkit_spaces_HSL.loop = function(index,length) {
	if(index < 0) {
		index = length + index % length;
	}
	if(index >= length) {
		index %= length;
	}
	return index;
};
hxColorToolkit_spaces_HSL.prototype = {
	getValue: function(channel) {
		return this.data[channel];
	}
	,setValue: function(channel,val) {
		this.data[channel] = channel == 0 ? hxColorToolkit_spaces_HSL.loop(val,360) : Math.min(channel == 0 ? 360 : 100,Math.max(val,0));
		return val;
	}
	,minValue: function(channel) {
		return 0;
	}
	,maxValue: function(channel) {
		if(channel == 0) {
			return 360;
		} else {
			return 100;
		}
	}
	,get_hue: function() {
		return this.getValue(0);
	}
	,set_hue: function(val) {
		this.data[0] = hxColorToolkit_spaces_HSL.loop(val,360);
		return val;
	}
	,get_saturation: function() {
		return this.getValue(1);
	}
	,set_saturation: function(val) {
		this.data[1] = Math.min(100,Math.max(val,0));
		return val;
	}
	,get_lightness: function() {
		return this.getValue(2);
	}
	,set_lightness: function(val) {
		this.data[2] = Math.min(100,Math.max(val,0));
		return val;
	}
	,toRGB: function() {
		var hue = this.get_hue() / 360;
		var saturation = this.get_saturation() * 0.01;
		var lightness = this.get_lightness() * 0.01;
		var r;
		var g;
		var b;
		if(saturation == 0) {
			b = lightness;
			g = b;
			r = g;
		} else {
			var q = lightness < 0.5 ? lightness * (1 + saturation) : lightness + saturation - lightness * saturation;
			var p = 2 * lightness - q;
			r = this.hue2rgb(p,q,hue + 0.333333333333333315);
			g = this.hue2rgb(p,q,hue);
			b = this.hue2rgb(p,q,hue - 0.333333333333333315);
		}
		return new hxColorToolkit_spaces_RGB(r * 255,g * 255,b * 255);
	}
	,getColor: function() {
		return this.toRGB().getColor();
	}
	,fromRGB: function(rgb) {
		var r = rgb.get_red();
		var g = rgb.get_green();
		var b = rgb.get_blue();
		r /= 255;
		g /= 255;
		b /= 255;
		var max = Math.max(r,Math.max(g,b));
		var min = Math.min(r,Math.min(g,b));
		var h;
		var s;
		var l = (max + min) / 2;
		s = l;
		h = s;
		if(max == min) {
			s = 0;
			h = s;
		} else {
			var d = max - min;
			if(l > 0.5) {
				s = d / (2 - max - min);
			} else {
				s = d / (max + min);
			}
			if(max == r) {
				h = (g - b) / d + (g < b ? 6 : 0);
			} else if(max == g) {
				h = (b - r) / d + 2;
			} else {
				h = (r - g) / d + 4;
			}
			h /= 6;
		}
		this.set_hue(Math.round(h * 360));
		this.set_saturation(Math.round(s * 100));
		this.set_lightness(Math.round(l * 100));
		return this;
	}
	,setColor: function(color) {
		return this.fromRGB(new hxColorToolkit_spaces_RGB(color >> 16 & 255,color >> 8 & 255,color & 255));
	}
	,clone: function() {
		return new hxColorToolkit_spaces_HSL(this.get_hue(),this.get_saturation(),this.get_lightness());
	}
	,interpolate: function(target,ratio) {
		if(ratio == null) {
			ratio = 0.5;
		}
		var target1 = js_Boot.__instanceof(target,hxColorToolkit_spaces_HSL) ? target : new hxColorToolkit_spaces_HSL().fromRGB(target.toRGB());
		return new hxColorToolkit_spaces_HSL(this.get_hue() + (target1.get_hue() - this.get_hue()) * ratio,this.get_saturation() + (target1.get_saturation() - this.get_saturation()) * ratio,this.get_lightness() + (target1.get_lightness() - this.get_lightness()) * ratio);
	}
	,hue2rgb: function(p,q,t) {
		if(t < 0) {
			++t;
		}
		if(t > 1) {
			--t;
		}
		if(t < 0.166666666666666657) {
			return p + (q - p) * 6 * t;
		}
		if(t < 0.5) {
			return q;
		}
		if(t < 0.66666666666666663) {
			return p + (q - p) * (0.66666666666666663 - t) * 6;
		}
		return p;
	}
	,__class__: hxColorToolkit_spaces_HSL
	,__properties__: {set_lightness:"set_lightness",get_lightness:"get_lightness",set_saturation:"set_saturation",get_saturation:"get_saturation",set_hue:"set_hue",get_hue:"get_hue"}
};
var hxColorToolkit_spaces_Hex = function(color) {
	if(color == null) {
		color = 0;
	}
	this.numOfChannels = 1;
	this.data = color;
};
$hxClasses["hxColorToolkit.spaces.Hex"] = hxColorToolkit_spaces_Hex;
hxColorToolkit_spaces_Hex.__name__ = ["hxColorToolkit","spaces","Hex"];
hxColorToolkit_spaces_Hex.__interfaces__ = [hxColorToolkit_spaces_Color];
hxColorToolkit_spaces_Hex.prototype = {
	getValue: function(channel) {
		return this.data;
	}
	,setValue: function(channel,val) {
		this.data = Math.round(Math.min(-1,Math.max(val,0)));
		return val;
	}
	,minValue: function(channel) {
		return 0;
	}
	,maxValue: function(channel) {
		return -1;
	}
	,toRGB: function() {
		return new hxColorToolkit_spaces_RGB(this.data >> 16 & 255,this.data >> 8 & 255,this.data & 255);
	}
	,toARGB: function() {
		return new hxColorToolkit_spaces_ARGB(this.data >> 24 & 255,this.data >> 16 & 255,this.data >> 8 & 255,this.data & 255);
	}
	,getColor: function() {
		return this.data;
	}
	,fromRGB: function(rgb) {
		this.data = rgb.getColor();
		return this;
	}
	,setColor: function(color) {
		this.data = color;
		return this;
	}
	,get_alpha: function() {
		return this.data >> 24 & 255;
	}
	,get_red: function() {
		return this.data >> 16 & 255;
	}
	,get_green: function() {
		return this.data >> 8 & 255;
	}
	,get_blue: function() {
		return this.data & 255;
	}
	,set_alpha: function(v) {
		this.data = v <= 0 ? this.data & 16777215 : v >= 255 ? this.data | -16777216 : this.data & 16777215 | v << 24;
		return v;
	}
	,set_red: function(v) {
		this.data = v <= 0 ? this.data & -16711681 : v >= 255 ? this.data | 16711680 : this.data & -16711681 | v << 16;
		return v;
	}
	,set_green: function(v) {
		this.data = v <= 0 ? this.data & -65281 : v >= 255 ? this.data | 65280 : this.data & -65281 | v << 8;
		return v;
	}
	,set_blue: function(v) {
		this.data = v <= 0 ? this.data & -256 : v >= 255 ? this.data | 255 : this.data & -256 | v;
		return v;
	}
	,clone: function() {
		return new hxColorToolkit_spaces_Hex(this.data);
	}
	,interpolate: function(target,ratio) {
		if(ratio == null) {
			ratio = 0.5;
		}
		var target1 = js_Boot.__instanceof(target,hxColorToolkit_spaces_Hex) ? target : new hxColorToolkit_spaces_Hex(target.getColor());
		return new hxColorToolkit_spaces_Hex(new hxColorToolkit_spaces_RGB(this.data >> 16 & 255,this.data >> 8 & 255,this.data & 255).interpolate(new hxColorToolkit_spaces_RGB(target1.data >> 16 & 255,target1.data >> 8 & 255,target1.data & 255),ratio).getColor());
	}
	,__class__: hxColorToolkit_spaces_Hex
	,__properties__: {set_blue:"set_blue",get_blue:"get_blue",set_green:"set_green",get_green:"get_green",set_red:"set_red",get_red:"get_red",set_alpha:"set_alpha",get_alpha:"get_alpha"}
};
var hxColorToolkit_spaces_Lab = function(lightness,a,b) {
	if(b == null) {
		b = 0;
	}
	if(a == null) {
		a = 0;
	}
	if(lightness == null) {
		lightness = 0;
	}
	this.numOfChannels = 3;
	this.data = [];
	this.set_lightness(lightness);
	this.set_a(a);
	this.set_b(b);
};
$hxClasses["hxColorToolkit.spaces.Lab"] = hxColorToolkit_spaces_Lab;
hxColorToolkit_spaces_Lab.__name__ = ["hxColorToolkit","spaces","Lab"];
hxColorToolkit_spaces_Lab.__interfaces__ = [hxColorToolkit_spaces_Color];
hxColorToolkit_spaces_Lab.prototype = {
	getValue: function(channel) {
		return this.data[channel];
	}
	,setValue: function(channel,val) {
		this.data[channel] = Math.min(channel == 0 ? 100 : 127,Math.max(val,channel == 0 ? 0 : -128));
		return val;
	}
	,minValue: function(channel) {
		if(channel == 0) {
			return 0;
		} else {
			return -128;
		}
	}
	,maxValue: function(channel) {
		if(channel == 0) {
			return 100;
		} else {
			return 127;
		}
	}
	,toRGB: function() {
		return this.toXYZ().toRGB();
	}
	,toXYZ: function() {
		var y = (this.get_lightness() + 16) / 116;
		var x = this.get_a() * 0.002 + y;
		var z = y - this.get_b() * 0.005;
		if(Math.pow(y,3) > 0.008856) {
			y = Math.pow(y,3);
		} else {
			y = (y - 0.137931034482758619) / 7.787;
		}
		if(Math.pow(x,3) > 0.008856) {
			x = Math.pow(x,3);
		} else {
			x = (x - 0.137931034482758619) / 7.787;
		}
		if(Math.pow(z,3) > 0.008856) {
			z = Math.pow(z,3);
		} else {
			z = (z - 0.137931034482758619) / 7.787;
		}
		return new hxColorToolkit_spaces_XYZ(95.047 * x,100.000 * y,108.883 * z);
	}
	,getColor: function() {
		return this.toXYZ().getColor();
	}
	,fromRGB: function(rgb) {
		this.data = new hxColorToolkit_spaces_XYZ().fromRGB(rgb).toLab().data;
		return this;
	}
	,setColor: function(value) {
		this.data = new hxColorToolkit_spaces_XYZ().setColor(value).toLab().data;
		return this;
	}
	,get_lightness: function() {
		return this.getValue(0);
	}
	,set_lightness: function(value) {
		return this.setValue(0,value);
	}
	,get_a: function() {
		return this.getValue(1);
	}
	,set_a: function(value) {
		return this.setValue(1,value);
	}
	,get_b: function() {
		return this.getValue(2);
	}
	,set_b: function(value) {
		return this.setValue(2,value);
	}
	,clone: function() {
		return new hxColorToolkit_spaces_Lab(this.get_lightness(),this.get_a(),this.get_b());
	}
	,interpolate: function(target,ratio) {
		if(ratio == null) {
			ratio = 0.5;
		}
		var target1 = js_Boot.__instanceof(target,hxColorToolkit_spaces_Lab) ? target : new hxColorToolkit_spaces_Lab().fromRGB(target.toRGB());
		return new hxColorToolkit_spaces_Lab(this.get_lightness() + (target1.get_lightness() - this.get_lightness()) * ratio,this.get_a() + (target1.get_a() - this.get_a()) * ratio,this.get_b() + (target1.get_b() - this.get_b()) * ratio);
	}
	,__class__: hxColorToolkit_spaces_Lab
	,__properties__: {set_b:"set_b",get_b:"get_b",set_a:"set_a",get_a:"get_a",set_lightness:"set_lightness",get_lightness:"get_lightness"}
};
var hxColorToolkit_spaces_XYZ = function(x,y,z) {
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.numOfChannels = 3;
	this.data = [];
	this.set_x(x);
	this.set_y(y);
	this.set_z(z);
};
$hxClasses["hxColorToolkit.spaces.XYZ"] = hxColorToolkit_spaces_XYZ;
hxColorToolkit_spaces_XYZ.__name__ = ["hxColorToolkit","spaces","XYZ"];
hxColorToolkit_spaces_XYZ.__interfaces__ = [hxColorToolkit_spaces_Color];
hxColorToolkit_spaces_XYZ.prototype = {
	getValue: function(channel) {
		return this.data[channel];
	}
	,setValue: function(channel,val) {
		if(channel < 0 || channel >= this.numOfChannels) {
			throw new js__$Boot_HaxeError("no such channel");
		}
		this.data[channel] = Math.min(this.maxValue(channel),Math.max(val,0));
		return val;
	}
	,minValue: function(channel) {
		return 0;
	}
	,maxValue: function(channel) {
		switch(channel) {
		case 0:
			return 95.047;
		case 1:
			return 100.000;
		case 2:
			return 108.883;
		default:
			throw new js__$Boot_HaxeError("XYZ does not have channel " + channel);
		}
	}
	,get_x: function() {
		return this.getValue(0);
	}
	,set_x: function(value) {
		return this.setValue(0,value);
	}
	,get_y: function() {
		return this.getValue(1);
	}
	,set_y: function(value) {
		return this.setValue(1,value);
	}
	,get_z: function() {
		return this.getValue(2);
	}
	,set_z: function(value) {
		return this.setValue(2,value);
	}
	,toRGB: function() {
		var x = this.get_x() * 0.01;
		var y = this.get_y() * 0.01;
		var z = this.get_z() * 0.01;
		var r = x * 3.2406 + y * -1.5372 + z * -0.4986;
		var g = x * -0.9689 + y * 1.8758 + z * 0.0415;
		var b = x * 0.0557 + y * -0.2040 + z * 1.0570;
		if(r > 0.0031308) {
			r = 1.055 * Math.pow(r,0.416666666666666685) - 0.055;
		} else {
			r = 12.92 * r;
		}
		if(g > 0.0031308) {
			g = 1.055 * Math.pow(g,0.416666666666666685) - 0.055;
		} else {
			g = 12.92 * g;
		}
		if(b > 0.0031308) {
			b = 1.055 * Math.pow(b,0.416666666666666685) - 0.055;
		} else {
			b = 12.92 * b;
		}
		return new hxColorToolkit_spaces_RGB(Math.round(r * 255),Math.round(g * 255),Math.round(b * 255));
	}
	,getColor: function() {
		var x = this.get_x() * 0.01;
		var y = this.get_y() * 0.01;
		var z = this.get_z() * 0.01;
		var r = x * 3.2406 + y * -1.5372 + z * -0.4986;
		var g = x * -0.9689 + y * 1.8758 + z * 0.0415;
		var b = x * 0.0557 + y * -0.2040 + z * 1.0570;
		if(r > 0.0031308) {
			r = 1.055 * Math.pow(r,0.416666666666666685) - 0.055;
		} else {
			r = 12.92 * r;
		}
		if(g > 0.0031308) {
			g = 1.055 * Math.pow(g,0.416666666666666685) - 0.055;
		} else {
			g = 12.92 * g;
		}
		if(b > 0.0031308) {
			b = 1.055 * Math.pow(b,0.416666666666666685) - 0.055;
		} else {
			b = 12.92 * b;
		}
		var cR = Math.round(r * 255) << 16;
		var cG = Math.round(g * 255) << 8;
		var cB = Math.round(b * 255);
		return cR | cG | cB;
	}
	,fromRGB: function(rgb) {
		var r = rgb.get_red() / 255;
		var g = rgb.get_green() / 255;
		var b = rgb.get_blue() / 255;
		if(r > 0.04045) {
			r = Math.pow((r + 0.055) / 1.055,2.4);
		} else {
			r /= 12.92;
		}
		if(g > 0.04045) {
			g = Math.pow((g + 0.055) / 1.055,2.4);
		} else {
			g /= 12.92;
		}
		if(b > 0.04045) {
			b = Math.pow((b + 0.055) / 1.055,2.4);
		} else {
			b /= 12.92;
		}
		r *= 100;
		g *= 100;
		b *= 100;
		this.set_x(r * 0.4124 + g * 0.3576 + b * 0.1805);
		this.set_y(r * 0.2126 + g * 0.7152 + b * 0.0722);
		this.set_z(r * 0.0193 + g * 0.1192 + b * 0.9505);
		return this;
	}
	,toLab: function() {
		var x = this.get_x() / 95.047;
		var y = this.get_y() / 100.000;
		var z = this.get_z() / 108.883;
		if(x > 0.008856) {
			x = Math.pow(x,0.333333333333333315);
		} else {
			x = 7.787 * x + 0.137931034482758619;
		}
		if(y > 0.008856) {
			y = Math.pow(y,0.333333333333333315);
		} else {
			y = 7.787 * y + 0.137931034482758619;
		}
		if(z > 0.008856) {
			z = Math.pow(z,0.333333333333333315);
		} else {
			z = 7.787 * z + 0.137931034482758619;
		}
		return new hxColorToolkit_spaces_Lab(116 * y - 16,500 * (x - y),200 * (y - z));
	}
	,setColor: function(color) {
		return this.fromRGB(new hxColorToolkit_spaces_RGB(color >> 16 & 255,color >> 8 & 255,color & 255));
	}
	,clone: function() {
		return new hxColorToolkit_spaces_XYZ(this.get_x(),this.get_y(),this.get_z());
	}
	,interpolate: function(target,ratio) {
		if(ratio == null) {
			ratio = 0.5;
		}
		var target1 = js_Boot.__instanceof(target,hxColorToolkit_spaces_XYZ) ? target : new hxColorToolkit_spaces_XYZ().fromRGB(target.toRGB());
		return new hxColorToolkit_spaces_XYZ(this.get_x() + (target1.get_x() - this.get_x()) * ratio,this.get_y() + (target1.get_y() - this.get_y()) * ratio,this.get_z() + (target1.get_z() - this.get_z()) * ratio);
	}
	,__class__: hxColorToolkit_spaces_XYZ
	,__properties__: {set_z:"set_z",get_z:"get_z",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"}
};
var hxColorToolkit_spaces_YUV = function(y,u,v) {
	if(v == null) {
		v = 0;
	}
	if(u == null) {
		u = 0;
	}
	if(y == null) {
		y = 0;
	}
	this.numOfChannels = 3;
	this.data = [];
	this.set_y(y);
	this.set_u(u);
	this.set_v(v);
};
$hxClasses["hxColorToolkit.spaces.YUV"] = hxColorToolkit_spaces_YUV;
hxColorToolkit_spaces_YUV.__name__ = ["hxColorToolkit","spaces","YUV"];
hxColorToolkit_spaces_YUV.__interfaces__ = [hxColorToolkit_spaces_Color];
hxColorToolkit_spaces_YUV.prototype = {
	getValue: function(channel) {
		return this.data[channel];
	}
	,setValue: function(channel,val) {
		this.data[channel] = Math.min(255,Math.max(val,0));
		return val;
	}
	,minValue: function(channel) {
		return 0;
	}
	,maxValue: function(channel) {
		return 255;
	}
	,get_y: function() {
		return this.getValue(0);
	}
	,set_y: function(value) {
		return this.setValue(0,value);
	}
	,get_u: function() {
		return this.getValue(1);
	}
	,set_u: function(value) {
		return this.setValue(1,value);
	}
	,get_v: function() {
		return this.getValue(2);
	}
	,set_v: function(value) {
		return this.setValue(2,value);
	}
	,toRGB: function() {
		return new hxColorToolkit_spaces_RGB(Math.max(0,Math.min(this.get_y() + 1.402 * (this.get_v() - 128),255)),Math.max(0,Math.min(this.get_y() - 0.344 * (this.get_u() - 128) - 0.714 * (this.get_v() - 128),255)),Math.max(0,Math.min(this.get_y() + 1.772 * (this.get_u() - 128),255)));
	}
	,getColor: function() {
		return this.toRGB().getColor();
	}
	,fromRGB: function(rgb) {
		var r = rgb.get_red();
		var g = rgb.get_green();
		var b = rgb.get_blue();
		this.set_y(0.299 * r + 0.587 * g + 0.114 * b);
		this.set_u(r * -0.169 + g * -0.331 + b * 0.499 + 128);
		this.set_v(r * 0.499 + g * -0.418 + b * -0.0813 + 128);
		return this;
	}
	,setColor: function(color) {
		return this.fromRGB(new hxColorToolkit_spaces_RGB(color >> 16 & 255,color >> 8 & 255,color & 255));
	}
	,clone: function() {
		return new hxColorToolkit_spaces_YUV(this.get_y(),this.get_u(),this.get_v());
	}
	,interpolate: function(target,ratio) {
		if(ratio == null) {
			ratio = 0.5;
		}
		var target1 = js_Boot.__instanceof(target,hxColorToolkit_spaces_YUV) ? target : new hxColorToolkit_spaces_YUV().fromRGB(target.toRGB());
		return new hxColorToolkit_spaces_YUV(this.get_y() + (target1.get_y() - this.get_y()) * ratio,this.get_u() + (target1.get_u() - this.get_u()) * ratio,this.get_v() + (target1.get_v() - this.get_v()) * ratio);
	}
	,__class__: hxColorToolkit_spaces_YUV
	,__properties__: {set_y:"set_y",get_y:"get_y",set_v:"set_v",get_v:"get_v",set_u:"set_u",get_u:"get_u"}
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js_Boot.__trace = function(v,i) {
	var msg = i != null ? i.fileName + ":" + i.lineNumber + ": " : "";
	msg += js_Boot.__string_rec(v,"");
	if(i != null && i.customParams != null) {
		var _g = 0;
		var _g1 = i.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			msg += "," + js_Boot.__string_rec(v1,"");
		}
	}
	var d;
	var tmp;
	if(typeof(document) != "undefined") {
		d = document.getElementById("haxe:trace");
		tmp = d != null;
	} else {
		tmp = false;
	}
	if(tmp) {
		d.innerHTML += js_Boot.__unhtml(msg) + "<br/>";
	} else if(typeof console != "undefined" && console.log != null) {
		console.log(msg);
	}
};
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Browser = function() { };
$hxClasses["js.Browser"] = js_Browser;
js_Browser.__name__ = ["js","Browser"];
js_Browser.createXMLHttpRequest = function() {
	if(typeof XMLHttpRequest != "undefined") {
		return new XMLHttpRequest();
	}
	if(typeof ActiveXObject != "undefined") {
		return new ActiveXObject("Microsoft.XMLHTTP");
	}
	throw new js__$Boot_HaxeError("Unable to create XMLHttpRequest object.");
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			this.a[i] = 0;
		}
		this.byteLength = len;
	}
};
$hxClasses["js.html.compat.ArrayBuffer"] = js_html_compat_ArrayBuffer;
js_html_compat_ArrayBuffer.__name__ = ["js","html","compat","ArrayBuffer"];
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var result = new ArrayBuffer(u.byteLength);
	var resultArray = new Uint8Array(result);
	resultArray.set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_Uint8Array = function() { };
$hxClasses["js.html.compat.Uint8Array"] = js_html_compat_Uint8Array;
js_html_compat_Uint8Array.__name__ = ["js","html","compat","Uint8Array"];
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset;
		}
		if(offset == 0) {
			arr = buffer.a;
		} else {
			arr = buffer.a.slice(offset,offset + length);
		}
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var a = js_html_compat_Uint8Array._new(this.slice(start,end));
	a.byteOffset = start;
	return a;
};
var lib_html_CSSinjector = function(styles,elementID) {
	if(elementID == null) {
		elementID = "inject-" + new Date().getTime();
	}
	if(styles != null) {
		this.setCSS(styles,elementID);
	}
};
$hxClasses["lib.html.CSSinjector"] = lib_html_CSSinjector;
lib_html_CSSinjector.__name__ = ["lib","html","CSSinjector"];
lib_html_CSSinjector.prototype = {
	setCSS: function(styles,elementID) {
		styles = this.minify(styles);
		var css = window.document.createElement("style");
		css.id = elementID;
		if(css.styleSheet) {
			css.styleSheet.cssText = styles;
		} else {
			css.appendChild(window.document.createTextNode(styles));
		}
		window.document.getElementsByTagName("head")[0].appendChild(css);
	}
	,minify: function(css) {
		return css;
	}
	,__class__: lib_html_CSSinjector
};
var lib_html_Nav = function() {
	this.bottomOut = -50;
	this.bottomIn = 0;
	lib_html_CSSinjector.call(this);
};
$hxClasses["lib.html.Nav"] = lib_html_Nav;
lib_html_Nav.__name__ = ["lib","html","Nav"];
lib_html_Nav.__super__ = lib_html_CSSinjector;
lib_html_Nav.prototype = $extend(lib_html_CSSinjector.prototype,{
	dir: function(dir) {
		var x = window.document.getElementById("nav-" + dir);
		var svg = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 80 80\"><g fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"10\" data-name=\"Layer 1\"><path d=\"M10.5 40h59M69.5 40l-18-18M51.5 58l18-18\"/></g></svg>";
		if(dir == "left") {
			svg = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 80 80\"><g fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"10\" data-name=\"Layer 1\"><path d=\"M69.5 40h-59M10.5 40l18-18M28.5 58l-18-18\"/></g></svg>";
		}
		if(x == null) {
			var div = window.document.createElement("div");
			div.id = "nav-" + dir;
			div.className = "nav nav-" + dir;
			div.innerHTML = svg;
			window.document.body.appendChild(div);
			x = div;
		}
		return x;
	}
	,css: function() {
		return "\n.nav {\n\tdisplay: none;\n\twidth: 80px;\n\theight: 80px;\n    background-color: #333;\n    color: #fff;\n    text-align: center;\n    padding: 10px;\n    position: fixed;\n    z-index: 1;\n    top: 50%;\n    font-size: 13px;\n    opacity: 0.5;\n\tmargin-top: -40px;\n}\n.nav-left{\n    left: 0%;\n    border-radius: 0 5px 5px 0;\n}\n.nav-right{\n    right: 0%;\n    border-radius: 5px 0 0 5px;\n}\n";
	}
	,__class__: lib_html_Nav
});
var lib_html_Snackbar = function() {
	this.bottomOut = -50;
	this.bottomIn = 0;
	lib_html_CSSinjector.call(this);
};
$hxClasses["lib.html.Snackbar"] = lib_html_Snackbar;
lib_html_Snackbar.__name__ = ["lib","html","Snackbar"];
lib_html_Snackbar.__super__ = lib_html_CSSinjector;
lib_html_Snackbar.prototype = $extend(lib_html_CSSinjector.prototype,{
	show: function(msg) {
		var x = window.document.getElementById("snackbar");
		if(x == null) {
			var div = window.document.createElement("div");
			div.id = "snackbar";
			window.document.body.appendChild(div);
			x = div;
		}
		x.innerText = msg;
		x.className = "show";
		window.clearTimeout(this.timeout);
		this.timeout = window.setTimeout(function() {
			x.className = StringTools.replace(x.className,"show","");
		},3000);
	}
	,css: function() {
		return "\n/* https://www.w3schools.com/howto/howto_js_snackbar.asp */\n/* The snackbar - position it at the bottom and in the middle of the screen */\n#snackbar {\n    visibility: hidden; /* Hidden by default. Visible on click */\n    min-width: 250px; /* Set a default minimum width */\n    margin-left: -125px; /* Divide value of min-width by 2 */\n    background-color: #333; /* Black background color */\n    color: #fff; /* White text color */\n    text-align: center; /* Centered text */\n    border-radius: 5px 5px 0 0; /* Rounded borders */\n    padding: 10px; /* Padding */\n    position: fixed; /* Sit on top of the screen */\n    z-index: 1; /* Add a z-index if needed */\n    left: 50%; /* Center the snackbar */\n    bottom: " + this.bottomIn + "px; /* " + this.bottomIn + "px from the bottom */\n    font-size: 13px;\n\topacity: 0.5;\n}\n\n/* Show the snackbar when clicking on a button (class added with JavaScript) */\n#snackbar.show {\n    visibility: visible; /* Show the snackbar */\n\n\t/* Add animation: Take 0.5 seconds to fade in and out the snackbar.\n\tHowever, delay the fade out process for 2.5 seconds */\n    -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;\n    animation: fadein 0.5s, fadeout 0.5s 2.5s;\n}\n\n/* Animations to fade the snackbar in and out */\n@-webkit-keyframes fadein {\n    from {bottom: " + this.bottomOut + "px; opacity: 0;}\n    to {bottom: " + this.bottomIn + "px; opacity: 1;}\n}\n\n@keyframes fadein {\n    from {bottom: " + this.bottomOut + "px; opacity: 0;}\n    to {bottom: " + this.bottomIn + "px; opacity: 1;}\n}\n\n@-webkit-keyframes fadeout {\n    from {bottom: " + this.bottomIn + "px; opacity: 1;}\n    to {bottom: " + this.bottomOut + "px; opacity: 0;}\n}\n\n@keyframes fadeout {\n    from {bottom: " + this.bottomIn + "px; opacity: 1;}\n    to {bottom: " + this.bottomOut + "px; opacity: 0;}\n}\n\t\t";
	}
	,__class__: lib_html_Snackbar
});
var lib_model_constants_App = function() { };
$hxClasses["lib.model.constants.App"] = lib_model_constants_App;
lib_model_constants_App.__name__ = ["lib","model","constants","App"];
var lib_model_constants_Onom = function() {
	this.char_z = [new lib_model_constants_Point(0,0),new lib_model_constants_Point(6,0),new lib_model_constants_Point(0,12),new lib_model_constants_Point(6,12)];
	this.char_y = [new lib_model_constants_Point(0,0),new lib_model_constants_Point(3,6),new lib_model_constants_Point(6,0),new lib_model_constants_Point(3,6),new lib_model_constants_Point(3,12)];
	this.char_x = [new lib_model_constants_Point(0,0),new lib_model_constants_Point(3,6),new lib_model_constants_Point(6,0),new lib_model_constants_Point(3,6),new lib_model_constants_Point(0,12),new lib_model_constants_Point(3,6),new lib_model_constants_Point(6,12)];
	this.char_w = [new lib_model_constants_Point(0,0),new lib_model_constants_Point(0,11),new lib_model_constants_Point(1,12),new lib_model_constants_Point(2,12),new lib_model_constants_Point(3,11),new lib_model_constants_Point(3,6),new lib_model_constants_Point(3,11),new lib_model_constants_Point(4,12),new lib_model_constants_Point(5,12),new lib_model_constants_Point(6,11),new lib_model_constants_Point(6,0)];
	this.char_v = [new lib_model_constants_Point(0,0),new lib_model_constants_Point(3,12),new lib_model_constants_Point(6,0)];
	this.char_u = [new lib_model_constants_Point(0,0),new lib_model_constants_Point(0,11),new lib_model_constants_Point(1,12),new lib_model_constants_Point(6,12),new lib_model_constants_Point(6,0)];
	this.char_t = [new lib_model_constants_Point(0,0),new lib_model_constants_Point(6,0),new lib_model_constants_Point(3,0),new lib_model_constants_Point(3,12)];
	this.char_s = [new lib_model_constants_Point(6,1),new lib_model_constants_Point(5,0),new lib_model_constants_Point(1,0),new lib_model_constants_Point(0,1),new lib_model_constants_Point(0,5),new lib_model_constants_Point(1,6),new lib_model_constants_Point(5,6),new lib_model_constants_Point(6,7),new lib_model_constants_Point(6,11),new lib_model_constants_Point(5,12),new lib_model_constants_Point(1,12),new lib_model_constants_Point(0,11)];
	this.char_r = [new lib_model_constants_Point(0,12),new lib_model_constants_Point(0,0),new lib_model_constants_Point(5,0),new lib_model_constants_Point(6,1),new lib_model_constants_Point(6,5),new lib_model_constants_Point(5,6),new lib_model_constants_Point(0,6),new lib_model_constants_Point(5,6),new lib_model_constants_Point(6,7),new lib_model_constants_Point(6,12)];
	this.char_q = [new lib_model_constants_Point(5,12),new lib_model_constants_Point(1,12),new lib_model_constants_Point(0,11),new lib_model_constants_Point(0,1),new lib_model_constants_Point(0,11),new lib_model_constants_Point(0,1),new lib_model_constants_Point(1,0),new lib_model_constants_Point(5,0),new lib_model_constants_Point(6,1),new lib_model_constants_Point(6,11),new lib_model_constants_Point(5,12),new lib_model_constants_Point(3,8)];
	this.char_p = [new lib_model_constants_Point(0,12),new lib_model_constants_Point(0,0),new lib_model_constants_Point(5,0),new lib_model_constants_Point(6,1),new lib_model_constants_Point(6,5),new lib_model_constants_Point(5,6),new lib_model_constants_Point(0,6)];
	this.char_o = [new lib_model_constants_Point(0,1),new lib_model_constants_Point(1,0),new lib_model_constants_Point(5,0),new lib_model_constants_Point(6,1),new lib_model_constants_Point(6,11),new lib_model_constants_Point(5,12),new lib_model_constants_Point(1,12),new lib_model_constants_Point(0,11),new lib_model_constants_Point(0,1)];
	this.char_n = [new lib_model_constants_Point(0,12),new lib_model_constants_Point(0,0),new lib_model_constants_Point(5,0),new lib_model_constants_Point(6,1),new lib_model_constants_Point(6,12)];
	this.char_m = [new lib_model_constants_Point(0,12),new lib_model_constants_Point(0,0),new lib_model_constants_Point(2,0),new lib_model_constants_Point(3,1),new lib_model_constants_Point(3,7),new lib_model_constants_Point(3,1),new lib_model_constants_Point(4,0),new lib_model_constants_Point(6,0),new lib_model_constants_Point(6,12)];
	this.char_l = [new lib_model_constants_Point(0,0),new lib_model_constants_Point(0,12),new lib_model_constants_Point(6,12),new lib_model_constants_Point(6,10)];
	this.char_k = [new lib_model_constants_Point(6,0),new lib_model_constants_Point(6,5),new lib_model_constants_Point(5,6),new lib_model_constants_Point(0,6),new lib_model_constants_Point(0,0),new lib_model_constants_Point(0,12),new lib_model_constants_Point(0,6),new lib_model_constants_Point(5,6),new lib_model_constants_Point(6,7),new lib_model_constants_Point(6,12)];
	this.char_j = [new lib_model_constants_Point(3,0),new lib_model_constants_Point(6,0),new lib_model_constants_Point(6,11),new lib_model_constants_Point(5,12),new lib_model_constants_Point(1,12),new lib_model_constants_Point(0,11),new lib_model_constants_Point(0,9)];
	this.char_i = [new lib_model_constants_Point(1,0),new lib_model_constants_Point(5,0),new lib_model_constants_Point(3,0),new lib_model_constants_Point(3,12),new lib_model_constants_Point(1,12),new lib_model_constants_Point(5,12)];
	this.char_h = [new lib_model_constants_Point(0,0),new lib_model_constants_Point(0,12),new lib_model_constants_Point(0,6),new lib_model_constants_Point(6,6),new lib_model_constants_Point(6,0),new lib_model_constants_Point(6,12)];
	this.char_g = [new lib_model_constants_Point(6,3),new lib_model_constants_Point(6,1),new lib_model_constants_Point(5,0),new lib_model_constants_Point(1,0),new lib_model_constants_Point(0,1),new lib_model_constants_Point(0,11),new lib_model_constants_Point(1,12),new lib_model_constants_Point(1,12),new lib_model_constants_Point(5,12),new lib_model_constants_Point(6,11),new lib_model_constants_Point(6,6),new lib_model_constants_Point(3,6)];
	this.char_f = [new lib_model_constants_Point(6,0),new lib_model_constants_Point(0,0),new lib_model_constants_Point(0,6),new lib_model_constants_Point(3,6),new lib_model_constants_Point(0,6),new lib_model_constants_Point(0,12)];
	this.char_e = [new lib_model_constants_Point(6,0),new lib_model_constants_Point(0,0),new lib_model_constants_Point(0,6),new lib_model_constants_Point(3,6),new lib_model_constants_Point(0,6),new lib_model_constants_Point(0,12),new lib_model_constants_Point(6,12)];
	this.char_d = [new lib_model_constants_Point(0,12),new lib_model_constants_Point(0,0),new lib_model_constants_Point(5,0),new lib_model_constants_Point(6,1),new lib_model_constants_Point(6,11),new lib_model_constants_Point(5,12),new lib_model_constants_Point(0,12)];
	this.char_c = [new lib_model_constants_Point(6,3),new lib_model_constants_Point(6,1),new lib_model_constants_Point(5,0),new lib_model_constants_Point(1,0),new lib_model_constants_Point(0,1),new lib_model_constants_Point(0,11),new lib_model_constants_Point(1,12),new lib_model_constants_Point(1,12),new lib_model_constants_Point(5,12),new lib_model_constants_Point(6,11),new lib_model_constants_Point(6,9)];
	this.char_b = [new lib_model_constants_Point(0,12),new lib_model_constants_Point(0,0),new lib_model_constants_Point(5,0),new lib_model_constants_Point(6,1),new lib_model_constants_Point(6,5),new lib_model_constants_Point(5,6),new lib_model_constants_Point(0,6),new lib_model_constants_Point(5,6),new lib_model_constants_Point(6,7),new lib_model_constants_Point(6,11),new lib_model_constants_Point(5,12),new lib_model_constants_Point(0,12)];
	this.char_a = [new lib_model_constants_Point(0,12),new lib_model_constants_Point(0,1),new lib_model_constants_Point(1,0),new lib_model_constants_Point(5,0),new lib_model_constants_Point(6,1),new lib_model_constants_Point(6,6),new lib_model_constants_Point(0,6),new lib_model_constants_Point(6,6),new lib_model_constants_Point(6,12)];
	this.char_not = [new lib_model_constants_Point(0,12),new lib_model_constants_Point(0,0),new lib_model_constants_Point(6,0),new lib_model_constants_Point(6,12),new lib_model_constants_Point(0,12),new lib_model_constants_Point(6,0),new lib_model_constants_Point(0,0),new lib_model_constants_Point(6,12)];
	this.char_comma = [new lib_model_constants_Point(3,12),new lib_model_constants_Point(4,11)];
	this.char_dot = [new lib_model_constants_Point(3,12),new lib_model_constants_Point(3,12)];
	this.char_devide = [new lib_model_constants_Point(3,12),new lib_model_constants_Point(4,11)];
	this.char_is = [new lib_model_constants_Point(0,4),new lib_model_constants_Point(6,4),new lib_model_constants_Point(6,8),new lib_model_constants_Point(0,8)];
	this.char_plus = [new lib_model_constants_Point(0,6),new lib_model_constants_Point(6,6),new lib_model_constants_Point(3,6),new lib_model_constants_Point(3,3),new lib_model_constants_Point(3,9)];
	this.char_min = [new lib_model_constants_Point(0,6),new lib_model_constants_Point(6,6)];
	this.char__ = [new lib_model_constants_Point(0,12),new lib_model_constants_Point(6,12)];
	this.char_space = [new lib_model_constants_Point(0,0)];
	this.char_block_right = [new lib_model_constants_Point(1,0),new lib_model_constants_Point(4,0),new lib_model_constants_Point(4,12),new lib_model_constants_Point(1,12)];
	this.char_block_left = [new lib_model_constants_Point(5,0),new lib_model_constants_Point(2,0),new lib_model_constants_Point(2,12),new lib_model_constants_Point(5,12)];
	this.char_9 = [new lib_model_constants_Point(6,6),new lib_model_constants_Point(1,6),new lib_model_constants_Point(0,5),new lib_model_constants_Point(0,1),new lib_model_constants_Point(1,0),new lib_model_constants_Point(5,0),new lib_model_constants_Point(6,1),new lib_model_constants_Point(6,11),new lib_model_constants_Point(5,12),new lib_model_constants_Point(1,12),new lib_model_constants_Point(0,11),new lib_model_constants_Point(0,10)];
	this.char_8 = [new lib_model_constants_Point(1,6),new lib_model_constants_Point(0,5),new lib_model_constants_Point(0,1),new lib_model_constants_Point(1,0),new lib_model_constants_Point(5,0),new lib_model_constants_Point(6,1),new lib_model_constants_Point(6,5),new lib_model_constants_Point(5,6),new lib_model_constants_Point(1,6),new lib_model_constants_Point(0,7),new lib_model_constants_Point(0,11),new lib_model_constants_Point(1,12),new lib_model_constants_Point(5,12),new lib_model_constants_Point(6,11),new lib_model_constants_Point(6,7),new lib_model_constants_Point(5,6)];
	this.char_7 = [new lib_model_constants_Point(0,0),new lib_model_constants_Point(6,0),new lib_model_constants_Point(0,12)];
	this.char_6 = [new lib_model_constants_Point(6,2),new lib_model_constants_Point(6,1),new lib_model_constants_Point(5,0),new lib_model_constants_Point(1,0),new lib_model_constants_Point(0,1),new lib_model_constants_Point(0,11),new lib_model_constants_Point(1,12),new lib_model_constants_Point(5,12),new lib_model_constants_Point(6,11),new lib_model_constants_Point(6,7),new lib_model_constants_Point(5,6),new lib_model_constants_Point(0,6)];
	this.char_5 = [new lib_model_constants_Point(6,0),new lib_model_constants_Point(0,0),new lib_model_constants_Point(0,6),new lib_model_constants_Point(5,6),new lib_model_constants_Point(6,7),new lib_model_constants_Point(6,11),new lib_model_constants_Point(5,12),new lib_model_constants_Point(1,12),new lib_model_constants_Point(0,11)];
	this.char_4 = [new lib_model_constants_Point(0,0),new lib_model_constants_Point(0,5),new lib_model_constants_Point(1,6),new lib_model_constants_Point(6,6),new lib_model_constants_Point(6,6),new lib_model_constants_Point(6,0),new lib_model_constants_Point(6,12)];
	this.char_3 = [new lib_model_constants_Point(0,3),new lib_model_constants_Point(0,1),new lib_model_constants_Point(1,0),new lib_model_constants_Point(5,0),new lib_model_constants_Point(6,1),new lib_model_constants_Point(6,5),new lib_model_constants_Point(5,6),new lib_model_constants_Point(3,6),new lib_model_constants_Point(5,6),new lib_model_constants_Point(6,7),new lib_model_constants_Point(6,11),new lib_model_constants_Point(5,12),new lib_model_constants_Point(1,12),new lib_model_constants_Point(0,11),new lib_model_constants_Point(0,9)];
	this.char_2 = [new lib_model_constants_Point(0,1),new lib_model_constants_Point(1,0),new lib_model_constants_Point(5,0),new lib_model_constants_Point(6,1),new lib_model_constants_Point(6,3),new lib_model_constants_Point(0,9),new lib_model_constants_Point(0,12),new lib_model_constants_Point(6,12)];
	this.char_1 = [new lib_model_constants_Point(2,0),new lib_model_constants_Point(3,0),new lib_model_constants_Point(3,12)];
	this.char_0 = [new lib_model_constants_Point(0,1),new lib_model_constants_Point(1,0),new lib_model_constants_Point(5,0),new lib_model_constants_Point(6,1),new lib_model_constants_Point(6,11),new lib_model_constants_Point(5,12),new lib_model_constants_Point(1,12),new lib_model_constants_Point(0,11),new lib_model_constants_Point(0,1),new lib_model_constants_Point(6,11)];
	var _g = new haxe_ds_StringMap();
	var value = this.char_0;
	if(__map_reserved["0"] != null) {
		_g.setReserved("0",value);
	} else {
		_g.h["0"] = value;
	}
	var value1 = this.char_1;
	if(__map_reserved["1"] != null) {
		_g.setReserved("1",value1);
	} else {
		_g.h["1"] = value1;
	}
	var value2 = this.char_2;
	if(__map_reserved["2"] != null) {
		_g.setReserved("2",value2);
	} else {
		_g.h["2"] = value2;
	}
	var value3 = this.char_3;
	if(__map_reserved["3"] != null) {
		_g.setReserved("3",value3);
	} else {
		_g.h["3"] = value3;
	}
	var value4 = this.char_4;
	if(__map_reserved["4"] != null) {
		_g.setReserved("4",value4);
	} else {
		_g.h["4"] = value4;
	}
	var value5 = this.char_5;
	if(__map_reserved["5"] != null) {
		_g.setReserved("5",value5);
	} else {
		_g.h["5"] = value5;
	}
	var value6 = this.char_6;
	if(__map_reserved["6"] != null) {
		_g.setReserved("6",value6);
	} else {
		_g.h["6"] = value6;
	}
	var value7 = this.char_7;
	if(__map_reserved["7"] != null) {
		_g.setReserved("7",value7);
	} else {
		_g.h["7"] = value7;
	}
	var value8 = this.char_8;
	if(__map_reserved["8"] != null) {
		_g.setReserved("8",value8);
	} else {
		_g.h["8"] = value8;
	}
	var value9 = this.char_9;
	if(__map_reserved["9"] != null) {
		_g.setReserved("9",value9);
	} else {
		_g.h["9"] = value9;
	}
	var value10 = this.char_block_left;
	if(__map_reserved["["] != null) {
		_g.setReserved("[",value10);
	} else {
		_g.h["["] = value10;
	}
	var value11 = this.char_block_right;
	if(__map_reserved["]"] != null) {
		_g.setReserved("]",value11);
	} else {
		_g.h["]"] = value11;
	}
	var value12 = this.char_space;
	if(__map_reserved[" "] != null) {
		_g.setReserved(" ",value12);
	} else {
		_g.h[" "] = value12;
	}
	var value13 = this.char__;
	if(__map_reserved["_"] != null) {
		_g.setReserved("_",value13);
	} else {
		_g.h["_"] = value13;
	}
	var value14 = this.char_min;
	if(__map_reserved["-"] != null) {
		_g.setReserved("-",value14);
	} else {
		_g.h["-"] = value14;
	}
	var value15 = this.char_plus;
	if(__map_reserved["+"] != null) {
		_g.setReserved("+",value15);
	} else {
		_g.h["+"] = value15;
	}
	var value16 = this.char_is;
	if(__map_reserved["="] != null) {
		_g.setReserved("=",value16);
	} else {
		_g.h["="] = value16;
	}
	var value17 = this.char_dot;
	if(__map_reserved["."] != null) {
		_g.setReserved(".",value17);
	} else {
		_g.h["."] = value17;
	}
	var value18 = this.char_comma;
	if(__map_reserved[","] != null) {
		_g.setReserved(",",value18);
	} else {
		_g.h[","] = value18;
	}
	var value19 = this.char_a;
	if(__map_reserved["a"] != null) {
		_g.setReserved("a",value19);
	} else {
		_g.h["a"] = value19;
	}
	var value20 = this.char_b;
	if(__map_reserved["b"] != null) {
		_g.setReserved("b",value20);
	} else {
		_g.h["b"] = value20;
	}
	var value21 = this.char_c;
	if(__map_reserved["c"] != null) {
		_g.setReserved("c",value21);
	} else {
		_g.h["c"] = value21;
	}
	var value22 = this.char_d;
	if(__map_reserved["d"] != null) {
		_g.setReserved("d",value22);
	} else {
		_g.h["d"] = value22;
	}
	var value23 = this.char_e;
	if(__map_reserved["e"] != null) {
		_g.setReserved("e",value23);
	} else {
		_g.h["e"] = value23;
	}
	var value24 = this.char_f;
	if(__map_reserved["f"] != null) {
		_g.setReserved("f",value24);
	} else {
		_g.h["f"] = value24;
	}
	var value25 = this.char_g;
	if(__map_reserved["g"] != null) {
		_g.setReserved("g",value25);
	} else {
		_g.h["g"] = value25;
	}
	var value26 = this.char_h;
	if(__map_reserved["h"] != null) {
		_g.setReserved("h",value26);
	} else {
		_g.h["h"] = value26;
	}
	var value27 = this.char_i;
	if(__map_reserved["i"] != null) {
		_g.setReserved("i",value27);
	} else {
		_g.h["i"] = value27;
	}
	var value28 = this.char_j;
	if(__map_reserved["j"] != null) {
		_g.setReserved("j",value28);
	} else {
		_g.h["j"] = value28;
	}
	var value29 = this.char_k;
	if(__map_reserved["k"] != null) {
		_g.setReserved("k",value29);
	} else {
		_g.h["k"] = value29;
	}
	var value30 = this.char_l;
	if(__map_reserved["l"] != null) {
		_g.setReserved("l",value30);
	} else {
		_g.h["l"] = value30;
	}
	var value31 = this.char_m;
	if(__map_reserved["m"] != null) {
		_g.setReserved("m",value31);
	} else {
		_g.h["m"] = value31;
	}
	var value32 = this.char_n;
	if(__map_reserved["n"] != null) {
		_g.setReserved("n",value32);
	} else {
		_g.h["n"] = value32;
	}
	var value33 = this.char_o;
	if(__map_reserved["o"] != null) {
		_g.setReserved("o",value33);
	} else {
		_g.h["o"] = value33;
	}
	var value34 = this.char_p;
	if(__map_reserved["p"] != null) {
		_g.setReserved("p",value34);
	} else {
		_g.h["p"] = value34;
	}
	var value35 = this.char_q;
	if(__map_reserved["q"] != null) {
		_g.setReserved("q",value35);
	} else {
		_g.h["q"] = value35;
	}
	var value36 = this.char_r;
	if(__map_reserved["r"] != null) {
		_g.setReserved("r",value36);
	} else {
		_g.h["r"] = value36;
	}
	var value37 = this.char_t;
	if(__map_reserved["t"] != null) {
		_g.setReserved("t",value37);
	} else {
		_g.h["t"] = value37;
	}
	var value38 = this.char_s;
	if(__map_reserved["s"] != null) {
		_g.setReserved("s",value38);
	} else {
		_g.h["s"] = value38;
	}
	var value39 = this.char_u;
	if(__map_reserved["u"] != null) {
		_g.setReserved("u",value39);
	} else {
		_g.h["u"] = value39;
	}
	var value40 = this.char_v;
	if(__map_reserved["v"] != null) {
		_g.setReserved("v",value40);
	} else {
		_g.h["v"] = value40;
	}
	var value41 = this.char_w;
	if(__map_reserved["w"] != null) {
		_g.setReserved("w",value41);
	} else {
		_g.h["w"] = value41;
	}
	var value42 = this.char_x;
	if(__map_reserved["x"] != null) {
		_g.setReserved("x",value42);
	} else {
		_g.h["x"] = value42;
	}
	var value43 = this.char_y;
	if(__map_reserved["y"] != null) {
		_g.setReserved("y",value43);
	} else {
		_g.h["y"] = value43;
	}
	var value44 = this.char_z;
	if(__map_reserved["z"] != null) {
		_g.setReserved("z",value44);
	} else {
		_g.h["z"] = value44;
	}
	this.mono = _g;
};
$hxClasses["lib.model.constants.Onom"] = lib_model_constants_Onom;
lib_model_constants_Onom.__name__ = ["lib","model","constants","Onom"];
lib_model_constants_Onom.prototype = {
	getChar: function(value) {
		var pointsArray = this.char_not;
		var _this = this.mono;
		if(__map_reserved[value] != null ? _this.existsReserved(value) : _this.h.hasOwnProperty(value)) {
			var _this1 = this.mono;
			if(__map_reserved[value] != null) {
				pointsArray = _this1.getReserved(value);
			} else {
				pointsArray = _this1.h[value];
			}
		}
		var temp = [];
		var _g1 = 0;
		var _g = pointsArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var oldP = pointsArray[i];
			var newP = new lib_model_constants_Point(oldP.x,oldP.y);
			temp.push(newP);
		}
		return temp;
	}
	,getAvailable: function() {
		var str = "";
		var value = this.mono.keys();
		while(value.hasNext()) {
			var value1 = value.next();
			str += value1;
		}
		return str;
	}
	,__class__: lib_model_constants_Onom
};
var lib_model_constants_Point = function(x,y) {
	this.x = x;
	this.y = y;
};
$hxClasses["lib.model.constants.Point"] = lib_model_constants_Point;
lib_model_constants_Point.__name__ = ["lib","model","constants","Point"];
lib_model_constants_Point.prototype = {
	toString: function() {
		return "Point(" + this.x + "," + this.y + ")";
	}
	,__class__: lib_model_constants_Point
};
var mloader_Loader = function() { };
$hxClasses["mloader.Loader"] = mloader_Loader;
mloader_Loader.__name__ = ["mloader","Loader"];
mloader_Loader.prototype = {
	__class__: mloader_Loader
	,__properties__: {set_url:"set_url"}
};
var mloader_LoaderBase = function(url) {
	this.loaded = new msignal_EventSignal(this);
	this.set_url(this.sanitizeUrl(url));
	this.progress = 0;
	this.loading = false;
};
$hxClasses["mloader.LoaderBase"] = mloader_LoaderBase;
mloader_LoaderBase.__name__ = ["mloader","LoaderBase"];
mloader_LoaderBase.__interfaces__ = [mloader_Loader];
mloader_LoaderBase.prototype = {
	set_url: function(value) {
		if(value == this.url) {
			return this.url;
		}
		if(this.loading) {
			this.cancel();
		}
		return this.url = this.sanitizeUrl(value);
	}
	,load: function() {
		if(this.loading) {
			return;
		}
		if(this.url == null) {
			throw new js__$Boot_HaxeError("No url defined for Loader");
		}
		this.loading = true;
		this.loaded.dispatchType(mloader_LoaderEventType.Start);
		this.loaderLoad();
	}
	,cancel: function() {
		if(!this.loading) {
			return;
		}
		this.loading = false;
		this.loaderCancel();
		this.progress = 0;
		this.content = null;
		this.loaded.dispatchType(mloader_LoaderEventType.Cancel);
	}
	,loaderLoad: function() {
		throw new js__$Boot_HaxeError("missing implementation");
	}
	,loaderCancel: function() {
		throw new js__$Boot_HaxeError("missing implementation");
	}
	,loaderComplete: function() {
		if(!this.loading) {
			return;
		}
		this.progress = 1;
		this.loading = false;
		this.loaded.dispatchType(mloader_LoaderEventType.Complete);
	}
	,loaderFail: function(error) {
		if(!this.loading) {
			return;
		}
		this.loading = false;
		this.loaded.dispatchType(mloader_LoaderEventType.Fail(error));
	}
	,sanitizeUrl: function(url) {
		var sanitized = url;
		return sanitized;
	}
	,__class__: mloader_LoaderBase
	,__properties__: {set_url:"set_url"}
};
var mloader_HttpLoader = function(url,http) {
	mloader_LoaderBase.call(this,url);
	this.headers = new haxe_ds_StringMap();
	if(http == null) {
		http = new haxe_Http("");
	}
	this.http = http;
	http.onData = $bind(this,this.httpData);
	http.onError = $bind(this,this.httpError);
	http.onStatus = $bind(this,this.httpStatus);
};
$hxClasses["mloader.HttpLoader"] = mloader_HttpLoader;
mloader_HttpLoader.__name__ = ["mloader","HttpLoader"];
mloader_HttpLoader.__super__ = mloader_LoaderBase;
mloader_HttpLoader.prototype = $extend(mloader_LoaderBase.prototype,{
	send: function(data) {
		if(this.loading) {
			this.cancel();
		}
		if(this.url == null) {
			throw new js__$Boot_HaxeError("No url defined for Loader");
		}
		this.loading = true;
		this.loaded.dispatchType(mloader_LoaderEventType.Start);
		var contentType = "application/octet-stream";
		if(js_Boot.__instanceof(data,Xml)) {
			data = Std.string(data);
			contentType = "application/xml";
		} else if(typeof(data) != "string") {
			data = JSON.stringify(data);
			contentType = "application/json";
		} else if(typeof(data) == "string" && this.validateJSONdata(data)) {
			contentType = "application/json";
		}
		var _this = this.headers;
		if(!(__map_reserved["Content-Type"] != null ? _this.existsReserved("Content-Type") : _this.h.hasOwnProperty("Content-Type"))) {
			var _this1 = this.headers;
			if(__map_reserved["Content-Type"] != null) {
				_this1.setReserved("Content-Type",contentType);
			} else {
				_this1.h["Content-Type"] = contentType;
			}
		}
		this.httpConfigure();
		this.addHeaders();
		this.http.url = this.url;
		this.http.setPostData(data);
		try {
			this.http.request(true);
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			this.loaderFail(mloader_LoaderErrorType.Security(Std.string(e)));
		}
	}
	,loaderLoad: function() {
		this.httpConfigure();
		this.addHeaders();
		this.http.url = this.url;
		try {
			this.http.request(false);
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			this.loaderFail(mloader_LoaderErrorType.Security(Std.string(e)));
		}
	}
	,loaderCancel: function() {
		this.http.cancel();
	}
	,httpConfigure: function() {
	}
	,addHeaders: function() {
		var name = this.headers.keys();
		while(name.hasNext()) {
			var name1 = name.next();
			var _this = this.headers;
			this.http.setHeader(name1,__map_reserved[name1] != null ? _this.getReserved(name1) : _this.h[name1]);
		}
	}
	,httpData: function(data) {
		this.content = data;
		this.loaderComplete();
	}
	,httpStatus: function(status) {
		this.statusCode = status;
	}
	,httpError: function(error) {
		this.content = this.http.responseData;
		this.loaderFail(mloader_LoaderErrorType.IO(error));
	}
	,httpSecurityError: function(error) {
		this.loaderFail(mloader_LoaderErrorType.Security(error));
	}
	,validateJSONdata: function(data) {
		var isValid = true;
		try {
			JSON.parse(data);
		} catch( error ) {
			isValid = false;
		}
		return isValid;
	}
	,__class__: mloader_HttpLoader
});
var mloader_JsonLoader = function(url,http) {
	mloader_HttpLoader.call(this,url,http);
};
$hxClasses["mloader.JsonLoader"] = mloader_JsonLoader;
mloader_JsonLoader.__name__ = ["mloader","JsonLoader"];
mloader_JsonLoader.__super__ = mloader_HttpLoader;
mloader_JsonLoader.prototype = $extend(mloader_HttpLoader.prototype,{
	httpData: function(data) {
		var raw = null;
		try {
			raw = JSON.parse(data);
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			this.loaderFail(mloader_LoaderErrorType.Format(Std.string(e)));
			return;
		}
		if(this.parseData == null) {
			this.content = raw;
			this.loaderComplete();
			return;
		}
		try {
			this.content = this.parseData(raw);
			this.loaderComplete();
		} catch( $e0 ) {
			if ($e0 instanceof js__$Boot_HaxeError) $e0 = $e0.val;
			if( js_Boot.__instanceof($e0,mloader_LoaderErrorType) ) {
				var loaderError = $e0;
				this.loaderFail(loaderError);
				return;
			} else {
			var e1 = $e0;
			this.loaderFail(mloader_LoaderErrorType.Data(Std.string(e1),data));
			return;
			}
		}
	}
	,__class__: mloader_JsonLoader
});
var mloader_LoaderEventType = { __ename__ : true, __constructs__ : ["Start","Cancel","Progress","Complete","Fail"] };
mloader_LoaderEventType.Start = ["Start",0];
mloader_LoaderEventType.Start.toString = $estr;
mloader_LoaderEventType.Start.__enum__ = mloader_LoaderEventType;
mloader_LoaderEventType.Cancel = ["Cancel",1];
mloader_LoaderEventType.Cancel.toString = $estr;
mloader_LoaderEventType.Cancel.__enum__ = mloader_LoaderEventType;
mloader_LoaderEventType.Progress = ["Progress",2];
mloader_LoaderEventType.Progress.toString = $estr;
mloader_LoaderEventType.Progress.__enum__ = mloader_LoaderEventType;
mloader_LoaderEventType.Complete = ["Complete",3];
mloader_LoaderEventType.Complete.toString = $estr;
mloader_LoaderEventType.Complete.__enum__ = mloader_LoaderEventType;
mloader_LoaderEventType.Fail = function(error) { var $x = ["Fail",4,error]; $x.__enum__ = mloader_LoaderEventType; $x.toString = $estr; return $x; };
var mloader_LoaderErrorType = { __ename__ : true, __constructs__ : ["IO","Security","Format","Data"] };
mloader_LoaderErrorType.IO = function(info) { var $x = ["IO",0,info]; $x.__enum__ = mloader_LoaderErrorType; $x.toString = $estr; return $x; };
mloader_LoaderErrorType.Security = function(info) { var $x = ["Security",1,info]; $x.__enum__ = mloader_LoaderErrorType; $x.toString = $estr; return $x; };
mloader_LoaderErrorType.Format = function(info) { var $x = ["Format",2,info]; $x.__enum__ = mloader_LoaderErrorType; $x.toString = $estr; return $x; };
mloader_LoaderErrorType.Data = function(info,data) { var $x = ["Data",3,info,data]; $x.__enum__ = mloader_LoaderErrorType; $x.toString = $estr; return $x; };
var msignal_Signal = function(valueClasses) {
	if(valueClasses == null) {
		valueClasses = [];
	}
	this.valueClasses = valueClasses;
	this.slots = msignal_SlotList.NIL;
	this.priorityBased = false;
};
$hxClasses["msignal.Signal"] = msignal_Signal;
msignal_Signal.__name__ = ["msignal","Signal"];
msignal_Signal.prototype = {
	add: function(listener) {
		return this.registerListener(listener);
	}
	,addOnce: function(listener) {
		return this.registerListener(listener,true);
	}
	,addWithPriority: function(listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		return this.registerListener(listener,false,priority);
	}
	,addOnceWithPriority: function(listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		return this.registerListener(listener,true,priority);
	}
	,remove: function(listener) {
		var slot = this.slots.find(listener);
		if(slot == null) {
			return null;
		}
		this.slots = this.slots.filterNot(listener);
		return slot;
	}
	,removeAll: function() {
		this.slots = msignal_SlotList.NIL;
	}
	,registerListener: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		if(this.registrationPossible(listener,once)) {
			var newSlot = this.createSlot(listener,once,priority);
			if(!this.priorityBased && priority != 0) {
				this.priorityBased = true;
			}
			if(!this.priorityBased && priority == 0) {
				this.slots = this.slots.prepend(newSlot);
			} else {
				this.slots = this.slots.insertWithPriority(newSlot);
			}
			return newSlot;
		}
		return this.slots.find(listener);
	}
	,registrationPossible: function(listener,once) {
		if(!this.slots.nonEmpty) {
			return true;
		}
		var existingSlot = this.slots.find(listener);
		if(existingSlot == null) {
			return true;
		}
		if(existingSlot.once != once) {
			throw new js__$Boot_HaxeError("You cannot addOnce() then add() the same listener without removing the relationship first.");
		}
		return false;
	}
	,createSlot: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		return null;
	}
	,get_numListeners: function() {
		return this.slots.get_length();
	}
	,__class__: msignal_Signal
	,__properties__: {get_numListeners:"get_numListeners"}
};
var msignal_EventSignal = function(target) {
	msignal_Signal.call(this,[msignal_Event]);
	this.target = target;
};
$hxClasses["msignal.EventSignal"] = msignal_EventSignal;
msignal_EventSignal.__name__ = ["msignal","EventSignal"];
msignal_EventSignal.__super__ = msignal_Signal;
msignal_EventSignal.prototype = $extend(msignal_Signal.prototype,{
	dispatch: function(event) {
		if(event.target == null) {
			event.target = this.target;
			event.signal = this;
		}
		event.currentTarget = this.target;
		var slotsToProcess = this.slots;
		while(slotsToProcess.nonEmpty) {
			slotsToProcess.head.execute(event);
			slotsToProcess = slotsToProcess.tail;
		}
	}
	,dispatchType: function(type) {
		this.dispatch(new msignal_Event(type));
	}
	,bubble: function(event) {
		this.dispatch(event);
		var currentTarget = this.target;
		while(currentTarget != null && Object.prototype.hasOwnProperty.call(currentTarget,"parent")) {
			currentTarget = Reflect.field(currentTarget,"parent");
			if(js_Boot.__instanceof(currentTarget,msignal_EventDispatcher)) {
				event.currentTarget = currentTarget;
				var dispatcher = js_Boot.__cast(currentTarget , msignal_EventDispatcher);
				if(!dispatcher.dispatchEvent(event)) {
					break;
				}
			}
		}
	}
	,bubbleType: function(type) {
		this.bubble(new msignal_Event(type));
	}
	,createSlot: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		return new msignal_EventSlot(this,listener,once,priority);
	}
	,__class__: msignal_EventSignal
});
var msignal_Slot = function(signal,listener,once,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(once == null) {
		once = false;
	}
	this.signal = signal;
	this.set_listener(listener);
	this.once = once;
	this.priority = priority;
	this.enabled = true;
};
$hxClasses["msignal.Slot"] = msignal_Slot;
msignal_Slot.__name__ = ["msignal","Slot"];
msignal_Slot.prototype = {
	remove: function() {
		this.signal.remove(this.listener);
	}
	,set_listener: function(value) {
		if(value == null) {
			throw new js__$Boot_HaxeError("listener cannot be null");
		}
		return this.listener = value;
	}
	,__class__: msignal_Slot
	,__properties__: {set_listener:"set_listener"}
};
var msignal_EventSlot = function(signal,listener,once,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(once == null) {
		once = false;
	}
	msignal_Slot.call(this,signal,listener,once,priority);
};
$hxClasses["msignal.EventSlot"] = msignal_EventSlot;
msignal_EventSlot.__name__ = ["msignal","EventSlot"];
msignal_EventSlot.typeEq = function(a,b) {
	if(a == b) {
		return true;
	}
	var _g = Type["typeof"](a);
	if(_g[1] == 7) {
		return msignal_EventSlot.enumTypeEq(a,b);
	} else {
		return false;
	}
};
msignal_EventSlot.enumTypeEq = function(a,b) {
	if(a == b) {
		return true;
	}
	if(Type.getEnum(a) != Type.getEnum(b)) {
		return false;
	}
	if(a[1] != b[1]) {
		return false;
	}
	var aParams = a.slice(2);
	if(aParams.length == 0) {
		return true;
	}
	var bParams = b.slice(2);
	var _g1 = 0;
	var _g = aParams.length;
	while(_g1 < _g) {
		var i = _g1++;
		var aParam = aParams[i];
		var bParam = bParams[i];
		if(aParam == null) {
			continue;
		}
		if(!msignal_EventSlot.typeEq(aParam,bParam)) {
			return false;
		}
	}
	return true;
};
msignal_EventSlot.__super__ = msignal_Slot;
msignal_EventSlot.prototype = $extend(msignal_Slot.prototype,{
	execute: function(value1) {
		if(!this.enabled) {
			return;
		}
		if(this.filterType != null && !msignal_EventSlot.typeEq(this.filterType,value1.type)) {
			return;
		}
		if(this.once) {
			this.remove();
		}
		this.listener(value1);
	}
	,forType: function(value) {
		this.filterType = value;
	}
	,__class__: msignal_EventSlot
});
var msignal_Event = function(type) {
	this.type = type;
};
$hxClasses["msignal.Event"] = msignal_Event;
msignal_Event.__name__ = ["msignal","Event"];
msignal_Event.prototype = {
	__class__: msignal_Event
};
var msignal_EventDispatcher = function() { };
$hxClasses["msignal.EventDispatcher"] = msignal_EventDispatcher;
msignal_EventDispatcher.__name__ = ["msignal","EventDispatcher"];
msignal_EventDispatcher.prototype = {
	__class__: msignal_EventDispatcher
};
var msignal_Signal0 = function() {
	msignal_Signal.call(this);
};
$hxClasses["msignal.Signal0"] = msignal_Signal0;
msignal_Signal0.__name__ = ["msignal","Signal0"];
msignal_Signal0.__super__ = msignal_Signal;
msignal_Signal0.prototype = $extend(msignal_Signal.prototype,{
	dispatch: function() {
		var slotsToProcess = this.slots;
		while(slotsToProcess.nonEmpty) {
			slotsToProcess.head.execute();
			slotsToProcess = slotsToProcess.tail;
		}
	}
	,createSlot: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		return new msignal_Slot0(this,listener,once,priority);
	}
	,__class__: msignal_Signal0
});
var msignal_Signal1 = function(type) {
	msignal_Signal.call(this,[type]);
};
$hxClasses["msignal.Signal1"] = msignal_Signal1;
msignal_Signal1.__name__ = ["msignal","Signal1"];
msignal_Signal1.__super__ = msignal_Signal;
msignal_Signal1.prototype = $extend(msignal_Signal.prototype,{
	dispatch: function(value) {
		var slotsToProcess = this.slots;
		while(slotsToProcess.nonEmpty) {
			slotsToProcess.head.execute(value);
			slotsToProcess = slotsToProcess.tail;
		}
	}
	,createSlot: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		return new msignal_Slot1(this,listener,once,priority);
	}
	,__class__: msignal_Signal1
});
var msignal_Signal2 = function(type1,type2) {
	msignal_Signal.call(this,[type1,type2]);
};
$hxClasses["msignal.Signal2"] = msignal_Signal2;
msignal_Signal2.__name__ = ["msignal","Signal2"];
msignal_Signal2.__super__ = msignal_Signal;
msignal_Signal2.prototype = $extend(msignal_Signal.prototype,{
	dispatch: function(value1,value2) {
		var slotsToProcess = this.slots;
		while(slotsToProcess.nonEmpty) {
			slotsToProcess.head.execute(value1,value2);
			slotsToProcess = slotsToProcess.tail;
		}
	}
	,createSlot: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		return new msignal_Slot2(this,listener,once,priority);
	}
	,__class__: msignal_Signal2
});
var msignal_Slot0 = function(signal,listener,once,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(once == null) {
		once = false;
	}
	msignal_Slot.call(this,signal,listener,once,priority);
};
$hxClasses["msignal.Slot0"] = msignal_Slot0;
msignal_Slot0.__name__ = ["msignal","Slot0"];
msignal_Slot0.__super__ = msignal_Slot;
msignal_Slot0.prototype = $extend(msignal_Slot.prototype,{
	execute: function() {
		if(!this.enabled) {
			return;
		}
		if(this.once) {
			this.remove();
		}
		this.listener();
	}
	,__class__: msignal_Slot0
});
var msignal_Slot1 = function(signal,listener,once,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(once == null) {
		once = false;
	}
	msignal_Slot.call(this,signal,listener,once,priority);
};
$hxClasses["msignal.Slot1"] = msignal_Slot1;
msignal_Slot1.__name__ = ["msignal","Slot1"];
msignal_Slot1.__super__ = msignal_Slot;
msignal_Slot1.prototype = $extend(msignal_Slot.prototype,{
	execute: function(value1) {
		if(!this.enabled) {
			return;
		}
		if(this.once) {
			this.remove();
		}
		if(this.param != null) {
			value1 = this.param;
		}
		this.listener(value1);
	}
	,__class__: msignal_Slot1
});
var msignal_Slot2 = function(signal,listener,once,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(once == null) {
		once = false;
	}
	msignal_Slot.call(this,signal,listener,once,priority);
};
$hxClasses["msignal.Slot2"] = msignal_Slot2;
msignal_Slot2.__name__ = ["msignal","Slot2"];
msignal_Slot2.__super__ = msignal_Slot;
msignal_Slot2.prototype = $extend(msignal_Slot.prototype,{
	execute: function(value1,value2) {
		if(!this.enabled) {
			return;
		}
		if(this.once) {
			this.remove();
		}
		if(this.param1 != null) {
			value1 = this.param1;
		}
		if(this.param2 != null) {
			value2 = this.param2;
		}
		this.listener(value1,value2);
	}
	,__class__: msignal_Slot2
});
var msignal_SlotList = function(head,tail) {
	this.nonEmpty = false;
	if(head == null && tail == null) {
		if(msignal_SlotList.NIL != null) {
			throw new js__$Boot_HaxeError("Parameters head and tail are null. Use the NIL element instead.");
		}
		this.nonEmpty = false;
	} else if(head == null) {
		throw new js__$Boot_HaxeError("Parameter head cannot be null.");
	} else {
		this.head = head;
		this.tail = tail == null ? msignal_SlotList.NIL : tail;
		this.nonEmpty = true;
	}
};
$hxClasses["msignal.SlotList"] = msignal_SlotList;
msignal_SlotList.__name__ = ["msignal","SlotList"];
msignal_SlotList.prototype = {
	get_length: function() {
		if(!this.nonEmpty) {
			return 0;
		}
		if(this.tail == msignal_SlotList.NIL) {
			return 1;
		}
		var result = 0;
		var p = this;
		while(p.nonEmpty) {
			++result;
			p = p.tail;
		}
		return result;
	}
	,prepend: function(slot) {
		return new msignal_SlotList(slot,this);
	}
	,append: function(slot) {
		if(slot == null) {
			return this;
		}
		if(!this.nonEmpty) {
			return new msignal_SlotList(slot);
		}
		if(this.tail == msignal_SlotList.NIL) {
			return new msignal_SlotList(slot).prepend(this.head);
		}
		var wholeClone = new msignal_SlotList(this.head);
		var subClone = wholeClone;
		var current = this.tail;
		while(current.nonEmpty) {
			subClone = subClone.tail = new msignal_SlotList(current.head);
			current = current.tail;
		}
		subClone.tail = new msignal_SlotList(slot);
		return wholeClone;
	}
	,insertWithPriority: function(slot) {
		if(!this.nonEmpty) {
			return new msignal_SlotList(slot);
		}
		var priority = slot.priority;
		if(priority >= this.head.priority) {
			return this.prepend(slot);
		}
		var wholeClone = new msignal_SlotList(this.head);
		var subClone = wholeClone;
		var current = this.tail;
		while(current.nonEmpty) {
			if(priority > current.head.priority) {
				subClone.tail = current.prepend(slot);
				return wholeClone;
			}
			subClone = subClone.tail = new msignal_SlotList(current.head);
			current = current.tail;
		}
		subClone.tail = new msignal_SlotList(slot);
		return wholeClone;
	}
	,filterNot: function(listener) {
		if(!this.nonEmpty || listener == null) {
			return this;
		}
		if(Reflect.compareMethods(this.head.listener,listener)) {
			return this.tail;
		}
		var wholeClone = new msignal_SlotList(this.head);
		var subClone = wholeClone;
		var current = this.tail;
		while(current.nonEmpty) {
			if(Reflect.compareMethods(current.head.listener,listener)) {
				subClone.tail = current.tail;
				return wholeClone;
			}
			subClone = subClone.tail = new msignal_SlotList(current.head);
			current = current.tail;
		}
		return this;
	}
	,contains: function(listener) {
		if(!this.nonEmpty) {
			return false;
		}
		var p = this;
		while(p.nonEmpty) {
			if(Reflect.compareMethods(p.head.listener,listener)) {
				return true;
			}
			p = p.tail;
		}
		return false;
	}
	,find: function(listener) {
		if(!this.nonEmpty) {
			return null;
		}
		var p = this;
		while(p.nonEmpty) {
			if(Reflect.compareMethods(p.head.listener,listener)) {
				return p.head;
			}
			p = p.tail;
		}
		return null;
	}
	,__class__: msignal_SlotList
	,__properties__: {get_length:"get_length"}
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
$hxClasses["Math"] = Math;
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = ["String"];
$hxClasses["Array"] = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = ["Date"];
var Int = $hxClasses["Int"] = { __name__ : ["Int"]};
var Dynamic = $hxClasses["Dynamic"] = { __name__ : ["Dynamic"]};
var Float = $hxClasses["Float"] = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses["Class"] = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {};
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
msignal_SlotList.NIL = new msignal_SlotList(null,null);
Sketch.option = new SketchOption();
Global.MOUSE_DOWN = "mousedown";
Global.MOUSE_UP = "mouseup";
Global.MOUSE_MOVE = "mousemove";
Global.KEY_DOWN = "keydown";
Global.KEY_UP = "keyup";
Global.RESIZE = "resize";
Global.mousePressed = 0;
Global.mouseReleased = 0;
Global.isFullscreen = false;
Global.TWO_PI = Math.PI * 2;
Xml.Element = 0;
Xml.PCData = 1;
Xml.CData = 2;
Xml.Comment = 3;
Xml.DocType = 4;
Xml.ProcessingInstruction = 5;
Xml.Document = 6;
cc_draw_Spritesheet._idCounter = -1;
cc_lets_Go._tweens = [];
cc_noise_OpenSimplexNoise.STRETCH_CONSTANT_2D = -0.211324865405187;
cc_noise_OpenSimplexNoise.SQUISH_CONSTANT_2D = 0.366025403784439;
cc_noise_OpenSimplexNoise.STRETCH_CONSTANT_3D = -0.166666666666666657;
cc_noise_OpenSimplexNoise.SQUISH_CONSTANT_3D = 0.333333333333333315;
cc_noise_OpenSimplexNoise.STRETCH_CONSTANT_4D = -0.138196601125011;
cc_noise_OpenSimplexNoise.SQUISH_CONSTANT_4D = 0.309016994374947;
cc_noise_OpenSimplexNoise.NORM_CONSTANT_2D = 47;
cc_noise_OpenSimplexNoise.NORM_CONSTANT_3D = 103;
cc_noise_OpenSimplexNoise.NORM_CONSTANT_4D = 30;
cc_noise_OpenSimplexNoise.DEFAULT_SEED = 0;
cc_noise_OpenSimplexNoise.gradients2D = [5,2,2,5,-5,2,-2,5,5,-2,2,-5,-5,-2,-2,-5];
cc_noise_OpenSimplexNoise.gradients3D = [-11,4,4,-4,11,4,-4,4,11,11,4,4,4,11,4,4,4,11,-11,-4,4,-4,-11,4,-4,-4,11,11,-4,4,4,-11,4,4,-4,11,-11,4,-4,-4,11,-4,-4,4,-11,11,4,-4,4,11,-4,4,4,-11,-11,-4,-4,-4,-11,-4,-4,-4,-11,11,-4,-4,4,-11,-4,4,-4,-11];
cc_noise_OpenSimplexNoise.gradients4D = [3,1,1,1,1,3,1,1,1,1,3,1,1,1,1,3,-3,1,1,1,-1,3,1,1,-1,1,3,1,-1,1,1,3,3,-1,1,1,1,-3,1,1,1,-1,3,1,1,-1,1,3,-3,-1,1,1,-1,-3,1,1,-1,-1,3,1,-1,-1,1,3,3,1,-1,1,1,3,-1,1,1,1,-3,1,1,1,-1,3,-3,1,-1,1,-1,3,-1,1,-1,1,-3,1,-1,1,-1,3,3,-1,-1,1,1,-3,-1,1,1,-1,-3,1,1,-1,-1,3,-3,-1,-1,1,-1,-3,-1,1,-1,-1,-3,1,-1,-1,-1,3,3,1,1,-1,1,3,1,-1,1,1,3,-1,1,1,1,-3,-3,1,1,-1,-1,3,1,-1,-1,1,3,-1,-1,1,1,-3,3,-1,1,-1,1,-3,1,-1,1,-1,3,-1,1,-1,1,-3,-3,-1,1,-1,-1,-3,1,-1,-1,-1,3,-1,-1,-1,1,-3,3,1,-1,-1,1,3,-1,-1,1,1,-3,-1,1,1,-1,-3,-3,1,-1,-1,-1,3,-1,-1,-1,1,-3,-1,-1,1,-1,-3,3,-1,-1,-1,1,-3,-1,-1,1,-1,-3,-1,1,-1,-1,-3,-3,-1,-1,-1,-1,-3,-1,-1,-1,-1,-3,-1,-1,-1,-1,-3];
cc_noise_Perlin.GRAD3 = [new cc_noise_Gradient(1,1,0),new cc_noise_Gradient(-1,1,0),new cc_noise_Gradient(1,-1,0),new cc_noise_Gradient(-1,-1,0),new cc_noise_Gradient(1,0,1),new cc_noise_Gradient(-1,0,1),new cc_noise_Gradient(1,0,-1),new cc_noise_Gradient(-1,0,-1),new cc_noise_Gradient(0,1,1),new cc_noise_Gradient(0,-1,1),new cc_noise_Gradient(0,1,-1),new cc_noise_Gradient(0,-1,-1)];
cc_noise_Perlin.P = [151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180];
cc_tool_export_ExportNames.SEND = "send";
cc_tool_export_ExportNames.MESSAGE = "message";
cc_tool_export_ExportNames.IMAGE = "image";
cc_tool_export_ExportNames.SEQUENCE = "sequence";
cc_tool_export_ExportNames.SEQUENCE_NEXT = "sequence_next";
cc_tool_export_ExportNames.COMBINE = "combine";
cc_tool_export_ExportNames.MARKDOWN = "md";
cc_tool_export_ExportNames.CHECKIN = "checkin";
cc_tool_export_ExportNames.SERVER_CHECKIN = "server-checkin";
cc_tool_export_ExportNames.RENDER_CLEAR = "render-clear";
cc_tool_export_ExportNames.RENDER_CLEAR_DONE = "render-clear-done";
cc_tool_export_ExportNames.RENDER_FRAME = "render-frame";
cc_tool_export_ExportNames.RENDER_DONE = "render-done";
cc_tool_export_ExportNames.TEST = "test";
cc_tool_export_ExportZip.isZipLoaded = false;
cc_tool_export_ExportZip.isFileLoaded = false;
cc_util_ColorUtil.NAVY = { r : Math.round(0), g : Math.round(31), b : Math.round(63)};
cc_util_ColorUtil.BLUE = { r : Math.round(0), g : Math.round(116), b : Math.round(217)};
cc_util_ColorUtil.AQUA = { r : Math.round(127), g : Math.round(219), b : Math.round(255)};
cc_util_ColorUtil.TEAL = { r : Math.round(57), g : Math.round(204), b : Math.round(204)};
cc_util_ColorUtil.OLIVE = { r : Math.round(61), g : Math.round(153), b : Math.round(112)};
cc_util_ColorUtil.GREEN = { r : Math.round(46), g : Math.round(204), b : Math.round(64)};
cc_util_ColorUtil.LIME = { r : Math.round(1), g : Math.round(255), b : Math.round(112)};
cc_util_ColorUtil.YELLOW = { r : Math.round(255), g : Math.round(220), b : Math.round(0)};
cc_util_ColorUtil.ORANGE = { r : Math.round(255), g : Math.round(133), b : Math.round(27)};
cc_util_ColorUtil.RED = { r : Math.round(255), g : Math.round(65), b : Math.round(54)};
cc_util_ColorUtil.MAROON = { r : Math.round(133), g : Math.round(20), b : Math.round(75)};
cc_util_ColorUtil.FUCHSIA = { r : Math.round(240), g : Math.round(18), b : Math.round(190)};
cc_util_ColorUtil.PURPLE = { r : Math.round(177), g : Math.round(13), b : Math.round(201)};
cc_util_ColorUtil.BLACK = { r : Math.round(17), g : Math.round(17), b : Math.round(17)};
cc_util_ColorUtil.GRAY = { r : Math.round(170), g : Math.round(170), b : Math.round(170)};
cc_util_ColorUtil.SILVER = { r : Math.round(221), g : Math.round(221), b : Math.round(221)};
cc_util_ColorUtil.WHITE = { r : Math.round(255), g : Math.round(255), b : Math.round(255)};
cc_util_ColorUtil.PINK = { r : Math.round(255), g : Math.round(20), b : Math.round(147)};
cc_util_ColorUtil.PINK_DEEP = { r : Math.round(255), g : Math.round(20), b : Math.round(147)};
cc_util_ColorUtil.PINK_HOT = { r : Math.round(255), g : Math.round(105), b : Math.round(180)};
cc_util_ColorUtil.niceColor100 = [["#69d2e7","#a7dbd8","#e0e4cc","#f38630","#fa6900"],["#fe4365","#fc9d9a","#f9cdad","#c8c8a9","#83af9b"],["#ecd078","#d95b43","#c02942","#542437","#53777a"],["#556270","#4ecdc4","#c7f464","#ff6b6b","#c44d58"],["#774f38","#e08e79","#f1d4af","#ece5ce","#c5e0dc"],["#e8ddcb","#cdb380","#036564","#033649","#031634"],["#490a3d","#bd1550","#e97f02","#f8ca00","#8a9b0f"],["#594f4f","#547980","#45ada8","#9de0ad","#e5fcc2"],["#00a0b0","#6a4a3c","#cc333f","#eb6841","#edc951"],["#e94e77","#d68189","#c6a49a","#c6e5d9","#f4ead5"],["#3fb8af","#7fc7af","#dad8a7","#ff9e9d","#ff3d7f"],["#d9ceb2","#948c75","#d5ded9","#7a6a53","#99b2b7"],["#ffffff","#cbe86b","#f2e9e1","#1c140d","#cbe86b"],["#efffcd","#dce9be","#555152","#2e2633","#99173c"],["#343838","#005f6b","#008c9e","#00b4cc","#00dffc"],["#413e4a","#73626e","#b38184","#f0b49e","#f7e4be"],["#ff4e50","#fc913a","#f9d423","#ede574","#e1f5c4"],["#99b898","#fecea8","#ff847c","#e84a5f","#2a363b"],["#655643","#80bca3","#f6f7bd","#e6ac27","#bf4d28"],["#00a8c6","#40c0cb","#f9f2e7","#aee239","#8fbe00"],["#351330","#424254","#64908a","#e8caa4","#cc2a41"],["#554236","#f77825","#d3ce3d","#f1efa5","#60b99a"],["#ff9900","#424242","#e9e9e9","#bcbcbc","#3299bb"],["#5d4157","#838689","#a8caba","#cad7b2","#ebe3aa"],["#8c2318","#5e8c6a","#88a65e","#bfb35a","#f2c45a"],["#fad089","#ff9c5b","#f5634a","#ed303c","#3b8183"],["#ff4242","#f4fad2","#d4ee5e","#e1edb9","#f0f2eb"],["#d1e751","#ffffff","#000000","#4dbce9","#26ade4"],["#f8b195","#f67280","#c06c84","#6c5b7b","#355c7d"],["#1b676b","#519548","#88c425","#bef202","#eafde6"],["#bcbdac","#cfbe27","#f27435","#f02475","#3b2d38"],["#5e412f","#fcebb6","#78c0a8","#f07818","#f0a830"],["#452632","#91204d","#e4844a","#e8bf56","#e2f7ce"],["#eee6ab","#c5bc8e","#696758","#45484b","#36393b"],["#f0d8a8","#3d1c00","#86b8b1","#f2d694","#fa2a00"],["#f04155","#ff823a","#f2f26f","#fff7bd","#95cfb7"],["#2a044a","#0b2e59","#0d6759","#7ab317","#a0c55f"],["#bbbb88","#ccc68d","#eedd99","#eec290","#eeaa88"],["#b9d7d9","#668284","#2a2829","#493736","#7b3b3b"],["#b3cc57","#ecf081","#ffbe40","#ef746f","#ab3e5b"],["#a3a948","#edb92e","#f85931","#ce1836","#009989"],["#67917a","#170409","#b8af03","#ccbf82","#e33258"],["#e8d5b7","#0e2430","#fc3a51","#f5b349","#e8d5b9"],["#aab3ab","#c4cbb7","#ebefc9","#eee0b7","#e8caaf"],["#300030","#480048","#601848","#c04848","#f07241"],["#ab526b","#bca297","#c5ceae","#f0e2a4","#f4ebc3"],["#607848","#789048","#c0d860","#f0f0d8","#604848"],["#a8e6ce","#dcedc2","#ffd3b5","#ffaaa6","#ff8c94"],["#3e4147","#fffedf","#dfba69","#5a2e2e","#2a2c31"],["#b6d8c0","#c8d9bf","#dadabd","#ecdbbc","#fedcba"],["#fc354c","#29221f","#13747d","#0abfbc","#fcf7c5"],["#1c2130","#028f76","#b3e099","#ffeaad","#d14334"],["#edebe6","#d6e1c7","#94c7b6","#403b33","#d3643b"],["#cc0c39","#e6781e","#c8cf02","#f8fcc1","#1693a7"],["#dad6ca","#1bb0ce","#4f8699","#6a5e72","#563444"],["#a7c5bd","#e5ddcb","#eb7b59","#cf4647","#524656"],["#fdf1cc","#c6d6b8","#987f69","#e3ad40","#fcd036"],["#5c323e","#a82743","#e15e32","#c0d23e","#e5f04c"],["#230f2b","#f21d41","#ebebbc","#bce3c5","#82b3ae"],["#b9d3b0","#81bda4","#b28774","#f88f79","#f6aa93"],["#3a111c","#574951","#83988e","#bcdea5","#e6f9bc"],["#5e3929","#cd8c52","#b7d1a3","#dee8be","#fcf7d3"],["#1c0113","#6b0103","#a30006","#c21a01","#f03c02"],["#382f32","#ffeaf2","#fcd9e5","#fbc5d8","#f1396d"],["#e3dfba","#c8d6bf","#93ccc6","#6cbdb5","#1a1f1e"],["#000000","#9f111b","#b11623","#292c37","#cccccc"],["#c1b398","#605951","#fbeec2","#61a6ab","#accec0"],["#8dccad","#988864","#fea6a2","#f9d6ac","#ffe9af"],["#f6f6f6","#e8e8e8","#333333","#990100","#b90504"],["#1b325f","#9cc4e4","#e9f2f9","#3a89c9","#f26c4f"],["#5e9fa3","#dcd1b4","#fab87f","#f87e7b","#b05574"],["#951f2b","#f5f4d7","#e0dfb1","#a5a36c","#535233"],["#413d3d","#040004","#c8ff00","#fa023c","#4b000f"],["#eff3cd","#b2d5ba","#61ada0","#248f8d","#605063"],["#2d2d29","#215a6d","#3ca2a2","#92c7a3","#dfece6"],["#cfffdd","#b4dec1","#5c5863","#a85163","#ff1f4c"],["#4e395d","#827085","#8ebe94","#ccfc8e","#dc5b3e"],["#9dc9ac","#fffec7","#f56218","#ff9d2e","#919167"],["#a1dbb2","#fee5ad","#faca66","#f7a541","#f45d4c"],["#ffefd3","#fffee4","#d0ecea","#9fd6d2","#8b7a5e"],["#a8a7a7","#cc527a","#e8175d","#474747","#363636"],["#ffedbf","#f7803c","#f54828","#2e0d23","#f8e4c1"],["#f8edd1","#d88a8a","#474843","#9d9d93","#c5cfc6"],["#f38a8a","#55443d","#a0cab5","#cde9ca","#f1edd0"],["#4e4d4a","#353432","#94ba65","#2790b0","#2b4e72"],["#0ca5b0","#4e3f30","#fefeeb","#f8f4e4","#a5b3aa"],["#a70267","#f10c49","#fb6b41","#f6d86b","#339194"],["#9d7e79","#ccac95","#9a947c","#748b83","#5b756c"],["#edf6ee","#d1c089","#b3204d","#412e28","#151101"],["#046d8b","#309292","#2fb8ac","#93a42a","#ecbe13"],["#4d3b3b","#de6262","#ffb88c","#ffd0b3","#f5e0d3"],["#fffbb7","#a6f6af","#66b6ab","#5b7c8d","#4f2958"],["#ff003c","#ff8a00","#fabe28","#88c100","#00c176"],["#fcfef5","#e9ffe1","#cdcfb7","#d6e6c3","#fafbe3"],["#9cddc8","#bfd8ad","#ddd9ab","#f7af63","#633d2e"],["#30261c","#403831","#36544f","#1f5f61","#0b8185"],["#d1313d","#e5625c","#f9bf76","#8eb2c5","#615375"],["#ffe181","#eee9e5","#fad3b2","#ffba7f","#ff9c97"],["#aaff00","#ffaa00","#ff00aa","#aa00ff","#00aaff"],["#c2412d","#d1aa34","#a7a844","#a46583","#5a1e4a"]];
cc_util_ColorUtil.niceColor100SortedString = [["#E0E4CC","#A7DBD8","#69D2E7","#F38630","#FA6900"],["#F9CDAD","#C8C8A9","#FC9D9A","#83AF9B","#FE4365"],["#ECD078","#D95B43","#53777A","#C02942","#542437"],["#C7F464","#4ECDC4","#FF6B6B","#C44D58","#556270"],["#ECE5CE","#F1D4AF","#C5E0DC","#E08E79","#774F38"],["#E8DDCB","#CDB380","#036564","#033649","#031634"],["#F8CA00","#E97F02","#8A9B0F","#BD1550","#490A3D"],["#E5FCC2","#9DE0AD","#45ADA8","#547980","#594F4F"],["#EDC951","#EB6841","#00A0B0","#CC333F","#6A4A3C"],["#F4EAD5","#C6E5D9","#C6A49A","#D68189","#E94E77"],["#DAD8A7","#FF9E9D","#7FC7AF","#3FB8AF","#FF3D7F"],["#D5DED9","#D9CEB2","#99B2B7","#948C75","#7A6A53"],["#FFFFFF","#F2E9E1","#CBE86B","#CBE86B","#1C140D"],["#EFFFCD","#DCE9BE","#555152","#99173C","#2E2633"],["#00DFFC","#00B4CC","#008C9E","#005F6B","#343838"],["#F7E4BE","#F0B49E","#B38184","#73626E","#413E4A"],["#E1F5C4","#EDE574","#F9D423","#FC913A","#FF4E50"],["#FECEA8","#99B898","#FF847C","#E84A5F","#2A363B"],["#F6F7BD","#E6AC27","#80BCA3","#BF4D28","#655643"],["#F9F2E7","#AEE239","#40C0CB","#8FBE00","#00A8C6"],["#E8CAA4","#64908A","#CC2A41","#424254","#351330"],["#F1EFA5","#D3CE3D","#60B99A","#F77825","#554236"],["#E9E9E9","#BCBCBC","#FF9900","#3299BB","#424242"],["#EBE3AA","#CAD7B2","#A8CABA","#838689","#5D4157"],["#F2C45A","#BFB35A","#88A65E","#5E8C6A","#8C2318"],["#FAD089","#FF9C5B","#F5634A","#3B8183","#ED303C"],["#F4FAD2","#F0F2EB","#E1EDB9","#D4EE5E","#FF4242"],["#FFFFFF","#D1E751","#4DBCE9","#26ADE4","#000000"],["#F8B195","#F67280","#C06C84","#6C5B7B","#355C7D"],["#EAFDE6","#BEF202","#88C425","#519548","#1B676B"],["#BCBDAC","#CFBE27","#F27435","#F02475","#3B2D38"],["#FCEBB6","#F0A830","#78C0A8","#F07818","#5E412F"],["#E2F7CE","#E8BF56","#E4844A","#91204D","#452632"],["#EEE6AB","#C5BC8E","#696758","#45484B","#36393B"],["#F0D8A8","#F2D694","#86B8B1","#FA2A00","#3D1C00"],["#FFF7BD","#F2F26F","#95CFB7","#FF823A","#F04155"],["#A0C55F","#7AB317","#0D6759","#0B2E59","#2A044A"],["#EEDD99","#EEC290","#CCC68D","#EEAA88","#BBBB88"],["#B9D7D9","#668284","#7B3B3B","#493736","#2A2829"],["#ECF081","#FFBE40","#B3CC57","#EF746F","#AB3E5B"],["#EDB92E","#A3A948","#F85931","#009989","#CE1836"],["#CCBF82","#B8AF03","#67917A","#E33258","#170409"],["#E8D5B9","#E8D5B7","#F5B349","#FC3A51","#0E2430"],["#EBEFC9","#EEE0B7","#E8CAAF","#C4CBB7","#AAB3AB"],["#F07241","#C04848","#601848","#480048","#300030"],["#F4EBC3","#F0E2A4","#C5CEAE","#BCA297","#AB526B"],["#F0F0D8","#C0D860","#789048","#607848","#604848"],["#DCEDC2","#FFD3B5","#A8E6CE","#FFAAA6","#FF8C94"],["#FFFEDF","#DFBA69","#3E4147","#5A2E2E","#2A2C31"],["#FEDCBA","#ECDBBC","#DADABD","#C8D9BF","#B6D8C0"],["#FCF7C5","#0ABFBC","#FC354C","#13747D","#29221F"],["#FFEAAD","#B3E099","#D14334","#028F76","#1C2130"],["#EDEBE6","#D6E1C7","#94C7B6","#D3643B","#403B33"],["#F8FCC1","#C8CF02","#E6781E","#1693A7","#CC0C39"],["#DAD6CA","#1BB0CE","#4F8699","#6A5E72","#563444"],["#E5DDCB","#A7C5BD","#EB7B59","#CF4647","#524656"],["#FDF1CC","#C6D6B8","#FCD036","#E3AD40","#987F69"],["#E5F04C","#C0D23E","#E15E32","#A82743","#5C323E"],["#EBEBBC","#BCE3C5","#82B3AE","#F21D41","#230F2B"],["#B9D3B0","#F6AA93","#F88F79","#81BDA4","#B28774"],["#E6F9BC","#BCDEA5","#83988E","#574951","#3A111C"],["#FCF7D3","#DEE8BE","#B7D1A3","#CD8C52","#5E3929"],["#F03C02","#C21A01","#A30006","#6B0103","#1C0113"],["#FFEAF2","#FCD9E5","#FBC5D8","#F1396D","#382F32"],["#E3DFBA","#C8D6BF","#93CCC6","#6CBDB5","#1A1F1E"],["#CCCCCC","#B11623","#9F111B","#292C37","#000000"],["#FBEEC2","#ACCEC0","#C1B398","#61A6AB","#605951"],["#FFE9AF","#F9D6AC","#FEA6A2","#8DCCAD","#988864"],["#F6F6F6","#E8E8E8","#B90504","#333333","#990100"],["#E9F2F9","#9CC4E4","#F26C4F","#3A89C9","#1B325F"],["#DCD1B4","#FAB87F","#F87E7B","#5E9FA3","#B05574"],["#F5F4D7","#E0DFB1","#A5A36C","#535233","#951F2B"],["#C8FF00","#FA023C","#413D3D","#4B000F","#040004"],["#EFF3CD","#B2D5BA","#61ADA0","#248F8D","#605063"],["#DFECE6","#92C7A3","#3CA2A2","#215A6D","#2D2D29"],["#CFFFDD","#B4DEC1","#A85163","#FF1F4C","#5C5863"],["#CCFC8E","#8EBE94","#DC5B3E","#827085","#4E395D"],["#FFFEC7","#9DC9AC","#FF9D2E","#919167","#F56218"],["#FEE5AD","#FACA66","#A1DBB2","#F7A541","#F45D4C"],["#FFFEE4","#FFEFD3","#D0ECEA","#9FD6D2","#8B7A5E"],["#A8A7A7","#CC527A","#E8175D","#474747","#363636"],["#FFEDBF","#F8E4C1","#F7803C","#F54828","#2E0D23"],["#F8EDD1","#C5CFC6","#D88A8A","#9D9D93","#474843"],["#F1EDD0","#CDE9CA","#A0CAB5","#F38A8A","#55443D"],["#94BA65","#2790B0","#4E4D4A","#2B4E72","#353432"],["#FEFEEB","#F8F4E4","#A5B3AA","#0CA5B0","#4E3F30"],["#F6D86B","#FB6B41","#339194","#F10C49","#A70267"],["#CCAC95","#9A947C","#9D7E79","#748B83","#5B756C"],["#EDF6EE","#D1C089","#B3204D","#412E28","#151101"],["#ECBE13","#93A42A","#2FB8AC","#309292","#046D8B"],["#F5E0D3","#FFD0B3","#FFB88C","#DE6262","#4D3B3B"],["#FFFBB7","#A6F6AF","#66B6AB","#5B7C8D","#4F2958"],["#FABE28","#FF8A00","#88C100","#00C176","#FF003C"],["#FCFEF5","#FAFBE3","#E9FFE1","#D6E6C3","#CDCFB7"],["#DDD9AB","#BFD8AD","#9CDDC8","#F7AF63","#633D2E"],["#0B8185","#1F5F61","#36544F","#403831","#30261C"],["#F9BF76","#8EB2C5","#E5625C","#D1313D","#615375"],["#EEE9E5","#FFE181","#FAD3B2","#FFBA7F","#FF9C97"],["#AAFF00","#FFAA00","#00AAFF","#FF00AA","#AA00FF"],["#D1AA34","#A7A844","#A46583","#C2412D","#5A1E4A"],["#F8F3BF","#DCE4F7","#BFCFF7","#75616B","#D34017"]];
cc_util_ColorUtil.niceColor100SortedInt = [[14738636,11000792,6935271,15959600,16410880],[16371117,13158569,16555418,8630171,16663397],[15519864,14244675,5470074,12593474,5514295],[13104228,5164484,16739179,12864856,5595760],[15525326,15848623,12968156,14716537,7819064],[15261131,13480832,222564,210505,202292],[16304640,15302402,9083663,12391760,4786749],[15072450,10346669,4566440,5536128,5853007],[15583569,15427649,41136,13382463,6965820],[16050901,13034969,13018266,14057865,15289975],[14342311,16752285,8374191,4176047,16727423],[14016217,14274226,10072759,9735285,8022611],[16777215,15919585,13363307,13363307,1840141],[15728589,14477758,5591378,10032956,3024435],[57340,46284,35998,24427,3422264],[16245950,15774878,11764100,7561838,4275786],[14808516,15590772,16372771,16552250,16731728],[16699048,10074264,16745596,15223391,2766395],[16185277,15117351,8436899,12537128,6641219],[16380647,11461177,4243659,9420288,43206],[15256228,6590602,13380161,4342356,3478320],[15855525,13880893,6338970,16218149,5587510],[15329769,12369084,16750848,3316155,4342338],[15459242,13293490,11061946,8619657,6111575],[15909978,12563290,8955486,6196330,9184024],[16437385,16751707,16081738,3899779,15544380],[16054994,15790827,14806457,13954654,16728642],[16777215,13756241,5094633,2534884,0],[16298389,16151168,12610692,7101307,3497085],[15400422,12513794,8963109,5346632,1795947],[12369324,13614631,15889461,15737973,3878200],[16575414,15771696,7913640,15759384,6177071],[14874574,15253334,14976074,9510989,4531762],[15656619,12958862,6907736,4540491,3553595],[15784104,15914644,8829105,16394752,4004864],[16775101,15921775,9818039,16745018,15745365],[10536287,8041239,878425,732761,2753610],[15654297,15647376,13420173,15641224,12303240],[12179417,6718084,8076091,4798262,2762793],[15528065,16760384,11783255,15692911,11222619],[15579438,10725704,16275761,39305,13506614],[13418370,12103427,6787450,14889560,1508361],[15259065,15259063,16102217,16530001,926768],[15462345,15655095,15256239,12897207,11187115],[15757889,12601416,6297672,4718664,3145776],[16051139,15786660,12963502,12362391,11227755],[15790296,12638304,7901256,6322248,6309960],[14478786,16765877,11069134,16755366,16747668],[16776927,14662249,4079943,5910062,2763825],[16702650,15522748,14342845,13162943,11983040],[16578501,704444,16528716,1275005,2695711],[16771757,11788441,13714228,167798,1843504],[15592422,14082503,9750454,13853755,4209459],[16317633,13160194,15104030,1479591,13372473],[14341834,1814734,5211801,6970994,5649476],[15064523,10995133,15432537,13583943,5391958],[16642508,13031096,16568374,14921024,9994089],[15069260,12636734,14769714,11020099,6042174],[15461308,12379077,8565678,15867201,2297643],[12178352,16165523,16289657,8502692,11700084],[15137212,12377765,8624270,5720401,3805468],[16578515,14608574,12046755,13470802,6175017],[15744002,12720641,10682374,7012611,1835283],[16771826,16570853,16500184,15808877,3682098],[14933946,13162175,9686214,7126453,1711902],[13421772,11605539,10424603,2698295,0],[16510658,11325120,12694424,6399659,6314321],[16771503,16373420,16688802,9292973,9996388],[16185078,15263976,12125444,3355443,10027264],[15332089,10274020,15887439,3836361,1782367],[14471604,16431231,16285307,6201251,11556212],[16118999,14737329,10855276,5460531,9772843],[13172480,16384572,4275517,4915215,262148],[15725517,11720122,6401440,2396045,6312035],[14675174,9619363,3973794,2185837,2960681],[13631453,11853505,11030883,16719692,6051939],[13433998,9354900,14441278,8548485,5126493],[16776903,10340780,16751918,9539943,16081432],[16704941,16435814,10607538,16229697,16014668],[16776932,16773075,13692138,10475218,9140830],[11052967,13390458,15210333,4671303,3552822],[16772543,16311489,16220220,16074792,3018019],[16313809,12963782,14191242,10329491,4671555],[15855056,13494730,10537653,15960714,5588029],[9747045,2592944,5131594,2838130,3486770],[16711403,16315620,10859434,828848,5127984],[16177259,16476993,3379604,15797321,10945127],[13413525,10130556,10321529,7637891,5993836],[15595246,13746313,11739213,4271656,1380609],[15515155,9675818,3127468,3183250,290187],[16113875,16765107,16758924,14574178,5061435],[16776119,10942127,6731435,5995661,5187928],[16432680,16747008,8962304,49526,16711740],[16580341,16448483,15335393,14083779,13488055],[14539179,12572845,10280392,16232291,6503726],[754053,2056033,3560527,4208689,3155484],[16367478,9351877,15032924,13709629,6378357],[15657445,16769409,16438194,16759423,16751767],[11206400,16755200,43775,16711850,11141375],[13740596,10987588,10773891,12730669,5905994],[16315327,14476535,12570615,7692651,13844503]];
haxe_xml_Parser.escapes = (function($this) {
	var $r;
	var h = new haxe_ds_StringMap();
	if(__map_reserved["lt"] != null) {
		h.setReserved("lt","<");
	} else {
		h.h["lt"] = "<";
	}
	if(__map_reserved["gt"] != null) {
		h.setReserved("gt",">");
	} else {
		h.h["gt"] = ">";
	}
	if(__map_reserved["amp"] != null) {
		h.setReserved("amp","&");
	} else {
		h.h["amp"] = "&";
	}
	if(__map_reserved["quot"] != null) {
		h.setReserved("quot","\"");
	} else {
		h.h["quot"] = "\"";
	}
	if(__map_reserved["apos"] != null) {
		h.setReserved("apos","'");
	} else {
		h.h["apos"] = "'";
	}
	$r = h;
	return $r;
}(this));
hxColorToolkit_ColorToolkit.rybWheel = [[0,0],[15,8],[30,17],[45,26],[60,34],[75,41],[90,48],[105,54],[120,60],[135,81],[150,103],[165,123],[180,138],[195,155],[210,171],[225,187],[240,204],[255,219],[270,234],[285,251],[300,267],[315,282],[330,298],[345,329],[360,0]];
js_Boot.__toStr = ({ }).toString;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
lib_model_constants_App.NAME = "Creative Code [mck]";
lib_model_constants_App.BUILD = "2019-04-16 17:01:33";
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=cc_mck.js.map