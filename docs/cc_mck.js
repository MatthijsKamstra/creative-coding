// Generated by Haxe 3.4.7
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = ["EReg"];
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
Lambda.__name__ = ["Lambda"];
Lambda.has = function(it,elt) {
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1 == elt) {
			return true;
		}
	}
	return false;
};
Lambda.exists = function(it,f) {
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			return true;
		}
	}
	return false;
};
Lambda.filter = function(it,f) {
	var l = new List();
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			l.add(x1);
		}
	}
	return l;
};
var List = function() {
	this.length = 0;
};
List.__name__ = ["List"];
List.prototype = {
	add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = new _$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
	,__class__: List
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
_$List_ListNode.__name__ = ["_List","ListNode"];
_$List_ListNode.prototype = {
	__class__: _$List_ListNode
};
var _$List_ListIterator = function(head) {
	this.head = head;
};
_$List_ListIterator.__name__ = ["_List","ListIterator"];
_$List_ListIterator.prototype = {
	hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: _$List_ListIterator
};
var Main = function() {
	window.document.addEventListener("DOMContentLoaded",function(event) {
		window.console.log("" + lib_model_constants_App.NAME + " :: build: " + lib_model_constants_App.BUILD);
		var ctx = Sketch.create("creative_code_mck");
		var hash = window.location.hash;
		hash = StringTools.replace(hash,"#","");
		switch(hash) {
		case "CC000":
			new art_CC000(ctx);
			break;
		case "CC001":
			new art_CC001(ctx);
			break;
		case "CC002":
			new art_CC002(ctx);
			break;
		case "CC003":
			new art_CC003(ctx);
			break;
		case "CC004":
			new art_CC004(ctx);
			break;
		case "CC005":
			new art_CC005(ctx);
			break;
		case "CC006":
			new art_CC006(ctx);
			break;
		case "CC007":
			new art_CC007(ctx);
			break;
		case "CC008":
			new art_CC008(ctx);
			break;
		case "CC009":
			new art_CC009(ctx);
			break;
		case "CC010":
			new art_CC010(ctx);
			break;
		case "CC011":
			new art_CC011(ctx);
			break;
		case "CC012":
			new art_CC012(ctx);
			break;
		case "CC013":
			new art_CC013(ctx);
			break;
		case "CC014":
			new art_CC014(ctx);
			break;
		case "CC015":
			new art_CC015(ctx);
			break;
		case "CC016":
			new art_CC016(ctx);
			break;
		case "CC017":
			new art_CC017(ctx);
			break;
		case "CC018":
			new art_CC018(ctx);
			break;
		case "CC019":
			new art_CC019(ctx);
			break;
		case "CC020":
			new art_CC020(ctx);
			break;
		case "CC021":
			new art_CC021(ctx);
			break;
		default:
			console.log("case '" + hash + "': new " + hash + "(ctx);");
			window.location.hash = "CC021";
			new art_CC021(ctx);
		}
		var snackbar = new lib_html_Snackbar();
		snackbar.show("sketch " + hash);
		var left = new lib_html_Nav();
		left.dir("left");
		var right = new lib_html_Nav();
		right.dir("right");
		var count = Std.parseInt(StringTools.replace(hash.toLowerCase(),"cc",""));
		window.addEventListener("hashchange",function() {
			window.location.reload();
		},false);
		window.addEventListener(lib_Global.KEY_DOWN,function(e) {
			var _g = e.key;
			switch(_g) {
			case "ArrowLeft":
				count -= 1;
				break;
			case "ArrowRight":
				count += 1;
				break;
			}
			var tmp = StringTools.lpad(count == null ? "null" : "" + count,"0",3);
			window.location.hash = "CC" + tmp;
		},false);
	});
};
Main.__name__ = ["Main"];
Main.main = function() {
	var app = new Main();
};
Main.prototype = {
	__class__: Main
};
Math.__name__ = ["Math"];
var Reflect = function() { };
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
var Sketch = function() {
	this.document = window.document;
	this.window = window;
};
Sketch.__name__ = ["Sketch"];
Sketch.create = function(name,option) {
	if(option == null) {
		option = new SketchOption();
	}
	if(option.get_type() == "canvas") {
		return new Sketch().createCanvas(name);
	} else {
		return new Sketch().createGLCanvas(name);
	}
};
Sketch.prototype = {
	createCanvas: function(canvas_name) {
		var body = this.document.querySelector("body");
		var container = this.document.createElement("div");
		container.className = "container";
		this.canvas = this.document.createElement("canvas");
		this.canvas.setAttribute("id",canvas_name);
		body.appendChild(container);
		container.appendChild(this.canvas);
		this.ctx = this.canvas.getContext("2d");
		new Sketch().init(this.ctx);
		this.resize();
		this.window.addEventListener(lib_Global.RESIZE,$bind(this,this.resize),false);
		return this.ctx;
	}
	,createGLCanvas: function(canvas_name) {
		return null;
	}
	,resize: function() {
		var c = this.document.getElementsByTagName("canvas");
		lib_Global.w = this.window.innerWidth;
		lib_Global.h = this.window.innerHeight;
		var _g1 = 0;
		var _g = c.length;
		while(_g1 < _g) {
			var i = _g1++;
			var _c = c[i];
			_c.width = lib_Global.w;
			_c.height = lib_Global.h;
		}
		window.console.log("resize: " + lib_Global.w + ":" + lib_Global.h);
	}
	,createHiddenCanvas: function(canvas_name) {
		var ctx = this.createCanvas(canvas_name);
		this.canvas.style.left = -lib_Global.w + "px";
		return ctx;
	}
	,init: function(ctx) {
		var _gthis = this;
		this.window.addEventListener(lib_Global.MOUSE_MOVE,function(e) {
			lib_Global.mouseX = e.clientX;
			lib_Global.mouseY = e.clientY;
			lib_Global.mouseMoved = true;
		});
		this.window.addEventListener(lib_Global.MOUSE_DOWN,function(e1) {
			lib_Global.mouseDown = true;
		});
		this.window.addEventListener(lib_Global.MOUSE_UP,function(e2) {
			lib_Global.mouseDown = false;
		});
		this.window.addEventListener(lib_Global.KEY_DOWN,function(e3) {
			if(e3.metaKey == true && e3.key == "r") {
				console.log("cmd + r");
				window.location.reload();
			}
			if(e3.metaKey == true && e3.key == "s" && e3.shiftKey == false) {
				e3.preventDefault();
				e3.stopPropagation();
				console.log("cmd + s");
				lib_util_ExportUtil.downloadImage(ctx,true);
			}
			if(e3.metaKey == true && e3.key == "s" && e3.shiftKey == true) {
				e3.preventDefault();
				e3.stopPropagation();
				console.log("cmd + shift + s");
				lib_util_ExportUtil.downloadImage(ctx,false);
			}
			if(e3.metaKey == true && (e3.code == "KeyS" && e3.altKey == true)) {
				e3.preventDefault();
				e3.stopPropagation();
				console.log("cmd + alt + s");
				lib_util_ExportUtil.onBase64Handler(ctx,true);
			}
			if(e3.metaKey == true && e3.key == "f") {
				if(!lib_Global.isFullscreen) {
					_gthis.openFullscreen();
					lib_Global.isFullscreen = true;
				} else {
					_gthis.closeFullscreen();
					lib_Global.isFullscreen = false;
				}
			}
		},false);
	}
	,openFullscreen: function() {
		var elem = this.document.documentElement;
		if($bind(elem,elem.requestFullscreen) != null) {
			elem.requestFullscreen();
		} else if(elem.mozRequestFullScreen) {
			elem.mozRequestFullScreen();
		} else if(elem.webkitRequestFullscreen) {
			elem.webkitRequestFullscreen();
		} else if(elem.msRequestFullscreen) {
			elem.msRequestFullscreen();
		}
	}
	,closeFullscreen: function() {
		if(($_=this.document,$bind($_,$_.exitFullscreen)) != null) {
			this.document.exitFullscreen();
		} else if(this.document.mozCancelFullScreen) {
			this.document.mozCancelFullScreen();
		} else if(this.document.webkitExitFullscreen) {
			this.document.webkitExitFullscreen();
		} else if(this.document.msExitFullscreen) {
			this.document.msExitFullscreen();
		}
	}
	,__class__: Sketch
};
var SketchOption = function() {
	this._type = "canvas";
	this._container = window.document.body;
	this._autopause = true;
	this._autostart = true;
	this._autoclear = true;
	this._fullscreen = true;
};
SketchOption.__name__ = ["SketchOption"];
SketchOption.prototype = {
	get_fullscreen: function() {
		return this._fullscreen;
	}
	,set_fullscreen: function(value) {
		return this._fullscreen = value;
	}
	,get_autoclear: function() {
		return this._autoclear;
	}
	,set_autoclear: function(value) {
		return this._autostart = value;
	}
	,get_autostart: function() {
		return this._autostart;
	}
	,set_autostart: function(value) {
		return this._autostart = value;
	}
	,get_autopause: function() {
		return this._autopause;
	}
	,set_autopause: function(value) {
		return this._autopause = value;
	}
	,get_container: function() {
		return this._container;
	}
	,set_container: function(value) {
		return this._container = value;
	}
	,get_type: function() {
		return this._type;
	}
	,set_type: function(value) {
		return this._type = value;
	}
	,__class__: SketchOption
	,__properties__: {set_type:"set_type",get_type:"get_type",set_container:"set_container",get_container:"get_container",set_autopause:"set_autopause",get_autopause:"get_autopause",set_autostart:"set_autostart",get_autostart:"get_autostart",set_autoclear:"set_autoclear",get_autoclear:"get_autoclear",set_fullscreen:"set_fullscreen",get_fullscreen:"get_fullscreen"}
};
var Std = function() { };
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringBuf = function() {
	this.b = "";
};
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
StringTools.__name__ = ["StringTools"];
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s = c + s;
	return s;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var ValueType = { __ename__ : true, __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
var Type = function() { };
Type.__name__ = ["Type"];
Type.getEnum = function(o) {
	if(o == null) {
		return null;
	}
	return o.__enum__;
};
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum(e);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
var Xml = function(nodeType) {
	this.nodeType = nodeType;
	this.children = [];
	this.attributeMap = new haxe_ds_StringMap();
};
Xml.__name__ = ["Xml"];
Xml.parse = function(str) {
	return haxe_xml_Parser.parse(str);
};
Xml.createElement = function(name) {
	var xml = new Xml(Xml.Element);
	if(xml.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + xml.nodeType);
	}
	xml.nodeName = name;
	return xml;
};
Xml.createPCData = function(data) {
	var xml = new Xml(Xml.PCData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createCData = function(data) {
	var xml = new Xml(Xml.CData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createComment = function(data) {
	var xml = new Xml(Xml.Comment);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocType = function(data) {
	var xml = new Xml(Xml.DocType);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createProcessingInstruction = function(data) {
	var xml = new Xml(Xml.ProcessingInstruction);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocument = function() {
	return new Xml(Xml.Document);
};
Xml.prototype = {
	set: function(att,value) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			_this.setReserved(att,value);
		} else {
			_this.h[att] = value;
		}
	}
	,exists: function(att) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			return _this.existsReserved(att);
		} else {
			return _this.h.hasOwnProperty(att);
		}
	}
	,addChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		if(x.parent != null) {
			x.parent.removeChild(x);
		}
		this.children.push(x);
		x.parent = this;
	}
	,removeChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		if(HxOverrides.remove(this.children,x)) {
			x.parent = null;
			return true;
		}
		return false;
	}
	,__class__: Xml
};
var art_CCBase = function(ctx) {
	this._description = "";
	this._title = "";
	this.isDebug = false;
	this.isDrawActive = true;
	this.ctx = ctx;
	window.addEventListener(lib_Global.RESIZE,$bind(this,this._reset),false);
	window.addEventListener(lib_Global.KEY_DOWN,$bind(this,this._keyDown),false);
	window.addEventListener(lib_Global.KEY_UP,$bind(this,this._keyUp),false);
	this.setup();
	this._draw();
};
art_CCBase.__name__ = ["art","CCBase"];
art_CCBase.prototype = {
	_keyDown: function(e) {
	}
	,_keyUp: function(e) {
	}
	,_reset: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		this.setup();
	}
	,_draw: function(timestamp) {
		this.draw();
		if(this.isDrawActive) {
			window.requestAnimationFrame($bind(this,this._draw));
		}
	}
	,init: function() {
	}
	,setup: function() {
	}
	,draw: function() {
		console.log("" + this.toString() + " :: override public function draw()");
	}
	,pause: function() {
		this.isDrawActive = !this.isDrawActive;
	}
	,stop: function() {
		this.isDrawActive = false;
	}
	,play: function() {
		this.isDrawActive = true;
	}
	,get_description: function() {
		return this._description;
	}
	,set_description: function(value) {
		return this._description = value;
	}
	,get_title: function() {
		if(this._title == "") {
			this._title = this.toString();
		}
		return this._title;
	}
	,set_title: function(value) {
		return this._title = value;
	}
	,toString: function() {
		var className = Type.getClassName(js_Boot.getClass(this));
		return className;
	}
	,__class__: art_CCBase
	,__properties__: {set_description:"set_description",get_description:"get_description",set_title:"set_title",get_title:"get_title"}
};
var art_ICCBase = function() { };
art_ICCBase.__name__ = ["art","ICCBase"];
art_ICCBase.prototype = {
	__class__: art_ICCBase
};
var art_CC000 = function(ctx) {
	this.size = 10;
	this.rotate = 0;
	this.ypos = 10;
	this.xpos = 10;
	art_CCBase.call(this,ctx);
};
art_CC000.__name__ = ["art","CC000"];
art_CC000.__interfaces__ = [art_ICCBase];
art_CC000.__super__ = art_CCBase;
art_CC000.prototype = $extend(art_CCBase.prototype,{
	draw: function() {
		console.log("draw: " + this.toString());
		this.rotate++;
		this.size++;
		this.ctx.save();
		this.ctx.translate(lib_Global.w / 2,lib_Global.h / 2);
		this.ctx.rotate(this.rotate);
		lib_CanvasTools.centreStrokeRect(this.ctx,0,0,this.size);
		this.ctx.restore();
		if(this.size >= 1000) {
			this.pause();
		}
	}
	,__class__: art_CC000
});
var art_CC001 = function(ctx) {
	art_CCBase.call(this,ctx);
};
art_CC001.__name__ = ["art","CC001"];
art_CC001.__interfaces__ = [art_ICCBase];
art_CC001.__super__ = art_CCBase;
art_CC001.prototype = $extend(art_CCBase.prototype,{
	draw: function() {
		console.log("draw: " + this.toString());
		lib_CanvasTools.background(this.ctx,0,0,0);
		lib_CanvasTools.fillColour(this.ctx,255,255,255);
		lib_CanvasTools.fillCircle(this.ctx,lib_Global.w / 2,lib_Global.h / 2,100);
		this.pause();
	}
	,__class__: art_CC001
});
var art_CC002 = function(ctx) {
	art_CCBase.call(this,ctx);
};
art_CC002.__name__ = ["art","CC002"];
art_CC002.__interfaces__ = [art_ICCBase];
art_CC002.__super__ = art_CCBase;
art_CC002.prototype = $extend(art_CCBase.prototype,{
	draw: function() {
		console.log("draw: " + this.toString());
		lib_CanvasTools.fillColour(this.ctx,lib_util_ColorUtil.LIME.r,lib_util_ColorUtil.LIME.g,lib_util_ColorUtil.LIME.b);
		lib_CanvasTools.fillEllipse(this.ctx,lib_Global.w / 2,lib_Global.h / 2,100,200);
		this.pause();
	}
	,__class__: art_CC002
});
var art_CC003 = function(ctx) {
	this.ballArray = [];
	this.sizeBall = 20;
	this.maxBalls = 10;
	art_CCBase.call(this,ctx);
};
art_CC003.__name__ = ["art","CC003"];
art_CC003.__interfaces__ = [art_ICCBase];
art_CC003.__super__ = art_CCBase;
art_CC003.prototype = $extend(art_CCBase.prototype,{
	setup: function() {
		console.log("setup: " + this.toString());
		lib_CanvasTools.background(this.ctx,255,255,255,0.2);
		var _g1 = 0;
		var _g = this.maxBalls;
		while(_g1 < _g) {
			var i = _g1++;
			this.ballArray.push(this.createBall());
		}
	}
	,draw: function() {
		this.moveBall();
		this.drawBall();
	}
	,createBall: function() {
		var ball = { x : lib_util_MathUtil.random(this.sizeBall / 2,lib_Global.w - this.sizeBall / 2), y : lib_util_MathUtil.random(this.sizeBall / 2,lib_Global.h - this.sizeBall / 2), speed_x : lib_util_MathUtil.random(-5,5), speed_y : lib_util_MathUtil.random(-5,5), size : this.sizeBall, colour : lib_util_ColorUtil.rgb(lib_util_MathUtil.randomInt(55),lib_util_MathUtil.randomInt(255),0)};
		return ball;
	}
	,moveBall: function() {
		var _g1 = 0;
		var _g = this.ballArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var b = this.ballArray[i];
			b.x += b.speed_x;
			b.y += b.speed_y;
			if(lib_util_AnimateUtil.bounce(b.x,0,lib_Global.w,b.size)) {
				b.speed_x *= -1;
				b.colour = lib_util_ColorUtil.rgb(lib_util_MathUtil.randomInt(55),lib_util_MathUtil.randomInt(255),0);
			}
			if(lib_util_AnimateUtil.bounce(b.y,0,lib_Global.h,b.size)) {
				b.speed_y *= -1;
				b.colour = lib_util_ColorUtil.rgb(0,lib_util_MathUtil.randomInt(255),lib_util_MathUtil.randomInt(55));
			}
		}
	}
	,drawBall: function() {
		var _g1 = 0;
		var _g = this.ballArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var b = this.ballArray[i];
			this.ctx.fillStyle = b.colour;
			lib_CanvasTools.fillCircle(this.ctx,b.x,b.y,b.size);
		}
	}
	,__class__: art_CC003
});
var art_CC004 = function(ctx) {
	this.ballArray = [];
	this.sizeBall = 3;
	this.maxBalls = 200;
	this.maxDistance = 100;
	art_CCBase.call(this,ctx);
};
art_CC004.__name__ = ["art","CC004"];
art_CC004.__interfaces__ = [art_ICCBase];
art_CC004.__super__ = art_CCBase;
art_CC004.prototype = $extend(art_CCBase.prototype,{
	setup: function() {
		console.log("" + this.toString() + " :: setup()");
		this.ballArray = [];
		var _g1 = 0;
		var _g = this.maxBalls;
		while(_g1 < _g) {
			var i = _g1++;
			this.ballArray.push(this.createBall());
		}
	}
	,draw: function() {
		this.moveBall();
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.background(this.ctx,0,0,0);
		this.drawBall();
	}
	,createBall: function() {
		var ball = { x : lib_util_MathUtil.random(this.sizeBall / 2,lib_Global.w - this.sizeBall / 2), y : lib_util_MathUtil.random(this.sizeBall / 2,lib_Global.h - this.sizeBall / 2), speed_x : lib_util_MathUtil.random(-0.5,0.5), speed_y : lib_util_MathUtil.random(-0.5,0.5), size : this.sizeBall, colour : lib_util_ColorUtil.rgb(255,255,255)};
		return ball;
	}
	,moveBall: function() {
		var _g1 = 0;
		var _g = this.ballArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var b = this.ballArray[i];
			b.x += b.speed_x;
			b.y += b.speed_y;
			if(lib_util_AnimateUtil.bounce(b.x,0,lib_Global.w,b.size)) {
				b.speed_x *= -1;
			}
			if(lib_util_AnimateUtil.bounce(b.y,0,lib_Global.h,b.size)) {
				b.speed_y *= -1;
			}
		}
	}
	,drawBall: function() {
		var _g1 = 0;
		var _g = this.ballArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var b1 = this.ballArray[i];
			this.ctx.fillStyle = b1.colour;
			lib_CanvasTools.fillCircle(this.ctx,b1.x,b1.y,b1.size);
			var _g3 = 0;
			var _g2 = this.ballArray.length;
			while(_g3 < _g2) {
				var j = _g3++;
				var b2 = this.ballArray[j];
				if(b1 == b2) {
					continue;
				}
				var _dist = lib_util_MathUtil.distance(b1.x,b1.y,b2.x,b2.y);
				if(_dist < this.maxDistance) {
					var alpha = 0.8 - _dist / this.maxDistance;
					lib_CanvasTools.lineColour(this.ctx,lib_util_ColorUtil.WHITE.r,lib_util_ColorUtil.WHITE.g,lib_util_ColorUtil.WHITE.b,alpha);
					lib_CanvasTools.line(this.ctx,b1.x,b1.y,b2.x,b2.y);
				}
			}
		}
	}
	,__class__: art_CC004
});
var art_CC005 = function(ctx) {
	art_CCBase.call(this,ctx);
};
art_CC005.__name__ = ["art","CC005"];
art_CC005.__interfaces__ = [art_ICCBase];
art_CC005.__super__ = art_CCBase;
art_CC005.prototype = $extend(art_CCBase.prototype,{
	setup: function() {
		console.log("setup: " + this.toString());
		var padding = 100;
		var arr = lib_util_GridUtil.create(padding,padding,lib_Global.w - 2 * padding,lib_Global.h - 2 * padding,3,4);
		var _g1 = 0;
		var _g = arr.length;
		while(_g1 < _g) {
			var i = _g1++;
			var point = arr[i];
			lib_util_ShapeUtil.registerPoint(this.ctx,point.x,point.y);
		}
		var _size = 50;
		var _width = _size;
		var _height = 25;
		lib_CanvasTools.colour(this.ctx,lib_util_ColorUtil.NAVY.r,lib_util_ColorUtil.NAVY.g,lib_util_ColorUtil.NAVY.b,0.5);
		var point1 = arr[0];
		lib_CanvasTools.centreFillRect(this.ctx,point1.x,point1.y,_size,_size);
		var point2 = arr[1];
		lib_CanvasTools.circle(this.ctx,point2.x,point2.y,_size);
		var point3 = arr[2];
		lib_CanvasTools.fillEllipse(this.ctx,point3.x,point3.y,_width,_height);
		var point4 = arr[3];
		lib_CanvasTools.lineColour(this.ctx,lib_util_ColorUtil.NAVY.r,lib_util_ColorUtil.NAVY.g,lib_util_ColorUtil.NAVY.b,0.5);
		lib_CanvasTools.line(this.ctx,point4.x,point4.y,point4.x + _width,point4.y + _height);
		var point5 = arr[4];
		lib_CanvasTools.fillTriangle(this.ctx,point5.x,point5.y - _height,point5.x - _width,point5.y - _height,point5.x + _width,point5.y + _height);
		var point6 = arr[5];
		lib_CanvasTools.fillPolygon(this.ctx,point6.x,point6.y,8,_size);
		var point7 = arr[6];
		lib_CanvasTools.fillPolygon(this.ctx,point7.x,point7.y,3,_size);
		var point8 = arr[7];
		lib_CanvasTools.eqDownFillTriangle(this.ctx,point8.x,point8.y,_size);
		var point9 = arr[8];
		lib_CanvasTools.eqDownTriangle(this.ctx,point9.x,point9.y,_size);
		var point10 = arr[9];
		lib_CanvasTools.roundRect(this.ctx,point10.x,point10.y,100,100,10);
		lib_util_FontUtil.fillText(this.ctx,"Matthijs Kamstra aka [mck]",padding / 2,padding / 2,"Unica+One");
		lib_util_FontUtil.fillText(this.ctx,"Matthijs Kamstra aka [mck]",padding / 2,padding * 2,"Nova+Mono");
	}
	,draw: function() {
		this.stop();
	}
	,__class__: art_CC005
});
var art_CC006 = function(ctx) {
	var _gthis = this;
	art_CCBase.call(this,ctx);
	window.addEventListener(lib_Global.KEY_DOWN,function(e) {
		if(e.key == " ") {
			console.log("redraw");
			_gthis.setup();
		}
	},false);
};
art_CC006.__name__ = ["art","CC006"];
art_CC006.__interfaces__ = [art_ICCBase];
art_CC006.__super__ = art_CCBase;
art_CC006.prototype = $extend(art_CCBase.prototype,{
	setup: function() {
		console.log("setup: " + this.toString());
		var _size = 50;
		var _x = 0;
		var _y = 0;
		var _numHor = Math.ceil(lib_Global.w / _size);
		var _numVer = Math.ceil(lib_Global.h / _size);
		var arr = lib_util_GridUtil.create(_x,_y,lib_Global.w - 2 * _x,lib_Global.h - 2 * _y,_numHor,_numVer);
		if(this.isDebug) {
			lib_util_ShapeUtil.gridRegister(this.ctx,arr);
		}
		var _g1 = 0;
		var _g = arr.length;
		while(_g1 < _g) {
			var i = _g1++;
			var p = arr[i];
			var c = lib_util_ColorUtil.randomColour();
			this.ctx.fillStyle = c;
			lib_CanvasTools.strokeWeight(this.ctx,0);
			lib_CanvasTools.centreFillRect(this.ctx,p.x,p.y,_size,_size);
		}
	}
	,draw: function() {
		console.log("draw: " + this.toString());
		this.stop();
	}
	,__class__: art_CC006
});
var art_CC007 = function(ctx) {
	this.ballArray = [];
	this.sizeBall = 10;
	this.maxBalls = 100;
	this.maxDistance = 100;
	art_CCBase.call(this,ctx);
};
art_CC007.__name__ = ["art","CC007"];
art_CC007.__interfaces__ = [art_ICCBase];
art_CC007.__super__ = art_CCBase;
art_CC007.prototype = $extend(art_CCBase.prototype,{
	testTimer: function() {
		this.startTime = new Date().getTime() / 1000;
		this.startDate = new Date().getTime();
		this.onCompleteHandler(null);
		var GoJs = new lets_GoJs({ },1);
		var _this = GoJs;
		_this._options.onComplete = $bind(this,this.onCompleteHandler);
		_this._options.onCompleteParams = [1];
		var GoJs1 = new lets_GoJs({ },2);
		var _this1 = GoJs1;
		_this1._options.onComplete = $bind(this,this.onCompleteHandler);
		_this1._options.onCompleteParams = [2];
		var GoJs2 = new lets_GoJs({ },5);
		var _this2 = GoJs2;
		_this2._options.onComplete = $bind(this,this.onCompleteHandler);
		_this2._options.onCompleteParams = [5];
		var GoJs3 = new lets_GoJs({ },1.5);
		var _this3 = GoJs3;
		_this3._options.onComplete = $bind(this,this.onCompleteHandler);
		_this3._options.onCompleteParams = [1.5];
		var GoJs4 = new lets_GoJs({ },2);
		var _this4 = GoJs4;
		_this4._options.onComplete = $bind(this,this.onCompleteHandler);
		_this4._options.onCompleteParams = [2];
		var GoJs5 = new lets_GoJs({ },4);
		var _this5 = GoJs5;
		_this5._options.onComplete = $bind(this,this.onCompleteHandler);
		_this5._options.onCompleteParams = [4];
		var GoJs6 = new lets_GoJs({ },8);
		var _this6 = GoJs6;
		_this6._options.onComplete = $bind(this,this.onCompleteHandler);
		_this6._options.onCompleteParams = [8];
	}
	,onCompleteHandler: function(value) {
		var totalTime = new Date().getTime() / 1000 - this.startTime;
		var totalDate = (new Date().getTime() - this.startDate) / 1000;
		console.log("done: " + value + " seconds - date: " + totalDate + " , time: " + totalTime);
	}
	,setup: function() {
		console.log("setup: " + this.toString());
		this.ballArray = [];
		var _g1 = 0;
		var _g = this.maxBalls;
		while(_g1 < _g) {
			var i = _g1++;
			var ball = this.createBall();
			this.ballArray.push(ball);
			this.ballAnimate(ball);
		}
	}
	,ballAnimate: function(ball) {
		var GoJs = new lets_GoJs(ball,lib_util_MathUtil.random(1,10));
		GoJs._isFrom = false;
		var _this = GoJs;
		var value = lib_util_MathUtil.random(0,lib_Global.w);
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"x")) {
			objValue = Reflect.getProperty(_this._target,"x");
		}
		var _range = { key : "x", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("x",_range);
		var _this1 = _this;
		var value1 = lib_util_MathUtil.random(0,lib_Global.h);
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"y")) {
			objValue1 = Reflect.getProperty(_this1._target,"y");
		}
		var _range1 = { key : "y", from : _this1._isFrom ? value1 : objValue1, to : !_this1._isFrom ? value1 : objValue1};
		_this1._props.set("y",_range1);
		var _this2 = _this1;
		_this2._options.onComplete = $bind(this,this.ballAnimate);
		_this2._options.onCompleteParams = [ball];
		var _this3 = _this2;
		_this3._easing = lets_easing_Sine.get_easeInOut();
	}
	,createBall: function() {
		var ball = { x : lib_util_MathUtil.random(this.sizeBall / 2,lib_Global.w - this.sizeBall / 2), y : lib_util_MathUtil.random(this.sizeBall / 2,lib_Global.h - this.sizeBall / 2), size : lib_util_MathUtil.random(this.sizeBall,this.sizeBall * 4), color : lib_util_ColorUtil.randomColour()};
		return ball;
	}
	,drawBall: function() {
		var _g1 = 0;
		var _g = this.ballArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var b1 = this.ballArray[i];
			this.ctx.fillStyle = b1.color;
			lib_CanvasTools.fillCircle(this.ctx,b1.x,b1.y,b1.size);
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.background(this.ctx,lib_util_ColorUtil.WHITE.r,lib_util_ColorUtil.WHITE.g,lib_util_ColorUtil.WHITE.b);
		this.drawBall();
	}
	,__class__: art_CC007
});
var art_CC008 = function(ctx) {
	this.shapeArray = [];
	this.shapeSize = 15;
	this.shapeMax = 10;
	art_CCBase.call(this,ctx);
	this.set_description("lets.Go tests with rotation, delay, easing");
	lib_util_HelperUtil.stats();
};
art_CC008.__name__ = ["art","CC008"];
art_CC008.__interfaces__ = [art_ICCBase];
art_CC008.__super__ = art_CCBase;
art_CC008.prototype = $extend(art_CCBase.prototype,{
	createShape: function(y) {
		var shape = { x : 100, y : this.shapeSize * 5 + this.shapeSize * 5 * y, width : Math.round(lib_util_MathUtil.random(this.shapeSize,this.shapeSize * 4)), height : Math.round(lib_util_MathUtil.random(this.shapeSize,this.shapeSize * 4)), rotation : 0, color : lib_util_ColorUtil.randomColour()};
		return shape;
	}
	,drawShape: function() {
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			this.ctx.fillStyle = sh.color;
			this.ctx.save();
			this.ctx.translate(sh.x,sh.y);
			this.ctx.rotate(lib_util_MathUtil.radians(sh.rotation));
			lib_CanvasTools.centreFillRect(this.ctx,0,0,sh.width,sh.height);
			this.ctx.restore();
		}
	}
	,setup: function() {
		console.log("setup: " + this.toString());
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.shapeMax;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.createShape(i);
			this.shapeArray.push(sh);
		}
		var _shape = this.shapeArray[0];
		var GoJs = new lets_GoJs(_shape,2);
		GoJs._isFrom = false;
		var _this = GoJs;
		var value = _shape.x + (lib_Global.w - _shape.x * 2);
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"x")) {
			objValue = Reflect.getProperty(_this._target,"x");
		}
		var _range = { key : "x", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("x",_range);
		var _shape1 = this.shapeArray[1];
		var GoJs1 = new lets_GoJs(_shape1,2);
		GoJs1._isFrom = false;
		var _this1 = GoJs1;
		var value1 = _shape1.x + (lib_Global.w - _shape1.x * 2);
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"x")) {
			objValue1 = Reflect.getProperty(_this1._target,"x");
		}
		var _range1 = { key : "x", from : _this1._isFrom ? value1 : objValue1, to : !_this1._isFrom ? value1 : objValue1};
		_this1._props.set("x",_range1);
		var _this2 = _this1;
		_this2._isYoyo = true;
		var _shape2 = this.shapeArray[2];
		var GoJs2 = new lets_GoJs(_shape2,2);
		GoJs2._isFrom = true;
		GoJs2.updateProperties(0);
		var _this3 = GoJs2;
		var value2 = _shape2.x + (lib_Global.w - _shape2.x * 2);
		var objValue2 = 0;
		if(Object.prototype.hasOwnProperty.call(_this3._target,"x")) {
			objValue2 = Reflect.getProperty(_this3._target,"x");
		}
		var _range2 = { key : "x", from : _this3._isFrom ? value2 : objValue2, to : !_this3._isFrom ? value2 : objValue2};
		_this3._props.set("x",_range2);
		var _this4 = _this3;
		_this4._isYoyo = true;
		var _shape3 = this.shapeArray[3];
		var GoJs3 = new lets_GoJs(_shape3,2);
		GoJs3._isFrom = false;
		var _this5 = GoJs3;
		var value3 = _shape3.x + (lib_Global.w - _shape3.x * 2);
		var objValue3 = 0;
		if(Object.prototype.hasOwnProperty.call(_this5._target,"x")) {
			objValue3 = Reflect.getProperty(_this5._target,"x");
		}
		var _range3 = { key : "x", from : _this5._isFrom ? value3 : objValue3, to : !_this5._isFrom ? value3 : objValue3};
		_this5._props.set("x",_range3);
		var _this6 = _this5;
		var value4 = _shape3.y + 100;
		var objValue4 = 0;
		if(Object.prototype.hasOwnProperty.call(_this6._target,"y")) {
			objValue4 = Reflect.getProperty(_this6._target,"y");
		}
		var _range4 = { key : "y", from : _this6._isFrom ? value4 : objValue4, to : !_this6._isFrom ? value4 : objValue4};
		_this6._props.set("y",_range4);
		var _this7 = _this6;
		_this7._isYoyo = true;
		var _shape4 = this.shapeArray[4];
		var GoJs4 = new lets_GoJs(_shape4,2);
		GoJs4._isFrom = false;
		var _this8 = GoJs4;
		var value5 = _shape4.x + (lib_Global.w - _shape4.x * 2);
		var objValue5 = 0;
		if(Object.prototype.hasOwnProperty.call(_this8._target,"x")) {
			objValue5 = Reflect.getProperty(_this8._target,"x");
		}
		var _range5 = { key : "x", from : _this8._isFrom ? value5 : objValue5, to : !_this8._isFrom ? value5 : objValue5};
		_this8._props.set("x",_range5);
		var _this9 = _this8;
		var objValue6 = 0;
		if(Object.prototype.hasOwnProperty.call(_this9._target,"rotation")) {
			objValue6 = Reflect.getProperty(_this9._target,"rotation");
		}
		var _range6 = { key : "rotation", from : _this9._isFrom ? 180 : objValue6, to : !_this9._isFrom ? 180 : objValue6};
		_this9._props.set("rotation",_range6);
		var _this10 = _this9;
		_this10._isYoyo = true;
		var _this11 = _this10;
		_this11._options.onUpdate = $bind(this,this.onUpdateHandler);
		_this11._options.onUpdateParams = [4];
		var _shape5 = this.shapeArray[5];
		var GoJs5 = new lets_GoJs(_shape5,2);
		GoJs5._isFrom = false;
		var _this12 = GoJs5;
		var value6 = _shape5.x + (lib_Global.w - _shape5.x * 2);
		var objValue7 = 0;
		if(Object.prototype.hasOwnProperty.call(_this12._target,"x")) {
			objValue7 = Reflect.getProperty(_this12._target,"x");
		}
		var _range7 = { key : "x", from : _this12._isFrom ? value6 : objValue7, to : !_this12._isFrom ? value6 : objValue7};
		_this12._props.set("x",_range7);
		var _this13 = _this12;
		var objValue8 = 0;
		if(Object.prototype.hasOwnProperty.call(_this13._target,"foobar")) {
			objValue8 = Reflect.getProperty(_this13._target,"foobar");
		}
		var _range8 = { key : "foobar", from : _this13._isFrom ? 180 : objValue8, to : !_this13._isFrom ? 180 : objValue8};
		_this13._props.set("foobar",_range8);
		var _this14 = _this13;
		_this14._options.onUpdate = $bind(this,this.onUpdateHandler);
		_this14._options.onUpdateParams = [5];
		var _this15 = _this14;
		_this15._options.onComplete = $bind(this,this.onCompleteHandler);
		_this15._options.onCompleteParams = [5];
		var _shape6 = this.shapeArray[6];
		var GoJs6 = new lets_GoJs(_shape6,2);
		GoJs6._isFrom = false;
		var _this16 = GoJs6;
		var value7 = _shape6.x + (lib_Global.w - _shape6.x * 2);
		var objValue9 = 0;
		if(Object.prototype.hasOwnProperty.call(_this16._target,"x")) {
			objValue9 = Reflect.getProperty(_this16._target,"x");
		}
		var _range9 = { key : "x", from : _this16._isFrom ? value7 : objValue9, to : !_this16._isFrom ? value7 : objValue9};
		_this16._props.set("x",_range9);
		var _this17 = _this16;
		_this17._delay = _this17.getDuration(.7);
		var _this18 = _this17;
		var objValue10 = 0;
		if(Object.prototype.hasOwnProperty.call(_this18._target,"rotation")) {
			objValue10 = Reflect.getProperty(_this18._target,"rotation");
		}
		var _range10 = { key : "rotation", from : _this18._isFrom ? 360 : objValue10, to : !_this18._isFrom ? 360 : objValue10};
		_this18._props.set("rotation",_range10);
		var _this19 = _this18;
		_this19._isYoyo = true;
		var _shape7 = this.shapeArray[7];
		var GoJs7 = new lets_GoJs(_shape7,2);
		GoJs7._isFrom = false;
		var _this20 = GoJs7;
		var value8 = _shape7.x + (lib_Global.w - _shape7.x * 2);
		var objValue11 = 0;
		if(Object.prototype.hasOwnProperty.call(_this20._target,"x")) {
			objValue11 = Reflect.getProperty(_this20._target,"x");
		}
		var _range11 = { key : "x", from : _this20._isFrom ? value8 : objValue11, to : !_this20._isFrom ? value8 : objValue11};
		_this20._props.set("x",_range11);
		var _this21 = _this20;
		var objValue12 = 0;
		if(Object.prototype.hasOwnProperty.call(_this21._target,"rotation")) {
			objValue12 = Reflect.getProperty(_this21._target,"rotation");
		}
		var _range12 = { key : "rotation", from : _this21._isFrom ? 360 : objValue12, to : !_this21._isFrom ? 360 : objValue12};
		_this21._props.set("rotation",_range12);
		var _this22 = _this21;
		_this22._isYoyo = true;
		var _this23 = _this22;
		_this23._easing = lets_easing_Sine.get_easeInOut();
	}
	,onUpdateHandler: function(value) {
		var _shape = this.shapeArray[value];
		switch(value) {
		case 4:
			console.log("onUpdateHandler - rotation: " + _shape.rotation);
			break;
		case 5:
			console.log("onUpdateHandler - foobar: " + _shape.foobar);
			break;
		default:
			console.log("case " + value + ": trace ('" + value + "');");
		}
	}
	,onCompleteHandler: function(value) {
		var _shape = this.shapeArray[value];
		switch(value) {
		case 4:
			console.log("onCompleteHandler - rotation: " + _shape.rotation);
			break;
		case 5:
			console.log("onCompleteHandler - foobar: " + _shape.foobar);
			break;
		default:
			console.log("case " + value + ": trace ('" + value + "');");
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.background(this.ctx,lib_util_ColorUtil.WHITE.r,lib_util_ColorUtil.WHITE.g,lib_util_ColorUtil.WHITE.b);
		this.drawShape();
	}
	,__class__: art_CC008
});
var art_CC009 = function(ctx) {
	this.shapeArray = [];
	this.shapeSize = 15;
	this.shapeMax = 1000;
	art_CCBase.call(this,ctx);
	this.set_description("Stars in the sky");
};
art_CC009.__name__ = ["art","CC009"];
art_CC009.__interfaces__ = [art_ICCBase];
art_CC009.__super__ = art_CCBase;
art_CC009.prototype = $extend(art_CCBase.prototype,{
	createShape: function() {
		var shape = { x : lib_Global.w / 2, y : lib_Global.h / 2, size : 1, alpha : 0, color : lib_util_ColorUtil.getColourObj(lib_util_ColorUtil.WHITE)};
		shape["r"] = lib_util_ColorUtil.WHITE.r;
		shape["g"] = lib_util_ColorUtil.WHITE.g;
		shape["b"] = lib_util_ColorUtil.WHITE.b;
		this.onCompleteHandler(shape);
		return shape;
	}
	,point: function() {
		var _x = lib_util_MathUtil.random(-lib_Global.w,lib_Global.w * 3);
		var _y = lib_util_MathUtil.random(-lib_Global.h,lib_Global.h * 3);
		if(_x > 0 && _x < lib_Global.w && _y > 0 && _y < lib_Global.h) {
			_x += lib_Global.w;
		}
		return { x : _x, y : _y};
	}
	,onCompleteHandler: function(shape) {
		shape.x = lib_Global.w / 2;
		shape.y = lib_Global.h / 2;
		shape.size = 1;
		shape.alpha = 0;
		var point = this.point();
		var time = lib_util_MathUtil.random(2);
		var GoJs = new lets_GoJs(shape,time);
		GoJs._isFrom = false;
		var _this = GoJs;
		var value = point.x;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"x")) {
			objValue = Reflect.getProperty(_this._target,"x");
		}
		var _range = { key : "x", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("x",_range);
		var _this1 = _this;
		var value1 = point.y;
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"y")) {
			objValue1 = Reflect.getProperty(_this1._target,"y");
		}
		var _range1 = { key : "y", from : _this1._isFrom ? value1 : objValue1, to : !_this1._isFrom ? value1 : objValue1};
		_this1._props.set("y",_range1);
		var _this2 = _this1;
		var objValue2 = 0;
		if(Object.prototype.hasOwnProperty.call(_this2._target,"alpha")) {
			objValue2 = Reflect.getProperty(_this2._target,"alpha");
		}
		var _range2 = { key : "alpha", from : _this2._isFrom ? 1 : objValue2, to : !_this2._isFrom ? 1 : objValue2};
		_this2._props.set("alpha",_range2);
		var _this3 = _this2;
		var value2 = lib_util_MathUtil.randomInt(10);
		var objValue3 = 0;
		if(Object.prototype.hasOwnProperty.call(_this3._target,"size")) {
			objValue3 = Reflect.getProperty(_this3._target,"size");
		}
		var _range3 = { key : "size", from : _this3._isFrom ? value2 : objValue3, to : !_this3._isFrom ? value2 : objValue3};
		_this3._props.set("size",_range3);
		var _this4 = _this3;
		_this4._easing = lets_easing_Sine.get_easeInOut();
		var _this5 = _this4;
		_this5._delay = _this5.getDuration(time);
		var _this6 = _this5;
		_this6._options.onComplete = $bind(this,this.onCompleteHandler);
		_this6._options.onCompleteParams = [shape];
	}
	,drawShape: function() {
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			this.ctx.fillStyle = lib_util_ColorUtil.getColour(sh.r,sh.g,sh.b,sh.alpha);
			lib_CanvasTools.circle(this.ctx,sh.x,sh.y,sh.size);
		}
	}
	,setup: function() {
		this.shapeArray = [];
		var _g1 = 0;
		var _g = this.shapeMax;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.createShape();
			this.shapeArray.push(sh);
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,lib_util_ColorUtil.BLACK);
		this.drawShape();
	}
	,__class__: art_CC009
});
var art_CC010 = function(ctx) {
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("Animating text");
	lib_util_FontUtil.embedGoogleFont("UnifrakturMaguntia",$bind(this,this.onEmbedHandler));
	lib_util_FontUtil.embedGoogleFont("Press+Start+2P",$bind(this,this.onEmbedHandler));
};
art_CC010.__name__ = ["art","CC010"];
art_CC010.__interfaces__ = [art_ICCBase];
art_CC010.__super__ = art_CCBase;
art_CC010.prototype = $extend(art_CCBase.prototype,{
	onEmbedHandler: function(e) {
		console.log("Embed: \"" + e + "\"");
	}
	,createText: function() {
		var shape = { x : lib_Global.w / 2, y : lib_Global.h / 2 + 20, alpha : 1, size : 60, type : "text"};
		shape["text"] = this.toString();
		shape["r"] = lib_util_ColorUtil.BLACK.r;
		shape["g"] = lib_util_ColorUtil.BLACK.g;
		shape["b"] = lib_util_ColorUtil.BLACK.b;
		var ypos1 = shape.y - 100;
		var ypos2 = shape.y + 100;
		var GoJs = new lets_GoJs(shape,1.0);
		GoJs._isFrom = true;
		GoJs.updateProperties(0);
		var _this = GoJs;
		var value = shape.x;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"x")) {
			objValue = Reflect.getProperty(_this._target,"x");
		}
		var _range = { key : "x", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("x",_range);
		var _this1 = _this;
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"y")) {
			objValue1 = Reflect.getProperty(_this1._target,"y");
		}
		var _range1 = { key : "y", from : _this1._isFrom ? ypos1 : objValue1, to : !_this1._isFrom ? ypos1 : objValue1};
		_this1._props.set("y",_range1);
		var _this2 = _this1;
		var objValue2 = 0;
		if(Object.prototype.hasOwnProperty.call(_this2._target,"alpha")) {
			objValue2 = Reflect.getProperty(_this2._target,"alpha");
		}
		var _range2 = { key : "alpha", from : _this2._isFrom ? 0 : objValue2, to : !_this2._isFrom ? 0 : objValue2};
		_this2._props.set("alpha",_range2);
		var _this3 = _this2;
		var objValue3 = 0;
		if(Object.prototype.hasOwnProperty.call(_this3._target,"size")) {
			objValue3 = Reflect.getProperty(_this3._target,"size");
		}
		var _range3 = { key : "size", from : _this3._isFrom ? 50 : objValue3, to : !_this3._isFrom ? 50 : objValue3};
		_this3._props.set("size",_range3);
		var _this4 = _this3;
		_this4._easing = lets_easing_Sine.get_easeOut();
		var _this5 = _this4;
		_this5._delay = _this5.getDuration(2);
		var GoJs1 = new lets_GoJs(shape,1.0);
		GoJs1._isFrom = false;
		var _this6 = GoJs1;
		var value1 = shape.x;
		var objValue4 = 0;
		if(Object.prototype.hasOwnProperty.call(_this6._target,"x")) {
			objValue4 = Reflect.getProperty(_this6._target,"x");
		}
		var _range4 = { key : "x", from : _this6._isFrom ? value1 : objValue4, to : !_this6._isFrom ? value1 : objValue4};
		_this6._props.set("x",_range4);
		var _this7 = _this6;
		var objValue5 = 0;
		if(Object.prototype.hasOwnProperty.call(_this7._target,"y")) {
			objValue5 = Reflect.getProperty(_this7._target,"y");
		}
		var _range5 = { key : "y", from : _this7._isFrom ? ypos2 : objValue5, to : !_this7._isFrom ? ypos2 : objValue5};
		_this7._props.set("y",_range5);
		var _this8 = _this7;
		var objValue6 = 0;
		if(Object.prototype.hasOwnProperty.call(_this8._target,"alpha")) {
			objValue6 = Reflect.getProperty(_this8._target,"alpha");
		}
		var _range6 = { key : "alpha", from : _this8._isFrom ? 0 : objValue6, to : !_this8._isFrom ? 0 : objValue6};
		_this8._props.set("alpha",_range6);
		var _this9 = _this8;
		var objValue7 = 0;
		if(Object.prototype.hasOwnProperty.call(_this9._target,"size")) {
			objValue7 = Reflect.getProperty(_this9._target,"size");
		}
		var _range7 = { key : "size", from : _this9._isFrom ? 50 : objValue7, to : !_this9._isFrom ? 50 : objValue7};
		_this9._props.set("size",_range7);
		var _this10 = _this9;
		_this10._easing = lets_easing_Sine.get_easeIn();
		var _this11 = _this10;
		_this11._delay = _this11.getDuration(5.5);
		return shape;
	}
	,createBall: function() {
		var shape = { x : lib_Global.w / 2, y : lib_Global.h / 2, size : 50, alpha : 1, color : lib_util_ColorUtil.getColourObj(lib_util_ColorUtil.FUCHSIA), type : "ball"};
		shape["r"] = lib_util_ColorUtil.FUCHSIA.r;
		shape["g"] = lib_util_ColorUtil.FUCHSIA.g;
		shape["b"] = lib_util_ColorUtil.FUCHSIA.b;
		shape["angle"] = 0;
		return shape;
	}
	,setup: function() {
		console.log("setup: " + this.toString());
		this.shapeArray = [];
		this.shapeArray.push(this.createBall());
		this.shapeArray.push(this.createText());
	}
	,drawShape: function() {
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			if(sh.type == "text") {
				this.ctx.fillStyle = lib_util_ColorUtil.getColour(sh.r,sh.g,sh.b,sh.alpha);
				lib_util_FontUtil.centerFillText(this.ctx,sh.text,sh.x,sh.y,"'UnifrakturMaguntia', cursive",Math.round(sh.size));
			}
			if(sh.type == "ball") {
				var radius = 50;
				var speed = 2;
				sh.angle += speed;
				sh.x = lib_Global.w / 2 + Math.cos(lib_util_MathUtil.radians(sh.angle)) * radius;
				sh.y = lib_Global.h / 2 + Math.sin(lib_util_MathUtil.radians(sh.angle)) * radius;
				this.ctx.fillStyle = lib_util_ColorUtil.getColour(sh.r,sh.g,sh.b,sh.alpha);
				lib_CanvasTools.circle(this.ctx,sh.x,sh.y,sh.size);
			}
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		this.drawShape();
	}
	,__class__: art_CC010
});
var art_CC011 = function(ctx) {
	this.divide = 4;
	this.radius1 = 350;
	this.radius0 = 150;
	this.shapeMax = Math.round(90.);
	this.shapeArray2 = [];
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("Equalizer with sound");
};
art_CC011.__name__ = ["art","CC011"];
art_CC011.__interfaces__ = [art_ICCBase];
art_CC011.__super__ = art_CCBase;
art_CC011.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i) {
		var angle = i * this.divide;
		var line = { _id : i, x1 : lib_Global.w / 2 + Math.cos(lib_util_MathUtil.radians(angle)) * this.radius0, y1 : lib_Global.h / 2 + Math.sin(lib_util_MathUtil.radians(angle)) * this.radius0, x2 : lib_Global.w / 2 + Math.cos(lib_util_MathUtil.radians(angle)) * this.radius1, y2 : lib_Global.h / 2 + Math.sin(lib_util_MathUtil.radians(angle)) * this.radius1, stroke : 10, radius : lib_util_MathUtil.random(this.radius0,this.radius1)};
		this.onCompleteHandler(line);
		return line;
	}
	,createX: function(i) {
		var obj = { _id : i, r : lib_util_ColorUtil.WHITE.r, g : lib_util_ColorUtil.WHITE.g, b : lib_util_ColorUtil.WHITE.b, a : 1, rotation : 0, x : lib_Global.w / 2, y : lib_Global.h / 2, size : 160, stroke : 80};
		this.onXHandler(obj);
		return obj;
	}
	,drawShape: function() {
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var line = this.shapeArray[i];
			var angle = i * this.divide;
			line.x2 = lib_Global.w / 2 + Math.cos(lib_util_MathUtil.radians(angle)) * line.radius;
			line.y2 = lib_Global.h / 2 + Math.sin(lib_util_MathUtil.radians(angle)) * line.radius;
			lib_CanvasTools.lineColour(this.ctx,lib_util_ColorUtil.WHITE.r,lib_util_ColorUtil.WHITE.g,lib_util_ColorUtil.WHITE.b,1);
			this.ctx.lineWidth = line.stroke;
			lib_CanvasTools.line(this.ctx,line.x1,line.y1,line.x2,line.y2);
		}
		var _g11 = 0;
		var _g2 = this.shapeArray2.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var shape = this.shapeArray2[i1];
			this.ctx.save();
			this.ctx.translate(shape.x,shape.y);
			this.ctx.rotate(lib_util_MathUtil.radians(shape.rotation));
			lib_CanvasTools.strokeColour(this.ctx,shape.r,shape.g,shape.b,shape.a);
			lib_util_ShapeUtil.xcross(this.ctx,0,0,shape.size,shape.stroke);
			this.ctx.restore();
		}
	}
	,onUpdateHandler: function(e) {
		console.log("update: " + e);
	}
	,onCompleteHandler: function(line) {
		var GoJs = new lets_GoJs(line,lib_util_MathUtil.random(0.5,1.5));
		GoJs._isFrom = false;
		var _this = GoJs;
		var value = lib_util_MathUtil.random(this.radius0,this.radius1);
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"radius")) {
			objValue = Reflect.getProperty(_this._target,"radius");
		}
		var _range = { key : "radius", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("radius",_range);
		var _this1 = _this;
		_this1._easing = lets_easing_Sine.get_easeInOut();
		var _this2 = _this1;
		_this2._options.onComplete = $bind(this,this.onCompleteHandler);
		_this2._options.onCompleteParams = [line];
	}
	,onXHandler: function(obj) {
		var GoJs = new lets_GoJs(obj,lib_util_MathUtil.random(0.5,1.5));
		GoJs._isFrom = false;
		var _this = GoJs;
		var value = lib_util_MathUtil.random(0,360);
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"rotation")) {
			objValue = Reflect.getProperty(_this._target,"rotation");
		}
		var _range = { key : "rotation", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("rotation",_range);
		var _this1 = _this;
		var value1 = lib_util_MathUtil.random(150,160);
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"size")) {
			objValue1 = Reflect.getProperty(_this1._target,"size");
		}
		var _range1 = { key : "size", from : _this1._isFrom ? value1 : objValue1, to : !_this1._isFrom ? value1 : objValue1};
		_this1._props.set("size",_range1);
		var _this2 = _this1;
		_this2._easing = lets_easing_Sine.get_easeInOut();
		var _this3 = _this2;
		_this3._options.onComplete = $bind(this,this.onXHandler);
		_this3._options.onCompleteParams = [obj];
		var _this4 = _this3;
		_this4._delay = _this4.getDuration(lib_util_MathUtil.random(0,0.5));
	}
	,setup: function() {
		console.log("setup: " + this.toString());
		var _g1 = 0;
		var _g = this.shapeMax;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
		this.shapeArray2.push(this.createX(0));
		this.draw();
	}
	,draw: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,lib_util_ColorUtil.BLACK);
		this.drawShape();
	}
	,__class__: art_CC011
});
var art_CC012 = function(ctx) {
	this.maxDistance = 100;
	this.divide = 4;
	this.radius1 = 50;
	this.radius0 = 350;
	this.shapeMax = Math.round(90.);
	this.shapeArray2 = [];
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("Weird Equalizer without sound but connected");
};
art_CC012.__name__ = ["art","CC012"];
art_CC012.__interfaces__ = [art_ICCBase];
art_CC012.__super__ = art_CCBase;
art_CC012.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i) {
		var angle = i * this.divide;
		var line = { _id : i, x1 : lib_Global.w / 2 + Math.cos(lib_util_MathUtil.radians(angle)) * this.radius0, y1 : lib_Global.h / 2 + Math.sin(lib_util_MathUtil.radians(angle)) * this.radius0, x2 : lib_Global.w / 2 + Math.cos(lib_util_MathUtil.radians(angle)) * this.radius1, y2 : lib_Global.h / 2 + Math.sin(lib_util_MathUtil.radians(angle)) * this.radius1, stroke : 1, radius : lib_util_MathUtil.random(this.radius0,this.radius1)};
		this.onCompleteHandler(line);
		return line;
	}
	,drawShape: function() {
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var line = this.shapeArray[i];
			var angle = i * this.divide;
			line.x2 = lib_Global.w / 2 + Math.cos(lib_util_MathUtil.radians(angle)) * line.radius;
			line.y2 = lib_Global.h / 2 + Math.sin(lib_util_MathUtil.radians(angle)) * line.radius;
			lib_CanvasTools.lineColour(this.ctx,lib_util_ColorUtil.WHITE.r,lib_util_ColorUtil.WHITE.g,lib_util_ColorUtil.WHITE.b,1);
			this.ctx.lineWidth = line.stroke;
			lib_CanvasTools.line(this.ctx,line.x1,line.y1,line.x2,line.y2);
			lib_CanvasTools.colour(this.ctx,lib_util_ColorUtil.WHITE.r,lib_util_ColorUtil.WHITE.g,lib_util_ColorUtil.WHITE.b,0.5);
			lib_CanvasTools.strokeCircle(this.ctx,line.x2,line.y2,3);
			var _g3 = 0;
			var _g2 = this.shapeArray.length;
			while(_g3 < _g2) {
				var j = _g3++;
				var b2 = this.shapeArray[j];
				if(line == b2) {
					continue;
				}
				var _dist = lib_util_MathUtil.distance(line.x2,line.y2,b2.x2,b2.y2);
				if(_dist < this.maxDistance) {
					var alpha = 0.8 - _dist / this.maxDistance;
					lib_CanvasTools.lineColour(this.ctx,lib_util_ColorUtil.WHITE.r,lib_util_ColorUtil.WHITE.g,lib_util_ColorUtil.WHITE.b,alpha);
					lib_CanvasTools.line(this.ctx,line.x2,line.y2,b2.x2,b2.y2);
				}
			}
		}
	}
	,onUpdateHandler: function(e) {
		console.log("update: " + e);
	}
	,onCompleteHandler: function(line) {
		var GoJs = new lets_GoJs(line,lib_util_MathUtil.random(2,4));
		GoJs._isFrom = false;
		var _this = GoJs;
		var value = lib_util_MathUtil.random(this.radius0,this.radius1);
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"radius")) {
			objValue = Reflect.getProperty(_this._target,"radius");
		}
		var _range = { key : "radius", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("radius",_range);
		var _this1 = _this;
		_this1._easing = lets_easing_Sine.get_easeInOut();
		var _this2 = _this1;
		_this2._options.onComplete = $bind(this,this.onCompleteHandler);
		_this2._options.onCompleteParams = [line];
	}
	,setup: function() {
		console.log("setup: " + this.toString());
		var _g1 = 0;
		var _g = this.shapeMax;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
		this.draw();
	}
	,draw: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,lib_util_ColorUtil.BLACK);
		this.drawShape();
	}
	,__class__: art_CC012
});
var art_CC013 = function(ctx) {
	this.colorArr = [];
	this.shapeArray = [];
	this.colorArr = lib_util_ColorUtil.niceColor200;
	this.set_description("Create simple pattern with colors");
	art_CCBase.call(this,ctx);
	this.loader = new mloader_JsonLoader("assets/1000.json");
	this.loader.loaded.add($bind(this,this.loaded));
	this.loader.load();
};
art_CC013.__name__ = ["art","CC013"];
art_CC013.__interfaces__ = [art_ICCBase];
art_CC013.__super__ = art_CCBase;
art_CC013.prototype = $extend(art_CCBase.prototype,{
	loaded: function(event) {
		var _g = event.type;
		switch(_g[1]) {
		case 3:
			this.colorArr = event.target.content;
			this.draw();
			break;
		case 4:
			var error = _g[2];
			console.log(error);
			break;
		default:
		}
	}
	,create: function() {
		var _size = 50;
		var _x = 0;
		var _y = 0;
		var _numHor = Math.round(lib_Global.w / _size) + 1;
		var _numVer = Math.round(lib_Global.h / _size) + 1;
		var grid = new lib_util_GridUtil();
		grid.setCellSize(_size);
		if(this.isDebug) {
			lib_util_ShapeUtil.gridRegister(this.ctx,grid.array);
			this.ctx.strokeRect(grid.x,grid.y,grid.width,grid.height);
		}
		var colorCounter = 0;
		var _g1 = 0;
		var _g = grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var p = grid.array[i];
			++colorCounter;
			if(colorCounter >= this.colorArr.length) {
				colorCounter = 0;
			}
			var colorArray = this.colorArr[colorCounter];
			var tmp = this.ctx;
			var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
			lib_CanvasTools.colourObj(tmp,{ r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255});
			this.ctx.fillRect(p.x,p.y,_size,_size);
			var tmp1 = this.ctx;
			var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
			lib_CanvasTools.colourObj(tmp1,{ r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255});
			lib_CanvasTools.fillCircle(this.ctx,p.x + _size / 2,p.y + _size / 2,_size / 2 * 0.8);
			var tmp2 = this.ctx;
			var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
			lib_CanvasTools.colourObj(tmp2,{ r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255});
			lib_CanvasTools.fillCircle(this.ctx,p.x + _size / 2,p.y + _size / 2,_size / 2 * 0.6);
			var tmp3 = this.ctx;
			var int3 = Std.parseInt(StringTools.replace(colorArray[3],"#","0x"));
			lib_CanvasTools.colourObj(tmp3,{ r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255});
			lib_CanvasTools.fillCircle(this.ctx,p.x + _size / 2,p.y + _size / 2,_size / 2 * 0.4);
			var tmp4 = this.ctx;
			var int4 = Std.parseInt(StringTools.replace(colorArray[4],"#","0x"));
			lib_CanvasTools.colourObj(tmp4,{ r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255});
			lib_CanvasTools.fillCircle(this.ctx,p.x + _size / 2,p.y + _size / 2,_size / 2 * 0.2);
		}
	}
	,draw: function() {
		console.log("draw: " + this.toString());
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,lib_util_ColorUtil.WHITE);
		this.create();
		this.stop();
	}
	,__class__: art_CC013
});
var art_CC014 = function(ctx) {
	this.shapeMax = 10;
	this.flipColorW = lib_util_ColorUtil.WHITE;
	this.flipColorB = lib_util_ColorUtil.BLACK;
	this.shapeArray = [];
	lib_util_FontUtil.embedGoogleFont("Six+Caps",$bind(this,this.onEmbedHandler));
	lib_util_FontUtil.embedGoogleFont("Barlow+Condensed",$bind(this,this.onEmbedHandler));
	art_CCBase.call(this,ctx);
	this.set_description("Blink black and white");
};
art_CC014.__name__ = ["art","CC014"];
art_CC014.__interfaces__ = [art_ICCBase];
art_CC014.__super__ = art_CCBase;
art_CC014.prototype = $extend(art_CCBase.prototype,{
	onEmbedHandler: function(e) {
		console.log("Embed: \"" + e + "\"");
		this.draw();
		this.onFlipColorHandler();
	}
	,onFlipColorHandler: function() {
		if(lib_util_MathUtil.posNeg() <= 0) {
			this.flipColorB = lib_util_ColorUtil.BLACK;
			this.flipColorW = lib_util_ColorUtil.WHITE;
		} else {
			this.flipColorB = lib_util_ColorUtil.WHITE;
			this.flipColorW = lib_util_ColorUtil.BLACK;
		}
		var duration = lib_util_MathUtil.random(0,.7);
		var GoJs = new lets_GoJs({ },duration);
		var _this = GoJs;
		_this._options.onComplete = $bind(this,this.onFlipColorHandler);
		_this._options.onCompleteParams = null;
	}
	,createShape: function(i) {
		var circle = { _id : "" + i, _type : "circle", x : lib_util_MathUtil.random(0,lib_Global.w), y : lib_util_MathUtil.random(0,lib_Global.h), size : lib_util_MathUtil.random(10,100)};
		circle["stroke"] = 20;
		this.onCircleHandler(circle);
		return circle;
	}
	,onCircleHandler: function(circle) {
		var r = Math.round(lib_util_MathUtil.random(1,20));
		var GoJs = new lets_GoJs(circle,lib_util_MathUtil.random(1,5));
		GoJs._isFrom = false;
		var _this = GoJs;
		var value = lib_util_MathUtil.random(0,lib_Global.w);
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"x")) {
			objValue = Reflect.getProperty(_this._target,"x");
		}
		var _range = { key : "x", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("x",_range);
		var _this1 = _this;
		var value1 = lib_util_MathUtil.random(0,lib_Global.h);
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"y")) {
			objValue1 = Reflect.getProperty(_this1._target,"y");
		}
		var _range1 = { key : "y", from : _this1._isFrom ? value1 : objValue1, to : !_this1._isFrom ? value1 : objValue1};
		_this1._props.set("y",_range1);
		var _this2 = _this1;
		var value2 = Math.round(lib_util_MathUtil.random(10,100));
		var objValue2 = 0;
		if(Object.prototype.hasOwnProperty.call(_this2._target,"size")) {
			objValue2 = Reflect.getProperty(_this2._target,"size");
		}
		var _range2 = { key : "size", from : _this2._isFrom ? value2 : objValue2, to : !_this2._isFrom ? value2 : objValue2};
		_this2._props.set("size",_range2);
		var _this3 = _this2;
		var objValue3 = 0;
		if(Object.prototype.hasOwnProperty.call(_this3._target,"stroke")) {
			objValue3 = Reflect.getProperty(_this3._target,"stroke");
		}
		var _range3 = { key : "stroke", from : _this3._isFrom ? r : objValue3, to : !_this3._isFrom ? r : objValue3};
		_this3._props.set("stroke",_range3);
		var _this4 = _this3;
		_this4._easing = lets_easing_Sine.get_easeInOut();
		var _this5 = _this4;
		_this5._options.onComplete = $bind(this,this.onCircleHandler);
		_this5._options.onCompleteParams = [circle];
		var _this6 = _this5;
		_this6._delay = _this6.getDuration(lib_util_MathUtil.random(0,2));
	}
	,drawShape: function() {
		this.ctx.fillStyle = lib_util_ColorUtil.getColourObj(this.flipColorW);
		lib_util_FontUtil.centerFillText(this.ctx,"[mck]",lib_Global.w / 2,lib_Global.h / 2 + 50,"'Barlow Condensed', sans-serif",300);
		this.ctx.globalCompositeOperation = "xor";
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			lib_CanvasTools.strokeColourObj(this.ctx,this.flipColorW);
			lib_CanvasTools.strokeWeight(this.ctx,sh.stroke);
			lib_CanvasTools.strokeCircle(this.ctx,sh.x,sh.y,sh.size / 2);
		}
	}
	,setup: function() {
		console.log("setup: " + this.toString());
		var _g1 = 0;
		var _g = this.shapeMax;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,this.flipColorB);
		this.drawShape();
	}
	,__class__: art_CC014
});
var art_CC015 = function(ctx) {
	this.color = lib_util_ColorUtil.niceColor100[0];
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("clock");
};
art_CC015.__name__ = ["art","CC015"];
art_CC015.__interfaces__ = [art_ICCBase];
art_CC015.__super__ = art_CCBase;
art_CC015.prototype = $extend(art_CCBase.prototype,{
	setup: function() {
	}
	,drawShape: function() {
		var time = new Date();
		var hours = time.getHours();
		var min = time.getMinutes();
		var sec = time.getSeconds();
		var min90 = -lib_util_MathUtil.radians(90);
		var lineW = 100;
		var minRadius = 3 * lineW;
		var _lineCap = "round";
		var centerX = lib_Global.w / 2;
		var centerY = lib_Global.h / 2;
		var _alpha = 0.1;
		if(this.isDebug) {
			console.log("" + hours + ":" + min + ":" + sec);
		}
		this.ctx.beginPath();
		var $int = Std.parseInt(StringTools.replace(this.color[0],"#","0x"));
		this.ctx.strokeStyle = lib_util_ColorUtil.getColourObj({ r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255});
		this.ctx.lineCap = _lineCap;
		this.ctx.lineWidth = lineW;
		this.ctx.arc(centerX,centerY,minRadius - 0 * lineW,min90,lib_util_MathUtil.radians(6. * sec) + min90);
		this.ctx.stroke();
		var int1 = Std.parseInt(StringTools.replace(this.color[0],"#","0x"));
		this.ctx.strokeStyle = lib_util_ColorUtil.getColourObj({ r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255},_alpha);
		lib_CanvasTools.strokeCircle(this.ctx,centerX,centerY,minRadius - 0 * lineW);
		this.ctx.beginPath();
		var int2 = Std.parseInt(StringTools.replace(this.color[1],"#","0x"));
		this.ctx.strokeStyle = lib_util_ColorUtil.getColourObj({ r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255});
		this.ctx.lineCap = _lineCap;
		this.ctx.lineWidth = lineW;
		this.ctx.arc(centerX,centerY,minRadius - lineW,min90,lib_util_MathUtil.radians(6. * min) + min90);
		this.ctx.stroke();
		var int3 = Std.parseInt(StringTools.replace(this.color[1],"#","0x"));
		this.ctx.strokeStyle = lib_util_ColorUtil.getColourObj({ r : int3 >> 16 & 255, g : int3 >> 8 & 255, b : int3 & 255},_alpha);
		lib_CanvasTools.strokeCircle(this.ctx,centerX,centerY,minRadius - lineW);
		this.ctx.beginPath();
		var int4 = Std.parseInt(StringTools.replace(this.color[2],"#","0x"));
		this.ctx.strokeStyle = lib_util_ColorUtil.getColourObj({ r : int4 >> 16 & 255, g : int4 >> 8 & 255, b : int4 & 255});
		this.ctx.lineCap = _lineCap;
		this.ctx.lineWidth = lineW;
		this.ctx.arc(centerX,centerY,minRadius - 2 * lineW,min90,lib_util_MathUtil.radians(15. * hours) + min90);
		this.ctx.stroke();
		var int5 = Std.parseInt(StringTools.replace(this.color[2],"#","0x"));
		this.ctx.strokeStyle = lib_util_ColorUtil.getColourObj({ r : int5 >> 16 & 255, g : int5 >> 8 & 255, b : int5 & 255},_alpha);
		lib_CanvasTools.strokeCircle(this.ctx,centerX,centerY,minRadius - 2 * lineW);
	}
	,draw: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,lib_util_ColorUtil.WHITE);
		this.drawShape();
	}
	,__class__: art_CC015
});
var art_CC016 = function(ctx) {
	this._size = 50;
	this._radius = 150;
	this.shapeMax = 200;
	this.shapeArray = [];
	this.set_description("Circle with trail");
	art_CCBase.call(this,ctx);
};
art_CC016.__name__ = ["art","CC016"];
art_CC016.__interfaces__ = [art_ICCBase];
art_CC016.__super__ = art_CCBase;
art_CC016.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i) {
		var shape = { _id : "" + i, _type : "circle", x : lib_Global.w / 2, y : lib_Global.h / 2, rgb : lib_util_ColorUtil.BLACK, alpha : 1 - i * (1 / this.shapeMax), radius : this._radius, size : this._size, angle : i, speed : 4};
		return shape;
	}
	,drawShape: function() {
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			sh.angle -= sh.speed;
			sh.x = lib_Global.w / 2 + Math.cos(lib_util_MathUtil.radians(sh.angle)) * sh.radius;
			sh.y = lib_Global.h / 2 + Math.sin(lib_util_MathUtil.radians(sh.angle)) * sh.radius;
			this.ctx.fillStyle = lib_util_ColorUtil.getColourObj(sh.rgb,sh.alpha);
			lib_CanvasTools.circle(this.ctx,sh.x,sh.y,sh.size);
		}
	}
	,setup: function() {
		console.log("setup: " + this.toString());
		var _g1 = 0;
		var _g = this.shapeMax;
		while(_g1 < _g) {
			var i = _g1++;
			this.shapeArray.push(this.createShape(i));
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		this.drawShape();
	}
	,__class__: art_CC016
});
var art_CC017 = function(ctx) {
	this.grid = new lib_util_GridUtil();
	this._size = 75;
	this.shapeMax = 25;
	this.arr = [[]];
	this.shapeArray = [];
	this.set_description("Circles with trail");
	art_CCBase.call(this,ctx);
};
art_CC017.__name__ = ["art","CC017"];
art_CC017.__interfaces__ = [art_ICCBase];
art_CC017.__super__ = art_CCBase;
art_CC017.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i) {
		var shape = { _id : "" + i, _type : "circle", x : lib_Global.w / 2, y : lib_Global.h / 2, rgb : lib_util_ColorUtil.BLACK, alpha : 1 - i * (1 / this.shapeMax), radius : 20, size : 10, angle : i * 10, speed : 4};
		return shape;
	}
	,drawShape: function() {
		if(this.isDebug) {
			lib_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var j = _g1++;
			var point = this.grid.array[j];
			var _g3 = 0;
			var _g2 = this.arr[j].length;
			while(_g3 < _g2) {
				var i = _g3++;
				var sh = this.arr[j][i];
				sh.angle -= sh.speed;
				sh.x = point.x + Math.cos(lib_util_MathUtil.radians(sh.angle)) * sh.radius;
				sh.y = point.y + Math.sin(lib_util_MathUtil.radians(sh.angle)) * sh.radius;
				this.ctx.fillStyle = lib_util_ColorUtil.getColourObj(sh.rgb,sh.alpha);
				lib_CanvasTools.circle(this.ctx,sh.x,sh.y,sh.size);
			}
		}
	}
	,setup: function() {
		console.log("init: " + this.toString());
		this.grid.setCellSize(this._size);
		this.grid.setIsCenterPoint(true);
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var j = _g1++;
			this.arr.push([]);
			var _g3 = 0;
			var _g2 = this.shapeMax;
			while(_g3 < _g2) {
				var i = _g3++;
				this.arr[j].push(this.createShape(i));
			}
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		this.drawShape();
	}
	,__class__: art_CC017
});
var art_CC018 = function(ctx) {
	this._size = 75;
	this.grid = new lib_util_GridUtil();
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
};
art_CC018.__name__ = ["art","CC018"];
art_CC018.__interfaces__ = [art_ICCBase];
art_CC018.__super__ = art_CCBase;
art_CC018.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y, radius : lib_util_MathUtil.random(5,this._size / 2)};
		this.onYoYoHandler(shape);
		return shape;
	}
	,drawShape: function() {
		if(this.isDebug) {
			lib_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		lib_CanvasTools.fillColourRGB(this.ctx,lib_util_ColorUtil.BLACK);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var circle = this.shapeArray[i];
			lib_CanvasTools.circle(this.ctx,circle.x,circle.y,circle.radius);
		}
	}
	,onYoYoHandler: function(circle) {
		var GoJs = new lets_GoJs(circle,lib_util_MathUtil.random(0.1,2));
		GoJs._isFrom = false;
		var _this = GoJs;
		var value = lib_util_MathUtil.random(5,this._size / 2);
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"radius")) {
			objValue = Reflect.getProperty(_this._target,"radius");
		}
		var _range = { key : "radius", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("radius",_range);
		var _this1 = _this;
		_this1._isYoyo = true;
		var _this2 = _this1;
		_this2._easing = lets_easing_Sine.get_easeInOut();
		var _this3 = _this2;
		_this3._options.onComplete = $bind(this,this.onYoYoHandler);
		_this3._options.onCompleteParams = [circle];
	}
	,setup: function() {
		console.log("setup: " + this.toString());
		this.grid.setCellSize(this._size);
		this.grid.setIsCenterPoint(true);
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var point = this.grid.array[i];
			this.shapeArray.push(this.createShape(i,point));
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		this.drawShape();
	}
	,__class__: art_CC018
});
var art_CC019 = function(ctx) {
	this._lineColor = null;
	this._bgColor = null;
	this._radius = 150;
	this._size = 75;
	this.grid = new lib_util_GridUtil();
	this.shapeMax = 10;
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
};
art_CC019.__name__ = ["art","CC019"];
art_CC019.__interfaces__ = [art_ICCBase];
art_CC019.__super__ = art_CCBase;
art_CC019.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y, radius : this._radius};
		if(i != 4) {
			this.onAnimateHandler(shape);
		}
		return shape;
	}
	,drawShape: function() {
		lib_CanvasTools.backgroundObj(this.ctx,this._bgColor);
		if(this.isDebug) {
			lib_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		lib_CanvasTools.strokeColourObj(this.ctx,this._lineColor);
		lib_CanvasTools.strokeWeight(this.ctx,15);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var circle = this.shapeArray[i];
			lib_CanvasTools.strokeCircle(this.ctx,circle.x,circle.y,circle.radius);
		}
	}
	,onAnimateHandler: function(circle) {
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var circle1 = this.shapeArray[i];
			var point = this.grid.array[i];
			circle1.x = point.x;
			circle1.y = point.y;
		}
		var GoJs = new lets_GoJs(circle,5);
		GoJs._isFrom = false;
		var _this = GoJs;
		var value = lib_Global.w / 2;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(_this._target,"x")) {
			objValue = Reflect.getProperty(_this._target,"x");
		}
		var _range = { key : "x", from : _this._isFrom ? value : objValue, to : !_this._isFrom ? value : objValue};
		_this._props.set("x",_range);
		var _this1 = _this;
		var value1 = lib_Global.h / 2;
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(_this1._target,"y")) {
			objValue1 = Reflect.getProperty(_this1._target,"y");
		}
		var _range1 = { key : "y", from : _this1._isFrom ? value1 : objValue1, to : !_this1._isFrom ? value1 : objValue1};
		_this1._props.set("y",_range1);
		var _this2 = _this1;
		_this2._easing = lets_easing_Sine.get_easeInOut();
		var _this3 = _this2;
		_this3._options.onComplete = $bind(this,this.onAnimateHandler);
		_this3._options.onCompleteParams = [circle];
	}
	,setup: function() {
		var colorArray = lib_util_ColorUtil.niceColor100[lib_util_MathUtil.randomInt(lib_util_ColorUtil.niceColor100.length)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._bgColor = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._lineColor = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		this.grid.setDimension(lib_Global.w * 2.1,lib_Global.h * 2.1);
		this.grid.setNumbered(3,3);
		this.grid.setIsCenterPoint(true);
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var point = this.grid.array[i];
			this.shapeArray.push(this.createShape(i,point));
		}
	}
	,draw: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		this.drawShape();
	}
	,__class__: art_CC019
});
var art_CC020 = function(ctx) {
	this._lineColor2 = null;
	this._lineColor = null;
	this._bgColor = null;
	this._radius = 150;
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
};
art_CC020.__name__ = ["art","CC020"];
art_CC020.__interfaces__ = [art_ICCBase];
art_CC020.__super__ = art_CCBase;
art_CC020.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "arc", x : lib_Global.w / 2, y : lib_Global.h / 2, radius : this._radius, rotation : 0, angle : 250, speed : 1};
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,this._bgColor);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var sh = this.shapeArray[i];
			sh.rotation += sh.speed + i;
			this.ctx.beginPath();
			this.ctx.strokeStyle = lib_util_ColorUtil.getColourObj(this._lineColor);
			if(i == 0) {
				this.ctx.strokeStyle = lib_util_ColorUtil.getColourObj(this._lineColor2);
			}
			this.ctx.lineCap = "round";
			this.ctx.lineWidth = 30;
			this.ctx.arc(lib_Global.w / 2,lib_Global.h / 2,sh.radius * (0.6 * i + 1),lib_util_MathUtil.radians(sh.rotation),lib_util_MathUtil.radians(sh.angle + sh.rotation));
			this.ctx.stroke();
		}
	}
	,setup: function() {
		console.log("setup: " + this.toString());
		var colorArray = lib_util_ColorUtil.niceColor100[lib_util_MathUtil.randomInt(lib_util_ColorUtil.niceColor100.length)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._bgColor = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._lineColor = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._lineColor2 = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		this.shapeArray.push(this.createShape(0));
		this.shapeArray.push(this.createShape(1));
	}
	,draw: function() {
		this.drawShape();
	}
	,__class__: art_CC020
});
var art_CC021 = function(ctx) {
	this._fillColor = null;
	this._lineColor = null;
	this._bgColor = null;
	this._radius = 150;
	this._size = 75;
	this.grid = new lib_util_GridUtil();
	this.shapeMax = 10;
	this.shapeArray = [];
	art_CCBase.call(this,ctx);
	this.set_description("");
};
art_CC021.__name__ = ["art","CC021"];
art_CC021.__interfaces__ = [art_ICCBase];
art_CC021.__super__ = art_CCBase;
art_CC021.prototype = $extend(art_CCBase.prototype,{
	createShape: function(i,point) {
		var shape = { _id : "" + i, _type : "circle", x : point.x, y : point.y};
		return shape;
	}
	,drawShape: function() {
		this.ctx.clearRect(0,0,lib_Global.w,lib_Global.h);
		lib_CanvasTools.backgroundObj(this.ctx,this._bgColor);
		if(this.isDebug) {
			lib_util_ShapeUtil.gridField(this.ctx,this.grid);
		}
		lib_CanvasTools.strokeColourObj(this.ctx,this._lineColor);
		lib_CanvasTools.strokeWeight(this.ctx,15);
		var _g1 = 0;
		var _g = this.shapeArray.length;
		while(_g1 < _g) {
			var i = _g1++;
			var rectangle = this.shapeArray[i];
			var size = this._size * 0.8;
			var radiusMax = this._size / 2;
			var temp = radiusMax / this.shapeArray.length * i;
			lib_CanvasTools.fillColourRGB(this.ctx,this._lineColor);
			lib_CanvasTools.roundRect(this.ctx,rectangle.x,rectangle.y,size,size,temp);
		}
	}
	,setup: function() {
		var colorArray = lib_util_ColorUtil.niceColor100[lib_util_MathUtil.randomInt(lib_util_ColorUtil.niceColor100.length)];
		var $int = Std.parseInt(StringTools.replace(colorArray[0],"#","0x"));
		this._bgColor = { r : $int >> 16 & 255, g : $int >> 8 & 255, b : $int & 255};
		var int1 = Std.parseInt(StringTools.replace(colorArray[1],"#","0x"));
		this._lineColor = { r : int1 >> 16 & 255, g : int1 >> 8 & 255, b : int1 & 255};
		var int2 = Std.parseInt(StringTools.replace(colorArray[2],"#","0x"));
		this._fillColor = { r : int2 >> 16 & 255, g : int2 >> 8 & 255, b : int2 & 255};
		this.grid.setCellSize(this._size);
		this.grid.setIsCenterPoint(true);
		var _g1 = 0;
		var _g = this.grid.array.length;
		while(_g1 < _g) {
			var i = _g1++;
			var point = this.grid.array[i];
			this.shapeArray.push(this.createShape(i,point));
		}
	}
	,draw: function() {
		console.log("draw: " + this.toString());
		this.drawShape();
		this.stop();
	}
	,__class__: art_CC021
});
var haxe_IMap = function() { };
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe_Http = function(url) {
	this.url = url;
	this.headers = new List();
	this.params = new List();
	this.async = true;
	this.withCredentials = false;
};
haxe_Http.__name__ = ["haxe","Http"];
haxe_Http.prototype = {
	setHeader: function(header,value) {
		this.headers = Lambda.filter(this.headers,function(h) {
			return h.header != header;
		});
		this.headers.push({ header : header, value : value});
		return this;
	}
	,setPostData: function(data) {
		this.postData = data;
		return this;
	}
	,cancel: function() {
		if(this.req == null) {
			return;
		}
		this.req.abort();
		this.req = null;
	}
	,request: function(post) {
		var me = this;
		me.responseData = null;
		var r = this.req = js_Browser.createXMLHttpRequest();
		var onreadystatechange = function(_) {
			if(r.readyState != 4) {
				return;
			}
			var s;
			try {
				s = r.status;
			} catch( e ) {
				s = null;
			}
			if(s != null && "undefined" !== typeof window) {
				var protocol = window.location.protocol.toLowerCase();
				var rlocalProtocol = new EReg("^(?:about|app|app-storage|.+-extension|file|res|widget):$","");
				var isLocal = rlocalProtocol.match(protocol);
				if(isLocal) {
					if(r.responseText != null) {
						s = 200;
					} else {
						s = 404;
					}
				}
			}
			if(s == undefined) {
				s = null;
			}
			if(s != null) {
				me.onStatus(s);
			}
			if(s != null && s >= 200 && s < 400) {
				me.req = null;
				me.onData(me.responseData = r.responseText);
			} else if(s == null) {
				me.req = null;
				me.onError("Failed to connect or resolve host");
			} else {
				switch(s) {
				case 12007:
					me.req = null;
					me.onError("Unknown host");
					break;
				case 12029:
					me.req = null;
					me.onError("Failed to connect to host");
					break;
				default:
					me.req = null;
					me.responseData = r.responseText;
					me.onError("Http Error #" + r.status);
				}
			}
		};
		if(this.async) {
			r.onreadystatechange = onreadystatechange;
		}
		var uri = this.postData;
		if(uri != null) {
			post = true;
		} else {
			var _g_head = this.params.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				var p = val;
				if(uri == null) {
					uri = "";
				} else {
					uri += "&";
				}
				var s1 = p.param;
				var uri1 = encodeURIComponent(s1) + "=";
				var s2 = p.value;
				uri += uri1 + encodeURIComponent(s2);
			}
		}
		try {
			if(post) {
				r.open("POST",this.url,this.async);
			} else if(uri != null) {
				var question = this.url.split("?").length <= 1;
				r.open("GET",this.url + (question ? "?" : "&") + uri,this.async);
				uri = null;
			} else {
				r.open("GET",this.url,this.async);
			}
		} catch( e1 ) {
			if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
			me.req = null;
			this.onError(e1.toString());
			return;
		}
		r.withCredentials = this.withCredentials;
		if(!Lambda.exists(this.headers,function(h) {
			return h.header == "Content-Type";
		}) && post && this.postData == null) {
			r.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
		}
		var _g_head1 = this.headers.h;
		while(_g_head1 != null) {
			var val1 = _g_head1.item;
			_g_head1 = _g_head1.next;
			var h1 = val1;
			r.setRequestHeader(h1.header,h1.value);
		}
		r.send(uri);
		if(!this.async) {
			onreadystatechange(null);
		}
	}
	,onData: function(data) {
	}
	,onError: function(msg) {
	}
	,onStatus: function(status) {
	}
	,__class__: haxe_Http
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = ["haxe","Timer"];
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_xml_XmlParserException = function(message,xml,position) {
	this.xml = xml;
	this.message = message;
	this.position = position;
	this.lineNumber = 1;
	this.positionAtLine = 0;
	var _g1 = 0;
	var _g = position;
	while(_g1 < _g) {
		var i = _g1++;
		var c = xml.charCodeAt(i);
		if(c == 10) {
			this.lineNumber++;
			this.positionAtLine = 0;
		} else if(c != 13) {
			this.positionAtLine++;
		}
	}
};
haxe_xml_XmlParserException.__name__ = ["haxe","xml","XmlParserException"];
haxe_xml_XmlParserException.prototype = {
	toString: function() {
		return Type.getClassName(js_Boot.getClass(this)) + ": " + this.message + " at line " + this.lineNumber + " char " + this.positionAtLine;
	}
	,__class__: haxe_xml_XmlParserException
};
var haxe_xml_Parser = function() { };
haxe_xml_Parser.__name__ = ["haxe","xml","Parser"];
haxe_xml_Parser.parse = function(str,strict) {
	if(strict == null) {
		strict = false;
	}
	var doc = Xml.createDocument();
	haxe_xml_Parser.doParse(str,strict,0,doc);
	return doc;
};
haxe_xml_Parser.doParse = function(str,strict,p,parent) {
	if(p == null) {
		p = 0;
	}
	var xml = null;
	var state = 1;
	var next = 1;
	var aname = null;
	var start = 0;
	var nsubs = 0;
	var nbrackets = 0;
	var c = str.charCodeAt(p);
	var buf = new StringBuf();
	var escapeNext = 1;
	var attrValQuote = -1;
	while(c == c) {
		switch(state) {
		case 0:
			switch(c) {
			case 9:case 10:case 13:case 32:
				break;
			default:
				state = next;
				continue;
			}
			break;
		case 1:
			if(c == 60) {
				state = 0;
				next = 2;
			} else {
				start = p;
				state = 13;
				continue;
			}
			break;
		case 2:
			switch(c) {
			case 33:
				if(str.charCodeAt(p + 1) == 91) {
					p += 2;
					if(HxOverrides.substr(str,p,6).toUpperCase() != "CDATA[") {
						throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <![CDATA[",str,p));
					}
					p += 5;
					state = 17;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) == 68 || str.charCodeAt(p + 1) == 100) {
					if(HxOverrides.substr(str,p + 2,6).toUpperCase() != "OCTYPE") {
						throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <!DOCTYPE",str,p));
					}
					p += 8;
					state = 16;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) != 45 || str.charCodeAt(p + 2) != 45) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <!--",str,p));
				} else {
					p += 2;
					state = 15;
					start = p + 1;
				}
				break;
			case 47:
				if(parent == null) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				start = p + 1;
				state = 0;
				next = 10;
				break;
			case 63:
				state = 14;
				start = p;
				break;
			default:
				state = 3;
				start = p;
				continue;
			}
			break;
		case 3:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(p == start) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				xml = Xml.createElement(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml);
				++nsubs;
				state = 0;
				next = 4;
				continue;
			}
			break;
		case 4:
			switch(c) {
			case 47:
				state = 11;
				break;
			case 62:
				state = 9;
				break;
			default:
				state = 5;
				start = p;
				continue;
			}
			break;
		case 5:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				var tmp;
				if(start == p) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected attribute name",str,p));
				}
				tmp = HxOverrides.substr(str,start,p - start);
				aname = tmp;
				if(xml.exists(aname)) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Duplicate attribute [" + aname + "]",str,p));
				}
				state = 0;
				next = 6;
				continue;
			}
			break;
		case 6:
			if(c == 61) {
				state = 0;
				next = 7;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected =",str,p));
			}
			break;
		case 7:
			switch(c) {
			case 34:case 39:
				buf = new StringBuf();
				state = 8;
				start = p + 1;
				attrValQuote = c;
				break;
			default:
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected \"",str,p));
			}
			break;
		case 8:
			switch(c) {
			case 38:
				var len = p - start;
				buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
				state = 18;
				escapeNext = 8;
				start = p + 1;
				break;
			case 60:case 62:
				if(strict) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Invalid unescaped " + String.fromCharCode(c) + " in attribute value",str,p));
				} else if(c == attrValQuote) {
					var len1 = p - start;
					buf.b += len1 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len1);
					var val = buf.b;
					buf = new StringBuf();
					xml.set(aname,val);
					state = 0;
					next = 4;
				}
				break;
			default:
				if(c == attrValQuote) {
					var len2 = p - start;
					buf.b += len2 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len2);
					var val1 = buf.b;
					buf = new StringBuf();
					xml.set(aname,val1);
					state = 0;
					next = 4;
				}
			}
			break;
		case 9:
			p = haxe_xml_Parser.doParse(str,strict,p,xml);
			start = p;
			state = 1;
			break;
		case 10:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				var v = HxOverrides.substr(str,start,p - start);
				if(parent.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + parent.nodeType);
				}
				if(v != parent.nodeName) {
					if(parent.nodeType != Xml.Element) {
						throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + parent.nodeType);
					}
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected </" + parent.nodeName + ">",str,p));
				}
				state = 0;
				next = 12;
				continue;
			}
			break;
		case 11:
			if(c == 62) {
				state = 1;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 12:
			if(c == 62) {
				if(nsubs == 0) {
					parent.addChild(Xml.createPCData(""));
				}
				return p;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 13:
			if(c == 60) {
				var len3 = p - start;
				buf.b += len3 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len3);
				var child = Xml.createPCData(buf.b);
				buf = new StringBuf();
				parent.addChild(child);
				++nsubs;
				state = 0;
				next = 2;
			} else if(c == 38) {
				var len4 = p - start;
				buf.b += len4 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len4);
				state = 18;
				escapeNext = 13;
				start = p + 1;
			}
			break;
		case 14:
			if(c == 63 && str.charCodeAt(p + 1) == 62) {
				++p;
				var str1 = HxOverrides.substr(str,start + 1,p - start - 2);
				parent.addChild(Xml.createProcessingInstruction(str1));
				++nsubs;
				state = 1;
			}
			break;
		case 15:
			if(c == 45 && str.charCodeAt(p + 1) == 45 && str.charCodeAt(p + 2) == 62) {
				parent.addChild(Xml.createComment(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 16:
			if(c == 91) {
				++nbrackets;
			} else if(c == 93) {
				--nbrackets;
			} else if(c == 62 && nbrackets == 0) {
				parent.addChild(Xml.createDocType(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				state = 1;
			}
			break;
		case 17:
			if(c == 93 && str.charCodeAt(p + 1) == 93 && str.charCodeAt(p + 2) == 62) {
				var child1 = Xml.createCData(HxOverrides.substr(str,start,p - start));
				parent.addChild(child1);
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 18:
			if(c == 59) {
				var s = HxOverrides.substr(str,start,p - start);
				if(s.charCodeAt(0) == 35) {
					var c1 = s.charCodeAt(1) == 120 ? Std.parseInt("0" + HxOverrides.substr(s,1,s.length - 1)) : Std.parseInt(HxOverrides.substr(s,1,s.length - 1));
					buf.b += String.fromCharCode(c1);
				} else {
					var _this = haxe_xml_Parser.escapes;
					if(!(__map_reserved[s] != null ? _this.existsReserved(s) : _this.h.hasOwnProperty(s))) {
						if(strict) {
							throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Undefined entity: " + s,str,p));
						}
						buf.b += Std.string("&" + s + ";");
					} else {
						var _this1 = haxe_xml_Parser.escapes;
						var x = __map_reserved[s] != null ? _this1.getReserved(s) : _this1.h[s];
						buf.b += Std.string(x);
					}
				}
				start = p + 1;
				state = escapeNext;
			} else if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45) && c != 35) {
				if(strict) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Invalid character in entity: " + String.fromCharCode(c),str,p));
				}
				buf.b += "&";
				var len5 = p - start;
				buf.b += len5 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len5);
				start = p--;
				state = escapeNext;
			}
			break;
		}
		c = str.charCodeAt(++p);
	}
	if(state == 1) {
		start = p;
		state = 13;
	}
	if(state == 13) {
		if(p != start || nsubs == 0) {
			var len6 = p - start;
			buf.b += len6 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len6);
			parent.addChild(Xml.createPCData(buf.b));
			++nsubs;
		}
		return p;
	}
	if(!strict && state == 18 && escapeNext == 13) {
		buf.b += "&";
		var len7 = p - start;
		buf.b += len7 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len7);
		parent.addChild(Xml.createPCData(buf.b));
		++nsubs;
		return p;
	}
	throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Unexpected end",str,p));
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = ["js","Boot"];
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Browser = function() { };
js_Browser.__name__ = ["js","Browser"];
js_Browser.createXMLHttpRequest = function() {
	if(typeof XMLHttpRequest != "undefined") {
		return new XMLHttpRequest();
	}
	if(typeof ActiveXObject != "undefined") {
		return new ActiveXObject("Microsoft.XMLHTTP");
	}
	throw new js__$Boot_HaxeError("Unable to create XMLHttpRequest object.");
};
var lets_Easing = function() { };
lets_Easing.__name__ = ["lets","Easing"];
lets_Easing.linear = function(v) {
	return v;
};
lets_Easing.quad = function(v) {
	return v * v;
};
lets_Easing.cubic = function(v) {
	return v * v * v;
};
lets_Easing.quart = function(v) {
	return v * v * v;
};
lets_Easing.quint = function(v) {
	return v * v * v;
};
lets_Easing.sine = function(v) {
	return 1 - Math.cos(v * Math.PI / 2);
};
lets_Easing.circ = function(v) {
	return 1 - Math.sqrt(1 - v * v);
};
lets_Easing.expo = function(v) {
	if(v == 0) {
		return 0;
	} else {
		return Math.pow(2,10 * (v - 1));
	}
};
lets_Easing.back = function(v) {
	var s = 1.70158;
	return v * v * ((s + 1) * v - s);
};
lets_Easing.bounce = function(v) {
	v = 1 - v;
	return 1 - (v < 0.363636363636363646 ? 7.5625 * v * v : v < 0.727272727272727293 ? 7.5625 * (v -= 0.545454545454545414) * v + .75 : v < 0.909090909090909061 ? 7.5625 * (v -= 0.818181818181818232) * v + .9375 : 7.5625 * (v -= 0.954545454545454586) * v + .984375);
};
lets_Easing.elastic = function(v) {
	if(v == 0) {
		return 0;
	}
	if(v == 1) {
		return 1;
	}
	var p = .3;
	var s = p / 4;
	return -(Math.pow(2,10 * --v) * Math.sin((v - 0.075) * (2 * Math.PI) / 0.3));
};
lets_Easing.reverse = function(f) {
	return function(v) {
		return 1 - f(1 - v);
	};
};
lets_Easing.reflect = function(f) {
	return function(v) {
		if(v < 0.5) {
			return f(v * 2) / 2;
		} else {
			return 1 - f(2 - v * 2) / 2;
		}
	};
};
var lets_GoJs = function(target,duration) {
	this.VERSION = "1.0.6";
	this.DEBUG = false;
	this.FRAME_RATE = 60;
	this._seconds = 0;
	this._delay = 0;
	this._initTime = 0;
	this._isTimeBased = false;
	this._isYoyo = false;
	this._isFrom = false;
	this._props = new haxe_ds_StringMap();
	this._options = { };
	this._easing = lets_easing_Quad.get_easeOut();
	this._id = "[lets.Go]" + this.VERSION + "." + new Date().getTime();
	this._seconds = duration;
	this._target = target;
	this._duration = this.getDuration(duration);
	if(this._isTimeBased) {
		this._initTime = this.getTimer();
	} else {
		this._initTime = this._duration;
	}
	lets_GoJs._tweens.push(this);
	if(this.DEBUG) {
		window.console.log("New GoJs - _id: \"" + this._id + "\" / _duration: " + this._duration + " / _initTime: " + this._initTime + " / _tweens.length: " + lets_GoJs._tweens.length);
	}
	haxe_Timer.delay($bind(this,this.init),1);
};
lets_GoJs.__name__ = ["lets","GoJs"];
lets_GoJs.to = function(target,duration) {
	var GoJs = new lets_GoJs(target,duration);
	GoJs._isFrom = false;
	return GoJs;
};
lets_GoJs.from = function(target,duration) {
	var GoJs = new lets_GoJs(target,duration);
	GoJs._isFrom = true;
	GoJs.updateProperties(0);
	return GoJs;
};
lets_GoJs.timer = function(duration) {
	var GoJs = new lets_GoJs({ },duration);
	return GoJs;
};
lets_GoJs.prototype = {
	isTimeBased: function(isTimeBased) {
		if(isTimeBased == null) {
			isTimeBased = true;
		}
		console.log("Fixme: this doesn\t work right now");
		this._isTimeBased = isTimeBased;
		this._duration = this._duration / this.FRAME_RATE | 0;
		return this;
	}
	,width: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"width")) {
			objValue = Reflect.getProperty(this._target,"width");
		}
		var _range = { key : "width", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("width",_range);
		return this;
	}
	,height: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"height")) {
			objValue = Reflect.getProperty(this._target,"height");
		}
		var _range = { key : "height", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("height",_range);
		return this;
	}
	,x: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"x")) {
			objValue = Reflect.getProperty(this._target,"x");
		}
		var _range = { key : "x", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("x",_range);
		return this;
	}
	,y: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"y")) {
			objValue = Reflect.getProperty(this._target,"y");
		}
		var _range = { key : "y", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("y",_range);
		return this;
	}
	,rotation: function(degree) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"rotation")) {
			objValue = Reflect.getProperty(this._target,"rotation");
		}
		var _range = { key : "rotation", from : this._isFrom ? degree : objValue, to : !this._isFrom ? degree : objValue};
		this._props.set("rotation",_range);
		return this;
	}
	,degree: function(degree) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"rotation")) {
			objValue = Reflect.getProperty(this._target,"rotation");
		}
		var _range = { key : "rotation", from : this._isFrom ? degree : objValue, to : !this._isFrom ? degree : objValue};
		this._props.set("rotation",_range);
		return this;
	}
	,radians: function(degree) {
		var value = degree * Math.PI / 180;
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"rotation")) {
			objValue = Reflect.getProperty(this._target,"rotation");
		}
		var _range = { key : "rotation", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("rotation",_range);
		return this;
	}
	,alpha: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"alpha")) {
			objValue = Reflect.getProperty(this._target,"alpha");
		}
		var _range = { key : "alpha", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("alpha",_range);
		return this;
	}
	,scale: function(value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"scaleX")) {
			objValue = Reflect.getProperty(this._target,"scaleX");
		}
		var _range = { key : "scaleX", from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		this._props.set("scaleX",_range);
		var objValue1 = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"scaleY")) {
			objValue1 = Reflect.getProperty(this._target,"scaleY");
		}
		var _range1 = { key : "scaleY", from : this._isFrom ? value : objValue1, to : !this._isFrom ? value : objValue1};
		this._props.set("scaleY",_range1);
		var objValue2 = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,"scale")) {
			objValue2 = Reflect.getProperty(this._target,"scale");
		}
		var _range2 = { key : "scale", from : this._isFrom ? value : objValue2, to : !this._isFrom ? value : objValue2};
		this._props.set("scale",_range2);
		return this;
	}
	,yoyo: function() {
		this._isYoyo = true;
		return this;
	}
	,delay: function(duration) {
		this._delay = this.getDuration(duration);
		return this;
	}
	,prop: function(key,value) {
		var objValue = 0;
		if(Object.prototype.hasOwnProperty.call(this._target,key)) {
			objValue = Reflect.getProperty(this._target,key);
		}
		var _range = { key : key, from : this._isFrom ? value : objValue, to : !this._isFrom ? value : objValue};
		var _this = this._props;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,_range);
		} else {
			_this.h[key] = _range;
		}
		return this;
	}
	,onComplete: function(func,arr) {
		this._options.onComplete = func;
		this._options.onCompleteParams = arr;
		return this;
	}
	,onUpdate: function(func,arr) {
		this._options.onUpdate = func;
		this._options.onUpdateParams = arr;
		return this;
	}
	,ease: function(easing) {
		this._easing = easing;
		return this;
	}
	,stop: function() {
		this.destroy();
	}
	,init: function() {
		if(this._isFrom) {
			this.updateProperties(0);
		}
		if(this._isTimeBased) {
			console.log("TODO: build timebased animation");
		} else if(lets_GoJs._requestId == null) {
			lets_GoJs._requestId = window.requestAnimationFrame($bind(this,this.onEnterFrameHandler));
		}
	}
	,onEnterFrameHandler: function(time) {
		if(lets_GoJs._tweens.length <= 0) {
			if(!this._isTimeBased) {
				window.cancelAnimationFrame(lets_GoJs._requestId);
				return;
			}
		} else {
			var _g1 = 0;
			var _g = lets_GoJs._tweens.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(lets_GoJs._tweens[i] != null) {
					lets_GoJs._tweens[i].update();
				}
			}
		}
		lets_GoJs._requestId = window.requestAnimationFrame($bind(this,this.onEnterFrameHandler));
	}
	,update: function() {
		if(this._delay > 0 && this._isTimeBased) {
			console.log("FIXME this doesn't work yet");
		}
		if(this._delay > 0) {
			this._delay--;
			return;
		}
		this._initTime--;
		var progressed = this._duration - this._initTime;
		if(this._isTimeBased) {
			progressed = this.getTimer() - this._initTime;
		}
		if(progressed >= this._duration) {
			this.updateProperties(this._duration);
			this.complete();
		} else {
			this.updateProperties(progressed);
		}
	}
	,updateProperties: function(time) {
		if(Reflect.isFunction(this._options.onUpdate)) {
			var func = this._options.onUpdate;
			var arr = this._options.onUpdateParams != null ? this._options.onUpdateParams : [];
			func.apply(func,arr);
		}
		var n = this._props.keys();
		while(n.hasNext()) {
			var n1 = n.next();
			var _this = this._props;
			var range = __map_reserved[n1] != null ? _this.getReserved(n1) : _this.h[n1];
			Reflect.setProperty(this._target,n1,this._easing.ease(time,range.from,range.to - range.from,this._duration));
		}
	}
	,complete: function() {
		if(this.DEBUG) {
			console.log("complete :: \"" + this._id + "\", _duration: " + this._duration + ", _seconds: " + this._seconds + ", _initTime: " + this._initTime + " / _tweens.length: " + lets_GoJs._tweens.length);
		}
		if(this._isYoyo) {
			var n = this._props.keys();
			while(n.hasNext()) {
				var n1 = n.next();
				var _this = this._props;
				var range = __map_reserved[n1] != null ? _this.getReserved(n1) : _this.h[n1];
				var _rangeReverse = { key : n1, from : range.to, to : range.from};
				var _this1 = this._props;
				if(__map_reserved[n1] != null) {
					_this1.setReserved(n1,_rangeReverse);
				} else {
					_this1.h[n1] = _rangeReverse;
				}
			}
			if(this._isTimeBased) {
				this._initTime = this.getTimer();
			} else {
				this._initTime = this._duration;
			}
			this._isYoyo = false;
			return;
		}
		var func = this._options.onComplete;
		var arr = this._options.onCompleteParams != null ? this._options.onCompleteParams : [];
		this.destroy();
		if(Reflect.isFunction(func)) {
			func.apply(func,arr);
		}
	}
	,getDuration: function(duration) {
		var d = 0;
		if(this._isTimeBased) {
			d = duration * 1000 | 0;
		} else {
			d = duration * this.FRAME_RATE | 0;
		}
		return d;
	}
	,getTimer: function() {
		return new Date().getTime() | 0;
	}
	,destroy: function() {
		if(Lambda.has(lets_GoJs._tweens,this)) {
			HxOverrides.remove(lets_GoJs._tweens,this);
		}
		if(this._options) {
			this._easing = lets_easing_Quad.get_easeOut();
			this._options = { };
			this._target = null;
			this._props = null;
			this._duration = 0;
			this._initTime = 0;
			this._delay = 0;
		}
	}
	,__class__: lets_GoJs
};
var lets_easing_IEasing = function() { };
lets_easing_IEasing.__name__ = ["lets","easing","IEasing"];
lets_easing_IEasing.prototype = {
	__class__: lets_easing_IEasing
};
var lets_easing_Quad = function() { };
lets_easing_Quad.__name__ = ["lets","easing","Quad"];
lets_easing_Quad.__properties__ = {get_easeOut:"get_easeOut",get_easeInOut:"get_easeInOut",get_easeIn:"get_easeIn"};
lets_easing_Quad.get_easeIn = function() {
	return new lets_easing_QuadEaseIn();
};
lets_easing_Quad.get_easeInOut = function() {
	return new lets_easing_QuadEaseInOut();
};
lets_easing_Quad.get_easeOut = function() {
	return new lets_easing_QuadEaseOut();
};
var lets_easing_QuadEaseIn = function() {
};
lets_easing_QuadEaseIn.__name__ = ["lets","easing","QuadEaseIn"];
lets_easing_QuadEaseIn.__interfaces__ = [lets_easing_IEasing];
lets_easing_QuadEaseIn.prototype = {
	calculate: function(k) {
		return k * k;
	}
	,ease: function(t,b,c,d) {
		return c * (t /= d) * t + b;
	}
	,__class__: lets_easing_QuadEaseIn
};
var lets_easing_QuadEaseInOut = function() {
};
lets_easing_QuadEaseInOut.__name__ = ["lets","easing","QuadEaseInOut"];
lets_easing_QuadEaseInOut.__interfaces__ = [lets_easing_IEasing];
lets_easing_QuadEaseInOut.prototype = {
	calculate: function(k) {
		if((k *= 2) < 1) {
			return 0.5 * k * k;
		}
		return -0.5 * ((k - 1) * (k - 3) - 1);
	}
	,ease: function(t,b,c,d) {
		if((t /= d / 2) < 1) {
			return c / 2 * t * t + b;
		}
		return -c / 2 * ((t - 1) * (t - 3) - 1) + b;
	}
	,__class__: lets_easing_QuadEaseInOut
};
var lets_easing_QuadEaseOut = function() {
};
lets_easing_QuadEaseOut.__name__ = ["lets","easing","QuadEaseOut"];
lets_easing_QuadEaseOut.__interfaces__ = [lets_easing_IEasing];
lets_easing_QuadEaseOut.prototype = {
	calculate: function(k) {
		return -k * (k - 2);
	}
	,ease: function(t,b,c,d) {
		return -c * (t /= d) * (t - 2) + b;
	}
	,__class__: lets_easing_QuadEaseOut
};
var lets_easing_Sine = function() { };
lets_easing_Sine.__name__ = ["lets","easing","Sine"];
lets_easing_Sine.__properties__ = {get_easeOut:"get_easeOut",get_easeInOut:"get_easeInOut",get_easeIn:"get_easeIn"};
lets_easing_Sine.get_easeIn = function() {
	return new lets_easing_SineEaseIn();
};
lets_easing_Sine.get_easeInOut = function() {
	return new lets_easing_SineEaseInOut();
};
lets_easing_Sine.get_easeOut = function() {
	return new lets_easing_SineEaseOut();
};
var lets_easing_SineEaseIn = function() {
};
lets_easing_SineEaseIn.__name__ = ["lets","easing","SineEaseIn"];
lets_easing_SineEaseIn.__interfaces__ = [lets_easing_IEasing];
lets_easing_SineEaseIn.prototype = {
	calculate: function(k) {
		return 1 - Math.cos(k * (Math.PI / 2));
	}
	,ease: function(t,b,c,d) {
		return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;
	}
	,__class__: lets_easing_SineEaseIn
};
var lets_easing_SineEaseInOut = function() {
};
lets_easing_SineEaseInOut.__name__ = ["lets","easing","SineEaseInOut"];
lets_easing_SineEaseInOut.__interfaces__ = [lets_easing_IEasing];
lets_easing_SineEaseInOut.prototype = {
	calculate: function(k) {
		return -(Math.cos(Math.PI * k) - 1) / 2;
	}
	,ease: function(t,b,c,d) {
		return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;
	}
	,__class__: lets_easing_SineEaseInOut
};
var lets_easing_SineEaseOut = function() {
};
lets_easing_SineEaseOut.__name__ = ["lets","easing","SineEaseOut"];
lets_easing_SineEaseOut.__interfaces__ = [lets_easing_IEasing];
lets_easing_SineEaseOut.prototype = {
	calculate: function(k) {
		return Math.sin(k * (Math.PI / 2));
	}
	,ease: function(t,b,c,d) {
		return c * Math.sin(t / d * (Math.PI / 2)) + b;
	}
	,__class__: lets_easing_SineEaseOut
};
var lib_AST = function() { };
lib_AST.__name__ = ["lib","AST"];
var lib_CanvasTools = function() { };
lib_CanvasTools.__name__ = ["lib","CanvasTools"];
lib_CanvasTools.square = function(ctx,x,y,width,height) {
	if(height == null) {
		height = width;
	}
	ctx.fillRect(x,y,width,height);
};
lib_CanvasTools.centreStrokeRect = function(ctx,x,y,width,height) {
	if(height == null) {
		height = width;
	}
	ctx.strokeRect(x - width / 2,y - height / 2,width,height);
};
lib_CanvasTools.centreFillRect = function(ctx,x,y,width,height) {
	if(height == null) {
		height = width;
	}
	ctx.fillRect(x - width / 2,y - height / 2,width,height);
};
lib_CanvasTools.roundRect = function(ctx,_x,_y,_width,_height,_radius,_fill,_stroke) {
	if(_stroke == null) {
		_stroke = false;
	}
	if(_fill == null) {
		_fill = true;
	}
	if(_radius == null) {
		_radius = 5;
	}
	_width = Math.abs(_width);
	_height = Math.abs(_height);
	_x -= _width / 2;
	_y -= _height / 2;
	var radius_tr;
	var radius_tl;
	var radius_br;
	var radius_bl;
	radius_tl = _radius;
	radius_tr = _radius;
	radius_br = _radius;
	radius_bl = _radius;
	ctx.beginPath();
	ctx.moveTo(_x + radius_tl,_y);
	ctx.lineTo(_x + _width - radius_tr,_y);
	ctx.quadraticCurveTo(_x + _width,_y,_x + _width,_y + radius_tr);
	ctx.lineTo(_x + _width,_y + _height - radius_br);
	ctx.quadraticCurveTo(_x + _width,_y + _height,_x + _width - radius_br,_y + _height);
	ctx.lineTo(_x + radius_bl,_y + _height);
	ctx.quadraticCurveTo(_x,_y + _height,_x,_y + _height - radius_bl);
	ctx.lineTo(_x,_y + radius_tl);
	ctx.quadraticCurveTo(_x,_y,_x + radius_tl,_y);
	ctx.closePath();
	if(_fill) {
		ctx.fill();
	}
	if(_stroke) {
		ctx.stroke();
	}
};
lib_CanvasTools.makeCircle = function(ctx,x,y,radius) {
	ctx.beginPath();
	ctx.arc(x,y,radius,0,Math.PI * 2,true);
};
lib_CanvasTools.circle = function(ctx,x,y,radius) {
	lib_CanvasTools.makeCircle(ctx,x,y,radius);
	ctx.fill();
	ctx.closePath();
};
lib_CanvasTools.fillCircle = function(ctx,x,y,radius) {
	lib_CanvasTools.makeCircle(ctx,x,y,radius);
	ctx.fill();
	ctx.closePath();
};
lib_CanvasTools.strokeCircle = function(ctx,x,y,radius) {
	lib_CanvasTools.makeCircle(ctx,x,y,radius);
	ctx.stroke();
	ctx.closePath();
};
lib_CanvasTools.strokePolygon = function(ctx,x,y,sides,size) {
	lib_CanvasTools.polygon(ctx,x,y,sides,size);
	ctx.stroke();
};
lib_CanvasTools.fillPolygon = function(ctx,x,y,sides,size) {
	lib_CanvasTools.polygon(ctx,x,y,sides,size);
	ctx.fill();
};
lib_CanvasTools.outlinedPolygon = function(ctx,x,y,_sides,_size,_fill,_stroke) {
	ctx.fillStyle = _fill;
	lib_CanvasTools.fillPolygon(ctx,x,y,_sides,_size);
	ctx.strokeStyle = _stroke;
	lib_CanvasTools.strokePolygon(ctx,x,y,_sides,_size);
};
lib_CanvasTools.polygon = function(ctx,x,y,sides,size) {
	ctx.beginPath();
	ctx.moveTo(x + size * Math.cos(0),y + size * Math.sin(0));
	var _g1 = 0;
	var _g = sides;
	while(_g1 < _g) {
		var i = _g1++;
		ctx.lineTo(x + size * Math.cos(i * 2 * Math.PI / sides),y + size * Math.sin(i * 2 * Math.PI / sides));
	}
};
lib_CanvasTools.eellipse = function(ctx,x,y,width,height) {
	ctx.beginPath();
	var i = 0;
	var counter = 0;
	while(i < Math.PI * 2) {
		console.log("" + counter + ". - " + i + " < " + Math.PI * 2);
		ctx.lineTo(x + Math.cos(i) * width / 2,y + Math.sin(i) * height / 2);
		i += Math.PI / 16;
		++counter;
	}
	ctx.closePath();
};
lib_CanvasTools.fillEllipse = function(ctx,x,y,width,height) {
	ctx.beginPath();
	ctx.ellipse(x,y,width,height,0,0,2 * Math.PI);
	ctx.fill();
};
lib_CanvasTools.strokeEllipse = function(ctx,x,y,width,height) {
	ctx.beginPath();
	ctx.ellipse(x,y,width,height,0,0,2 * Math.PI);
	ctx.stroke();
};
lib_CanvasTools.line = function(ctx,x1,y1,x2,y2) {
	ctx.beginPath();
	ctx.moveTo(x1,y1);
	ctx.lineTo(x2,y2);
	ctx.stroke();
	ctx.beginPath();
};
lib_CanvasTools.triangle = function(ctx,x1,y1,x2,y2,x3,y3) {
	ctx.beginPath();
	ctx.moveTo(x1,y1);
	ctx.lineTo(x2,y2);
	ctx.lineTo(x3,y3);
	ctx.lineTo(x1,y1);
	ctx.stroke();
	ctx.closePath();
};
lib_CanvasTools.strokeTriangle = function(ctx,x1,y1,x2,y2,x3,y3) {
	ctx.beginPath();
	ctx.moveTo(x1,y1);
	ctx.lineTo(x2,y2);
	ctx.lineTo(x3,y3);
	ctx.lineTo(x1,y1);
	ctx.stroke();
	ctx.closePath();
};
lib_CanvasTools.fillTriangle = function(ctx,x1,y1,x2,y2,x3,y3) {
	ctx.beginPath();
	ctx.moveTo(x1,y1);
	ctx.lineTo(x2,y2);
	ctx.lineTo(x3,y3);
	ctx.lineTo(x1,y1);
	ctx.fill();
	ctx.closePath();
};
lib_CanvasTools.eqDownFillTriangle = function(ctx,x,y,sz) {
	ctx.translate(x,y);
	ctx.rotate(lib_util_MathUtil.radians(180));
	lib_CanvasTools.fillTriangle(ctx,0,0 - sz,sz,sz / 2,0 - sz,sz / 2);
	ctx.rotate(lib_util_MathUtil.radians(-180));
	ctx.translate(-x,-y);
};
lib_CanvasTools.eqDownTriangle = function(ctx,x,y,sz) {
	ctx.translate(x,y);
	ctx.rotate(lib_util_MathUtil.radians(180));
	lib_CanvasTools.triangle(ctx,0,0 - sz,sz,sz / 2,0 - sz,sz / 2);
	ctx.rotate(lib_util_MathUtil.radians(-180));
	ctx.translate(-x,-y);
};
lib_CanvasTools.eqFillTriangle = function(ctx,x,y,sz) {
	lib_CanvasTools.fillTriangle(ctx,x,y - sz,x + sz,y + sz / 2,x - sz,y + sz / 2);
};
lib_CanvasTools.eqTriangle = function(ctx,x,y,sz) {
	lib_CanvasTools.triangle(ctx,x,y - sz,x + sz,y + sz / 2,x - sz,y + sz / 2);
};
lib_CanvasTools.strokeWeight = function(ctx,inPx) {
	ctx.lineWidth = inPx;
};
lib_CanvasTools.fillColour = function(ctx,r,g,b,a) {
	lib_CanvasTools.colour(ctx,r,g,b,a);
};
lib_CanvasTools.fillColourRGB = function(ctx,rgb,a) {
	lib_CanvasTools.colour(ctx,rgb.r,rgb.g,rgb.b,a);
};
lib_CanvasTools.colour = function(ctx,r,g,b,a) {
	var c = lib_util_ColorUtil.getColour(r,g,b,a);
	ctx.fillStyle = c;
};
lib_CanvasTools.colourObj = function(ctx,rgb,a) {
	var c = lib_util_ColorUtil.getColour(rgb.r,rgb.g,rgb.b,a);
	ctx.fillStyle = c;
};
lib_CanvasTools.strokeColourObj = function(ctx,rgb,a) {
	lib_CanvasTools.lineColour(ctx,rgb.r,rgb.g,rgb.b,a);
};
lib_CanvasTools.strokeColour = function(ctx,r,g,b,a) {
	lib_CanvasTools.lineColour(ctx,r,g,b,a);
};
lib_CanvasTools.lineColour = function(ctx,r,g,b,a) {
	ctx.strokeStyle = lib_util_ColorUtil.getColour(r,g,b,a);
};
lib_CanvasTools.colourName = function(ctx,name) {
	ctx.fillStyle = name;
};
lib_CanvasTools.background = function(ctx,r,g,b,a) {
	if(g == null) {
		ctx.fillStyle = lib_util_ColorUtil.rgb(r,r,r);
	} else if(b == null && a == null) {
		ctx.fillStyle = lib_util_ColorUtil.rgba(r,r,r,g);
	} else if(a == null) {
		ctx.fillStyle = lib_util_ColorUtil.rgb(r,g,b);
	} else {
		ctx.fillStyle = lib_util_ColorUtil.rgba(r,g,b,a);
	}
	ctx.fillRect(0,0,lib_Global.w,lib_Global.h);
};
lib_CanvasTools.backgroundObj = function(ctx,rgb) {
	lib_CanvasTools.background(ctx,rgb.r,rgb.g,rgb.b);
};
lib_CanvasTools.backgroundRGB = function(ctx,rgb) {
	lib_CanvasTools.background(ctx,rgb.r,rgb.g,rgb.b);
};
var lib_Global = function() { };
lib_Global.__name__ = ["lib","Global"];
var lib_html_CSSinjector = function(styles,elementID) {
	if(elementID == null) {
		elementID = "inject-" + new Date().getTime();
	}
	if(styles != null) {
		this.setCSS(styles,elementID);
	}
};
lib_html_CSSinjector.__name__ = ["lib","html","CSSinjector"];
lib_html_CSSinjector.prototype = {
	setCSS: function(styles,elementID) {
		styles = this.minify(styles);
		var css = window.document.createElement("style");
		css.id = elementID;
		if(css.styleSheet) {
			css.styleSheet.cssText = styles;
		} else {
			css.appendChild(window.document.createTextNode(styles));
		}
		window.document.getElementsByTagName("head")[0].appendChild(css);
	}
	,minify: function(css) {
		return css;
	}
	,__class__: lib_html_CSSinjector
};
var lib_html_Nav = function() {
	this.bottomOut = -50;
	this.bottomIn = 0;
	lib_html_CSSinjector.call(this);
	var _css = this.css();
	this.setCSS(_css,"inject-nav");
};
lib_html_Nav.__name__ = ["lib","html","Nav"];
lib_html_Nav.__super__ = lib_html_CSSinjector;
lib_html_Nav.prototype = $extend(lib_html_CSSinjector.prototype,{
	dir: function(dir) {
		var x = window.document.getElementById("nav-" + dir);
		var svg = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 80 80\"><g fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"10\" data-name=\"Layer 1\"><path d=\"M10.5 40h59M69.5 40l-18-18M51.5 58l18-18\"/></g></svg>";
		if(dir == "left") {
			svg = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 80 80\"><g fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"10\" data-name=\"Layer 1\"><path d=\"M69.5 40h-59M10.5 40l18-18M28.5 58l-18-18\"/></g></svg>";
		}
		if(x == null) {
			var div = window.document.createElement("div");
			div.id = "nav-" + dir;
			div.className = "nav nav-" + dir;
			div.innerHTML = svg;
			window.document.body.appendChild(div);
			x = div;
		}
	}
	,css: function() {
		return "\n.nav {\n\tdisplay: none;\n\twidth: 80px;\n\theight: 80px;\n    background-color: #333;\n    color: #fff;\n    text-align: center;\n    padding: 10px;\n    position: fixed;\n    z-index: 1;\n    top: 50%;\n    font-size: 13px;\n    opacity: 0.5;\n\tmargin-top: -40px;\n}\n.nav-left{\n    left: 0%;\n    border-radius: 0 5px 5px 0;\n}\n.nav-right{\n    right: 0%;\n    border-radius: 5px 0 0 5px;\n}\n";
	}
	,__class__: lib_html_Nav
});
var lib_html_Snackbar = function() {
	this.bottomOut = -50;
	this.bottomIn = 0;
	lib_html_CSSinjector.call(this);
	var _css = this.css();
	this.setCSS(_css,"inject-snackbar");
};
lib_html_Snackbar.__name__ = ["lib","html","Snackbar"];
lib_html_Snackbar.__super__ = lib_html_CSSinjector;
lib_html_Snackbar.prototype = $extend(lib_html_CSSinjector.prototype,{
	show: function(msg) {
		var x = window.document.getElementById("snackbar");
		if(x == null) {
			var div = window.document.createElement("div");
			div.id = "snackbar";
			window.document.body.appendChild(div);
			x = div;
		}
		x.innerText = msg;
		x.className = "show";
		window.clearTimeout(this.timeout);
		this.timeout = window.setTimeout(function() {
			x.className = StringTools.replace(x.className,"show","");
		},3000);
	}
	,css: function() {
		return "\n/* https://www.w3schools.com/howto/howto_js_snackbar.asp */\n/* The snackbar - position it at the bottom and in the middle of the screen */\n#snackbar {\n    visibility: hidden; /* Hidden by default. Visible on click */\n    min-width: 250px; /* Set a default minimum width */\n    margin-left: -125px; /* Divide value of min-width by 2 */\n    background-color: #333; /* Black background color */\n    color: #fff; /* White text color */\n    text-align: center; /* Centered text */\n    border-radius: 5px 5px 0 0; /* Rounded borders */\n    padding: 10px; /* Padding */\n    position: fixed; /* Sit on top of the screen */\n    z-index: 1; /* Add a z-index if needed */\n    left: 50%; /* Center the snackbar */\n    bottom: " + this.bottomIn + "px; /* " + this.bottomIn + "px from the bottom */\n    font-size: 13px;\n\topacity: 0.5;\n}\n\n/* Show the snackbar when clicking on a button (class added with JavaScript) */\n#snackbar.show {\n    visibility: visible; /* Show the snackbar */\n\n\t/* Add animation: Take 0.5 seconds to fade in and out the snackbar.\n\tHowever, delay the fade out process for 2.5 seconds */\n    -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;\n    animation: fadein 0.5s, fadeout 0.5s 2.5s;\n}\n\n/* Animations to fade the snackbar in and out */\n@-webkit-keyframes fadein {\n    from {bottom: " + this.bottomOut + "px; opacity: 0;}\n    to {bottom: " + this.bottomIn + "px; opacity: 1;}\n}\n\n@keyframes fadein {\n    from {bottom: " + this.bottomOut + "px; opacity: 0;}\n    to {bottom: " + this.bottomIn + "px; opacity: 1;}\n}\n\n@-webkit-keyframes fadeout {\n    from {bottom: " + this.bottomIn + "px; opacity: 1;}\n    to {bottom: " + this.bottomOut + "px; opacity: 0;}\n}\n\n@keyframes fadeout {\n    from {bottom: " + this.bottomIn + "px; opacity: 1;}\n    to {bottom: " + this.bottomOut + "px; opacity: 0;}\n}\n\t\t";
	}
	,__class__: lib_html_Snackbar
});
var lib_model_constants_App = function() { };
lib_model_constants_App.__name__ = ["lib","model","constants","App"];
var lib_util_AnimateUtil = function() {
};
lib_util_AnimateUtil.__name__ = ["lib","util","AnimateUtil"];
lib_util_AnimateUtil.tween = function(pos,target,speed) {
	if(speed == null) {
		speed = 20;
	}
	pos += (target - pos) / speed;
	return pos;
};
lib_util_AnimateUtil.bounce = function(num,min,max,sz) {
	if(sz == null) {
		sz = 0;
	}
	if(num >= max - sz / 2 || num - sz / 2 <= min) {
		return true;
	} else {
		return false;
	}
};
lib_util_AnimateUtil.prototype = {
	__class__: lib_util_AnimateUtil
};
var lib_util_ColorUtil = function() {
};
lib_util_ColorUtil.__name__ = ["lib","util","ColorUtil"];
lib_util_ColorUtil.getColour = function(r,g,b,a) {
	var c;
	if(g == null) {
		c = lib_util_ColorUtil.rgb(r,r,r);
	} else if(b == null && a == null) {
		c = lib_util_ColorUtil.rgba(r,r,r,g);
	} else if(a == null) {
		c = lib_util_ColorUtil.rgb(r,g,b);
	} else {
		c = lib_util_ColorUtil.rgba(r,g,b,a);
	}
	return c;
};
lib_util_ColorUtil.getColourObj = function(rgb,a) {
	return lib_util_ColorUtil.getColour(rgb.r,rgb.g,rgb.b,a);
};
lib_util_ColorUtil.rgb = function(r,g,b) {
	if(g == null) {
		g = r;
	}
	if(b == null) {
		b = r;
	}
	return "rgb(" + lib_util_MathUtil.clamp(Math.round(r),0,255) + ", " + lib_util_MathUtil.clamp(Math.round(g),0,255) + ", " + lib_util_MathUtil.clamp(Math.round(b),0,255) + ")";
};
lib_util_ColorUtil.rgba = function(r,g,b,a) {
	if(g == null) {
		return "rgb(" + lib_util_MathUtil.clamp(Math.round(r),0,255) + ", " + lib_util_MathUtil.clamp(Math.round(r),0,255) + ", " + lib_util_MathUtil.clamp(Math.round(r),0,255) + ")";
	} else if(b == null) {
		return "rgba(" + lib_util_MathUtil.clamp(Math.round(r),0,255) + ", " + lib_util_MathUtil.clamp(Math.round(r),0,255) + ", " + lib_util_MathUtil.clamp(Math.round(r),0,255) + ", " + lib_util_MathUtil.clamp(g,0,1) + ")";
	} else if(a == null) {
		return "rgba(" + lib_util_MathUtil.clamp(Math.round(r),0,255) + ", " + lib_util_MathUtil.clamp(Math.round(g),0,255) + ", " + lib_util_MathUtil.clamp(Math.round(b),0,2