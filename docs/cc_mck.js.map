{
"version":3,
"file":"cc_mck.js",
"sourceRoot":"file:///",
"sources":["/usr/local/lib/haxe/std/js/_std/EReg.hx","/usr/local/lib/haxe/std/js/_std/HxOverrides.hx","/usr/local/lib/haxe/std/Lambda.hx","/usr/local/lib/haxe/std/List.hx","/Users/matthijs/Documents/GIT/creative-coding/src/Main.hx","/usr/local/lib/haxe/std/js/_std/Reflect.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/Sketch.hx","/usr/local/lib/haxe/std/js/_std/Std.hx","/usr/local/lib/haxe/std/StringBuf.hx","/usr/local/lib/haxe/std/StringTools.hx","/usr/local/lib/haxe/std/js/_std/Type.hx","/usr/local/lib/haxe/std/Xml.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CCBase.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC000.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC001.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC002.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC003.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC004.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC005.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC006.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC007.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/lets/Go.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC008.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC009.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC010.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC011.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC012.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC013.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC014.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC015.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC016.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC017.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC018.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC019.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC020.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC021.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC022.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC023.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC024.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC025.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC026.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC027.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC028.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC029.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC030.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC031.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC031a.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC032.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC033.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC034.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC035.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC036.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC037.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC038.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC039.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC040.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC041.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC042.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC043.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC044.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC045.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC046.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC047.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC048.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC049.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC050.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC051.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC051a.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/draw/Text.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC052.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC052a.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC053.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC054.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC054a.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC055.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/draw/Spritesheet.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC055a.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC056.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC057.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC058.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC059.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC059a.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC059b.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC060.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC061.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC062.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC063.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC064.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC065.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC066.hx","/Users/matthijs/Documents/GIT/creative-coding/src/art/CC067.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/CanvasTools.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/draw/Circle.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/draw/Gradient.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/lets/Easing.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/lets/easing/Elastic.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/lets/easing/Quad.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/lets/easing/Quart.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/lets/easing/Sine.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/noise/OpenSimplexNoise.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/noise/Perlin.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/tool/Embed.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/tool/ExportFile.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/tool/Loader.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/tool/convert/SvgToImage.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/tool/export/ExportNames.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/tool/export/ExportWrapperBase.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/tool/export/ExportNodeServer.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/tool/export/ExportNone.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/tool/export/ExportWrapper.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/tool/export/ExportZip.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/util/AnimateUtil.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/util/ColorUtil.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/util/EffectUtil.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/util/FilterUtil.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/util/GridUtil.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/util/HelperUtil.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/util/MathUtil.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/util/ShapeUtil.hx","/Users/matthijs/Documents/GIT/cc-sketch/src/cc/util/TextUtil.hx","/usr/local/lib/haxe/std/haxe/Http.hx","/usr/local/lib/haxe/std/haxe/Log.hx","/usr/local/lib/haxe/std/haxe/Timer.hx","/usr/local/lib/haxe/std/haxe/ds/ArraySort.hx","/usr/local/lib/haxe/std/js/_std/haxe/ds/StringMap.hx","/usr/local/lib/haxe/std/haxe/xml/Parser.hx","/usr/local/lib/haxe/lib/hxColorToolkit/1,6,1/hxColorToolkit/ColorToolkit.hx","/usr/local/lib/haxe/lib/hxColorToolkit/1,6,1/hxColorToolkit/schemes/ColorWheelScheme.hx","/usr/local/lib/haxe/lib/hxColorToolkit/1,6,1/hxColorToolkit/schemes/Analogous.hx","/usr/local/lib/haxe/lib/hxColorToolkit/1,6,1/hxColorToolkit/schemes/Complementary.hx","/usr/local/lib/haxe/lib/hxColorToolkit/1,6,1/hxColorToolkit/schemes/Compound.hx","/usr/local/lib/haxe/lib/hxColorToolkit/1,6,1/hxColorToolkit/schemes/FlippedCompound.hx","/usr/local/lib/haxe/lib/hxColorToolkit/1,6,1/hxColorToolkit/schemes/Monochrome.hx","/usr/local/lib/haxe/lib/hxColorToolkit/1,6,1/hxColorToolkit/schemes/SplitComplementary.hx","/usr/local/lib/haxe/lib/hxColorToolkit/1,6,1/hxColorToolkit/schemes/Tetrad.hx","/usr/local/lib/haxe/lib/hxColorToolkit/1,6,1/hxColorToolkit/schemes/Triad.hx","/usr/local/lib/haxe/lib/hxColorToolkit/1,6,1/hxColorToolkit/spaces/RGB.hx","/usr/local/lib/haxe/lib/hxColorToolkit/1,6,1/hxColorToolkit/spaces/ARGB.hx","/usr/local/lib/haxe/lib/hxColorToolkit/1,6,1/hxColorToolkit/spaces/CMYK.hx","/usr/local/lib/haxe/lib/hxColorToolkit/1,6,1/hxColorToolkit/spaces/Gray.hx","/usr/local/lib/haxe/lib/hxColorToolkit/1,6,1/hxColorToolkit/spaces/HSB.hx","/usr/local/lib/haxe/lib/hxColorToolkit/1,6,1/hxColorToolkit/spaces/HSL.hx","/usr/local/lib/haxe/lib/hxColorToolkit/1,6,1/hxColorToolkit/spaces/Hex.hx","/usr/local/lib/haxe/lib/hxColorToolkit/1,6,1/hxColorToolkit/spaces/Lab.hx","/usr/local/lib/haxe/lib/hxColorToolkit/1,6,1/hxColorToolkit/spaces/XYZ.hx","/usr/local/lib/haxe/lib/hxColorToolkit/1,6,1/hxColorToolkit/spaces/YUV.hx","/usr/local/lib/haxe/std/js/Boot.hx","/usr/local/lib/haxe/std/js/Browser.hx","/usr/local/lib/haxe/std/js/html/compat/ArrayBuffer.hx","/usr/local/lib/haxe/std/js/html/compat/Uint8Array.hx","/Users/matthijs/Documents/GIT/creative-coding/src/lib/html/CSSinjector.hx","/Users/matthijs/Documents/GIT/creative-coding/src/lib/html/Nav.hx","/Users/matthijs/Documents/GIT/creative-coding/src/lib/html/Snackbar.hx","/Users/matthijs/Documents/GIT/creative-coding/src/lib/model/constants/Onom.hx","/usr/local/lib/haxe/lib/mloader/2,2,5/mloader/LoaderBase.hx","/usr/local/lib/haxe/lib/mloader/2,2,5/mloader/HttpLoader.hx","/usr/local/lib/haxe/lib/mloader/2,2,5/mloader/JsonLoader.hx","/usr/local/lib/haxe/lib/msignal/1,2,5/msignal/Signal.hx","/usr/local/lib/haxe/lib/msignal/1,2,5/msignal/EventSignal.hx","/usr/local/lib/haxe/lib/msignal/1,2,5/msignal/Slot.hx","/usr/local/lib/haxe/lib/msignal/1,2,5/msignal/SlotList.hx","/usr/local/lib/haxe/std/js/_std/Math.hx","/Users/matthijs/Documents/GIT/creative-coding/src/lib/model/constants/App.hx"],
"sourcesContent":["/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class EReg {\n\n\tvar r : HaxeRegExp;\n\n\tpublic inline function new( r : String, opt : String ) : Void {\n\t\tthis.r = new HaxeRegExp(r, opt.split(\"u\").join(\"\")); // 'u' (utf8) depends on page encoding\n\t}\n\n\tpublic function match( s : String ) : Bool {\n\t\tif( r.global ) r.lastIndex = 0;\n\t\tr.m = r.exec(s);\n\t\tr.s = s;\n\t\treturn (r.m != null);\n\t}\n\n\tpublic function matched( n : Int ) : String {\n\t\treturn if( r.m != null && n >= 0 && n < r.m.length ) r.m[n] else throw \"EReg::matched\";\n\t}\n\n\tpublic function matchedLeft() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn r.s.substr(0,r.m.index);\n\t}\n\n\tpublic function matchedRight() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\tvar sz = r.m.index+r.m[0].length;\n\t\treturn r.s.substr(sz,r.s.length-sz);\n\t}\n\n\tpublic function matchedPos() : { pos : Int, len : Int } {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn { pos : r.m.index, len : r.m[0].length };\n\t}\n\n\tpublic function matchSub( s : String, pos : Int, len : Int = -1):Bool {\n\t\treturn if (r.global) {\n\t\t\tr.lastIndex = pos;\n\t\t\tr.m = r.exec(len < 0 ? s : s.substr(0, pos + len));\n\t\t\tvar b = r.m != null;\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t}\n\t\t\tb;\n\t\t} else {\n\t\t\t// TODO: check some ^/$ related corner cases\n\t\t\tvar b = match( len < 0 ? s.substr(pos) : s.substr(pos,len) );\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t\tr.m.index += pos;\n\t\t\t}\n\t\t\tb;\n\t\t}\n\t}\n\n\tpublic function split( s : String ) : Array<String> {\n\t\t// we can't use directly s.split because it's ignoring the 'g' flag\n\t\tvar d = \"#__delim__#\";\n\t\treturn untyped s.replace(r,d).split(d);\n\t}\n\n\tpublic inline function replace( s : String, by : String ) : String {\n\t\treturn untyped s.replace(r,by);\n\t}\n\n\tpublic function map( s : String, f : EReg -> String ) : String {\n\t\tvar offset = 0;\n\t\tvar buf = new StringBuf();\n\t\tdo {\n\t\t\tif (offset >= s.length)\n\t\t\t\tbreak;\n\t\t\telse if (!matchSub(s, offset)) {\n\t\t\t\tbuf.add(s.substr(offset));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar p = matchedPos();\n\t\t\tbuf.add(s.substr(offset, p.pos - offset));\n\t\t\tbuf.add(f(this));\n\t\t\tif (p.len == 0) {\n\t\t\t\tbuf.add(s.substr(p.pos, 1));\n\t\t\t\toffset = p.pos + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t\toffset = p.pos + p.len;\n\t\t} while (r.global);\n\t\tif (!r.global && offset > 0 && offset < s.length)\n\t\t\tbuf.add(s.substr(offset));\n\t\treturn buf.toString();\n\t}\n}\n\n@:native(\"RegExp\")\nprivate extern class HaxeRegExp extends js.RegExp {\n\tvar m:js.RegExp.RegExpMatch;\n\tvar s:String;\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:noDoc\nclass HxOverrides {\n\n\tstatic function dateStr( date :Date ) : String {\n\t\tvar m = date.getMonth() + 1;\n\t\tvar d = date.getDate();\n\t\tvar h = date.getHours();\n\t\tvar mi = date.getMinutes();\n\t\tvar s = date.getSeconds();\n\t\treturn date.getFullYear()\n\t\t\t+\"-\"+(if( m < 10 ) \"0\"+m else \"\"+m)\n\t\t\t+\"-\"+(if( d < 10 ) \"0\"+d else \"\"+d)\n\t\t\t+\" \"+(if( h < 10 ) \"0\"+h else \"\"+h)\n\t\t\t+\":\"+(if( mi < 10 ) \"0\"+mi else \"\"+mi)\n\t\t\t+\":\"+(if( s < 10 ) \"0\"+s else \"\"+s);\n\t}\n\n\tstatic function strDate( s : String ) : Date {\n\t\tswitch( s.length ) {\n\t\tcase 8: // hh:mm:ss\n\t\t\tvar k = s.split(\":\");\n\t\t\tvar d : Date = untyped __new__(Date);\n\t\t\tuntyped d[\"setTime\"](0);\n\t\t\tuntyped d[\"setUTCHours\"](k[0]);\n\t\t\tuntyped d[\"setUTCMinutes\"](k[1]);\n\t\t\tuntyped d[\"setUTCSeconds\"](k[2]);\n\t\t\treturn d;\n\t\tcase 10: // YYYY-MM-DD\n\t\t\tvar k = s.split(\"-\");\n\t\t\treturn new Date(cast k[0],cast untyped k[1] - 1,cast k[2],0,0,0);\n\t\tcase 19: // YYYY-MM-DD hh:mm:ss\n\t\t\tvar k = s.split(\" \");\n\t\t\tvar y = k[0].split(\"-\");\n\t\t\tvar t = k[1].split(\":\");\n\t\t\treturn new Date(cast y[0],cast untyped y[1] - 1,cast y[2],cast t[0],cast t[1],cast t[2]);\n\t\tdefault:\n\t\t\tthrow \"Invalid date format : \" + s;\n\t\t}\n\t}\n\n\tstatic function cca( s : String, index : Int ) : Null<Int> {\n\t\tvar x = (cast s).charCodeAt(index);\n\t\tif( x != x ) // fast isNaN\n\t\t\treturn js.Lib.undefined; // isNaN will still return true\n\t\treturn x;\n\t}\n\n\tstatic function substr( s : String, pos : Int, ?len : Int ) : String {\n\t\tif (len == null) {\n\t\t\tlen = s.length;\n\t\t} else if (len < 0) {\n\t\t\tif (pos == 0)\n\t\t\t\tlen = s.length + len;\n\t\t\telse\n\t\t\t\treturn \"\";\n\t\t}\n\n\t\t#if (js_es < 5)\n\t\tif (pos < 0) {\n\t\t\tpos = s.length + pos;\n\t\t\tif (pos < 0)\n\t\t\t\tpos = 0;\n\t\t}\n\t\t#end\n\n\t\treturn (untyped s).substr(pos, len);\n\t}\n\n\tstatic function indexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i < 0) {\n\t\t\ti += len;\n\t\t\tif (i < 0) i = 0;\n\t\t}\n\t\twhile (i < len)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function lastIndexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i >= len)\n\t\t\ti = len - 1;\n\t\telse if (i < 0)\n\t\t\ti += len;\n\t\twhile (i >= 0)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti--;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function remove<T>( a : Array<T>, obj : T ) {\n\t\tvar i = a.indexOf(obj);\n\t\tif( i == -1 ) return false;\n\t\ta.splice(i,1);\n\t\treturn true;\n\t}\n\n\tstatic function iter<T>( a : Array<T> ) : Iterator<T> untyped {\n\t\treturn {\n\t\t\tcur : 0,\n\t\t\tarr : a,\n\t\t\thasNext : function() {\n\t\t\t\treturn __this__.cur < __this__.arr.length;\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\treturn __this__.arr[__this__.cur++];\n\t\t\t}\n\t\t};\n\t}\n\n\tstatic function __init__() untyped {\n#if (js_es < 5)\n\t\t__feature__('HxOverrides.indexOf', if( Array.prototype.indexOf ) __js__(\"HxOverrides\").indexOf = function(a,o,i) return Array.prototype.indexOf.call(a, o, i));\n\t\t__feature__('HxOverrides.lastIndexOf', if( Array.prototype.lastIndexOf ) __js__(\"HxOverrides\").lastIndexOf = function(a,o,i) return Array.prototype.lastIndexOf.call(a, o, i));\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tThe `Lambda` class is a collection of methods to support functional\n\tprogramming. It is ideally used with `using Lambda` and then acts as an\n\textension to Iterable types.\n\n\tOn static platforms, working with the Iterable structure might be slower\n\tthan performing the operations directly on known types, such as Array and\n\tList.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n\n\t@see https://haxe.org/manual/std-Lambda.html\n**/\nclass Lambda {\n\n\t/**\n\t\tCreates an Array from Iterable `it`.\n\n\t\tIf `it` is an Array, this function returns a copy of it.\n\t**/\n\tpublic static function array<A>( it : Iterable<A> ) : Array<A> {\n\t\tvar a = new Array<A>();\n\t\tfor(i in it)\n\t\t\ta.push(i);\n\t\treturn a;\n\t}\n\n\t/**\n\t\tCreates a List form Iterable `it`.\n\n\t\tIf `it` is a List, this function returns a copy of it.\n\t**/\n\tpublic static function list<A>( it : Iterable<A> ) : List<A> {\n\t\tvar l = new List<A>();\n\t\tfor(i in it)\n\t\t\tl.add(i);\n\t\treturn l;\n\t}\n\n\t/**\n\t\tCreates a new List by applying function `f` to all elements of `it`.\n\n\t\tThe order of elements is preserved.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function map<A,B>( it : Iterable<A>, f : A -> B ) : List<B> {\n\t\tvar l = new List<B>();\n\t\tfor( x in it )\n\t\t\tl.add(f(x));\n\t\treturn l;\n\t}\n\n\t/**\n\t\tSimilar to map, but also passes the index of each element to `f`.\n\n\t\tThe order of elements is preserved.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function mapi<A,B>( it : Iterable<A>, f : Int -> A -> B ) : List<B> {\n\t\tvar l = new List<B>();\n\t\tvar i = 0;\n\t\tfor( x in it )\n\t\t\tl.add(f(i++,x));\n\t\treturn l;\n\t}\n\n\t/**\n\t\tConcatenate a list of lists.\n\n\t\tThe order of elements is preserved.\n\t**/\n\tpublic static function flatten<A>( it : Iterable<Iterable<A>> ) : List<A> {\n\t\tvar l = new List<A>();\n\t\tfor (e in it)\n\t\t\tfor (x in e)\n\t\t\t\tl.add(x);\n\t\treturn l;\n\t}\n\n\t/**\n\t\tA composition of map and flatten.\n\n\t\tThe order of elements is preserved.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function flatMap<A,B>( it : Iterable<A>, f: A -> Iterable<B> ) : List<B> {\n\t\treturn Lambda.flatten(Lambda.map(it, f));\n\t}\n\n\t/**\n\t\tTells if `it` contains `elt`.\n\n\t\tThis function returns true as soon as an element is found which is equal\n\t\tto `elt` according to the `==` operator.\n\n\t\tIf no such element is found, the result is false.\n\t**/\n\tpublic static function has<A>( it : Iterable<A>, elt : A ) : Bool {\n\t\tfor( x in it )\n\t\t\tif( x == elt )\n\t\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\t/**\n\t\tTells if `it` contains an element for which `f` is true.\n\n\t\tThis function returns true as soon as an element is found for which a\n\t\tcall to `f` returns true.\n\n\t\tIf no such element is found, the result is false.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function exists<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tfor( x in it )\n\t\t\tif( f(x) )\n\t\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\t/**\n\t\tTells if `f` is true for all elements of `it`.\n\n\t\tThis function returns false as soon as an element is found for which a\n\t\tcall to `f` returns false.\n\n\t\tIf no such element is found, the result is true.\n\n\t\tIn particular, this function always returns true if `it` is empty.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function foreach<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tfor( x in it )\n\t\t\tif( !f(x) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\t/**\n\t\tCalls `f` on all elements of `it`, in order.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function iter<A>( it : Iterable<A>, f : A -> Void ) {\n\t\tfor( x in it )\n\t\t\tf(x);\n\t}\n\n\t/**\n\t\tReturns a List containing those elements of `it` for which `f` returned\n\t\ttrue.\n\n\t\tIf `it` is empty, the result is the empty List even if `f` is null.\n\n\t\tOtherwise if `f` is null, the result is unspecified.\n\t**/\n\tpublic static function filter<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tvar l = new List<A>();\n\t\tfor( x in it )\n\t\t\tif( f(x) )\n\t\t\t\tl.add(x);\n\t\treturn l;\n\t}\n\n\t/**\n\t\tFunctional fold on Iterable `it`, using function `f` with start argument\n\t\t`first`.\n\n\t\tIf `it` has no elements, the result is `first`.\n\n\t\tOtherwise the first element of `it` is passed to `f` alongside `first`.\n\t\tThe result of that call is then passed to `f` with the next element of\n\t\t`it`, and so on until `it` has no more elements.\n\n\t\tIf `it` or `f` are null, the result is unspecified.\n\t**/\n\tpublic static function fold<A,B>( it : Iterable<A>, f : A -> B -> B, first : B ) : B {\n\t\tfor( x in it )\n\t\t\tfirst = f(x,first);\n\t\treturn first;\n\t}\n\n\t/**\n\t\tReturns the number of elements in `it` for which `pred` is true, or the\n\t\ttotal number of elements in `it` if `pred` is null.\n\n\t\tThis function traverses all elements.\n\t**/\n\tpublic static function count<A>( it : Iterable<A>, ?pred : A -> Bool ) {\n\t\tvar n = 0;\n\t\tif( pred == null )\n\t\t\tfor( _ in it )\n\t\t\t\tn++;\n\t\telse\n\t\t\tfor( x in it )\n\t\t\t\tif( pred(x) )\n\t\t\t\t\tn++;\n\t\treturn n;\n\t}\n\n\t/**\n\t\tTells if Iterable `it` does not contain any element.\n\t**/\n\tpublic static function empty<T>( it : Iterable<T> ) : Bool {\n\t\treturn !it.iterator().hasNext();\n\t}\n\n\t/**\n\t\tReturns the index of the first element `v` within Iterable `it`.\n\n\t\tThis function uses operator `==` to check for equality.\n\n\t\tIf `v` does not exist in `it`, the result is -1.\n\t**/\n\tpublic static function indexOf<T>( it : Iterable<T>, v : T ) : Int {\n\t\tvar i = 0;\n\t\tfor( v2 in it ) {\n\t\t\tif( v == v2 )\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t\tReturns the first element of `it` for which `f` is true.\n\n\t\tThis function returns as soon as an element is found for which a call to\n\t\t`f` returns true.\n\n\t\tIf no such element is found, the result is null.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function find<T>( it : Iterable<T>, f : T -> Bool ) : Null<T> {\n\t\tfor( v in it ) {\n\t\t\tif(f(v)) return v;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t\tReturns a new List containing all elements of Iterable `a` followed by\n\t\tall elements of Iterable `b`.\n\n\t\tIf `a` or `b` are null, the result is unspecified.\n\t**/\n\tpublic static function concat<T>( a : Iterable<T>, b : Iterable<T> ) : List<T> {\n\t\tvar l = new List();\n\t\tfor( x in a )\n\t\t\tl.add(x);\n\t\tfor( x in b )\n\t\t\tl.add(x);\n\t\treturn l;\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tA linked-list of elements. The list is composed of element container objects\n\tthat are chained together. It is optimized so that adding or removing an\n\telement does not imply copying the whole list content every time.\n\n\t@see https://haxe.org/manual/std-List.html\n**/\nclass List<T> {\n\n\tprivate var h : ListNode<T>;\n\tprivate var q : ListNode<T>;\n\n\t/**\n\t\tThe length of `this` List.\n\t**/\n\tpublic var length(default,null) : Int;\n\n\t/**\n\t\tCreates a new empty list.\n\t**/\n\tpublic function new() {\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tAdds element `item` at the end of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function add( item : T ) {\n\t\tvar x = ListNode.create(item, null);\n\t\tif( h == null )\n\t\t\th = x;\n\t\telse\n\t\t\tq.next = x;\n\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tAdds element `item` at the beginning of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function push( item : T ) {\n\t\tvar x = ListNode.create(item, h);\n\t\th = x;\n\t\tif( q == null )\n\t\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function first() : Null<T> {\n\t\treturn if( h == null ) null else h.item;\n\t}\n\n\t/**\n\t\tReturns the last element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function last() : Null<T> {\n\t\treturn if( q == null ) null else q.item;\n\t}\n\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThe element is removed from `this` List.\n\t**/\n\tpublic function pop() : Null<T> {\n\t\tif( h == null )\n\t\t\treturn null;\n\t\tvar x = h.item;\n\t\th = h.next;\n\t\tif( h == null )\n\t\t\tq = null;\n\t\tlength--;\n\t\treturn x;\n\t}\n\n\t/**\n\t\tTells if `this` List is empty.\n\t**/\n\tpublic function isEmpty() : Bool {\n\t\treturn (h == null);\n\t}\n\n\t/**\n\t\tEmpties `this` List.\n\n\t\tThis function does not traverse the elements, but simply sets the\n\t\tinternal references to null and `this.length` to 0.\n\t**/\n\tpublic function clear() : Void {\n\t\th = null;\n\t\tq = null;\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tRemoves the first occurrence of `v` in `this` List.\n\n\t\tIf `v` is found by checking standard equality, it is removed from `this`\n\t\tList and the function returns true.\n\n\t\tOtherwise, false is returned.\n\t**/\n\tpublic function remove( v : T ) : Bool {\n\t\tvar prev:ListNode<T> = null;\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tif( l.item == v ) {\n\t\t\t\tif( prev == null )\n\t\t\t\t\th = l.next;\n\t\t\t\telse\n\t\t\t\t\tprev.next = l.next;\n\t\t\t\tif( q == l )\n\t\t\t\t\tq = prev;\n\t\t\t\tlength--;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tprev = l;\n\t\t\tl = l.next;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t\tReturns an iterator on the elements of the list.\n\t**/\n\tpublic inline function iterator() : ListIterator<T> {\n\t\treturn new ListIterator<T>(h);\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List.\n\n\t\tThe result is enclosed in { } with the individual elements being\n\t\tseparated by a comma.\n\t**/\n\tpublic function toString() {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\ts.add(\"{\");\n\t\twhile( l != null ) {\n\t\t\tif( first )\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(\", \");\n\t\t\ts.add(Std.string(l.item));\n\t\t\tl = l.next;\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List, with `sep` separating\n\t\teach element.\n\t**/\n\tpublic function join(sep : String) {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tif( first )\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(sep);\n\t\t\ts.add(l.item);\n\t\t\tl = l.next;\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a list filtered with `f`. The returned list will contain all\n\t\telements for which `f(x) == true`.\n\t**/\n\tpublic function filter( f : T -> Bool ) {\n\t\tvar l2 = new List();\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tvar v = l.item;\n\t\t\tl = l.next;\n\t\t\tif( f(v) )\n\t\t\t\tl2.add(v);\n\t\t}\n\t\treturn l2;\n\t}\n\n\t/**\n\t\tReturns a new list where all elements have been converted by the\n\t\tfunction `f`.\n\t**/\n\tpublic function map<X>(f : T -> X) : List<X> {\n\t\tvar b = new List();\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tvar v = l.item;\n\t\t\tl = l.next;\n\t\t\tb.add(f(v));\n\t\t}\n\t\treturn b;\n\t}\n\n}\n\n#if neko\nprivate extern class ListNode<T> extends neko.NativeArray<Dynamic> {\n\tvar item(get,set):T;\n\tvar next(get,set):ListNode<T>;\n\tprivate inline function get_item():T return this[0];\n\tprivate inline function set_item(v:T):T return this[0] = v;\n\tprivate inline function get_next():ListNode<T> return this[1];\n\tprivate inline function set_next(v:ListNode<T>):ListNode<T> return this[1] = v;\n\tinline static function create<T>(item:T, next:ListNode<T>):ListNode<T> {\n\t\treturn untyped __dollar__array(item, next);\n\t}\n}\n#else\nprivate class ListNode<T> {\n\tpublic var item:T;\n\tpublic var next:ListNode<T>;\n\tpublic function new(item:T, next:ListNode<T>) {\n\t\tthis.item = item;\n\t\tthis.next = next;\n\t}\n\t@:extern public inline static function create<T>(item:T, next:ListNode<T>):ListNode<T> {\n\t\treturn new ListNode(item, next);\n\t}\n}\n#end\n\nprivate class ListIterator<T> {\n\tvar head:ListNode<T>;\n\n\tpublic inline function new(head:ListNode<T>) {\n\t\tthis.head = head;\n\t}\n\n\tpublic inline function hasNext():Bool {\n\t\treturn head != null;\n\t}\n\n\tpublic inline function next():T {\n\t\tvar val = head.item;\n\t\thead = head.next;\n\t\treturn val;\n\t}\n}\n","package;\n\nimport js.Browser.*;\nimport js.html.*;\nimport lib.model.constants.App;\nimport art.*;\nimport Sketch;\nimport Sketch.Global.*;\n\nusing StringTools;\n\n/**\n * @author Matthijs Kamstra aka [mck]\n */\nclass Main {\n\tvar count:Int;\n\tvar hash:String;\n\tvar ccTypeArray:Array<Class<Dynamic>> = [\n\t\tCC000, CC001, CC002, CC003, CC004, CC005, CC006, CC007, CC008, CC009, CC010, CC011, CC012, CC013, CC014, CC015, CC016, CC017, CC018, CC019, CC020,\n\t\tCC021, CC022, CC023, CC024, CC025, CC026, CC027, CC028, CC029, CC030, CC031, CC031a, CC032, CC033, CC034, CC035, CC036, CC037, CC038, CC039, CC040,\n\t\tCC041, CC042, CC043, CC044, CC045, CC046, CC047, CC048, CC049, CC050, CC051, CC051a, CC052, CC052a, CC053, CC054, CC054a, CC055, CC055a, CC056, CC057,\n\t\tCC058, CC059, CC059a, CC059b, CC060, CC061, CC062, CC063, CC064, CC065, CC066, CC067\n\t];\n\n\tpublic function new() {\n\t\tdocument.addEventListener(\"DOMContentLoaded\", function(event) {\n\t\t\t// DOM ready\n\t\t\tconsole.log('${App.NAME} :: build: ${App.BUILD}');\n\t\t\tsetupCC();\n\t\t\tsetupNav();\n\t\t});\n\t}\n\n\tfunction setupCC() {\n\t\tvar ctx:CanvasRenderingContext2D;\n\t\t// setup canvas\n\t\tvar option = new SketchOption();\n\t\toption.width = 1080; // 1080\n\t\t// option.height = 1000;\n\t\toption.autostart = true;\n\t\toption.padding = 10;\n\t\toption.scale = true;\n\t\tctx = Sketch.create(\"creative_code_mck\", option);\n\t\t// var ctx:CanvasRenderingContext2D = Sketch.create(\"creative_code_mck\");\n\n\t\t// get hash from url\n\t\thash = js.Browser.location.hash;\n\t\thash = hash.replace('#', '');\n\n\t\tvar clazz = Type.resolveClass('art.${hash}');\n\t\tif (clazz == null) {\n\t\t\t// make sure if it's not in the list, show the latest Sketch\n\t\t\tclazz = ccTypeArray[ccTypeArray.length - 1];\n\t\t}\n\t\tcount = ccTypeArray.indexOf(clazz);\n\t\tvar cc = Type.createInstance(clazz, [ctx]);\n\t\tchangeHash();\n\t}\n\n\tfunction setupNav() {\n\t\tvar snackbar = new lib.html.Snackbar();\n\t\tsnackbar.show('sketch $hash');\n\n\t\tvar left = new lib.html.Nav();\n\t\tvar ldiv = left.dir('left');\n\t\tldiv.onclick = function() {\n\t\t\ttrace('left');\n\t\t\tcount--;\n\t\t\tchangeHash();\n\t\t};\n\t\tvar right = new lib.html.Nav();\n\t\tvar rdiv = right.dir('right');\n\t\trdiv.onclick = function() {\n\t\t\ttrace('right');\n\t\t\tcount++;\n\t\t\tchangeHash();\n\t\t};\n\n\t\t// make sure the browser updates after changing the hash\n\t\twindow.addEventListener(\"hashchange\", function() {\n\t\t\tlocation.reload();\n\t\t}, false);\n\n\t\t// use cursor key lef and right to switch sketches\n\t\twindow.addEventListener(KEY_DOWN, function(e:js.html.KeyboardEvent) {\n\t\t\tswitch (e.key) {\n\t\t\t\tcase 'ArrowRight':\n\t\t\t\t\tcount++;\n\t\t\t\tcase 'ArrowLeft':\n\t\t\t\t\tcount--;\n\t\t\t\tcase 'ArrowUp':\n\t\t\t\t\tcount = ccTypeArray.length - 1;\n\t\t\t\tcase 'ArrowDown':\n\t\t\t\t\tcount = 0;\n\t\t\t\t\t// default : trace (\"case '\"+e.key+\"': trace ('\"+e.key+\"');\");\n\t\t\t}\n\t\t\tchangeHash();\n\t\t}, false);\n\t}\n\n\tfunction changeHash() {\n\t\tlocation.hash = Type.getClassName(ccTypeArray[count]).replace('art.', '');\n\t}\n\n\tstatic public function main() {\n\t\tvar app = new Main();\n\t}\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class Reflect {\n\n\t@:pure\n\tpublic inline static function hasField( o : Dynamic, field : String ) : Bool {\n\t\treturn untyped __js__('Object').prototype.hasOwnProperty.call(o, field);\n\t}\n\n\tpublic static function field( o : Dynamic, field : String ) : Dynamic {\n\t\ttry return untyped o[field] catch( e : Dynamic ) return null;\n\t}\n\n\tpublic inline static function setField( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\to[field] = value;\n\t}\n\n\tpublic static function getProperty( o : Dynamic, field : String ) : Dynamic untyped {\n\t\tvar tmp;\n\t\treturn if( o == null ) __define_feature__(\"Reflect.getProperty\",null) else if( o.__properties__ && (tmp=o.__properties__[\"get_\"+field]) ) o[tmp]() else o[field];\n\t}\n\n\tpublic static function setProperty( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\tvar tmp;\n\t\tif( o.__properties__ && (tmp=o.__properties__[\"set_\"+field]) ) o[tmp](value) else o[field] = __define_feature__(\"Reflect.setProperty\",value);\n\t}\n\n\tpublic inline static function callMethod( o : Dynamic, func : haxe.Constraints.Function, args : Array<Dynamic> ) : Dynamic untyped {\n\t\treturn func.apply(o,args);\n\t}\n\n\tpublic static function fields( o : Dynamic ) : Array<String> {\n\t\tvar a = [];\n\t\tif (o != null) untyped {\n\t\t\tvar hasOwnProperty = __js__('Object').prototype.hasOwnProperty;\n\t\t\t__js__(\"for( var f in o ) {\");\n\t\t\tif( f != \"__id__\" && f != \"hx__closures__\" && hasOwnProperty.call(o, f) ) a.push(f);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a;\n\t}\n\n\tpublic static function isFunction( f : Dynamic ) : Bool untyped {\n\t\treturn __js__(\"typeof(f)\") == \"function\" && !(js.Boot.isClass(f) || js.Boot.isEnum(f));\n\t}\n\n\tpublic static function compare<T>( a : T, b : T ) : Int {\n\t\treturn ( a == b ) ? 0 : (((cast a) > (cast b)) ? 1 : -1);\n\t}\n\n\tpublic static function compareMethods( f1 : Dynamic, f2 : Dynamic ) : Bool {\n\t\tif( f1 == f2 )\n\t\t\treturn true;\n\t\tif( !isFunction(f1) || !isFunction(f2) )\n\t\t\treturn false;\n\t\treturn f1.scope == f2.scope && f1.method == f2.method && f1.method != null;\n\t}\n\n\tpublic static function isObject( v : Dynamic ) : Bool untyped {\n\t\tif( v == null )\n\t\t\treturn false;\n\t\tvar t = __js__(\"typeof(v)\");\n\t\treturn (t == \"string\" || (t == \"object\" && v.__enum__ == null)) || (t == \"function\" && (js.Boot.isClass(v) || js.Boot.isEnum(v)) != null);\n\t}\n\n\tpublic static function isEnumValue( v : Dynamic ) : Bool {\n\t\treturn v != null && v.__enum__ != null;\n\t}\n\n\tpublic static function deleteField( o : Dynamic, field : String ) : Bool untyped {\n\t\tif( !hasField(o,field) ) return false;\n\t\t__js__(\"delete\")(o[field]);\n\t\treturn true;\n\t}\n\n\tpublic static function copy<T>( o : T ) : T {\n\t\tvar o2 : Dynamic = {};\n\t\tfor( f in Reflect.fields(o) )\n\t\t\tReflect.setField(o2,f,Reflect.field(o,f));\n\t\treturn o2;\n\t}\n\n\t@:overload(function( f : Array<Dynamic> -> Void ) : Dynamic {})\n\tpublic static function makeVarArgs( f : Array<Dynamic> -> Dynamic ) : Dynamic {\n\t\treturn function() {\n\t\t\tvar a = untyped Array.prototype.slice.call(__js__(\"arguments\"));\n\t\t\treturn f(a);\n\t\t};\n\t}\n\n}\n","package;\n\nimport Sketch.Global.*;\nimport js.Browser.*;\nimport js.html.*;\nimport js.html.MouseEvent;\nimport js.html.CanvasElement;\nimport cc.tool.ExportFile;\n\n/**\n * inspired by George Gally, which was inpired by Seb Lee\n * https://github.com/GeorgeGally/creative_coding/blob/master/js/canvas.js\n *\n * The name is again inspired by ...\n */\nclass Sketch {\n\tpublic var window = js.Browser.window;\n\tpublic var document = js.Browser.document;\n\tpublic var canvas:js.html.CanvasElement;\n\tpublic var ctx:CanvasRenderingContext2D;\n\n\tstatic public var option:SketchOption = new SketchOption();\n\n\tpublic function new() {}\n\n\t// https://github.com/soulwire/sketch.js/wiki/API#class-methods\n\t// ____________________________________ class-methods ____________________________________\n\tpublic static function create(name:String, ?opt:SketchOption):CanvasRenderingContext2D {\n\t\t// console.log(Sketch.option);\n\t\t// console.log(opt);\n\n\t\tif (opt != null) {\n\t\t\tSketch.option = opt;\n\t\t}\n\t\tif (Sketch.option.type == SketchType.CANVAS) {\n\t\t\treturn new Sketch().createCanvas(name);\n\t\t} else {\n\t\t\treturn new Sketch().createGLCanvas(name);\n\t\t}\n\t}\n\n\t// this enables me to have many canvases all positioned on top of eachother at 100% width and height of page\n\tpublic function createCanvas(name:String):CanvasRenderingContext2D {\n\t\tvar body = document.querySelector('body');\n\n\t\t// [mck] check if `name` already exists\n\t\tif (document.getElementById('canvas-wrapper') != null) {\n\t\t\t// [mck] remove the previous one\n\t\t\tvar element = document.getElementById('canvas-wrapper');\n\t\t\telement.parentNode.removeChild(element);\n\t\t\t// reset?\n\t\t\twindow.addEventListener(RESIZE, null, false);\n\t\t\twindow.addEventListener(MOUSE_MOVE, null, false);\n\t\t\twindow.addEventListener(MOUSE_DOWN, null, false);\n\t\t\twindow.addEventListener(MOUSE_UP, null, false);\n\t\t\twindow.addEventListener(KEY_DOWN, null, false);\n\t\t}\n\t\t// if(document.getElementById(name) != null){\n\t\t// \t// [mck] remove the previous one\n\t\t// \tvar element = document.getElementById(name);\n\t\t// \telement.parentNode.removeChild(element);\n\t\t// }\n\n\t\tvar container = document.createDivElement();\n\t\tcontainer.setAttribute(\"id\", 'canvas-wrapper'); // might be a bit agressive\n\t\tcontainer.className = 'canvas-wrapper-container'; // this is a more friendly solution\n\n\t\tcanvas = document.createCanvasElement();\n\t\tcanvas.setAttribute(\"id\", name);\n\t\t// canvas.style.position = \"absolute\";\n\t\t// canvas.style.left = \"0px\";\n\t\t// canvas.style.top = \"0px\";\n\n\t\tbody.appendChild(container);\n\t\tcontainer.appendChild(canvas);\n\n\t\tctx = canvas.getContext('2d');\n\t\tnew Sketch().init(ctx);\n\t\tonResizeHandler();\n\t\twindow.addEventListener(RESIZE, onResizeHandler, false);\n\t\treturn ctx;\n\t}\n\n\tpublic function createGLCanvas(name:String):CanvasRenderingContext2D {\n\t\t// canvas = document.createCanvasElement();\n\t\t// var body = document.querySelector('body');\n\t\t// canvas.setAttribute(\"id\", name);\n\t\t// canvas.style.position = \"absolute\";\n\t\t// canvas.style.left = \"0px\";\n\t\t// canvas.style.top = \"0px\";\n\t\t// body.appendChild(canvas);\n\t\t// var gl:CanvasRenderingContext2D = canvas.getContext('webgl');\n\t\t// new Sketch().init();\n\t\t// if (gl == null)\n\t\t// \tvar gl = canvas.getContext('experimental-webgl');\n\t\t// onResizeHandler();\n\t\t// window.addEventListener(RESIZE, resize, false);\n\t\t// return gl;\n\t\treturn null;\n\t}\n\n\tfunction checkForId(id:String):Bool {\n\t\treturn true;\n\t}\n\n\tfunction onResizeHandler() {\n\t\tvar c:Array<CanvasElement> = cast document.getElementsByTagName('canvas');\n\n\t\tif (Sketch.option == null)\n\t\t\treturn; // very weird that this happens, need to investigate\n\n\t\tif (Sketch.option.fullscreen) {\n\t\t\tw = window.innerWidth;\n\t\t\th = window.innerHeight;\n\t\t\tSketch.option.width = w;\n\t\t\tSketch.option.height = h;\n\t\t} else {\n\t\t\tw = Sketch.option.width;\n\t\t\th = Sketch.option.height;\n\t\t}\n\t\tfor (i in 0...c.length) {\n\t\t\tvar _c = c[i];\n\t\t\tif (Sketch.option.scale) {\n\t\t\t\tvar padding = Sketch.option.padding;\n\t\t\t\tvar scaleX = (window.innerWidth - (2 * padding)) / w;\n\t\t\t\tvar scaleY = (window.innerHeight - (2 * padding)) / h;\n\t\t\t\tvar scale = Math.min(scaleX, scaleY);\n\t\t\t\t_c.style.width = '${Sketch.option.width * scale}px';\n\t\t\t\t_c.style.height = '${Sketch.option.height * scale}px';\n\t\t\t}\n\t\t\tif (_c.id.indexOf('hiddencanvas-') != -1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t_c.width = w;\n\t\t\t_c.height = h;\n\t\t}\n\t\tconsole.log('RESIZE :: w=$w , h=$h');\n\t}\n\n\t/**\n\t * so we need a canvas to sample from\n\t * @param name\n\t * @param option\n\t */\n\tpublic static function createHiddenCanvas(name, ?option:SketchOption, ?isDebug:Bool = false):CanvasRenderingContext2D {\n\t\tif (option == null) {\n\t\t\toption = new SketchOption();\n\t\t}\n\n\t\tvar body = document.querySelector('body');\n\t\tvar canvas = document.createCanvasElement();\n\t\tbody.appendChild(canvas);\n\n\t\tvar __w = Math.min(w * 0.50, option.width);\n\n\t\tcanvas.setAttribute(\"id\", 'hiddencanvas-${name}');\n\t\tcanvas.style.position = \"absolute\";\n\t\tcanvas.style.left = \"0px\";\n\t\tcanvas.style.top = \"0px\";\n\t\tcanvas.style.border = \"1px solid pink\";\n\t\tcanvas.style.width = '${__w}px';\n\t\tcanvas.width = option.width;\n\t\tcanvas.height = option.height;\n\t\tif (!isDebug)\n\t\t\tcanvas.style.left = -(option.width * 1.5) + \"px\";\n\n\t\tvar ctx = canvas.getContext('2d');\n\t\treturn ctx;\n\t}\n\n\tprivate function init(?ctx:CanvasRenderingContext2D) {\n\t\t// trace('init');\n\n\t\twindow.addEventListener(MOUSE_MOVE, function(e:MouseEvent) {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t\tmouseMoved = true;\n\t\t\t// trace(mouseX, mouseY);\n\t\t});\n\n\t\twindow.addEventListener(MOUSE_DOWN, function(e) {\n\t\t\tmouseDown = true;\n\t\t\t// trace('${mouseDown}');\n\t\t\t// if(typeof onMouseDown == 'function') onMouseDown();\n\t\t});\n\n\t\twindow.addEventListener(MOUSE_UP, function(e) {\n\t\t\tmouseDown = false;\n\t\t\t// trace('${mouseDown}');\n\t\t\t// if(typeof onMouseUp == 'function') onMouseUp();\n\t\t});\n\n\t\twindow.addEventListener(KEY_DOWN, function(e:js.html.KeyboardEvent) {\n\t\t\t// trace(e);\n\t\t\tif (e.metaKey == true && e.key == 'r') {\n\t\t\t\ttrace('cmd + r');\n\t\t\t\tlocation.reload();\n\t\t\t}\n\t\t\tif (e.metaKey == true && e.key == 's' && e.shiftKey == false) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t\ttrace('cmd + s');\n\t\t\t\tExportFile.downloadImageBg(ctx, true); // jpg\n\t\t\t}\n\t\t\tif (e.metaKey == true && e.key == 's' && e.shiftKey == true) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t\ttrace('cmd + shift + s');\n\t\t\t\tExportFile.downloadImage(ctx, false);\n\t\t\t}\n\t\t\tif (e.metaKey == true && untyped e.code == 'KeyS' && e.altKey == true) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t\ttrace('cmd + alt + s');\n\t\t\t\tExportFile.onBase64Handler(ctx, true);\n\t\t\t}\n\n\t\t\tif (e.metaKey == true && e.key == 'f') {\n\t\t\t\tif (!isFullscreen) {\n\t\t\t\t\topenFullscreen();\n\t\t\t\t\tisFullscreen = true;\n\t\t\t\t} else {\n\t\t\t\t\tcloseFullscreen();\n\t\t\t\t\tisFullscreen = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}, false);\n\n\t\t// window.addEventListener(KEY_UP, function(e){\n\t\t// \t// if(typeof onKeyUp == 'function') onKeyUp(e);\n\t\t// });\n\t}\n\n\t/* View in fullscreen */\n\tfunction openFullscreen() {\n\t\tvar elem = document.documentElement;\n\t\tif (elem.requestFullscreen != null) {\n\t\t\telem.requestFullscreen();\n\t\t} else if (untyped elem.mozRequestFullScreen) { /* Firefox */\n\t\t\tuntyped elem.mozRequestFullScreen();\n\t\t} else if (untyped elem.webkitRequestFullscreen) { /* Chrome, Safari and Opera */\n\t\t\tuntyped elem.webkitRequestFullscreen();\n\t\t} else if (untyped elem.msRequestFullscreen) { /* IE/Edge */\n\t\t\tuntyped elem.msRequestFullscreen();\n\t\t}\n\t}\n\n\t/* Close fullscreen */\n\tfunction closeFullscreen() {\n\t\tif (document.exitFullscreen != null) {\n\t\t\tdocument.exitFullscreen();\n\t\t} else if (untyped document.mozCancelFullScreen) { /* Firefox */\n\t\t\tuntyped document.mozCancelFullScreen();\n\t\t} else if (untyped document.webkitExitFullscreen) { /* Chrome, Safari and Opera */\n\t\t\tuntyped document.webkitExitFullscreen();\n\t\t} else if (untyped document.msExitFullscreen) { /* IE/Edge */\n\t\t\tuntyped document.msExitFullscreen();\n\t\t}\n\t}\n\n\t// https://github.com/soulwire/sketch.js/wiki/API#instance-methods\n\t// ____________________________________ Instance Methods ____________________________________\n\t// start\n\t// stop\n\t// toggle\n\t// clear\n\t// destroy\n\t// https://github.com/soulwire/sketch.js/wiki/API#overridable-instance-methods\n\t// Overridable Instance Methods\n\t// Implement these methods on your sketch instance (or pass them to create inside the options hash).\n\t// setup\n\t// update\n\t// draw\n\t// touchstart\n\t// touchmove\n\t// touchend\n\t// mouseover\n\t// mousedown\n\t// mousemove\n\t// mouseout\n\t// mouseup\n\t// click\n\t// keydown\n\t// keyup\n\t// resize\n}\n\n// Constants\n// CANVAS Enumeration for the Canvas type\n// WEBGL Enumeration for the WebGL type\n// DOM Enumeration for the DOM type\n// instances A list of all current Sketch instances\n@:enum abstract SketchType(String) {\n\tvar CANVAS = 'canvas';\n\tvar WEBGL = 'webgl';\n\tvar DOM = 'dom';\n}\n\n@:enum abstract PaperSize(String) {\n\tvar A6 = 'A6';\n\tvar A5 = 'A5';\n\tvar A4 = 'A4';\n\tvar A3 = 'A3';\n\tvar A2 = 'A2';\n\tvar A1 = 'A1';\n}\n\n// https://github.com/soulwire/sketch.js/wiki/API#options\nclass SketchOption {\n\tpublic var width(get_width, set_width):Int;\n\n\tprivate var _width:Int;\n\n\tfunction get_width():Int {\n\t\treturn _width;\n\t}\n\n\tfunction set_width(value:Int):Int {\n\t\t_fullscreen = false;\n\t\tif (_height == null)\n\t\t\t_height = value;\n\t\treturn _width = value;\n\t}\n\n\tpublic var height(get_height, set_height):Int;\n\n\tprivate var _height:Int;\n\n\tfunction get_height():Int {\n\t\treturn _height;\n\t}\n\n\tfunction set_height(value:Int):Int {\n\t\t_fullscreen = false;\n\t\tif (_width == null)\n\t\t\t_width = value;\n\t\treturn _height = value;\n\t}\n\n\t/**\n\t * fullscreen\n\t *\n\t * default true, when width or height is set, this will be automaticly false\n\t */\n\tpublic var fullscreen(get_fullscreen, set_fullscreen):Bool;\n\n\tprivate var _fullscreen:Bool = true;\n\n\tfunction get_fullscreen():Bool {\n\t\treturn _fullscreen;\n\t}\n\n\tfunction set_fullscreen(value:Bool):Bool {\n\t\treturn _fullscreen = value;\n\t}\n\n\t// autoclear Default: true Whether to clear the context before each call to draw. Otherwise call clear()\n\n\t/**\n\t * TODO: [mck] doesn't work yet\n\t */\n\tpublic var autoclear(get_autoclear, set_autoclear):Bool;\n\n\tprivate var _autoclear:Bool = true;\n\n\tfunction get_autoclear():Bool {\n\t\treturn _autoclear;\n\t}\n\n\tfunction set_autoclear(value:Bool):Bool {\n\t\treturn _autostart = value;\n\t}\n\n\t// autostart Default: true Otherwise call start()\n\n\t/**\n\t * TODO: [mck] doesn't work yet\n\t */\n\tpublic var autostart(get_autostart, set_autostart):Bool;\n\n\tprivate var _autostart:Bool = true;\n\n\tfunction get_autostart():Bool {\n\t\treturn _autostart;\n\t}\n\n\tfunction set_autostart(value:Bool):Bool {\n\t\treturn _autostart = value;\n\t}\n\n\t// ?????????????????\n\t// autopause Default: true Whether to pause the animation on window blur and resume on focus\n\n\t/**\n\t * TODO: [mck] doesn't work yet\n\t */\n\tpublic var autopause(get_autopause, set_autopause):Bool;\n\n\tprivate var _autopause:Bool = true;\n\n\tfunction get_autopause():Bool {\n\t\treturn _autopause;\n\t}\n\n\tfunction set_autopause(value:Bool):Bool {\n\t\treturn _autopause = value;\n\t}\n\n\t// container Default: document.body Where to put the sketch context\n\n\t/**\n\t * TODO: [mck] doesn't work yet\n\t */\n\tpublic var container(get_container, set_container):js.html.Element;\n\n\tprivate var _container:js.html.Element = document.body;\n\n\tfunction get_container():js.html.Element {\n\t\treturn _container;\n\t}\n\n\tfunction set_container(value:js.html.Element):js.html.Element {\n\t\treturn _container = value;\n\t}\n\n\t// type Default Sketch.CANVAS Possible values: Sketch.CANVAS, Sketch.WEB_GL and Sketch.DOM\n\n\t/**\n\t *\n\t */\n\tpublic var type(get_type, set_type):SketchType;\n\n\tprivate var _type:SketchType = SketchType.CANVAS;\n\n\tfunction get_type():SketchType {\n\t\treturn _type;\n\t}\n\n\tfunction set_type(value:SketchType):SketchType {\n\t\treturn _type = value;\n\t}\n\n\t// scale the canvas so you can see it without using the scrollbar\n\tpublic var scale(get_scale, set_scale):Bool;\n\n\tprivate var _scale:Bool = false;\n\n\tfunction get_scale():Bool {\n\t\treturn _scale;\n\t}\n\n\tfunction set_scale(value:Bool):Bool {\n\t\treturn _scale = value;\n\t}\n\n\t// scaling will use padding so you will see what you are doing\n\tpublic var padding(get_padding, set_padding):Int;\n\n\tprivate var _padding:Int = 20;\n\n\tfunction get_padding():Int {\n\t\treturn _padding;\n\t}\n\n\tfunction set_padding(value:Int):Int {\n\t\treturn _padding = value;\n\t}\n\n\t/**\n\t * set the dpi, default 72\n\t *\n\t * be carefull, this is a heavy feature, not recommended for video\n\t *\n\t * common values\n\t * 72 (internet values)\n\t * 150 (home printers)\n\t * 300 (books printing)\n\t */\n\tpublic var dpi(get_dpi, set_dpi):Int;\n\n\tprivate var _dpi:Int = 72; // default 72\n\n\tfunction get_dpi():Int {\n\t\treturn _dpi;\n\t}\n\n\tfunction set_dpi(value:Int):Int {\n\t\treturn _dpi = value;\n\t}\n\n\t// interval Default: 1 The update / draw interval (2 will update every 2 frames, etc)\n\t// globals Default: true Add global properties and methods to the window\n\t// retina Default: false Resize for best appearance on retina displays. Can be slow due to so many pixels!\n\t// eventTarget If you want Sketch to bind mouse events to an element other than the Sketch canvas, you can specify that ele\n\tpublic function new() {}\n}\n\n/**\n * Use extends SketchBase to create a quick base to work with\n */\nclass SketchBase {\n\tpublic var ctx:CanvasRenderingContext2D;\n\tpublic var isDrawActive:Bool = true;\n\tpublic var isDebug:Bool = false;\n\tpublic var dpiScale:Float = 1;\n\n\t/**\n\t * constructor\n\t * @param ctx\n\t */\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tif (isDebug)\n\t\t\ttrace('START :: ${toString()}');\n\t\tif (ctx == null) {\n\t\t\t// setup a default Sketch with Instagram settings\n\t\t\tvar option = new SketchOption();\n\t\t\toption.width = 1080; // 1080\n\t\t\t// option.height = 1000;\n\t\t\toption.autostart = true;\n\t\t\toption.padding = 10;\n\t\t\toption.scale = true;\n\t\t\tctx = Sketch.create(\"creative_code_mck\", option);\n\t\t}\n\n\t\t/**\n\t\t * default is 72 dpi, if you design based on that\n\t\t * and use dpiScaling to correct that value,\n\t\t * you will be just fine\n\t\t */\n\t\tdpiScale = Sketch.option.dpi / 72;\n\t\tthis.ctx = ctx;\n\t\twindow.addEventListener(RESIZE, _reset, false);\n\t\twindow.addEventListener(KEY_DOWN, _keyDown, false);\n\t\twindow.addEventListener(KEY_UP, _keyUp, false);\n\t\t// window.addEventListener(KEY_DOWN, onKeyDown);\n\t\tsetup();\n\t\t_draw(); // start draw loop\n\t}\n\n\t// ____________________________________ private ____________________________________\n\t// track key functions\n\tfunction _keyDown(e:js.html.KeyboardEvent) {\n\t\tswitch (e.key) {\n\t\t\tcase ' ':\n\t\t\t\tdraw();\n\t\t\tdefault:\n\t\t\t\t// trace(\"case '\" + e.key + \"': trace ('\" + e.key + \"');\");\n\t\t}\n\t}\n\n\tfunction _keyUp(e:js.html.KeyboardEvent) {}\n\n\t// trigger when window resize, draw function is still running, so clear canvas and restart with init\n\tfunction _reset() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\t_draw();\n\t}\n\n\t// wrapper around the real `draw` class\n\tfunction _draw(?timestamp:Float) {\n\t\tdraw();\n\t\t__export();\n\t\tif (isDrawActive)\n\t\t\twindow.requestAnimationFrame(_draw);\n\t}\n\n\t// ____________________________________ public ____________________________________\n\n\t/**\n\t * setup your art here, is also the best place to reset data\n\t * when the browser resizes\n\t */\n\tpublic function setup() {\n\t\tif (isDebug)\n\t\t\ttrace('SETUP :: ${toString()} -> override public function draw()');\n\t}\n\n\t/**\n\t * the magic happens here, every class should have a `draw` function\n\t */\n\tpublic function draw() {\n\t\tif (isDebug)\n\t\t\ttrace('DRAW :: ${toString()} -> override public function draw()');\n\t}\n\n\t/**\n\t * might be completely useless, might change in the future,\n\t * but this is my library so deal with it\n\t * I need this for my export functions\n\t */\n\tpublic function __export() {\n\t\t// if (isDebug)\n\t\t// trace('EXPORT :: ${toString()} -> override public function __export()');\n\t}\n\n\t/**\n\t * pause the draw function (toggle function)\n\t */\n\tpublic function pause() {\n\t\tisDrawActive = !isDrawActive;\n\t}\n\n\t/**\n\t * stop draw function\n\t */\n\tpublic function stop() {\n\t\tisDrawActive = false;\n\t}\n\n\t/**\n\t * play draw function\n\t */\n\tpublic function play() {\n\t\tisDrawActive = true;\n\t\t_draw();\n\t}\n\n\tpublic function start() {\n\t\tplay();\n\t}\n\n\tpublic function onKeyDown(e:js.html.KeyboardEvent) {\n\t\t// switch (e.key) {\n\t\t// \tcase ' ':\n\t\t// \t\tdrawShape();\n\t\t// \tdefault:\n\t\t// \t\ttrace(\"case '\" + e.key + \"': trace ('\" + e.key + \"');\");\n\t\t// }\n\t}\n\n\t// setup\n\t// update\n\t// draw\n\t// touchstart\n\t// touchmove\n\t// touchend\n\t// mouseover\n\t// mousedown\n\t// mousemove\n\t// mouseout\n\t// mouseup\n\t// click\n\t// keydown\n\t// keyup\n\t// resize\n\n\t/**\n\t * shorthand to get half `w` (width of canvas)\n\t */\n\t@:isVar public var w2(get, null):Float;\n\n\tfunction get_w2() {\n\t\treturn w / 2;\n\t}\n\n\t/**\n\t * shorthand to get half `h` (height of canvas)\n\t */\n\t@:isVar public var h2(get, null):Float;\n\n\tfunction get_h2() {\n\t\treturn h / 2;\n\t}\n\n\t/**\n\t * shorthand to get quarter `w` (width of canvas)\n\t */\n\t@:isVar public var w4(get, null):Float;\n\n\tfunction get_w4() {\n\t\treturn w / 4;\n\t}\n\n\t/**\n\t * shorthand to get quarter `h` (height of canvas)\n\t */\n\t@:isVar public var h4(get, null):Float;\n\n\tfunction get_h4() {\n\t\treturn h / 4;\n\t}\n\n\t/**\n\t * shorthand to get third `w` (width of canvas)\n\t */\n\t@:isVar public var w3(get, null):Float;\n\n\tfunction get_w3() {\n\t\treturn w / 3;\n\t}\n\n\t/**\n\t * shorthand to get third `h` (height of canvas)\n\t */\n\t@:isVar public var h3(get, null):Float;\n\n\tfunction get_h3() {\n\t\treturn h / 3;\n\t}\n\n\t/**\n\t * Get className, with package\n\t * @example:\n\t * \t\ttrace(toString()); // this file would be \"art.CCBase\"\n\t */\n\tpublic function toString() {\n\t\tvar className = Type.getClassName(Type.getClass(this));\n\t\treturn className;\n\t}\n}\n\n/**\n * Sketch.Global has values you can access easily\n *\n * @usage:\n * \t\timport Sketch.Global.*;\n *\n * @source\n * \t\t\thttps://groups.google.com/forum/#!topic/haxelang/CPbyE3WCvnc\n * \t\t\thttps://gist.github.com/nadako/5913724\n */\nclass Global {\n\tpublic static var MOUSE_DOWN:String = 'mousedown';\n\tpublic static var MOUSE_UP:String = 'mouseup';\n\tpublic static var MOUSE_MOVE:String = 'mousemove';\n\tpublic static var KEY_DOWN:String = 'keydown';\n\tpublic static var KEY_UP:String = 'keyup';\n\tpublic static var RESIZE:String = 'resize';\n\tpublic static var mouseX:Int;\n\tpublic static var mouseY:Int;\n\tpublic static var mouseMoved:Bool;\n\tpublic static var mouseDown:Bool;\n\tpublic static var keyDown:Int;\n\tpublic static var keyUp:Int;\n\tpublic static var mousePressed:Int = 0;\n\tpublic static var mouseReleased:Int = 0;\n\tpublic static var isFullscreen:Bool = false;\n\tpublic static var TWO_PI:Float = Math.PI * 2;\n\t// allows me global access to canvas and it’s width and height properties\n\tpublic static var w:Int;\n\tpublic static var h:Int;\n\t// public static var width:Int;\n\t// public static var height:Int;\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport js.Boot;\n\n@:keepInit\n@:coreApi class Std {\n\n\tpublic static inline function is( v : Dynamic, t : Dynamic ) : Bool {\n\t\treturn untyped js.Boot.__instanceof(v,t);\n\t}\n\n\tpublic static inline function instance<T:{},S:T>( value : T, c : Class<S> ) : S {\n\t\treturn untyped __instanceof__(value, c) ? cast value : null;\n\t}\n\n\t@:pure\n\tpublic static function string( s : Dynamic ) : String {\n\t\treturn untyped js.Boot.__string_rec(s,\"\");\n\t}\n\n\tpublic static inline function int( x : Float ) : Int {\n\t\treturn (cast x) | 0;\n\t}\n\n\t@:pure\n\tpublic static function parseInt( x : String ) : Null<Int> {\n\t\tvar v = untyped __js__(\"parseInt\")(x, 10);\n\t\t// parse again if hexadecimal\n\t\tif( v == 0 && (x.charCodeAt(1) == 'x'.code || x.charCodeAt(1) == 'X'.code) )\n\t\t\tv = untyped __js__(\"parseInt\")(x);\n\t\tif( untyped __js__(\"isNaN\")(v) )\n\t\t\treturn null;\n\t\treturn cast v;\n\t}\n\n\tpublic static inline function parseFloat( x : String ) : Float {\n\t\treturn untyped __js__(\"parseFloat\")(x);\n\t}\n\n\tpublic static function random( x : Int ) : Int {\n\t\treturn x <= 0 ? 0 : Math.floor(Math.random()*x);\n\t}\n\n\tstatic function __init__() : Void untyped {\n\t\t__feature__(\"js.Boot.getClass\",String.prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"String\"] = String,String));\n\t\t__feature__(\"js.Boot.isClass\",String.__name__ = __feature__(\"Type.getClassName\",[\"String\"],true));\n\t\t__feature__(\"Type.resolveClass\",$hxClasses[\"Array\"] = Array);\n\t\t__feature__(\"js.Boot.isClass\",Array.__name__ = __feature__(\"Type.getClassName\",[\"Array\"],true));\n\t\t__feature__(\"Date.*\", {\n\t\t\t__feature__(\"js.Boot.getClass\",__js__('Date').prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"Date\"] = __js__('Date'),__js__('Date')));\n\t\t\t__feature__(\"js.Boot.isClass\",__js__('Date').__name__ = [\"Date\"]);\n\t\t});\n\t\t__feature__(\"Int.*\",{\n\t\t\tvar Int = __feature__(\"Type.resolveClass\", $hxClasses[\"Int\"] = { __name__ : [\"Int\"] }, { __name__ : [\"Int\"] });\n\t\t});\n\t\t__feature__(\"Dynamic.*\",{\n\t\t\tvar Dynamic = __feature__(\"Type.resolveClass\", $hxClasses[\"Dynamic\"] = { __name__ : [\"Dynamic\"] }, { __name__ : [\"Dynamic\"] });\n\t\t});\n\t\t__feature__(\"Float.*\",{\n\t\t\tvar Float = __feature__(\"Type.resolveClass\", $hxClasses[\"Float\"] = __js__(\"Number\"), __js__(\"Number\"));\n\t\t\tFloat.__name__ = [\"Float\"];\n\t\t});\n\t\t__feature__(\"Bool.*\",{\n\t\t\tvar Bool = __feature__(\"Type.resolveEnum\",$hxClasses[\"Bool\"] = __js__(\"Boolean\"), __js__(\"Boolean\"));\n\t\t\tBool.__ename__ = [\"Bool\"];\n\t\t});\n\t\t__feature__(\"Class.*\",{\n\t\t\tvar Class = __feature__(\"Type.resolveClass\", $hxClasses[\"Class\"] = { __name__ : [\"Class\"] }, { __name__ : [\"Class\"] });\n\t\t});\n\t\t__feature__(\"Enum.*\",{\n\t\t\tvar Enum = {};\n\t\t});\n\t\t__feature__(\"Void.*\",{\n\t\t\tvar Void = __feature__(\"Type.resolveEnum\", $hxClasses[\"Void\"] = { __ename__ : [\"Void\"] }, { __ename__ : [\"Void\"] });\n\t\t});\n\n#if (js_es < 5)\n\t\t__feature__(\"Array.map\",\n\t\t\tif( Array.prototype.map == null )\n\t\t\t\tArray.prototype.map = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length )\n\t\t\t\t\t\ta[i] = f(__this__[i]);\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n\t\t__feature__(\"Array.filter\",\n\t\t\tif( Array.prototype.filter == null )\n\t\t\t\tArray.prototype.filter = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length ) {\n\t\t\t\t\t\tvar e = __this__[i];\n\t\t\t\t\t\tif( f(e) ) a.push(e);\n\t\t\t\t\t}\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tA String buffer is an efficient way to build a big string by appending small\n\telements together.\n\n\tIts cross-platform implementation uses String concatenation internally, but\n\tStringBuf may be optimized for different targets.\n\n\tUnlike String, an instance of StringBuf is not immutable in the sense that\n\tit can be passed as argument to functions which modify it by appending more\n\tvalues. However, the internal buffer cannot be modified.\n**/\nclass StringBuf {\n\n\tvar b:String;\n\n\t/**\n\t\tThe length of `this` StringBuf in characters.\n\t**/\n\tpublic var length(get,never) : Int;\n\n\t/**\n\t\tCreates a new StringBuf instance.\n\n\t\tThis may involve initialization of the internal buffer.\n\t**/\n\tpublic inline function new() {\n\t\tb = \"\";\n\t}\n\n\tinline function get_length() : Int {\n\t\treturn b.length;\n\t}\n\n\t/**\n\t\tAppends the representation of `x` to `this` StringBuf.\n\n\t\tThe exact representation of `x` may vary per platform. To get more\n\t\tconsistent behavior, this function should be called with\n\t\tStd.string(x).\n\n\t\tIf `x` is null, the String \"null\" is appended.\n\t**/\n\tpublic inline function add<T>( x : T ) : Void {\n\t\tb += x;\n\t}\n\n\t/**\n\t\tAppends the character identified by `c` to `this` StringBuf.\n\n\t\tIf `c` is negative or has another invalid value, the result is\n\t\tunspecified.\n\t**/\n\tpublic inline function addChar( c : Int ) : Void {\n\t\tb += String.fromCharCode(c);\n\t}\n\n\t/**\n\t\tAppends a substring of `s` to `this` StringBuf.\n\n\t\tThis function expects `pos` and `len` to describe a valid substring of\n\t\t`s`, or else the result is unspecified. To get more robust behavior,\n\t\t`this.add(s.substr(pos,len))` can be used instead.\n\n\t\tIf `s` or `pos` are null, the result is unspecified.\n\n\t\tIf `len` is omitted or null, the substring ranges from `pos` to the end\n\t\tof `s`.\n\t**/\n\tpublic inline function addSub( s : String, pos : Int, ?len : Int) : Void {\n\t\tb += (len == null ? s.substr(pos) : s.substr(pos, len));\n\t}\n\n\t/**\n\t\tReturns the content of `this` StringBuf as String.\n\n\t\tThe buffer is not emptied by this operation.\n\t**/\n\tpublic inline function toString() : String {\n\t\treturn b;\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tThis class provides advanced methods on Strings. It is ideally used with\n\t`using StringTools` and then acts as an [extension](https://haxe.org/manual/lf-static-extension.html)\n\tto the `String` class.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n**/\n#if cpp\nusing cpp.NativeString;\n#end\nclass StringTools {\n\t/**\n\t\tEncode an URL by using the standard format.\n\t**/\n\t#if (!java && !cpp && !lua) inline #end public static function urlEncode( s : String ) : String {\n\t\t#if flash\n\t\t\treturn untyped __global__[\"encodeURIComponent\"](s);\n\t\t#elseif neko\n\t\t\treturn untyped new String(_urlEncode(s.__s));\n\t\t#elseif js\n\t\t\treturn untyped encodeURIComponent(s);\n\t\t#elseif cpp\n\t\t\treturn untyped s.__URLEncode();\n\t\t#elseif java\n\t\t\treturn postProcessUrlEncode(java.net.URLEncoder.encode(s, \"UTF-8\"));\n\t\t#elseif cs\n\t\t\treturn untyped cs.system.Uri.EscapeDataString(s);\n\t\t#elseif python\n\t\t\treturn python.lib.urllib.Parse.quote(s, \"\");\n\t\t#elseif hl\n\t\t\tvar len = 0;\n\t\t\tvar b = @:privateAccess s.bytes.urlEncode(len);\n\t\t\treturn @:privateAccess String.__alloc__(b,len);\n\t\t#elseif lua\n\t\t\ts = lua.NativeStringTools.gsub(s, \"\\n\", \"\\r\\n\");\n\t\t\ts = lua.NativeStringTools.gsub(s, \"([^%w %-%_%.%~])\", function (c) {\n\t\t\t\treturn lua.NativeStringTools.format(\"%%%02X\", lua.NativeStringTools.byte(c) + '');\n\t\t\t});\n\t\t\ts = lua.NativeStringTools.gsub(s, \" \", \"+\");\n\t\t\treturn s;\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n#if java\n\tprivate static function postProcessUrlEncode( s : String ) : String {\n\t\tvar ret = new StringBuf();\n\t\tvar i = 0,\n\t\t    len = s.length;\n\t\twhile (i < len) {\n\t\t\tswitch(_charAt(s, i++)) {\n\t\t\tcase '+'.code:\n\t\t\t\tret.add('%20');\n\t\t\tcase '%'.code if (i <= len - 2):\n\t\t\t\tvar c1 = _charAt(s, i++),\n\t\t\t\t    c2 = _charAt(s, i++);\n\t\t\t\tswitch[c1, c2] {\n\t\t\t\tcase ['2'.code, '1'.code]:\n\t\t\t\t\tret.addChar('!'.code);\n\t\t\t\tcase ['2'.code, '7'.code]:\n\t\t\t\t\tret.addChar('\\''.code);\n\t\t\t\tcase ['2'.code, '8'.code]:\n\t\t\t\t\tret.addChar('('.code);\n\t\t\t\tcase ['2'.code, '9'.code]:\n\t\t\t\t\tret.addChar(')'.code);\n\t\t\t\tcase ['7'.code, 'E'.code] | ['7'.code, 'e'.code]:\n\t\t\t\t\tret.addChar('~'.code);\n\t\t\t\tcase _:\n\t\t\t\t\tret.addChar('%'.code);\n\t\t\t\t\tret.addChar(cast c1);\n\t\t\t\t\tret.addChar(cast c2);\n\t\t\t\t}\n\t\t\tcase chr:\n\t\t\t\tret.addChar(cast chr);\n\t\t\t}\n\t\t}\n\t\treturn ret.toString();\n\t}\n#end\n\n\t/**\n\t\tDecode an URL using the standard format.\n\t**/\n\t#if (!java && !cpp && !lua) inline #end public static function urlDecode( s : String ) : String {\n\t\t#if flash\n\t\t\treturn untyped __global__[\"decodeURIComponent\"](s.split(\"+\").join(\" \"));\n\t\t#elseif neko\n\t\t\treturn untyped new String(_urlDecode(s.__s));\n\t\t#elseif js\n\t\t\treturn untyped decodeURIComponent(s.split(\"+\").join(\" \"));\n\t\t#elseif cpp\n\t\t\treturn untyped s.__URLDecode();\n\t\t#elseif java\n\t\t\ttry\n\t\t\t\treturn untyped __java__(\"java.net.URLDecoder.decode(s, \\\"UTF-8\\\")\")\n\t\t\tcatch (e:Dynamic) throw e;\n\t\t#elseif cs\n\t\t\treturn untyped cs.system.Uri.UnescapeDataString(s);\n\t\t#elseif python\n\t\t\treturn python.lib.urllib.Parse.unquote(s);\n\t\t#elseif hl\n\t\t\tvar len = 0;\n\t\t\tvar b = @:privateAccess s.bytes.urlDecode(len);\n\t\t\treturn @:privateAccess String.__alloc__(b,len);\n\t\t#elseif lua\n\t\t\ts = lua.NativeStringTools.gsub (s, \"+\", \" \");\n\t\t\ts = lua.NativeStringTools.gsub (s, \"%%(%x%x)\",\n\t\t\t\tfunction(h) {return lua.NativeStringTools.char(lua.Lua.tonumber(h,16));});\n\t\t\ts = lua.NativeStringTools.gsub (s, \"\\r\\n\", \"\\n\");\n\t\t\treturn s;\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tEscapes HTML special characters of the string `s`.\n\n\t\tThe following replacements are made:\n\n\t\t- `&` becomes `&amp`;\n\t\t- `<` becomes `&lt`;\n\t\t- `>` becomes `&gt`;\n\n\t\tIf `quotes` is true, the following characters are also replaced:\n\n\t\t- `\"` becomes `&quot`;\n\t\t- `'` becomes `&#039`;\n\t**/\n\tpublic static function htmlEscape( s : String, ?quotes : Bool ) : String {\n\t\ts = s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t\treturn quotes ? s.split('\"').join(\"&quot;\").split(\"'\").join(\"&#039;\") : s;\n\t}\n\n\t/**\n\t\tUnescapes HTML special characters of the string `s`.\n\n\t\tThis is the inverse operation to htmlEscape, i.e. the following always\n\t\tholds: `htmlUnescape(htmlEscape(s)) == s`\n\n\t\tThe replacements follow:\n\n\t\t- `&amp;` becomes `&`\n\t\t- `&lt;` becomes `<`\n\t\t- `&gt;` becomes `>`\n\t\t- `&quot;` becomes `\"`\n\t\t- `&#039;` becomes `'`\n\t**/\n\tpublic static function htmlUnescape( s : String ) : String {\n\t\treturn s.split(\"&gt;\").join(\">\").split(\"&lt;\").join(\"<\").split(\"&quot;\").join('\"').split(\"&#039;\").join(\"'\").split(\"&amp;\").join(\"&\");\n\t}\n\n\t/**\n\t\tTells if the string `s` starts with the string `start`.\n\n\t\tIf `start` is `null`, the result is unspecified.\n\n\t\tIf `start` is the empty String `\"\"`, the result is true.\n\t**/\n\tpublic static #if (cs || java) inline #end function startsWith( s : String, start : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.startsWith(start);\n\t\t#elseif cs\n\t\treturn untyped s.StartsWith(start);\n\t\t#elseif cpp\n\t\tif (s.length<start.length)\n\t\t\treturn false;\n\t\tvar p0 = s.c_str();\n\t\tvar p1 = start.c_str();\n\t\tfor(i in 0...start.length)\n\t\t\tif ( p0.at(i) != p1.at(i) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t\t#elseif hl\n\t\treturn @:privateAccess (s.length >= start.length && s.bytes.compare(0,start.bytes,0,start.length<<1) == 0);\n\t\t#else\n\t\treturn( s.length >= start.length && s.substr(0, start.length) == start );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the string `s` ends with the string `end`.\n\n\t\tIf `end` is `null`, the result is unspecified.\n\n\t\tIf `end` is the empty String `\"\"`, the result is true.\n\t**/\n\tpublic static #if (cs || java) inline #end function endsWith( s : String, end : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.endsWith(end);\n\t\t#elseif cs\n\t\treturn untyped s.EndsWith(end);\n\t\t#elseif cpp\n\t\tif (s.length<end.length)\n\t\t\treturn false;\n\t\tvar p0 = s.c_str().add( s.length-end.length );\n\t\tvar p1 = end.c_str();\n\t\tfor(i in 0...end.length)\n\t\t\tif ( p0.at(i) != p1.at(i) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t\t#elseif hl\n\t\tvar elen = end.length;\n\t\tvar slen = s.length;\n\t\treturn @:privateAccess (slen >= elen && s.bytes.compare((slen - elen) << 1, end.bytes, 0, elen << 1) == 0);\n\t\t#else\n\t\tvar elen = end.length;\n\t\tvar slen = s.length;\n\t\treturn( slen >= elen && s.substr(slen - elen, elen) == end );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the character in the string `s` at position `pos` is a space.\n\n\t\tA character is considered to be a space character if its character code\n\t\tis 9,10,11,12,13 or 32.\n\n\t\tIf `s` is the empty String `\"\"`, or if pos is not a valid position within\n\t\t`s`, the result is false.\n\t**/\n\tpublic static function isSpace( s : String, pos : Int ) : Bool {\n\t\t#if (python || lua)\n\t\tif (s.length == 0 || pos < 0 || pos >= s.length) return false;\n\t\t#end\n\t\tvar c = s.charCodeAt( pos );\n\t\treturn (c > 8 && c < 14) || c == 32;\n\t}\n\n\t/**\n\t\tRemoves leading space characters of `s`.\n\n\t\tThis function internally calls `isSpace()` to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String `\"\"` or consists only of space characters, the\n\t\tresult is the empty String `\"\"`.\n\t**/\n\tpublic #if cs inline #end static function ltrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimStart();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,r) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 )\n\t\t\treturn s.substr(r, l-r);\n\t\telse\n\t\t\treturn s;\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves trailing space characters of `s`.\n\n\t\tThis function internally calls `isSpace()` to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String `\"\"` or consists only of space characters, the\n\t\tresult is the empty String `\"\"`.\n\t**/\n\tpublic #if cs inline #end static function rtrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimEnd();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,l-r-1) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 ){\n\t\t\treturn s.substr(0, l-r);\n\t\t}else{\n\t\t\treturn s;\n\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves leading and trailing space characters of `s`.\n\n\t\tThis is a convenience function for `ltrim(rtrim(s))`.\n\t**/\n\tpublic #if (cs || java) inline #end static function trim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.Trim();\n\t\t#elseif java\n\t\treturn untyped s.trim();\n\t\t#else\n\t\treturn ltrim(rtrim(s));\n\t\t#end\n\t}\n\n\t/**\n\t\tConcatenates `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String `\"\"` or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function lpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = c + s;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tAppends `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String `\"\"` or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function rpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = s + c;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReplace all occurrences of the String `sub` in the String `s` by the\n\t\tString `by`.\n\n\t\tIf `sub` is the empty String `\"\"`, `by` is inserted after each character\n\t\tof `s`. If `by` is also the empty String `\"\"`, `s` remains unchanged.\n\n\t\tThis is a convenience function for `s.split(sub).join(by)`.\n\n\t\tIf `sub` or `by` are null, the result is unspecified.\n\t**/\n\tpublic static function replace( s : String, sub : String, by : String ) : String {\n\t\t#if java\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.replace(sub, by);\n\t\t#elseif cs\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.Replace(sub, by);\n\t\t#else\n\t\treturn s.split(sub).join(by);\n\t\t#end\n\t}\n\n\t/**\n\t\tEncodes `n` into a hexadecimal representation.\n\n\t\tIf `digits` is specified, the resulting String is padded with \"0\" until\n\t\tits `length` equals `digits`.\n\t**/\n\tpublic static function hex( n : Int, ?digits : Int ) {\n\t\t#if flash\n\t\t\tvar n : UInt = n;\n\t\t\tvar s : String = untyped n.toString(16);\n\t\t\ts = s.toUpperCase();\n\t\t#else\n\t\t\tvar s = \"\";\n\t\t\tvar hexChars = \"0123456789ABCDEF\";\n\t\t\tdo {\n\t\t\t\ts = hexChars.charAt(n&15) + s;\n\t\t\t\tn >>>= 4;\n\t\t\t} while( n > 0 );\n\t\t#end\n\t\t#if python\n\t\tif (digits != null && s.length < digits) {\n\t\t\tvar diff = digits - s.length;\n\t\t\tfor (_ in 0...diff) {\n\t\t\t\ts = \"0\" + s;\n\t\t\t}\n\t\t}\n\t\t#else\n\t\tif( digits != null )\n\t\t\twhile( s.length < digits )\n\t\t\t\ts = \"0\"+s;\n\t\t#end\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReturns the character code at position `index` of String `s`, or an\n\t\tend-of-file indicator at if `position` equals `s.length`.\n\n\t\tThis method is faster than `String.charCodeAt()` on some platforms, but\n\t\tthe result is unspecified if `index` is negative or greater than\n\t\t`s.length`.\n\n\t\tEnd of file status can be checked by calling `StringTools.isEof()` with\n\t\tthe returned value as argument.\n\n\t\tThis operation is not guaranteed to work if `s` contains the `\\0`\n\t\tcharacter.\n\t**/\n\tpublic static inline function fastCodeAt( s : String, index : Int ) : Int {\n\t\t#if neko\n\t\treturn untyped __dollar__sget(s.__s, index);\n\t\t#elseif cpp\n\t\treturn untyped s.cca(index);\n\t\t#elseif flash\n\t\treturn untyped s.cca(index);\n\t\t#elseif java\n\t\treturn ( index < s.length ) ? cast(_charAt(s, index), Int) : -1;\n\t\t#elseif cs\n\t\treturn ( cast(index, UInt) < s.length ) ? cast(s[index], Int) : -1;\n\t\t#elseif js\n\t\treturn (untyped s).charCodeAt(index);\n\t\t#elseif python\n\t\treturn if (index >= s.length) -1 else python.internal.UBuiltins.ord(python.Syntax.arrayAccess(s, index));\n\t\t#elseif hl\n\t\treturn @:privateAccess s.bytes.getUI16(index << 1);\n\t\t#elseif lua\n\t\treturn lua.NativeStringTools.byte(s,index+1);\n\t\t#else\n\t\treturn untyped s.cca(index);\n\t\t#end\n\t}\n\n\t/*\n\t\tTells if `c` represents the end-of-file (EOF) character.\n\t*/\n\t@:noUsing public static inline function isEof( c : Int ) : Bool {\n\t\t#if (flash || cpp || hl)\n\t\treturn c == 0;\n\t\t#elseif js\n\t\treturn c != c; // fast NaN\n\t\t#elseif (neko || lua)\n\t\treturn c == null;\n\t\t#elseif cs\n\t\treturn c == -1;\n\t\t#elseif java\n\t\treturn c == -1;\n\t\t#elseif python\n\t\treturn c == -1;\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns a String that can be used as a single command line argument\n\t\ton Unix.\n\t\tThe input will be quoted, or escaped if necessary.\n\t*/\n\tpublic static function quoteUnixArg(argument:String):String {\n\t\t// Based on cpython's shlex.quote().\n\t\t// https://hg.python.org/cpython/file/a3f076d4f54f/Lib/shlex.py#l278\n\n\t\tif (argument == \"\")\n\t\t\treturn \"''\";\n\n\t\tif (!~/[^a-zA-Z0-9_@%+=:,.\\/-]/.match(argument))\n\t\t\treturn argument;\n\n\t\t// use single quotes, and put single quotes into double quotes\n\t\t// the string $'b is then quoted as '$'\"'\"'b'\n\t\treturn \"'\" + replace(argument, \"'\", \"'\\\"'\\\"'\") + \"'\";\n\t}\n\n\t/**\n\t\tCharacter codes of the characters that will be escaped by `quoteWinArg(_, true)`.\n\t*/\n\tpublic static var winMetaCharacters = [\" \".code, \"(\".code, \")\".code, \"%\".code, \"!\".code, \"^\".code, \"\\\"\".code, \"<\".code, \">\".code, \"&\".code, \"|\".code, \"\\n\".code, \"\\r\".code, \",\".code, \";\".code];\n\n\t/**\n\t\tReturns a String that can be used as a single command line argument\n\t\ton Windows.\n\t\tThe input will be quoted, or escaped if necessary, such that the output\n\t\twill be parsed as a single argument using the rule specified in\n\t\thttp://msdn.microsoft.com/en-us/library/ms880421\n\n\t\tExamples:\n\t\t```\n\t\tquoteWinArg(\"abc\") == \"abc\";\n\t\tquoteWinArg(\"ab c\") == '\"ab c\"';\n\t\t```\n\t*/\n\tpublic static function quoteWinArg(argument:String, escapeMetaCharacters:Bool):String {\n\t\t// If there is no space, tab, back-slash, or double-quotes, and it is not an empty string.\n\t\tif (!~/^[^ \\t\\\\\"]+$/.match(argument)) {\n\n\t\t\t// Based on cpython's subprocess.list2cmdline().\n\t\t\t// https://hg.python.org/cpython/file/50741316dd3a/Lib/subprocess.py#l620\n\n\t\t\tvar result = new StringBuf();\n\t\t\tvar needquote = argument.indexOf(\" \") != -1 || argument.indexOf(\"\\t\") != -1 || argument == \"\";\n\n\t\t\tif (needquote)\n\t\t\t\tresult.add('\"');\n\n\t\t\tvar bs_buf = new StringBuf();\n\t\t\tfor (i in 0...argument.length) {\n\t\t\t\tswitch (argument.charCodeAt(i)) {\n\t\t\t\t\tcase \"\\\\\".code:\n\t\t\t\t\t\t// Don't know if we need to double yet.\n\t\t\t\t\t\tbs_buf.add(\"\\\\\");\n\t\t\t\t\tcase '\"'.code:\n\t\t\t\t\t\t// Double backslashes.\n\t\t\t\t\t\tvar bs = bs_buf.toString();\n\t\t\t\t\t\tresult.add(bs);\n\t\t\t\t\t\tresult.add(bs);\n\t\t\t\t\t\tbs_buf = new StringBuf();\n\t\t\t\t\t\tresult.add('\\\\\"');\n\t\t\t\t\tcase c:\n\t\t\t\t\t\t// Normal char\n\t\t\t\t\t\tif (bs_buf.length > 0) {\n\t\t\t\t\t\t\tresult.add(bs_buf.toString());\n\t\t\t\t\t\t\tbs_buf = new StringBuf();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.addChar(c);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add remaining backslashes, if any.\n\t\t\tresult.add(bs_buf.toString());\n\n\t\t\tif (needquote) {\n\t\t\t\tresult.add(bs_buf.toString());\n\t\t\t\tresult.add('\"');\n\t\t\t}\n\n\t\t\targument = result.toString();\n\t\t}\n\n\t\tif (escapeMetaCharacters) {\n\t\t\tvar result = new StringBuf();\n\t\t\tfor (i in 0...argument.length) {\n\t\t\t\tvar c = argument.charCodeAt(i);\n\t\t\t\tif (winMetaCharacters.indexOf(c) >= 0) {\n\t\t\t\t\tresult.addChar(\"^\".code);\n\t\t\t\t}\n\t\t\t\tresult.addChar(c);\n\t\t\t}\n\t\t\treturn result.toString();\n\t\t} else {\n\t\t\treturn argument;\n\t\t}\n\t}\n\n\t#if java\n\tprivate static inline function _charAt(str:String, idx:Int):java.StdTypes.Char16 return untyped str._charAt(idx);\n\t#end\n\n\t#if neko\n\tprivate static var _urlEncode = neko.Lib.load(\"std\",\"url_encode\",1);\n\tprivate static var _urlDecode = neko.Lib.load(\"std\",\"url_decode\",1);\n\t#end\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nenum ValueType {\n\tTNull;\n\tTInt;\n\tTFloat;\n\tTBool;\n\tTObject;\n\tTFunction;\n\tTClass( c : Class<Dynamic> );\n\tTEnum( e : Enum<Dynamic> );\n\tTUnknown;\n}\n\n@:coreApi class Type {\n\n\tpublic static inline function getClass<T>( o : T ) : Class<T> {\n\t\treturn if (o == null) null else @:privateAccess js.Boot.getClass(o);\n\t}\n\n\tpublic static function getEnum( o : EnumValue ) : Enum<Dynamic> untyped {\n\t\tif( o == null )\n\t\t\treturn null;\n\t\treturn o.__enum__;\n\t}\n\n\tpublic static function getSuperClass( c : Class<Dynamic> ) : Class<Dynamic> untyped {\n\t\treturn c.__super__;\n\t}\n\n\n\tpublic static function getClassName( c : Class<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped c.__name__;\n\t\tif (a == null)\n\t\t\treturn null;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function getEnumName( e : Enum<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped e.__ename__;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function resolveClass( name : String ) : Class<Dynamic> untyped {\n\t\tvar cl : Class<Dynamic> = $hxClasses[name];\n\t\t// ensure that this is a class\n\t\tif( cl == null || !js.Boot.isClass(cl) )\n\t\t\treturn null;\n\t\treturn cl;\n\t}\n\n\tpublic static function resolveEnum( name : String ) : Enum<Dynamic> untyped {\n\t\tvar e : Dynamic = $hxClasses[name];\n\t\t// ensure that this is an enum\n\t\tif( e == null || !js.Boot.isEnum(e) )\n\t\t\treturn null;\n\t\treturn e;\n\t}\n\n\tpublic static function createInstance<T>( cl : Class<T>, args : Array<Dynamic> ) : T untyped {\n\t\tswitch( args.length ) {\n\t\tcase 0:\n\t\t\treturn __new__(cl);\n\t\tcase 1:\n\t\t\treturn __new__(cl,args[0]);\n\t\tcase 2:\n\t\t\treturn __new__(cl,args[0],args[1]);\n\t\tcase 3:\n\t\t\treturn __new__(cl,args[0],args[1],args[2]);\n\t\tcase 4:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3]);\n\t\tcase 5:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4]);\n\t\tcase 6:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5]);\n\t\tcase 7:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6]);\n\t\tcase 8:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);\n\t\tcase 9:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);\n\t\tcase 10:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);\n\t\tcase 11:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);\n\t\tcase 12:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);\n\t\tcase 13:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);\n\t\tcase 14:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);\n\t\tdefault:\n\t\t\tthrow \"Too many arguments\";\n\t\t}\n\t}\n\n\tpublic static function createEmptyInstance<T>( cl : Class<T> ) : T untyped {\n\t\t__js__(\"function empty() {}; empty.prototype = cl.prototype\");\n\t\treturn __js__(\"new empty()\");\n\t}\n\n\tpublic static function createEnum<T>( e : Enum<T>, constr : String, ?params : Array<Dynamic> ) : T {\n\t\tvar f:Dynamic = Reflect.field(e,constr);\n\t\tif( f == null ) throw \"No such constructor \"+constr;\n\t\tif( Reflect.isFunction(f) ) {\n\t\t\tif( params == null ) throw \"Constructor \"+constr+\" need parameters\";\n\t\t\treturn Reflect.callMethod(e,f,params);\n\t\t}\n\t\tif( params != null && params.length != 0 )\n\t\t\tthrow \"Constructor \"+constr+\" does not need parameters\";\n\t\treturn f;\n\t}\n\n\tpublic static function createEnumIndex<T>( e : Enum<T>, index : Int, ?params : Array<Dynamic> ) : T {\n\t\tvar c : String = (untyped e.__constructs__)[index];\n\t\tif( c == null ) throw index+\" is not a valid enum constructor index\";\n\t\treturn createEnum(e,c,params);\n\t}\n\n\tpublic static function getInstanceFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = [];\n\t\tuntyped __js__(\"for(var i in c.prototype) a.push(i)\");\n\t\ta.remove(\"__class__\");\n\t\ta.remove(\"__properties__\");\n\t\treturn a;\n\t}\n\n\tpublic static function getClassFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = Reflect.fields(c);\n\t\ta.remove(\"__name__\");\n\t\ta.remove(\"__interfaces__\");\n\t\ta.remove(\"__properties__\");\n\t\ta.remove(\"__super__\");\n\t\ta.remove(\"__meta__\");\n\t\ta.remove(\"prototype\");\n\t\treturn a;\n\t}\n\n\tpublic static inline function getEnumConstructs( e : Enum<Dynamic> ) : Array<String> {\n\t\treturn ((cast e).__constructs__ : Array<String>).copy();\n\t}\n\n\tpublic static function typeof( v : Dynamic ) : ValueType untyped {\n\t\tswitch( __js__(\"typeof\")(v) ) {\n\t\tcase \"boolean\": return TBool;\n\t\tcase \"string\": return TClass(String);\n\t\tcase \"number\":\n\t\t\t// this should handle all cases : NaN, +/-Inf and Floats outside range\n\t\t\tif( Math.ceil(v) == v%2147483648.0 )\n\t\t\t\treturn TInt;\n\t\t\treturn TFloat;\n\t\tcase \"object\":\n\t\t\tif( v == null )\n\t\t\t\treturn TNull;\n\t\t\tvar e = v.__enum__;\n\t\t\tif( e != null )\n\t\t\t\treturn TEnum(e);\n\t\t\tvar c = js.Boot.getClass(v);\n\t\t\tif( c != null )\n\t\t\t\treturn TClass(c);\n\t\t\treturn TObject;\n\t\tcase \"function\":\n\t\t\tif( js.Boot.isClass(v) || js.Boot.isEnum(v) )\n\t\t\t\treturn TObject;\n\t\t\treturn TFunction;\n\t\tcase \"undefined\":\n\t\t\treturn TNull;\n\t\tdefault:\n\t\t\treturn TUnknown;\n\t\t}\n\t}\n\n\tpublic static function enumEq<T>( a : T, b : T ) : Bool untyped {\n\t\tif( a == b )\n\t\t\treturn true;\n\t\ttry {\n\t\t\tif( a[0] != b[0] )\n\t\t\t\treturn false;\n\t\t\tfor( i in 2...a.length )\n\t\t\t\tif( !enumEq(a[i],b[i]) )\n\t\t\t\t\treturn false;\n\t\t\tvar e = a.__enum__;\n\t\t\tif( e != b.__enum__ || e == null )\n\t\t\t\treturn false;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic inline static function enumConstructor( e : EnumValue ) : String {\n\t\treturn untyped e[0];\n\t}\n\n\tpublic inline static function enumParameters( e : EnumValue ) : Array<Dynamic> {\n\t\treturn untyped e.slice(2);\n\t}\n\n\tpublic inline static function enumIndex( e : EnumValue ) : Int {\n\t\treturn untyped e[1];\n\t}\n\n\tpublic inline static function allEnums<T>( e : Enum<T> ) : Array<T> {\n\t\treturn untyped __define_feature__(\"Type.allEnums\", e.__empty_constructs__);\n\t}\n\n}\n\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tXml node types.\n\n\t@see https://haxe.org/manual/std-Xml.html\n**/\n@:enum abstract XmlType(Int) {\n\t/**\n\t\tRepresents an XML element type.\n\t**/\n\tvar Element = 0;\n\t/**\n\t\tRepresents XML parsed character data type.\n\t**/\n\tvar PCData = 1;\n\t/**\n\t\tRepresents XML character data type.\n\t**/\n\tvar CData = 2;\n\t/**\n\t\tRepresents an XML comment type.\n\t**/\n\tvar Comment = 3;\n\t/**\n\t\tRepresents an XML doctype element type.\n\t**/\n\tvar DocType = 4;\n\t/**\n\t \tRepresents an XML processing instruction type.\n\t**/\n\tvar ProcessingInstruction = 5;\n\t/**\n\t\tRepresents an XML document type.\n\t**/\n\tvar Document = 6;\n}\n\n/**\n\tCross-platform Xml API.\n\n\t@see https://haxe.org/manual/std-Xml.html\n**/\nclass Xml {\n\t/**\n\t\tXML element type.\n\t**/\n\tstatic public var Element(default,never) = XmlType.Element;\n\t/**\n\t\tXML parsed character data type.\n\t**/\n\tstatic public var PCData(default,never) = XmlType.PCData;\n\t/**\n\t\tXML character data type.\n\t**/\n\tstatic public var CData(default,never) = XmlType.CData;\n\t/**\n\t\tXML comment type.\n\t**/\n\tstatic public var Comment(default,never) = XmlType.Comment;\n\t/**\n\t\tXML doctype element type.\n\t**/\n\tstatic public var DocType(default,never) = XmlType.DocType;\n\t/**\n\t \tXML processing instruction type.\n\t**/\n\tstatic public var ProcessingInstruction(default,never) = XmlType.ProcessingInstruction;\n\t/**\n\t\tXML document type.\n\t**/\n\tstatic public var Document(default,never) = XmlType.Document;\n\n\t/**\n\t\tParses the String into an Xml document.\n\t**/\n\tstatic public function parse( str : String ) : Xml {\n\t\treturn haxe.xml.Parser.parse(str);\n\t}\n\n\t/**\n\t\tReturns the type of the Xml Node. This should be used before\n\t\taccessing other functions since some might raise an exception\n\t\tif the node type is not correct.\n\t**/\n\tpublic var nodeType(default, null) : XmlType;\n\n\t/**\n\t\tReturns the node name of an Element.\n\t**/\n\t@:isVar public var nodeName(get, set) : String;\n\n\t/**\n\t\tReturns the node value. Only works if the Xml node is not an Element or a Document.\n\t**/\n\t@:isVar public var nodeValue(get, set) : String;\n\n\t/**\n\t\tReturns the parent object in the Xml hierarchy.\n\t\tThe parent can be `null`, an Element or a Document.\n\t**/\n\tpublic var parent(default, null) : Xml;\n\n\tvar children:Array<Xml>;\n\tvar attributeMap:Map<String, String>;\n\n\t#if !cppia inline #end function get_nodeName() {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\treturn nodeName;\n\t}\n\n\t#if !cppia inline #end function set_nodeName(v) {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\treturn this.nodeName = v;\n\t}\n\n\t#if !cppia inline #end function get_nodeValue() {\n\t\tif (nodeType == Document || nodeType == Element) {\n\t\t\tthrow 'Bad node type, unexpected $nodeType';\n\t\t}\n\t\treturn nodeValue;\n\t}\n\n\t#if !cppia inline #end function set_nodeValue(v) {\n\t\tif (nodeType == Document || nodeType == Element) {\n\t\t\tthrow 'Bad node type, unexpected $nodeType';\n\t\t}\n\t\treturn this.nodeValue = v;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createElement( name : String ) : Xml {\n\t\tvar xml = new Xml(Element);\n\t\txml.nodeName = name;\n\t\treturn xml;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createPCData( data : String ) : Xml {\n\t\tvar xml = new Xml(PCData);\n\t\txml.nodeValue = data;\n\t\treturn xml;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createCData( data : String ) : Xml {\n\t\tvar xml = new Xml(CData);\n\t\txml.nodeValue = data;\n\t\treturn xml;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createComment( data : String ) : Xml {\n\t\tvar xml = new Xml(Comment);\n\t\txml.nodeValue = data;\n\t\treturn xml;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createDocType( data : String ) : Xml {\n\t\tvar xml = new Xml(DocType);\n\t\txml.nodeValue = data;\n\t\treturn xml;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createProcessingInstruction( data : String ) : Xml {\n\t\tvar xml = new Xml(ProcessingInstruction);\n\t\txml.nodeValue = data;\n\t\treturn xml;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createDocument() : Xml {\n\t\treturn new Xml(Document);\n\t}\n\n\t/**\n\t\tGet the given attribute of an Element node. Returns `null` if not found.\n\t\tAttributes are case-sensitive.\n\t**/\n\tpublic function get( att : String ) : String {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\treturn attributeMap[att];\n\t}\n\n\t/**\n\t\tSet the given attribute value for an Element node.\n\t\tAttributes are case-sensitive.\n\t**/\n\tpublic function set( att : String, value : String ) : Void {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\tattributeMap.set(att, value);\n\t}\n\n\t/**\n\t\tRemoves an attribute for an Element node.\n\t\tAttributes are case-sensitive.\n\t**/\n\tpublic function remove( att : String ) : Void {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\tattributeMap.remove(att);\n\t}\n\n\t/**\n\t\tTells if the Element node has a given attribute.\n\t\tAttributes are case-sensitive.\n\t**/\n\tpublic function exists( att : String ) : Bool {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\treturn attributeMap.exists(att);\n\t}\n\n\t/**\n\t\tReturns an `Iterator` on all the attribute names.\n\t**/\n\tpublic function attributes() : Iterator<String> {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\treturn attributeMap.keys();\n\t}\n\n\t/**\n\t\tReturns an iterator of all child nodes.\n\t\tOnly works if the current node is an Element or a Document.\n\t**/\n\tpublic #if !cppia inline #end function iterator() : Iterator<Xml> {\n\t\tensureElementType();\n\t\treturn children.iterator();\n\t}\n\n\t/**\n\t\tReturns an iterator of all child nodes which are Elements.\n\t\tOnly works if the current node is an Element or a Document.\n\t**/\n\tpublic function elements() : Iterator<Xml> {\n\t\tensureElementType();\n\t\tvar ret = [for (child in children) if (child.nodeType == Element) child];\n\t\treturn ret.iterator();\n\t}\n\n\t/**\n\t\tReturns an iterator of all child nodes which are Elements with the given nodeName.\n\t\tOnly works if the current node is an Element or a Document.\n\t**/\n\tpublic function elementsNamed( name : String ) : Iterator<Xml> {\n\t\tensureElementType();\n\t\tvar ret = [for (child in children) if (child.nodeType == Element && child.nodeName == name) child];\n\t\treturn ret.iterator();\n\t}\n\n\t/**\n\t\tReturns the first child node.\n\t**/\n\tpublic #if !cppia inline #end function firstChild() : Xml {\n\t\tensureElementType();\n\t\treturn children[0];\n\t}\n\n\t/**\n\t\tReturns the first child node which is an Element.\n\t**/\n\tpublic function firstElement() : Xml {\n\t\tensureElementType();\n\t\tfor (child in children) {\n\t\t\tif (child.nodeType == Element) {\n\t\t\t\treturn child;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t\tAdds a child node to the Document or Element.\n\t\tA child node can only be inside one given parent node, which is indicated by the `parent` property.\n\t\tIf the child is already inside this Document or Element, it will be moved to the last position among the Document or Element's children.\n\t\tIf the child node was previously inside a different node, it will be moved to this Document or Element.\n\t**/\n\tpublic function addChild( x : Xml ) : Void {\n\t\tensureElementType();\n\t\tif (x.parent != null) {\n\t\t\tx.parent.removeChild(x);\n\t\t}\n\t\tchildren.push(x);\n\t\tx.parent = this;\n\t}\n\n\t/**\n\t\tRemoves a child from the Document or Element.\n\t\tReturns true if the child was successfuly removed.\n\t**/\n\tpublic function removeChild( x : Xml ) : Bool {\n\t\tensureElementType();\n\t\tif (children.remove(x)) {\n\t\t\tx.parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t\tInserts a child at the given position among the other childs.\n\t\tA child node can only be inside one given parent node, which is indicated by the [parent] property.\n\t\tIf the child is already inside this Document or Element, it will be moved to the new position among the Document or Element's children.\n\t\tIf the child node was previously inside a different node, it will be moved to this Document or Element.\n\t**/\n\tpublic function insertChild( x : Xml, pos : Int ) : Void {\n\t\tensureElementType();\n\t\tif (x.parent != null) {\n\t\t\tx.parent.children.remove(x);\n\t\t}\n\t\tchildren.insert(pos, x);\n\t\tx.parent = this;\n\t}\n\n\t/**\n\t\tReturns a String representation of the Xml node.\n\t**/\n\tpublic #if !cppia inline #end function toString() : String {\n\t\treturn haxe.xml.Printer.print(this);\n\t}\n\n\tfunction new(nodeType:XmlType) {\n\t\tthis.nodeType = nodeType;\n\t\tchildren = [];\n\t\tattributeMap = new Map();\n\t}\n\n\tinline function ensureElementType() {\n\t\tif (nodeType != Document && nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element or Document but found $nodeType';\n\t\t}\n\t}\n}\n","package art;\n\nimport js.html.CanvasRenderingContext2D;\nimport js.Browser.window;\nimport js.Browser.document;\nimport Sketch.Global.*;\n// import cc.tool.export.ExportWrapperFake;\nimport cc.tool.export.IExportWrapper;\n\nclass CCBase extends Sketch.SketchBase implements ICCBase {\n\t// public var export:IExportWrapper; // just a dummy class so I don't have to delete the export\n\n\t/**\n\t * set types for sketch\n\t */\n\tpublic var type(get_type, set_type):Array<CCType>;\n\n\tprivate var _type:Array<CCType> = [BASE];\n\n\t/**\n\t * title of sketch (default: package.className)\n\t * @example:\n\t * \t\ttrace(title); // \"art.CCBase\"\n\t */\n\tpublic var title(get_title, set_title):String;\n\n\tprivate var _title:String = '';\n\n\t/**\n\t * description of sketch (default: '')\n\t */\n\tpublic var description(get_description, set_description):String;\n\n\tprivate var _description:String = '';\n\n\t/**\n\t * constructor\n\t * @param ctx\n\t */\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t}\n\n\t// ____________________________________ getter/setter ____________________________________\n\n\tfunction get_description():String {\n\t\treturn _description;\n\t}\n\n\tfunction set_description(value:String):String {\n\t\treturn _description = value;\n\t}\n\n\tfunction get_title():String {\n\t\tif (_title == '')\n\t\t\t_title = toString();\n\t\treturn _title;\n\t}\n\n\tfunction set_title(value:String):String {\n\t\treturn _title = value;\n\t}\n\n\tfunction get_type():Array<CCType> {\n\t\treturn _type;\n\t}\n\n\tfunction set_type(value:Array<CCType>):Array<CCType> {\n\t\treturn _type = value;\n\t}\n}\n\n@:enum abstract CCType(String) {\n\tvar ANIMATION = 'Animation';\n\tvar INTERACTIVE = 'Interactive';\n\tvar TOOL = 'Tool';\n\tvar IMAGE = 'Image';\n\tvar RANDOM = 'Random';\n\tvar TEST = 'Test';\n\tvar BASE = 'Base';\n}\n","package art;\n\n// quick and dirty import for Haxe JavaScript\nimport js.Browser.*;\nimport js.html.*;\n\n//\tquick and dirtier way to create Globals\nimport Sketch.Global.*;\n\n//  syntactic sugar to extend CanvasRenderingContext2D\n// using lib.CanvasTools;\n\nclass CC000 extends CCBase implements ICCBase {\n\n\tvar xpos : Int = 10;\n\tvar ypos : Int = 10;\n\tvar rotate : Int = 0;\n\tvar size : Int = 10;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t}\n\n\toverride function draw(){\n\t\ttrace('draw: ${toString()}');\n\t\t// xpos++;\n\t\t// ypos++;\n\t\trotate++;\n\t\tsize++;\n\t\tctx.save();\n\t\tctx.translate(w/2, h/2);\n\t\tctx.rotate(rotate);\n\t\tctx.centreStrokeRect(0, 0, size);\n\t\tctx.restore();\n\n\t\tif(size >= 1000) pause();\n\n\t\t// console.log(\"mouseX:\" + mouseX + \" // mouseY: \" + mouseY);\n\t}\n}","package art;\n\n// quick and dirty import for Haxe JavaScript\nimport js.Browser.*;\nimport js.html.*;\n\n//\tquick and dirtier way to create Globals\nimport Sketch.Global.*;\n\n//  syntactic sugar to extend CanvasRenderingContext2D\n// using lib.CanvasTools;\n\nclass CC001 extends CCBase implements ICCBase {\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t}\n\n\toverride function draw(){\n\t\ttrace('draw: ${toString()}');\n\t\t// create black background with white circle\n\t\tctx.background(0,0,0);\n\t\tctx.fillColour(255,255,255);\n\t\tctx.fillCircle(w/2, h/2, 100);\n\t\tpause();\n\t}\n}","package art;\n\n// quick and dirty import for Haxe JavaScript\nimport js.Browser.*;\nimport js.html.*;\n\n//\tquick and dirtier way to create Globals\nimport Sketch.Global.*;\n// import ColorUtil.*;\n\n//  syntactic sugar to extend CanvasRenderingContext2D\n// using lib.CanvasTools;\n\nclass CC002 extends CCBase implements ICCBase {\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t}\n\n\toverride function draw(){\n\t\ttrace('draw: ${toString()}');\n\t\t// ctx.triangle(Math.floor(w/2), 100, Math.floor(w/3), 300, Math.floor(w/3)*2, 300);\n\t\tctx.fillColour(LIME.r, LIME.g, LIME.b);\n\t\t// ctx.fillColour(255,255,255);\n\t\tctx.fillEllipse(w/2,h/2,100,200);\n\t\tpause();\n\t}\n}","package art;\n\n// quick and dirty import for Haxe JavaScript\nimport js.Browser.*;\nimport js.html.*;\n\n// easy access to Globals\nimport Sketch.Global.*;\n// easy access to the utils\n// import MathUtil.*;\n// import ColorUtil.*;\n// import lib.util.AnimateUtil.*;\n// easy access to typedef\n// import lib.AST;\n\n// syntactic sugar to extend CanvasRenderingContext2D\n// using lib.CanvasTools;\n\n\n/**\n * maximum nr balls bouncing around and changing color when bounce, with trail\n */\nclass CC003 extends CCBase implements ICCBase {\n\n\tvar maxBalls = 10;\n\tvar sizeBall = 20;\n\tvar ballArray : Array<Ball> = [];\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t}\n\n\t/**\n\t * create balls that bounce of the border of the canvas\n\t */\n\toverride public function setup(){\n\t\ttrace('setup: ${toString()}');\n\t\tctx.background(255,255,255, 0.2);\n\t\tfor (i in 0...maxBalls){\n\t\t\tballArray.push( createBall() );\n\t\t}\n\t}\n\n\toverride function draw(){\n\t\tmoveBall();\n\t\tdrawBall();\n\t}\n\n\tfunction createBall() : Ball{\n\t\tvar ball : Ball = {\n\t\t\tx: random(sizeBall/2, w-(sizeBall/2)),\n\t\t\ty: random(sizeBall/2, h-(sizeBall/2)),\n\t\t\tspeed_x: random(-5, 5),\n\t\t\tspeed_y: random(-5, 5),\n\t\t\tsize: sizeBall,\n\t\t\tcolour: rgb(randomInt(55),randomInt(255),0)\n\t\t}\n\t\treturn ball;\n\t}\n\n\tfunction moveBall(){\n\t\tfor ( i in 0 ... ballArray.length ) {\n\t\t\tvar b = ballArray[i];\n\t\t\tb.x = b.x + b.speed_x;\n\t\t\tb.y = b.y + b.speed_y;\n\t\t\tif (bounce(b.x, 0, w, b.size)) {\n\t\t\t\tb.speed_x *=-1;\n\t\t\t\tb.colour = rgb(randomInt(55),randomInt(255),0);\n\t\t\t}\n\t\t\tif (bounce(b.y, 0 ,h, b.size)) {\n\t\t\t\tb.speed_y *=-1;\n\t\t\t\tb.colour = rgb(0, randomInt(255),randomInt(55));\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawBall(){\n\t\tfor ( i in 0 ... ballArray.length ) {\n\t\t\tvar b = ballArray[i];\n\t\t\tctx.fillStyle = b.colour;\n\t\t\tctx.fillCircle(b.x, b.y, b.size);\n\t\t\t// ctx.fillEllipse(b.x, b.y, b.size, b.size);\n\t\t}\n\t}\n\n}","package art;\n\n// quick and dirty import for Haxe JavaScript\nimport js.Browser.*;\nimport js.html.*;\n\n\n\n\n/**\n * a lot of balls bouncin of the walls, no trail\n * draw lines beteen\n */\nclass CC004 extends CCBase implements ICCBase {\n\n\tvar maxDistance = 100;\n\tvar maxBalls = 200;\n\tvar sizeBall = 3;\n\tvar ballArray : Array<Ball> = [];\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t}\n\n\toverride function setup(){\n\t\ttrace('${toString()} :: setup()');\n\t\t// reset everything for resize\n\t\tballArray = [];\n\t\tfor (i in 0...maxBalls){\n\t\t\tballArray.push( createBall() );\n\t\t}\n\t}\n\n\toverride function draw(){\n\t\tmoveBall();\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.background(0,0,0);\n\t\tdrawBall();\n\t}\n\n\tfunction createBall() : Ball{\n\t\tvar ball : Ball = {\n\t\t\tx: random(sizeBall/2, w-(sizeBall/2)),\n\t\t\ty: random(sizeBall/2, h-(sizeBall/2)),\n\t\t\tspeed_x: random(-0.5, 0.5),\n\t\t\tspeed_y: random(-0.5, 0.5),\n\t\t\tsize: sizeBall,\n\t\t\tcolour: rgb(255,255,255),\n\t\t}\n\t\treturn ball;\n\t}\n\n\tfunction moveBall(){\n\t\tfor ( i in 0 ... ballArray.length ) {\n\t\t\tvar b = ballArray[i];\n\t\t\tb.x = b.x + b.speed_x;\n\t\t\tb.y = b.y + b.speed_y;\n\t\t\tif (bounce(b.x, 0, w, b.size)) {\n\t\t\t\tb.speed_x *=-1;\n\t\t\t\t// b.colour = rgb(randomInt(55),randomInt(255),0);\n\t\t\t}\n\t\t\tif (bounce(b.y, 0 ,h, b.size)) {\n\t\t\t\tb.speed_y *=-1;\n\t\t\t\t// b.colour = rgb(0, randomInt(255),randomInt(55));\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawBall(){\n\n\t\tfor ( i in 0 ... ballArray.length ) {\n\t\t\tvar b1 = ballArray[i];\n\t\t\tctx.fillStyle = b1.colour;\n\t\t\tctx.fillCircle(b1.x, b1.y, b1.size);\n\n\t\t\tfor ( j in 0 ... ballArray.length ) {\n\t\t\t\tvar b2 = ballArray[j];\n\t\t\t\tif(b1 == b2) continue;\n\t\t\t\tvar _dist = distance(b1.x, b1.y, b2.x, b2.y);\n\t\t\t\t// trace('-----\\n ${b1} / ${b2} -- ${_dist}');\n\t\t\t\tif(_dist < maxDistance){\n\t\t\t\t\tvar alpha : Float = 0.8 - (_dist/maxDistance); // 0.5\n\t\t\t\t\t// trace(alpha);\n\n\t\t\t\t\tctx.lineColour(WHITE.r,WHITE.g,WHITE.b,alpha);\n\t\t\t\t\tctx.line(b1.x, b1.y, b2.x, b2.y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}","package art;\n\n// quick and dirty import for Haxe JavaScript\nimport js.Browser.*;\nimport js.html.*;\n\n\n/**\n * create grid, show all version illustration\n */\nclass CC005 extends CCBase implements ICCBase {\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\t\tvar padding = 100;\n\t\tvar arr:Array<Point> = GridUtil.createGrid(padding, padding, w - (2 * padding), h - (2 * padding), 3, 4);\n\t\t// console.table(arr);\n\t\tfor (i in 0...arr.length) {\n\t\t\tvar point:Point = arr[i];\n\t\t\tctx.registerPoint(point.x, point.y);\n\t\t}\n\n\t\tvar _size = 50;\n\t\tvar _width = _size;\n\t\tvar _height = 25;\n\t\tctx.colour(NAVY.r, NAVY.g, NAVY.b,0.5);\n\n\t\tvar point = arr[0];\n\t\tctx.centreFillRect(point.x, point.y, _size, _size);\n\n\t\tvar point = arr[1];\n\t\tctx.circle(point.x, point.y, _size);\n\n\t\tvar point = arr[2];\n\t\tctx.fillEllipse(point.x, point.y, _width, _height);\n\n\t\tvar point = arr[3];\n\t\t// ctx.lineWidth = 10;\n\t\tctx.lineColour(NAVY.r, NAVY.g, NAVY.b,0.5);\n\t\tctx.line(point.x, point.y, point.x+_width, point.y+_height);\n\n\t\tvar point = arr[4];\n\t\tctx.fillTriangle(point.x, point.y-_height, point.x-_width, point.y-_height, point.x+_width, point.y+_height);\n\n\t\tvar point = arr[5];\n\t\tctx.fillPolygon(point.x, point.y, 8, _size);\n\n\t\tvar point = arr[6];\n\t\tctx.fillPolygon(point.x, point.y, 3, _size);\n\n\t\tvar point = arr[7];\n\t\tctx.eqDownFillTriangle(point.x, point.y, _size);\n\n\t\tvar point = arr[8];\n\t\tctx.eqDownTriangle(point.x, point.y, _size);\n\n\t\tvar point = arr[9];\n\t\tctx.roundRect(point.x, point.y,100, 100, 10);\n\n\t\t// text\n\t\tText.fillText(ctx, 'Matthijs Kamstra aka [mck]', padding/2, padding/2, 'Unica+One');\n\t\tText.fillText(ctx, 'Matthijs Kamstra aka [mck]', padding/2, padding*2, 'Nova+Mono');\n\n\t\t// var link = document.createLinkElement();\n\t\t// link.href = \"https://fonts.googleapis.com/css?family=Nova+Mono\";\n\t\t// link.rel = \"stylesheet\";\n\t\t// link.id = \"\";\n\t\t// document.body.appendChild(link);\n\n\t\t// ctx.font = '20px \"Nova Mono, monospace\"';\n\t\t// ctx.fillText('Matthijs Kamstra aka [mck]', padding/2, padding/2);\n\n\t}\n\n\toverride function draw() {\n\t\tstop();\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC006 extends CCBase implements ICCBase {\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t\twindow.addEventListener(KEY_DOWN, function (e:js.html.KeyboardEvent){\n\t\t\tif (e.key == ' '){\n\t\t\t\ttrace('redraw');\n\t\t\t\tsetup();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\t\tvar _size = 50;\n\t\tvar _x = 0;\n\t\tvar _y = 0;\n\t\tvar _numHor = Math.ceil(w / _size); // 100;\n\t\tvar _numVer = Math.ceil(h / _size); // 100;\n\t\tvar arr:Array<Point> = GridUtil.createGrid(_x, _y, w - (2 * _x), h - (2 * _y), _numHor, _numVer);\n\t\tif (isDebug) ShapeUtil.gridRegister(ctx, arr);\n\n\t\tfor (i in 0...arr.length) {\n\t\t\tvar p:Point = arr[i];\n\n\t\t\tvar c = ColorUtil.randomColour();\n\t\t\tctx.fillStyle = c;\n\t\t\tctx.strokeWeight (0);\n\t\t\tctx.centreFillRect(p.x, p.y, _size, _size);\n\t\t}\n\t}\n\n\toverride function draw() {\n\t\ttrace('draw: ${toString()}');\n\t\tstop();\n\t}\n}\n","package art;\n\n/**\n *\n */\nclass CC007 extends CCBase implements ICCBase {\n\n\tvar maxDistance = 100;\n\tvar maxBalls = 100;\n\tvar sizeBall = 10;\n\tvar ballArray : Array<AnimateObj> = [];\n\tvar startTime : Float;\n\tvar startDate : Float;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t\t// HelperUtil.stats();\n\t\t// trace('wait 3 seconds');\n\t\t// haxe.Timer.delay(testTimer, 3000); // 1 milisecond delay\n\t}\n\tfunction testTimer(){\n\t\tstartTime = haxe.Timer.stamp();\n\t\tstartDate = Date.now().getTime();\n\t\tonCompleteHandler(null);\n\t\tGo.timer(1).onComplete(onCompleteHandler,[1]);\n\t\tGo.timer(2).onComplete(onCompleteHandler,[2]);\n\t\tGo.timer(5).onComplete(onCompleteHandler,[5]);\n\t\tGo.timer(1.5).onComplete(onCompleteHandler,[1.5]);\n\t\tGo.timer(2).onComplete(onCompleteHandler,[2]);\n\t\tGo.timer(4).onComplete(onCompleteHandler,[4]);\n\t\tGo.timer(8).onComplete(onCompleteHandler,[8]);\n\t}\n\tfunction onCompleteHandler(value){\n\t\tvar totalTime = (haxe.Timer.stamp()- startTime);\n\t\tvar totalDate = (Date.now().getTime()- startDate)/1000;\n\t\ttrace('done: $value seconds - date: $totalDate , time: $totalTime');\n\t}\n\n\toverride function setup(){\n\t\ttrace('setup: ${toString()}');\n\t\t// var rgb = randomColourObject();\n\t\t// ctx.strokeColour(rgb.r, rgb.g, rgb.b);\n\t\t// ctx.xcross(w/2, h/2, 200);\n\t\tballArray = [];\n\t\tfor (i in 0...maxBalls){\n\t\t\tvar ball = createBall();\n\t\t\tballArray.push( ball );\n\t\t\tballAnimate(ball);\n\t\t\t// Go.to(ball, random(1,10)).x(random(0,w)).y(random(0,h)).onComplete(ballAnimate,[ball]);\n\t\t}\n\t}\n\n\tfunction ballAnimate(ball:AnimateObj){\n\t\tGo.to(ball, random(1,10)).x(random(0,w)).y(random(0,h)).onComplete(ballAnimate,[ball]).ease(Sine.easeInOut);\n\t}\n\n\tfunction createBall() : AnimateObj{\n\t\tvar ball : AnimateObj = {\n\t\t\tx: random(sizeBall/2, w-(sizeBall/2)),\n\t\t\ty: random(sizeBall/2, h-(sizeBall/2)),\n\t\t\tsize: random(sizeBall, sizeBall*4),\n\t\t\tcolor:randomColour(),\n\t\t}\n\t\treturn ball;\n\t}\n\n\n\tfunction drawBall(){\n\t\tfor ( i in 0 ... ballArray.length ) {\n\t\t\tvar b1 = ballArray[i];\n\t\t\tctx.fillStyle = b1.color;\n\t\t\tctx.fillCircle(b1.x, b1.y, b1.size);\n\t\t}\n\n\t}\n\n\toverride function draw(){\n\t\t// trace('draw: ${toString()}');\n\t\t// moveBall();\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.background(WHITE.r,WHITE.g,WHITE.b);\n\t\tdrawBall();\n\t\t// stop();\n\t}\n}","package cc.lets;\n\nimport cc.lets.Easing;\nimport haxe.Timer;\nimport cc.lets.easing.Quad;\nimport cc.lets.easing.IEasing;\nimport js.Browser.*;\n\n/**\n * version\n * \t\t1.0.6 - convert to js only\n * \t\t1.0.7 - wiggle\n */\nclass Go {\n\t// private static var _trigger:Timer;\n\t// private static var _trigger:Int; // requestAnimationFrame\n\tprivate static var _requestId:Int; // requestAnimationFrame\n\tprivate static var _tweens:Array<Go> = new Array<Go>();\n\n\tprivate var _id:String;\n\tprivate var _target:Dynamic;\n\tprivate var _duration:Int; // is set in seconds, but is eventually converted to miliseconds\n\t// private var _easing:Float->Float = Easing.linear;\n\tprivate var _easing:IEasing = Quad.easeOut;\n\tprivate var _options:Dynamic = cast {};\n\tprivate var _props = new Map<String, Range>();\n\tprivate var _isFrom:Bool = false;\n\tprivate var _isYoyo:Bool = false;\n\tprivate var _isWiggle:Bool = false;\n\tprivate var _isTimeBased:Bool = false; // default is frameBased\n\tprivate var _isDelayDone:Bool = false; // default is frameBased\n\tprivate var _initTime:Int = 0; // should work with time (miliseconds) and frames (FPS)\n\tprivate var _delay:Int = 0;\n\tprivate var _seconds:Float = 0;\n\tprivate var FRAME_RATE:Int = 60; // 60 frames per second (FPS)\n\tprivate var DEBUG:Bool = false;\n\tprivate var VERSION:String = '1.0.7';\n\n\t/**\n\t * Animate an object to another state (like position, scale, rotation, alpha)\n\t *\n\t * @example\t\tcc.lets.Go.to(foobarMc, 1.5);\n\t *\n\t * @param  target   \tobject to animate\n\t * @param  duration \tin seconds\n\t */\n\tpublic function new(target:Dynamic, duration:Float) {\n\t\tthis._id = '[lets.Go]$VERSION.' + Date.now().getTime();\n\t\tthis._seconds = duration;\n\t\tthis._target = target;\n\t\tthis._duration = getDuration(duration);\n\t\t// this._options = cast{};\n\t\tif (_isTimeBased) {\n\t\t\tthis._initTime = getTimer();\n\t\t} else {\n\t\t\tthis._initTime = this._duration;\n\t\t}\n\t\t_tweens.push(this);\n\t\tif (DEBUG)\n\t\t\tconsole.log('New Go - _id: \"$_id\" / _duration: ' + _duration + ' / _initTime: ' + _initTime + ' / _tweens.length: ' + _tweens.length);\n\t\t// [mck] extreme little delay to make sure all the values are set\n\t\t// init();\n\t\thaxe.Timer.delay(init, 1); // 1 milisecond delay\n\n\t\t// [mck] TODO check if there is a tween attached to the same animation?\n\t}\n\n\t/**\n\t * Animate an object TO another state (like position, scale, rotation, alpha)\n\t *\n\t * @example\t\tlets.Go.to(foobarMc, 1.5);\n\t *\n\t * @param  target   \tobject to animate\n\t * @param  duration \tin seconds\n\t * @return          Go\n\t */\n\tstatic inline public function to(target:Dynamic, duration:Float):Go {\n\t\tvar Go = new Go(target, duration);\n\t\tGo._isFrom = false;\n\t\treturn Go;\n\t}\n\n\t/**\n\t * Animate an object FROM another state (like position, scale, rotation, alpha)\n\t *\n\t * @example\t\tlets.Go.from(foobarMc, 1.5);\n\t *\n\t * @param  target   \tobject to animate\n\t * @param  duration \tin seconds\n\t * @return          Go\n\t */\n\tstatic inline public function from(target:Dynamic, duration:Float):Go {\n\t\tvar Go = new Go(target, duration);\n\t\tGo._isFrom = true;\n\t\tGo.updateProperties(0); // this can't be done faster\n\t\treturn Go;\n\t}\n\n\t/**\n\t * Use Go to do a delayed call to a function\n\t *\n\t * @example\t\tlets.Go.timer(1.5).onComplete(onCompleteHandler);\n\t *\n\t * @param  duration \tin seconds\n\t * @return          Go\n\t */\n\tstatic inline public function timer(duration:Float):Go {\n\t\tvar Go = new Go({}, duration);\n\t\treturn Go;\n\t}\n\n\t/**\n\t * continues wiggling of an object in random x and y dir\n\t *\n\t * @example\t\tGo.wiggle(foobarMc, 10, 10, 10);\n\t *\n\t * @param x\t\t\t\tcenterpoint x\n\t * @param y\t\t\t\tcenterpoint y\n\t * @param wiggleRoom\toffset from x and y\n\t * @return Go\n\t */\n\tstatic inline public function wiggle(target:Dynamic, x:Float, y:Float, ?wiggleRoom:Float = 10):Go {\n\t\tvar _go = new Go(target, 1 + (Math.random()));\n\t\t_go._isWiggle = true;\n\t\t// Go._isYoyo = true;\n\t\tvar max = wiggleRoom;\n\t\tvar min = -wiggleRoom;\n\t\t_go.prop('x', x + (Math.random() * (max - min)) + min);\n\t\t_go.prop('y', y + (Math.random() * (max - min)) + min);\n\t\t_go.ease(cc.lets.easing.Sine.easeInOut);\n\t\t_go.onComplete(function() {\n\t\t\tGo.wiggle(target, x, y, wiggleRoom);\n\t\t});\n\t\treturn _go;\n\t}\n\n\t/**\n\t * default the animation is framebased (`requestAnimationFrame`) and will stop animating when focus is gone\n\t * but perhaps time is important\n\t *\n\t * @example\t\tGo.from(foobarMc, 1.5).isTimeBased();\n\t *\n\t * @param  isTimeBased  (optional)\n\t * @return Go\n\t */\n\tinline public function isTimeBased(?isTimeBased:Bool = true):Go {\n\t\ttrace('Fixme: this doesn\\t work right now');\n\t\t_isTimeBased = isTimeBased;\n\t\t_duration = Std.int(_duration / FRAME_RATE);\n\t\treturn this;\n\t}\n\n\t// ____________________________________ properties ____________________________________\n\n\t/**\n\t * [Description]\n\t * @param value\n\t * @return Go\n\t */\n\tinline public function width(value:Float):Go {\n\t\tprop('width', value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * [Description]\n\t * @param value\n\t * @return Go\n\t */\n\tinline public function height(value:Float):Go {\n\t\tprop('height', value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * change the x value of an object\n\t *\n\t  \t * @example\t\tGo.to(foobarMc, 1.5).x(10);\n\t *\n\t * @param  value \tx-position\n\t * @return       Go\n\t */\n\tinline public function x(value:Float):Go {\n\t\tprop('x', value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * change the y value of an object\n\t *\n\t  \t * @example\t\tGo.to(foobarMc, 1.5).y(10);\n\t *\n\t * @param  value \ty-position\n\t * @return       Go\n\t */\n\tinline public function y(value:Float):Go {\n\t\tprop('y', value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * change the y value of an object\n\t *\n\t * @example\t\tGo.to(foobarMc, 1.5).pos(10,20);\n\t *\n\t * @param  x \tx-position\n\t * @param  y \ty-position\n\t * @return       Go\n\t */\n\tinline public function pos(x:Float, y:Float):Go {\n\t\tprop('x', x);\n\t\tprop('y', y);\n\t\treturn this;\n\t}\n\n\t/**\n\t * change the rotation value of an object\n\t *\n\t  \t * @example\t\tGo.to(foobarMc, 1.5).rotation(10);\n\t *\n\t * @param  degree \trotation in degrees (360)\n\t * @return       Go\n\t */\n\tinline public function rotation(degree:Float):Go {\n\t\tprop('rotation', degree);\n\t\treturn this;\n\t}\n\n\tinline public function degree(degree:Float):Go {\n\t\tprop('rotation', degree);\n\t\treturn this;\n\t}\n\n\tinline public function radians(degree:Float):Go {\n\t\tprop('rotation', degree * Math.PI / 180);\n\t\treturn this;\n\t}\n\n\t// [mck] do I need a conversion between degree and radians?\n\n\t/**\n\t * change the alpha value of an object\n\t *\n\t  \t * @example\t\tGo.to(foobarMc, 1.5).alpha(.1);\n\t *\n\t * @param  value \ttransparanty value (maximum value 1)\n\t * @return       Go\n\t */\n\tinline public function alpha(value:Float):Go {\n\t\tprop('alpha', value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * change the scale of an object\n\t *\n\t  \t * @example\t\tGo.to(foobarMc, 1.5).scale(2);\n\t *\n\t * @param  value \tscale (1 is 100% (original scale), 0.5 is 50%, 2 is 200%)\n\t * @return       Go\n\t */\n\tinline public function scale(value:Float):Go {\n\t\tprop('scaleX', value); // might be values needed from previous Go version\n\t\tprop('scaleY', value); // might be values needed from previous Go version\n\t\tprop('scale', value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * yoyo to the original values of an object\n\t * its back and forth, only once.. use oncomplete to continuesly to do this\n\t *\n\t * @example\t\tGo.to(foobarMc, 1.5).yoyo();\n\t *\n\t * @return       Go\n\t */\n\tinline public function yoyo():Go {\n\t\t_isYoyo = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * delay the animation in seconds\n\t *\n\t * @example\t\tGo.to(foobarMc, 1.5).delay(1.5);\n\t *\n\t * @param duration \tdelay in seconds\n\t * @return       Go\n\t */\n\tinline public function delay(duration:Float):Go {\n\t\t_delay = getDuration(duration);\n\t\treturn this;\n\t}\n\n\t/**\n\t * change the property of an object\n\t *\n\t * @example\t\tGo.to(foobarMc, 1.5).prop('counter',10);\n\t *\n\t * @param  key   \tdescription of the property as string\n\t * @param  value \tchange to this value\n\t * @return       Go\n\t */\n\tinline public function prop(key:String, value:Float):Go {\n\t\t// [mck] TODO set zero value if it doesn't exist\n\t\tvar objValue = 0;\n\t\tif (Reflect.hasField(_target, key)) {\n\t\t\tobjValue = Reflect.getProperty(_target, key);\n\t\t}\n\n\t\t// trace()\n\n\t\tvar _range = {key: key, from: (_isFrom) ? value : objValue, to: (!_isFrom) ? value : objValue};\n\t\t_props.set(key, _range);\n\n\t\t// [mck] make sure the `_isFrom` is set asap\n\t\tif (_isFrom)\n\t\t\tupdateProperties(0);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * on completion of the animation call a function with param(s)\n\t *\n\t * @param  func         \tfunction to call when animition is complete\n\t * @param  arr<Dynamic> \tparams send to function\n\t * @return              Go\n\t */\n\tinline public function onComplete(func:Dynamic, ?arr:Array<Dynamic>):Go {\n\t\t_options.onComplete = func;\n\t\t_options.onCompleteParams = arr;\n\t\treturn this;\n\t}\n\n\t/**\n\t * on update of the animation call a function with param(s)\n\t *\n\t * @param  func         \tfunction to call when animition is updated\n\t * @param  arr<Dynamic> \tparams send to function\n\t * @return              Go\n\t */\n\tinline public function onAnimationStart(func:Dynamic, ?arr:Array<Dynamic>):Go {\n\t\t_options.onAnimationStart = func;\n\t\t_options.onAnimationStartParams = arr;\n\t\treturn this;\n\t}\n\n\t/**\n\t * on update of the animation call a function with param(s)\n\t *\n\t * @param  func         \tfunction to call when animition is updated\n\t * @param  arr<Dynamic> \tparams send to function\n\t * @return              Go\n\t */\n\tinline public function onUpdate(func:Dynamic, ?arr:Array<Dynamic>):Go {\n\t\t_options.onUpdate = func;\n\t\t_options.onUpdateParams = arr;\n\t\treturn this;\n\t}\n\n\t/**\n\t * change the default (Easing.linear) easing\n\t *\n\t * @example\t\tGo.from(foobarMc, 1.5).x(500).easing(Easing.quad);\n\t *\n\t * @param  easing->Float \t\tcheck Easing class\n\t * @return\t\tGo\n\t */\n\t// inline public function ease(easing:Float->Float):Go {\n\tinline public function ease(easing:IEasing):Go {\n\t\tthis._easing = easing;\n\t\treturn this;\n\t}\n\n\t// ____________________________________ public ____________________________________\n\n\t/**\n\t * stop a Go tween while its animating\n\t *\n\t * @example \tvar tween : Go = lets.Go.to(foobarMc, 20).x(100);\n\t *           \t// oh dumb dumb, I want to stop that long animation because x-reason\n\t *           \ttween.stop();\n\t */\n\tpublic function stop():Void {\n\t\tdestroy();\n\t}\n\n\t// ____________________________________ private ____________________________________\n\tprivate function init():Void {\n\t\tif (_isTimeBased) {\n\t\t\t// [mck] TODO clean this up!!!!\n\t\t\ttrace('TODO: build timebased animation');\n\t\t\t// var framerate:Int = Math.round(FRAME_RATE / 2); //30;\n\t\t\t// _trigger = (_trigger == null) ? new Timer(Std.int(1000 / framerate)) : _trigger;\n\t\t\t// _trigger.run = onEnterFrameHandler;\n\t\t} else {\n\t\t\tif (_requestId == null) {\n\t\t\t\t// console.info('start frame animation');\n\t\t\t\t_requestId = window.requestAnimationFrame(onEnterFrameHandler);\n\t\t\t\t// trace(_requestId);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate function onEnterFrameHandler(?time:Float):Void {\n\t\t// if (_initTime == 0) return;\n\t\tif (_tweens.length <= 0) {\n\t\t\t// [mck] stop timer, we are done!\n\t\t\tif (_isTimeBased) {\n\t\t\t\t// _trigger.stop();\n\t\t\t\t// _trigger.run = null;\n\t\t\t} else {\n\t\t\t\t// trace('kill $_requestId');\n\t\t\t\twindow.cancelAnimationFrame(_requestId);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else\n\t\t\tfor (i in 0..._tweens.length) {\n\t\t\t\t// [mck] FIXME :: don't know exactly why I need to check if _tweens[i] != null, but I do.\n\t\t\t\tif (_tweens[i] != null)\n\t\t\t\t\t_tweens[i].update();\n\t\t\t}\n\n\t\t_requestId = window.requestAnimationFrame(onEnterFrameHandler);\n\t}\n\n\tprivate function update():Void {\n\t\t// [mck] check for delay, simply count down the delay before we animate\n\t\t// [mck] TODO doesn't work with time\n\t\tif (_delay > 0 && _isTimeBased)\n\t\t\ttrace('FIXME this doesn\\'t work yet');\n\t\tif (_delay > 0) {\n\t\t\t_delay--;\n\t\t\treturn null;\n\t\t}\n\t\tif (!_isDelayDone) {\n\t\t\tif (DEBUG)\n\t\t\t\ttrace('should trigger only once: ${_id}');\n\t\t\tif (Reflect.isFunction(_options.onAnimationStart)) {\n\t\t\t\tvar func = _options.onAnimationStart;\n\t\t\t\tvar arr = (_options.onAnimationStartParams != null) ? _options.onAnimationStartParams : [];\n\t\t\t\tReflect.callMethod(func, func, arr);\n\t\t\t}\n\t\t}\n\t\t_isDelayDone = true;\n\n\t\t// if (_delay > 0) {\n\t\t// \t_delay--;\n\t\t// \t// var waitTime = (getTimer() - _initTime);\n\t\t// \t// if (waitTime >= _delay) {\n\t\t// \t// \t_delay = 0;\n\t\t// \t// \tif(_isTimeBased){\n\t\t// \t// \t\t_initTime = getTimer();\n\t\t// \t// \t} else {\n\t\t// \t// \t\t_initTime--;\n\t\t// \t// \t}\n\t\t// \treturn null;\n\t\t// // } else {\n\t\t// // \treturn null;\n\t\t// }\n\n\t\tthis._initTime--;\n\t\tvar progressed = (this._duration - this._initTime);\n\t\tif (_isTimeBased) {\n\t\t\tprogressed = getTimer() - _initTime;\n\t\t}\n\t\t// trace ('$progressed >= $_duration');\n\t\tif (progressed >= this._duration) {\n\t\t\t// [mck] setProperties in the final state\n\t\t\tupdateProperties(this._duration);\n\t\t\tcomplete();\n\t\t} else {\n\t\t\tupdateProperties(progressed);\n\t\t}\n\t}\n\n\tprivate function updateProperties(time:Float):Void {\n\t\tif (Reflect.isFunction(_options.onUpdate)) {\n\t\t\tvar func = _options.onUpdate;\n\t\t\tvar arr = (_options.onUpdateParams != null) ? _options.onUpdateParams : [];\n\t\t\tReflect.callMethod(func, func, arr);\n\t\t}\n\t\t// [mck] for some reason this can be null\n\t\tif (_props == null)\n\t\t\treturn;\n\t\tfor (n in _props.keys()) {\n\t\t\tvar range = _props.get(n);\n\t\t\t// Reflect.setProperty(_target, n, _easing(time / _duration) * (range.to - range.from) + range.from);\n\t\t\tReflect.setProperty(_target, n, _easing.ease(time, range.from, (range.to - range.from), _duration));\n\t\t}\n\t\t// else throw( \"Property \"+propertyName+\" not found in target!\" );\n\t}\n\n\tprivate function complete():Void {\n\t\tif (DEBUG)\n\t\t\ttrace('complete :: \"$_id\", _duration: $_duration, _seconds: $_seconds, _initTime: '\n\t\t\t\t+ _initTime\n\t\t\t\t+ ' / _tweens.length: '\n\t\t\t\t+ _tweens.length);\n\n\t\tif (_isYoyo) {\n\t\t\t// [mck] reverse the props back to the original state\n\t\t\tfor (n in _props.keys()) {\n\t\t\t\tvar range = _props.get(n);\n\t\t\t\tvar _rangeReverse = {key: n, from: range.to, to: range.from};\n\t\t\t\t_props.set(n, _rangeReverse);\n\t\t\t}\n\t\t\t// [mck] reset the time and ignore this function for now... :)\n\t\t\tif (_isTimeBased) {\n\t\t\t\tthis._initTime = getTimer();\n\t\t\t} else {\n\t\t\t\tthis._initTime = _duration;\n\t\t\t}\n\t\t\t_isYoyo = false;\n\t\t\treturn null;\n\t\t}\n\n\t\tvar func = _options.onComplete;\n\t\tvar arr = (_options.onCompleteParams != null) ? _options.onCompleteParams : [];\n\n\t\tdestroy();\n\n\t\tif (Reflect.isFunction(func))\n\t\t\tReflect.callMethod(func, func, arr);\n\t}\n\n\t/**\n\t * function to calculate the duration (frames or miliseconds)\n\t * @param duration \tgiven in seconds, recalculated to miliseconds OR frame\n\t */\n\tfunction getDuration(duration:Float):Int {\n\t\tvar d = 0;\n\t\tif (_isTimeBased) {\n\t\t\td = Std.int(duration * 1000); // convert seconds to miliseconds\n\t\t} else {\n\t\t\tif (duration <= 0)\n\t\t\t\tduration = 0.1;\n\t\t\td = Std.int(duration * FRAME_RATE); // seconds * FPS = frames\n\t\t}\n\t\treturn d;\n\t}\n\n\t/**\n\t * get time values\n\t * TODO: I am forcing timer into Int... this works for JS, not sure for others\n\t */\n\tfunction getTimer():Int {\n\t\treturn Std.int(Date.now().getTime());\n\t}\n\n\tprivate function destroy():Void {\n\t\tif (Lambda.has(_tweens, this))\n\t\t\t_tweens.remove(this);\n\t\t// [mck] cleaning up\n\t\tif (_options) {\n\t\t\t_easing = Quad.easeOut;\n\t\t\t_options = cast {};\n\t\t\t_target = null;\n\t\t\t_props = null;\n\t\t\t_duration = 0;\n\t\t\t_initTime = 0;\n\t\t\t_delay = 0;\n\t\t}\n\t}\n}\n\ntypedef Range = {key:String, from:Null<Float>, to:Null<Float>}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC008 extends CCBase implements ICCBase {\n\n\tvar shapeMax = 10;\n\tvar shapeSize = 15;\n\tvar shapeArray : Array<AnimateObj> = [];\n\tvar startTime : Float;\n\tvar startDate : Float;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t\tdescription = 'lets.Go tests with rotation, delay, easing';\n\t\tHelperUtil.stats();\n\t}\n\n\tfunction createShape(y) : AnimateObj{\n\t\tvar shape : AnimateObj = {\n\t\t\tx: 100,\n\t\t\ty: (shapeSize*5)+(shapeSize*5*y),\n\t\t\twidth: Math.round(random(shapeSize, shapeSize*4)),\n\t\t\theight: Math.round(random(shapeSize, shapeSize*4)),\n\t\t\trotation: 0,\n\t\t\tcolor:randomColour(),\n\t\t}\n\t\treturn shape;\n\t}\n\n\tfunction drawShape(){\n\t\tfor ( i in 0 ... shapeArray.length ) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\tctx.fillStyle = sh.color;\n\t\t\t// if(sh.rotation != 0){\n\t\t\t\t// ctx.save();\n\t\t\t\t// ctx.translate(sh.x, sh.y);\n\t\t\t\t// ctx.rotate(radians(sh.rotation) );\n\t\t\t\t// ctx.centreFillRect(0, 0, sh.width, sh.height);\n\t\t\t\t// ctx.restore();\n\t\t\t// } else {\n\t\t\t// \tctx.centreFillRect(sh.x, sh.y, sh.width, sh.height);\n\t\t\t// }\n\n\n\t\t\tctx.save();\n\t\t\tctx.translate(sh.x, sh.y);\n\t\t\tctx.rotate(radians(sh.rotation) );\n\t\t\tctx.centreFillRect(0, 0, sh.width, sh.height);\n\t\t\tctx.restore();\n\t\t}\n\t}\n\n\n\toverride function setup(){\n\t\ttrace('setup: ${toString()}');\n\t\tshapeArray = [];\n\t\tfor (i in 0...shapeMax){\n\t\t\tvar sh = createShape(i);\n\t\t\tshapeArray.push( sh );\n\t\t}\n\t\tvar _shape = shapeArray[0];\n\t\tGo.to(_shape, 2).x(_shape.x + (w - _shape.x*2));\n\t\tvar _shape = shapeArray[1];\n\t\tGo.to(_shape, 2).x(_shape.x + (w - _shape.x*2)).yoyo();\n\t\tvar _shape = shapeArray[2];\n\t\tGo.from(_shape, 2).x(_shape.x + (w - _shape.x*2)).yoyo();\n\t\tvar _shape = shapeArray[3];\n\t\tGo.to(_shape, 2).x(_shape.x + (w - _shape.x*2)).y(_shape.y+100).yoyo();\n\t\tvar _shape = shapeArray[4];\n\t\tGo.to(_shape, 2).x(_shape.x + (w - _shape.x*2)).rotation(180).yoyo().onUpdate(onUpdateHandler, [4]);\n\t\tvar _shape = shapeArray[5];\n\t\tGo.to(_shape, 2).x(_shape.x + (w - _shape.x*2)).prop('foobar',180).onUpdate(onUpdateHandler, [5]).onComplete(onCompleteHandler, [5]);\n\t\tvar _shape = shapeArray[6];\n\t\tGo.to(_shape, 2).x(_shape.x + (w - _shape.x*2)).delay(.7).rotation(360).yoyo();\n\t\tvar _shape = shapeArray[7];\n\t\tGo.to(_shape, 2).x(_shape.x + (w - _shape.x*2)).rotation(360).yoyo().ease(Sine.easeInOut);\n\t}\n\n\tfunction onUpdateHandler (value) : Void {\n\t\tvar _shape = shapeArray[value];\n\n\t\tswitch (value) {\n\t\t\tcase 4: trace('onUpdateHandler - rotation: '+ untyped _shape.rotation);\n\t\t\tcase 5: trace('onUpdateHandler - foobar: '+ untyped _shape.foobar);\n\t\t\tdefault : trace (\"case \"+value+\": trace ('\"+value+\"');\");\n\t\t}\n\n\t}\n\tfunction onCompleteHandler (value) : Void {\n\t\tvar _shape = shapeArray[value];\n\t\tswitch (value) {\n\t\t\tcase 4: trace('onCompleteHandler - rotation: '+ untyped _shape.rotation);\n\t\t\tcase 5: trace('onCompleteHandler - foobar: '+ untyped _shape.foobar);\n\t\t\tdefault : trace (\"case \"+value+\": trace ('\"+value+\"');\");\n\t\t}\n\t}\n\n\n\toverride function draw(){\n\t\t// trace('draw: ${toString()}');\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.background(WHITE.r,WHITE.g,WHITE.b);\n\t\tdrawShape();\n\n\t}\n}","package art;\n\n/**\n * short description what this does\n */\nclass CC009 extends CCBase implements ICCBase {\n\n\tvar shapeMax = 1000;\n\tvar shapeSize = 15;\n\tvar shapeArray : Array<AnimateObj> = [];\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t\tdescription = 'Stars in the sky';\n\t\t// trace(description);\n\t}\n\n\tfunction createShape() : AnimateObj{\n\t\tvar shape : AnimateObj = {\n\t\t\tx: w/2,\n\t\t\ty: h/2,\n\t\t\tsize: 1,\n\t\t\talpha: 0,\n\t\t\tcolor: getColourObj (WHITE),\n\t\t}\n\t\tReflect.setField(shape,'r', WHITE.r);\n\t\tReflect.setField(shape,'g', WHITE.g);\n\t\tReflect.setField(shape,'b', WHITE.b);\n\t\tonCompleteHandler(shape);\n\t\treturn shape;\n\t}\n\n\tfunction point() : Point{\n\t\tvar _x = random(-w, w*3);\n\t\tvar _y = random(-h, h*3);\n\t\tif(_x>0 && _x<w && _y>0 && _y<h ){\n\t\t\t_x += w;\n\t\t}\n\t\treturn {x:_x,y:_y};\n\t}\n\n\n\tfunction onCompleteHandler(shape:AnimateObj){\n\t\tshape.x = w/2;\n\t\tshape.y = h/2;\n\t\tshape.size = 1;\n\t\tshape.alpha = 0;\n\t\tvar point = point();\n\t\tvar time = random(2);\n\t\tGo.to(shape, time).x(point.x).y(point.y).alpha(1).prop('size',randomInt(10)).ease(Sine.easeInOut).delay(time).onComplete(onCompleteHandler,[shape]);\n\t}\n\n\tfunction drawShape(){\n\t\tfor ( i in 0 ... shapeArray.length ) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\t// ctx.fillStyle = sh.color;\n\t\t\tctx.fillStyle = getColour(untyped sh.r, untyped sh.g, untyped sh.b, sh.alpha);\n\t\t\tctx.circle(sh.x, sh.y, sh.size);\n\t\t}\n\t}\n\n\toverride function setup(){\n\t\tshapeArray = [];\n\t\tfor (i in 0...shapeMax){\n\t\t\tvar sh = createShape();\n\t\t\tshapeArray.push( sh );\n\t\t}\n\t}\n\n\toverride function draw(){\n\t\t// trace('draw: ${toString()}');\n\t\tctx.clearRect(0,0,w,h);\n\t\tctx.backgroundObj(BLACK);\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}","package art;\n\n\n\n/**\n * short description what this does\n */\nclass CC010 extends CCBase implements ICCBase {\n\n\tvar shapeArray : Array<AnimateObj> = [];\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t\tdescription = 'Animating text';\n\t\tText.embedGoogleFont('UnifrakturMaguntia', onEmbedHandler);\n\t\tText.embedGoogleFont('Press+Start+2P', onEmbedHandler);\n\t}\n\tfunction onEmbedHandler(e){\n\t\ttrace('Embed: \"${e}\"');\n\t\t// Text.centerFillText(ctx, toString(), w/2, h/2, \"'UnifrakturMaguntia', cursive\", 50);\n\t\t// Text.centerFillText(ctx, description, Math.round(w/2), 20, \"'Press Start 2P', cursive;\", 8);\n\t}\n\n\tfunction createText(){\n\t\tvar shape : AnimateObj = {\n\t\t\tx: w/2,\n\t\t\ty: (h/2)+20,\n\t\t\talpha: 1,\n\t\t\tsize: 60,\n\t\t\ttype: 'text'\n\t\t}\n\t\tReflect.setField(shape, 'text', toString());\n\t\tReflect.setField(shape,'r', BLACK.r);\n\t\tReflect.setField(shape,'g', BLACK.g);\n\t\tReflect.setField(shape,'b', BLACK.b);\n\n\t\tvar ypos1 = shape.y - 100;\n\t\tvar ypos2 = shape.y + 100;\n\n\t\tGo.from(shape, 1.0).x(shape.x).y(ypos1).alpha(0).prop('size',50).ease(Sine.easeOut).delay(2);\n\t\tGo.to(shape, 1.0).x(shape.x).y(ypos2).alpha(0).prop('size',50).ease(Sine.easeIn).delay(5.5);\n\n\t\treturn shape;\n\t}\n\n\tfunction createBall(){\n\t\tvar shape : AnimateObj = {\n\t\t\tx: w/2,\n\t\t\ty: h/2,\n\t\t\tsize: 50,\n\t\t\talpha: 1,\n\t\t\tcolor: getColourObj (FUCHSIA),\n\t\t\ttype: 'ball'\n\t\t}\n\t\tReflect.setField(shape,'r', FUCHSIA.r);\n\t\tReflect.setField(shape,'g', FUCHSIA.g);\n\t\tReflect.setField(shape,'b', FUCHSIA.b);\n\t\tReflect.setField(shape,'angle', 0);\n\t\treturn shape;\n\t}\n\n\toverride function setup(){\n\t\ttrace('setup: ${toString()}');\n\t\tshapeArray = [];\n\t\tshapeArray.push(createBall());\n\t\tshapeArray.push(createText());\n\n\t\t// var rgb = randomColourObject();\n\t\t// ctx.strokeColour(rgb.r, rgb.g, rgb.b);\n\t\t// ctx.xcross(w/2, h/2, 200);\n\t}\n\n\n\n\tpublic function drawShape ()  {\n\t\tfor ( i in 0 ... shapeArray.length ) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\tif(sh.type == 'text'){\n\t\t\t\tctx.fillStyle = getColour(untyped sh.r, untyped sh.g, untyped sh.b, sh.alpha);\n\t\t\t\tText.centerFillText(ctx, untyped sh.text, sh.x, sh.y, \"'UnifrakturMaguntia', cursive\", Math.round(sh.size));\n\t\t\t}\n\t\t\tif(sh.type == 'ball') {\n\t\t\t\t// var xpos = sh.x\n\t\t\t\tvar radius = 50;\n\t\t\t\tvar speed = 2;\n\t\t\t\tuntyped sh.angle += speed;\n\t\t\t\t// plot the balls x to cos and y to sin\n\t\t\t\tsh.x = w/2 + Math.cos(radians(untyped sh.angle))*radius;\n\t\t\t\tsh.y = h/2 + Math.sin(radians(untyped sh.angle))*radius;\n\n\t\t\t\tctx.fillStyle = getColour(untyped sh.r, untyped sh.g, untyped sh.b, sh.alpha);\n\t\t\t\tctx.circle(sh.x, sh.y, sh.size);\n\t\t\t}\n\t\t}\n\t}\n\n\n\toverride function draw(){\n\t\t// trace('draw: ${toString()}');\n\t\tctx.clearRect(0,0,w,h);\n\t\t// ctx.backgroundObj(BLACK);\n\t\tdrawShape();\n\t}\n}","package art;\n\n/**\n * short description what this does\n */\nclass CC011 extends CCBase implements ICCBase {\n\n\tvar shapeArray : Array<Line> = [];\n\tvar shapeArray2 : Array<{}> = [];\n\tvar shapeMax : Int = Math.round(360/4);\n\tvar radius0 : Int = 150;\n\tvar radius1 : Int = 350;\n\tvar divide : Int = 4;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t\tdescription = 'Equalizer with sound';\n\t}\n\n\tfunction createShape(i:Int):Line{\n\t\tvar angle = i*divide;\n\t\tvar line : Line = {\n\t\t\t_id : i,\n\t\t\tx1 : (w/2)  + Math.cos(radians(angle))*radius0,\n\t\t\ty1 : (h/2)  + Math.sin(radians(angle))*radius0,\n\t\t\tx2 : (w/2)  + Math.cos(radians(angle))*radius1,\n\t\t\ty2 : (h/2)  + Math.sin(radians(angle))*radius1,\n\t\t\tstroke : 10,\n\t\t\tradius : random(radius0, radius1),\n\t\t}\n\t\t// trace(line);\n\t\tonCompleteHandler(line);\n\t\treturn line;\n\t}\n\n\tfunction createX(i:Int){\n\t\tvar obj = {\n\t\t\t_id: i,\n\t\t\tr: WHITE.r,\n\t\t\tg: WHITE.g,\n\t\t\tb: WHITE.b,\n\t\t\ta: 1,\n\t\t\trotation: 0,\n\t\t\tx: w/2,\n\t\t\ty: h/2,\n\t\t\tsize: 160,\n\t\t\tstroke:80\n\t\t}\n\t\tonXHandler(obj);\n\t\treturn obj;\n\t}\n\n\tfunction drawShape(){\n\t\tfor ( i in 0 ... shapeArray.length ) {\n\t\t\tvar line = shapeArray[i];\n\t\t\tvar angle = i*divide;\n\t\t\tline.x2 = (w/2)  + Math.cos(radians(angle))*line.radius;\n\t\t\tline.y2 = (h/2)  + Math.sin(radians(angle))*line.radius;\n\t\t\tctx.lineColour(WHITE.r, WHITE.g, WHITE.b, 1);\n\t\t\tctx.lineWidth = line.stroke;\n\t\t\t// ctx.lineCap = \"round\"; // \"butt|round|square\";\n\t\t\tctx.line(line.x1,line.y1,line.x2,line.y2);\n\t\t}\n\n\t\tfor ( i in 0 ... shapeArray2.length ) {\n\t\t\tvar shape = shapeArray2[i];\n\t\t\tctx.save();\n\t\t\tctx.translate(untyped shape.x, untyped shape.y);\n\t\t\tctx.rotate(radians(untyped shape.rotation) );\n\t\t\tctx.strokeColour(untyped shape.r, untyped shape.g, untyped shape.b, untyped shape.a);\n\t\t\tctx.xcross(0,0, untyped shape.size, untyped shape.stroke);\n\t\t\tctx.restore();\n\t\t}\n\t}\n\n\t// ____________________________________ onHandlers ____________________________________\n\n\tfunction onUpdateHandler(e){\n\t\ttrace('update: $e');\n\t}\n\tfunction onCompleteHandler(line){\n\t\t// trace('complete: $e');\n\t\tGo.to(line, random(0.5, 1.5)).prop('radius',random(radius0, radius1)).ease(Sine.easeInOut).onComplete(onCompleteHandler,[line]);\n\t}\n\tfunction onXHandler(obj){\n\t\tGo.to(obj, random(0.5, 1.5)).prop('rotation',random(0, 360)).prop('size',random(150,160)).ease(Sine.easeInOut).onComplete(onXHandler,[obj]).delay(random(0,0.5));\n\t}\n\n\t// ____________________________________ override ____________________________________\n\n\toverride function setup(){\n\t\ttrace('setup: ${toString()}');\n\t\tfor ( i in 0 ... shapeMax ) {\n\t\t\tshapeArray.push(createShape(i));\n\t\t}\n\t\tshapeArray2.push(createX(0));\n\t\tdraw();\n\t}\n\n\toverride function draw(){\n\t\t// trace('draw: ${toString()}');\n\t\tctx.clearRect(0,0,w,h);\n\t\tctx.backgroundObj(BLACK);\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}","package art;\n\n/**\n * short description what this does\n */\nclass CC012 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Line> = [];\n\tvar shapeArray2:Array<{}> = [];\n\tvar shapeMax:Int = Math.round(360 / 4);\n\tvar radius0:Int = 350;\n\tvar radius1:Int = 50;\n\tvar divide:Int = 4;\n\tvar maxDistance:Int = 100;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t\tdescription = 'Weird Equalizer without sound but connected';\n\t}\n\n\tfunction createShape(i:Int):Line {\n\t\tvar angle = i * divide;\n\t\tvar line:Line = {\n\t\t\t_id: i,\n\t\t\tx1: (w / 2) + Math.cos(radians(angle)) * radius0,\n\t\t\ty1: (h / 2) + Math.sin(radians(angle)) * radius0,\n\t\t\tx2: (w / 2) + Math.cos(radians(angle)) * radius1,\n\t\t\ty2: (h / 2) + Math.sin(radians(angle)) * radius1,\n\t\t\tstroke: 1,\n\t\t\tradius: random(radius0, radius1),\n\t\t}\n\t\t// trace(line);\n\t\tonCompleteHandler(line);\n\t\treturn line;\n\t}\n\n\tfunction drawShape() {\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar line = shapeArray[i];\n\t\t\tvar angle = i * divide;\n\t\t\tline.x2 = (w / 2) + Math.cos(radians(angle)) * line.radius;\n\t\t\tline.y2 = (h / 2) + Math.sin(radians(angle)) * line.radius;\n\t\t\tctx.lineColour(WHITE.r, WHITE.g, WHITE.b, 1);\n\t\t\tctx.lineWidth = line.stroke;\n\t\t\t// ctx.lineCap = \"round\"; // \"butt|round|square\";\n\t\t\tctx.line(line.x1, line.y1, line.x2, line.y2);\n\n\t\t\t// circle\n\t\t\tctx.colour(WHITE.r, WHITE.g, WHITE.b, 0.5);\n\t\t\t// ctx.circle(line.x2, line.y2, 10);\n\t\t\tctx.strokeCircle(line.x2, line.y2, 3);\n\n\t\t\tfor (j in 0...shapeArray.length) {\n\t\t\t\tvar b2 = shapeArray[j];\n\t\t\t\tif (line == b2)\n\t\t\t\t\tcontinue;\n\t\t\t\tvar _dist = distance(line.x2, line.y2, b2.x2, b2.y2);\n\t\t\t\t// trace('-----\\n ${line} / ${b2} -- ${_dist}');\n\t\t\t\tif (_dist < maxDistance) {\n\t\t\t\t\tvar alpha:Float = 0.8 - (_dist / maxDistance); // 0.5\n\t\t\t\t\t// trace(alpha);\n\t\t\t\t\tctx.lineColour(WHITE.r, WHITE.g, WHITE.b, alpha);\n\t\t\t\t\tctx.line(line.x2, line.y2, b2.x2, b2.y2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// ____________________________________ onHandlers ____________________________________\n\tfunction onUpdateHandler(e) {\n\t\ttrace('update: $e');\n\t}\n\n\tfunction onCompleteHandler(line) {\n\t\t// trace('complete: $e');\n\t\tGo.to(line, random(2, 4))\n\t\t\t.prop('radius', random(radius0, radius1))\n\t\t\t.ease(Sine.easeInOut)\n\t\t\t.onComplete(onCompleteHandler, [line]);\n\t}\n\n\t// ____________________________________ override ____________________________________\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\t\tfor (i in 0...shapeMax) {\n\t\t\tshapeArray.push(createShape(i));\n\t\t}\n\t\t// shapeArray2.push(createX(0));\n\t\tdraw();\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(BLACK);\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}\n","package art;\n\n// import ColorUtil;\nimport mloader.Loader;\nimport mloader.JsonLoader;\n\n/**\n * short description what this does\n */\nclass CC013 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Point> = [];\n\tvar loader:JsonLoader<Dynamic>;\n\tvar colorArr:Array<Array<String>> = [];\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tcolorArr = ColorUtil.niceColor100;\n\t\tdescription = 'Create simple pattern with colors';\n\n\t\tsuper(ctx);\n\n\t\t// loading gigantic 1000.json file with arrays\n\t\tloader = new JsonLoader<Dynamic>('assets/1000.json');\n\t\tloader.loaded.add(loaded);\n\t\tloader.load();\n\t}\n\n\tfunction loaded(event) {\n\t\tswitch (event.type) {\n\t\t\tcase Fail(error):\n\t\t\t\ttrace(error);\n\t\t\tcase Complete:\n\t\t\t\t// trace(event.target);\n\t\t\t\t// trace(event.target.content);\n\t\t\t\t// trace(event.target.content.length);\n\t\t\t\tcolorArr = cast event.target.content;\n\t\t\t\tdraw();\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tfunction create() {\n\t\t// isDebug = true;\n\t\tvar _size = 50;\n\t\tvar _x = 0;\n\t\tvar _y = 0;\n\t\tvar _numHor = Math.round(w / _size) + 1;\n\t\tvar _numVer = Math.round(h / _size) + 1;\n\t\t// var arr:Array<Point> = GridUtil.create(_x, _y, w - (2 * _x), h - (2 * _y), _numHor, _numVer);\n\t\tvar grid = new GridUtil();\n\t\tgrid.setCellSize(_size);\n\n\t\t// trace('x: ${grid.x}, y: ${grid.y}');\n\t\t// trace('w: ${w}, h: ${h}');\n\t\t// trace('width: ${grid.width}, height: ${grid.height}');\n\t\t// trace('cellWidth: ${grid.cellWidth}, cellHeight: ${grid.cellHeight}');\n\t\t// trace('numHor: ${grid.numHor}, numVer: ${grid.numVer}');\n\t\t// trace('numHor * numVer: ${grid.numHor * grid.numVer}');\n\t\t// trace('array: ${grid.array.length}');\n\t\t// console.table(grid.array);\n\t\t// trace(grid.x);\n\n\t\tif (isDebug) {\n\t\t\tShapeUtil.gridRegister(ctx, grid.array);\n\t\t\tctx.strokeRect(grid.x, grid.y, grid.width, grid.height);\n\t\t}\n\n\t\tvar colorCounter = 0;\n\t\tfor (i in 0...grid.array.length) {\n\t\t\tvar p:Point = grid.array[i];\n\n\t\t\tcolorCounter++;\n\t\t\tif (colorCounter >= colorArr.length) {\n\t\t\t\tcolorCounter = 0;\n\t\t\t}\n\t\t\tvar colorArray = colorArr[colorCounter];\n\t\t\t// trace(ColorUtil.hex2RGB(colorArray[0]));\n\t\t\t// trace('${i}, ${colorCounter}');\n\t\t\t// trace(colorArray);\n\t\t\t// trace(colorArray[0]);\n\n\t\t\tctx.colourObj(ColorUtil.hex2RGB(colorArray[0]));\n\t\t\tctx.fillRect(p.x, p.y, _size, _size);\n\n\t\t\tctx.colourObj(ColorUtil.hex2RGB(colorArray[1]));\n\t\t\tctx.fillCircle(p.x + _size / 2, p.y + _size / 2, (_size / 2) * 0.8);\n\n\t\t\tctx.colourObj(ColorUtil.hex2RGB(colorArray[2]));\n\t\t\tctx.fillCircle(p.x + _size / 2, p.y + _size / 2, (_size / 2) * 0.6);\n\n\t\t\tctx.colourObj(ColorUtil.hex2RGB(colorArray[3]));\n\t\t\tctx.fillCircle(p.x + _size / 2, p.y + _size / 2, (_size / 2) * 0.4);\n\n\t\t\tctx.colourObj(ColorUtil.hex2RGB(colorArray[4]));\n\t\t\tctx.fillCircle(p.x + _size / 2, p.y + _size / 2, (_size / 2) * 0.2);\n\t\t}\n\t}\n\n\toverride function draw() {\n\t\ttrace('draw: ${toString()}');\n\t\tctx.clearRect(0,0,w,h);\n\t\tctx.backgroundObj(WHITE);\n\t\tcreate();\n\t\tstop();\n\t}\n}\n","package art;\n\n// import ColorUtil;\n\n/**\n * short description what this does\n */\nclass CC014 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Circle> = [];\n\tvar flipColorB:RGB = BLACK;\n\tvar flipColorW:RGB = WHITE;\n\tvar shapeMax = 10;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tText.embedGoogleFont('Six+Caps', onEmbedHandler);\n\t\tText.embedGoogleFont('Barlow+Condensed', onEmbedHandler);\n\n\t\tsuper(ctx);\n\n\t\tdescription = 'Blink black and white';\n\t}\n\n\tfunction onEmbedHandler(e) {\n\t\ttrace('Embed: \"${e}\"');\n\t\tdraw();\n\t\tonFlipColorHandler();\n\t}\n\n\tfunction onFlipColorHandler() {\n\t\tif (posNeg() <= 0) {\n\t\t\tflipColorB = BLACK;\n\t\t\tflipColorW = WHITE;\n\t\t} else {\n\t\t\tflipColorB = WHITE;\n\t\t\tflipColorW = BLACK;\n\t\t}\n\t\tGo.timer(random(0, .7)).onComplete(onFlipColorHandler);\n\t}\n\n\tfunction createShape(i:Int) {\n\t\tvar circle:Circle = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'circle',\n\t\t\tx: random(0, w),\n\t\t\ty: random(0, h),\n\t\t\tsize: random(10, 100),\n\t\t}\n\t\tReflect.setField(circle, 'stroke', 20);\n\t\tonCircleHandler(circle);\n\t\treturn circle;\n\t}\n\n\tfunction onCircleHandler(circle:Circle) {\n\t\t// trace(untyped circle.stroke);\n\t\tvar r = Math.round(random(1, 20));\n\t\tGo.to(circle, random(1, 5))\n\t\t\t.x(random(0, w))\n\t\t\t.y(random(0, h))\n\t\t\t.prop('size', Math.round(random(10, 100)))\n\t\t\t.prop('stroke', r)\n\t\t\t.ease(Sine.easeInOut)\n\t\t\t.onComplete(onCircleHandler, [circle])\n\t\t\t.delay(random(0, 2));\n\t}\n\n\tfunction drawShape() {\n\n\n\t\tctx.fillStyle = getColourObj(flipColorW);\n\t\t// Text.centerFillText(ctx, '[MCK]', w/2, h/2+200, \"'Six Caps', sans-serif\", 500);\n\t\tText.centerFillText(ctx, '[mck]', w / 2, h / 2 + 50, \"'Barlow Condensed', sans-serif\", 300);\n\n\t\tctx.globalCompositeOperation = 'xor';\n\n\t\t// ctx.globalCompositeOperation = 'source-out';\n\t\t// ctx.save();\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\tctx.strokeColourObj(flipColorW);\n\t\t\tctx.strokeWeight(untyped sh.stroke);\n\t\t\tctx.strokeCircle(sh.x, sh.y, sh.size / 2);\n\t\t// ctx.globalCompositeOperation = 'source-out';\n\t\t}\n\t\t// ctx.restore();\n\n\t\t// Text.centerFillText(ctx, '[mck]', w / 2, h / 2 + 50, \"'Barlow Condensed', sans-serif\", 300);\n\n\t\t// ctx.save();\n\n\t\t// // ctx.globalCompositeOperation = 'destination-out';\n\t\t// ctx.fillStyle = getColourObj(LIME);\n\t\t// ctx.circle(w/2, h/2, 100);\n\t\t// ctx.globalCompositeOperation = 'xor';\n\t\t// ctx.fillStyle = getColourObj(FUCHSIA);\n\t\t// Text.centerFillText(ctx, '[mck]', w / 2, h / 2 + 50, \"'Barlow Condensed', sans-serif\", 300);\n\n\n\t\t// ctx.globalCompositeOperation = \"source-over\";\n\n\n\t\t// ctx.restore();\n\n\n\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\t\t// var rgb = randomColourObject();\n\t\t// ctx.strokeColour(rgb.r, rgb.g, rgb.b);\n\t\t// ctx.xcross(w/2, h/2, 200);\n\t\tfor (i in 0...shapeMax) {\n\t\t\tshapeArray.push(createShape(i));\n\t\t}\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(flipColorB);\n\t\tdrawShape();\n\n\t\t// stop();\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC015 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Point> = [];\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t\tdescription = 'clock';\n\t}\n\n\tvar color = ColorUtil.niceColor100[0];\n\n\toverride function setup() {\n\t\t// isDebug = true;\n\t}\n\n\tfunction drawShape() {\n\t\t// trace(color);\n\n\t\t// trace('drawShape');\n\t\tvar time = Date.now();\n\t\tvar hours = time.getHours(); // 24\n\t\tvar min = time.getMinutes(); // 60\n\t\tvar sec = time.getSeconds(); // 60\n\t\t// var sec = time.get() + 1; // 60\n\n\t\tvar min90 = -radians(90);\n\t\tvar lineW = 100;\n\t\tvar minRadius = 3 * lineW;\n\t\tvar _lineCap = 'round'; // 'round' \"butt|round|square\";\n\t\tvar centerX = w/2;\n\t\tvar centerY = h/2;\n\t\tvar _alpha = 0.1;\n\n\t\tif (isDebug){\n\t\t\ttrace('$hours:$min:$sec');\n\t\t\t// hours = 23;\n\t\t}\n\t\t// 360graden == (2*Math.PI) == 24 uur == 60 min\n\n\t\t// sec\n\t\tctx.beginPath();\n\t\tctx.strokeStyle = getColourObj(hex2RGB(color[0]));\n\t\tctx.lineCap = _lineCap;\n\t\tctx.lineWidth = lineW;\n\t\tctx.arc(centerX, centerY, minRadius - (0 * lineW), min90, radians((360 / 60) * sec) + min90);\n\t\tctx.stroke();\n\t\tctx.strokeStyle = getColourObj(hex2RGB(color[0]), _alpha);\n\t\tctx.strokeCircle(centerX, centerY, minRadius - (0 * lineW));\n\n\t\t// min\n\t\tctx.beginPath();\n\t\tctx.strokeStyle = getColourObj(hex2RGB(color[1]));\n\t\tctx.lineCap = _lineCap;\n\t\tctx.lineWidth = lineW;\n\t\tctx.arc(centerX, centerY, minRadius - (1 * lineW), min90, radians((360 / 60) * min) + min90);\n\t\tctx.stroke();\n\t\tctx.strokeStyle = getColourObj(hex2RGB(color[1]), _alpha);\n\t\tctx.strokeCircle(centerX, centerY, minRadius - (1 * lineW));\n\n\t\t// hour\n\t\tctx.beginPath();\n\t\tctx.strokeStyle = getColourObj(hex2RGB(color[2]));\n\t\tctx.lineCap = _lineCap;\n\t\tctx.lineWidth = lineW;\n\t\tctx.arc(centerX, centerY, minRadius - (2 * lineW), min90, radians((360 / 24) * hours) + min90);\n\t\tctx.stroke();\n\t\tctx.strokeStyle = getColourObj(hex2RGB(color[2]), _alpha);\n\t\tctx.strokeCircle(centerX, centerY, minRadius - (2 * lineW));\n\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC016 extends CCBase implements ICCBase {\n\n\tvar shapeArray : Array<CircleExtra> = [];\n\tvar shapeMax : Int = 200;\n\n\tvar _radius = 150;\n\tvar _size = 50;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Circle with trail';\n\t\tsuper(ctx);\n\t}\n\n\tfunction createShape(i:Int){\n\t\tvar shape : CircleExtra = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'circle',\n\t\t\tx: w/2,\n\t\t\ty: h/2,\n\t\t\trgb: BLACK,\n\t\t\talpha: 1 - (i * (1/shapeMax)),\n\t\t\tradius: _radius, // offset of\n\t\t\tsize: _size, // size of circles\n\t\t\tangle: i*1, // steps for rotation\n\t\t\tspeed: 4, // rotation speed\n\t\t}\n\t\treturn shape;\n\t}\n\n\tfunction drawShape(){\n\t\tfor ( i in 0 ... shapeArray.length ) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\tsh.angle -= sh.speed;\n\t\t\t// plot the balls x to cos and y to sin\n\t\t\tsh.x = w/2 + Math.cos(radians(untyped sh.angle))*sh.radius;\n\t\t\tsh.y = h/2 + Math.sin(radians(untyped sh.angle))*sh.radius;\n\t\t\tctx.fillStyle = getColourObj(sh.rgb, sh.alpha);\n\t\t\tctx.circle(sh.x, sh.y, sh.size);\n\t\t}\n\t}\n\n\toverride function setup(){\n\t\ttrace('setup: ${toString()}');\n\t\tfor ( i in 0 ... shapeMax ) {\n\t\t\tshapeArray.push(createShape(i));\n\t\t}\n\t}\n\n\toverride function draw(){\n\t\t// trace('draw: ${toString()}');\n\t\tctx.clearRect(0,0,w,h);\n\t\t// ctx.backgroundObj(BLACK);\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}","package art;\n\n/**\n * short description what this does\n */\nclass CC017 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<CircleExtra> = [];\n\tvar arr:Array<Array<CircleExtra>> = [[]];\n\tvar shapeMax:Int = 25;\n\tvar _size = 75;\n\tvar grid = new GridUtil();\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Circles with trail';\n\t\tsuper(ctx);\n\t}\n\n\tfunction createShape(i:Int, j:Int) {\n\t\tvar shape:CircleExtra = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'circle',\n\t\t\tx: w / 2,\n\t\t\ty: h / 2,\n\t\t\trgb: WHITE,\n\t\t\talpha: 1 - (i * (1 / shapeMax)),\n\t\t\tradius: 20,\n\t\t\tsize: 10,\n\t\t\t// angle: (i * 10)*j,\n\t\t\tangle: (j * 10) + (i * 10),\n\t\t\tspeed: 4,\n\t\t}\n\t\treturn shape;\n\t}\n\n\tfunction drawShape() {\n\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(BLACK);\n\n\t\tif (isDebug) {\n\t\t\tShapeUtil.gridField(ctx, grid);\n\t\t}\n\n\t\tfor (j in 0...grid.array.length) {\n\t\t\tvar point = grid.array[j];\n\t\t\tfor (i in 0...arr[j].length) {\n\t\t\t\tvar sh = arr[j][i];\n\t\t\t\tsh.angle -= sh.speed;\n\t\t\t\t// plot the balls x to cos and y to sin\n\t\t\t\t// sh.x = w/2 + Math.cos(radians(untyped sh.angle))*sh.radius;\n\t\t\t\t// sh.y = h/2 + Math.sin(radians(untyped sh.angle))*sh.radius;\n\t\t\t\tsh.x = point.x + Math.cos(radians(untyped sh.angle)) * sh.radius;\n\t\t\t\tsh.y = point.y + Math.sin(radians(untyped sh.angle)) * sh.radius;\n\t\t\t\tctx.fillStyle = getColourObj(sh.rgb, sh.alpha);\n\t\t\t\tctx.circle(sh.x, sh.y, sh.size);\n\t\t\t}\n\t\t}\n\t\t// for ( j in 0 ... grid.array.length ) {\n\t\t// \tvar point = grid.array[j];\n\t\t// \tfor ( i in 0 ... shapeArray.length ) {\n\t\t// \t\tvar sh = shapeArray[i];\n\t\t// \t\tsh.angle -= sh.speed;\n\t\t// \t\t// plot the balls x to cos and y to sin\n\t\t// \t\t// sh.x = w/2 + Math.cos(radians(untyped sh.angle))*sh.radius;\n\t\t// \t\t// sh.y = h/2 + Math.sin(radians(untyped sh.angle))*sh.radius;\n\t\t// \t\tsh.x = point.x + Math.cos(radians(untyped sh.angle))*sh.radius;\n\t\t// \t\tsh.y = point.y + Math.sin(radians(untyped sh.angle))*sh.radius;\n\t\t// \t\tctx.fillStyle = getColourObj(sh.rgb, sh.alpha);\n\t\t// \t\tctx.circle(sh.x, sh.y, sh.size);\n\t\t// \t}\n\t\t// }\n\t}\n\n\n\n\toverride function setup() {\n\t\ttrace('init: ${toString()}');\n\n\t\tgrid.setCellSize(_size);\n\t\tgrid.setIsCenterPoint(true);\n\t\t// grid.setNumbered(10,10);\n\t\t// grid.setNumbered(2,2);\n\n\t\t// isDebug = true;\n\n\t\tfor (j in 0...grid.array.length) {\n\t\t\tarr.push([]);\n\t\t\tfor (i in 0...shapeMax) {\n\t\t\t\tarr[j].push(createShape(i,j));\n\t\t\t}\n\t\t}\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tctx.clearRect(0, 0, w, h);\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC018 extends CCBase implements ICCBase {\n\n\tvar shapeArray : Array<Circle> = [];\n\tvar grid = new GridUtil();\n\n\tvar _size = 75;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t\tdescription = '';\n\t}\n\n\tfunction createShape(i:Int, point:Point){\n\t\tvar shape : Circle = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'circle',\n\t\t\tx: point.x,\n\t\t\ty: point.y,\n\t\t\tradius: random (5,(_size/2)),\n\t\t}\n\t\tonYoYoHandler(shape);\n\t\treturn shape;\n\t}\n\n\tfunction drawShape(){\n\n\t\tif (isDebug) {\n\t\t\tShapeUtil.gridField(ctx, grid);\n\t\t}\n\t\tctx.fillColourRGB(BLACK);\n\t\tfor ( i in 0 ... shapeArray.length ) {\n\t\t\tvar circle : Circle = shapeArray[i];\n\t\t\tctx.circle(circle.x, circle.y, circle.radius);\n\t\t}\n\t}\n\n\tfunction onYoYoHandler(circle:Circle){\n\t\tGo.to(circle, random(0.1,2)).prop('radius',random (5,(_size/2)) ).yoyo().ease(Sine.easeInOut).onComplete(onYoYoHandler, [circle]);\n\t}\n\n\n\toverride function setup(){\n\t\ttrace('setup: ${toString()}');\n\n\t\t// isDebug = true;\n\n\t\tgrid.setCellSize(_size);\n\t\tgrid.setIsCenterPoint(true);\n\n\t\t// trace(grid.cellHeight);\n\t\t// trace(grid.cellWidth);\n\n\t\tfor ( i in 0 ... grid.array.length ) {\n\t\t\tvar point : Point = grid.array[i];\n\t\t\tshapeArray.push(createShape(i, point));\n\t\t}\n\n\t}\n\n\toverride function draw(){\n\t\t// trace('draw: ${toString()}');\n\t\tctx.clearRect(0,0,w,h);\n\t\t// ctx.backgroundObj(BLACK);\n\n\t\tdrawShape();\n\n\t\t// stop();\n\t}\n}","package art;\n\n/**\n * short description what this does\n */\nclass CC019 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Circle> = [];\n\tvar shapeMax:Int = 10;\n\tvar grid = new GridUtil();\n\tvar _size = 75;\n\tvar _radius = 150;\n\tvar _bgColor:RGB = null;\n\tvar _lineColor:RGB = null;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t\tdescription = '';\n\t}\n\n\tfunction createShape(i:Int, ?point:Point) {\n\t\tvar shape:Circle = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'circle',\n\t\t\tx: point.x,\n\t\t\ty: point.y,\n\t\t\tradius: _radius,\n\t\t}\n\n\t\tif (i != 4) {\n\t\t\tonAnimateHandler(shape);\n\t\t\t// shape.radius = 10;\n\t\t}\n\t\treturn shape;\n\t}\n\n\tfunction drawShape() {\n\t\tctx.backgroundObj(_bgColor);\n\n\t\tif (isDebug) {\n\t\t\tShapeUtil.gridField(ctx, grid);\n\t\t}\n\n\t\t// ctx.fillColourRGB(BLACK,10);\n\t\tctx.strokeColourObj(_lineColor);\n\t\tctx.strokeWeight(15);\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar circle:Circle = shapeArray[i];\n\t\t\tctx.strokeCircle(circle.x, circle.y, circle.radius);\n\t\t}\n\t}\n\n\tfunction onAnimateHandler(circle:Circle) {\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar circle:Circle = shapeArray[i];\n\t\t\tvar point = grid.array[i];\n\t\t\tcircle.x = point.x;\n\t\t\tcircle.y = point.y;\n\t\t}\n\t\tGo.to(circle, 5)\n\t\t\t.x(w / 2)\n\t\t\t.y(h / 2)\n\t\t\t.ease(Sine.easeInOut)\n\t\t\t.onComplete(onAnimateHandler, [circle]);\n\t}\n\n\toverride function setup() {\n\t\tvar colorArray = ColorUtil.niceColor100[randomInt(ColorUtil.niceColor100.length - 1)];\n\t\t_bgColor = hex2RGB(colorArray[0]);\n\t\t_lineColor = hex2RGB(colorArray[1]);\n\n\t\t// isDebug = true;\n\n\t\tgrid.setDimension(w * 2.1, h * 2.1);\n\t\tgrid.setNumbered(3, 3);\n\t\tgrid.setIsCenterPoint(true);\n\n\t\t// console.table(grid.array);\n\n\t\tfor (i in 0...grid.array.length) {\n\t\t\tvar point:Point = grid.array[i];\n\t\t\tshapeArray.push(createShape(i, point));\n\t\t}\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tctx.clearRect(0, 0, w, h);\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC020 extends CCBase implements ICCBase {\n\n\tvar shapeArray : Array<Arc> = [];\n\tvar _radius = 150;\n\n\tvar _bgColor : RGB = null;\n\tvar _lineColor : RGB = null;\n\tvar _lineColor2 : RGB = null;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t\tdescription = '';\n\t}\n\n\tfunction createShape(i:Int, ?point:Point){\n\t\tvar shape : Arc = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'arc',\n\t\t\tx: w/2,\n\t\t\ty: h/2,\n\t\t\tradius:_radius,\n\t\t\trotation:0,\n\t\t\tangle: 250,\n\t\t\tspeed: 1,\n\t\t}\n\t\t// onAnimateHandler(shape);\n\t\treturn shape;\n\t}\n\n\t// function onAnimateHandler(arc:Arc){\n\t// \tGo.to(arc, random).x(w/2).y(h/2).ease(Sine.easeInOut).onComplete(onAnimateHandler, [arc]);\n\t// }\n\n\tfunction drawShape(){\n\t\tctx.clearRect(0,0,w,h);\n\t\tctx.backgroundObj(_bgColor);\n\t\tfor ( i in 0 ... shapeArray.length ) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\tsh.rotation += sh.speed + (i*1);\n\t\t\tctx.beginPath();\n\t\t\tctx.strokeStyle = getColourObj(_lineColor);\n\t\t\tif(i == 0) ctx.strokeStyle = getColourObj(_lineColor2);\n\t\t\tctx.lineCap = 'round';\n\t\t\tctx.lineWidth = 30;\n\t\t\tctx.arc(w/2, h/2, sh.radius * (0.6*i+1), radians(0 + sh.rotation), radians(sh.angle + sh.rotation));\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\n\toverride function setup(){\n\t\ttrace('setup: ${toString()}');\n\t\tvar colorArray = ColorUtil.niceColor100[randomInt(ColorUtil.niceColor100.length-1)];\n\t\t_bgColor = hex2RGB(colorArray[0]);\n\t\t_lineColor = hex2RGB(colorArray[1]);\n\t\t_lineColor2 = hex2RGB(colorArray[2]);\n\n\t\tshapeArray.push(createShape(0));\n\t\tshapeArray.push(createShape(1));\n\t}\n\n\toverride function draw(){\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}","package art;\n\n/**\n * short description what this does\n */\nclass CC021 extends CCBase implements ICCBase {\n\n\tvar shapeArray : Array<Rectangle> = [];\n\tvar shapeMax : Int = 10;\n\tvar grid = new GridUtil();\n\n\tvar _size = 75;\n\tvar _radius = 150;\n\n\tvar _bgColor : RGB = null;\n\tvar _lineColor : RGB = null;\n\tvar _fillColor : RGB = null;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t\tdescription = '';\n\t}\n\n\tfunction createShape(i:Int, ?point:Point){\n\t\tvar shape : Rectangle = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'circle',\n\t\t\tx: point.x,\n\t\t\ty: point.y,\n\t\t}\n\t\t// onAnimateHandler(shape);\n\t\treturn shape;\n\t}\n\n\t// function onAnimateHandler(circle:Rectangle){\n\t// \t// Go.to(circle, 5).x(w/2).y(h/2).ease(Sine.easeInOut).onComplete(onAnimateHandler, [circle]);\n\t// }\n\n\tfunction drawShape(){\n\t\tctx.clearRect(0,0,w,h);\n\t\tctx.backgroundObj(_bgColor);\n\n\t\tif (isDebug) {\n\t\t\tShapeUtil.gridField(ctx, grid);\n\t\t}\n\n\t\t// ctx.fillColourRGB(BLACK,10);\n\t\tctx.strokeColourObj(_lineColor);\n\t\tctx.strokeWeight(15);\n\t\tfor ( i in 0 ... shapeArray.length ) {\n\t\t\tvar rectangle : Rectangle = shapeArray[i];\n\t\t\tvar size = _size * 0.8;\n\t\t\tvar radiusMax = _size/2;\n\t\t\tvar temp = (radiusMax/shapeArray.length)*i;\n\t\t\tctx.fillColourRGB(_lineColor);\n\t\t\tctx.roundRect(rectangle.x, rectangle.y, size, size, temp);\n\t\t}\n\t}\n\n\n\toverride function setup(){\n\t\t// trace('setup: ${toString()}');\n\t\t// var rgb = randomColourObject();\n\t\t// ctx.strokeColour(rgb.r, rgb.g, rgb.b);\n\t\t// ctx.xcross(w/2, h/2, 200);\n\n\t\tvar colorArray = ColorUtil.niceColor100[randomInt(ColorUtil.niceColor100.length-1)];\n\t\t_bgColor = hex2RGB(colorArray[0]);\n\t\t_lineColor = hex2RGB(colorArray[1]);\n\t\t_fillColor = hex2RGB(colorArray[2]);\n\n\t\t// isDebug = true;\n\n\t\t// grid.setDimension(w*2.1, h*2.1);\n\t\t// grid.setNumbered(3,3);\n\t\tgrid.setCellSize(_size);\n\t\tgrid.setIsCenterPoint(true);\n\n\t\tfor ( i in 0 ... grid.array.length ) {\n\t\t\tvar point : Point = grid.array[i];\n\t\t\tshapeArray.push(createShape(i, point));\n\t\t}\n\n\t}\n\n\toverride function draw(){\n\t\ttrace('draw: ${toString()}');\n\t\tdrawShape();\n\t\tstop();\n\t}\n}","package art;\n\n/**\n * short description what this does\n */\nclass CC022 extends CCBase implements ICCBase {\n\n\tvar shapeArray : Array<CircleExtra> = [];\n\tvar shapeMax : Int = 10;\n\n\tvar _bgColor : RGB = null;\n\tvar _lineColor : RGB = null;\n\tvar _fillColor : RGB = null;\n\n\tvar _xmax = 50;\n\n\tvar maxDistance = w/2;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t\tdescription = '';\n\t}\n\n\tfunction createShape(i:Int, ?point:Point){\n\t\tvar _angle = (360/_xmax)*i;\n\t\tvar shape : CircleExtra = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'circle',\n\t\t\tradius: h/2,\n\t\t\tangle: _angle,\n\t\t\tx: (w/_xmax) * i,\n\t\t\ty: (h/2),\n\t\t}\n\t\t// onAnimateHandler(shape);\n\t\treturn shape;\n\t}\n\n\t// function onAnimateHandler(circle:Circle){\n\t// \t// Go.to(circle, 5).x(w/2).y(h/2).ease(Sine.easeInOut).onComplete(onAnimateHandler, [circle]);\n\t// }\n\n\tfunction drawShape(){\n\t\tctx.clearRect(0,0,w,h);\n\t\tctx.backgroundObj(_bgColor);\n\n\t\tctx.strokeColourObj(_lineColor);\n\t\tfor ( i in 0 ... shapeArray.length ) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\tsh.angle += 1;\n\t\t\tsh.y = (h/2) + Math.sin(radians(sh.angle)) * h/3;\n\t\t\tctx.strokeColourObj(_lineColor,0);\n\t\t\tctx.strokeCircle(sh.x, sh.y, 10);\n\n\t\t\tfor (j in 0...shapeArray.length) {\n\t\t\t\tvar b2 = shapeArray[j];\n\t\t\t\tif (sh == b2) continue;\n\t\t\t\tvar _dist = distance(sh.x, sh.y, b2.x, b2.y);\n\t\t\t\t// trace('-----\\n ${line} / ${b2} -- ${_dist}');\n\t\t\t\tif (_dist < maxDistance) {\n\t\t\t\t\tvar alpha:Float = 0.8 - (_dist / maxDistance); // 0.5\n\t\t\t\t\t// trace(alpha);\n\t\t\t\t\t// alpha = 1;\n\t\t\t\t\tctx.lineColour(_fillColor.r, _fillColor.g, _fillColor.b, alpha);\n\t\t\t\t\tctx.line(sh.x, sh.y, b2.x, b2.y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\toverride function setup(){\n\t\t// trace('setup: ${toString()}');\n\n\t\tvar colorArray = ColorUtil.niceColor100[randomInt(ColorUtil.niceColor100.length-1)];\n\t\t_bgColor = hex2RGB(colorArray[0]);\n\t\t_lineColor = hex2RGB(colorArray[3]);\n\t\t_fillColor = hex2RGB(colorArray[2]);\n\n\t\t// isDebug = true;\n\n\t\tshapeArray = [];\n\t\tfor ( i in 0 ... _xmax ) {\n\t\t\tshapeArray.push(createShape(i));\n\t\t}\n\n\t\t// console.table(shapeArray);\n\n\t}\n\n\toverride function draw(){\n\t\ttrace('draw: ${toString()}');\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}","package art;\n\n/**\n * short description what this does\n */\nclass CC023 extends CCBase implements ICCBase {\n\n\tvar shapeArray:Array<CircleExtra> = [];\n\tvar shapeArray2:Array<CircleExtra> = [];\n\n\tvar _bgColor:RGB = null;\n\tvar _lineColor:RGB = null;\n\tvar _fillColor:RGB = null;\n\tvar _lineColor2:RGB = null;\n\tvar _fillColor2:RGB = null;\n\n\tvar _xmax = 50;\n\n\tvar maxDistance = w / 2;\n\n\tvar centerX = w / 2;\n\tvar centerY = h / 2;\n\tvar radiusY = h / 3;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t\tdescription = '';\n\t}\n\n\tfunction createShape(i:Int, ?point:Point) {\n\t\tvar _angle = (360 / _xmax) * i;\n\t\tvar shape:CircleExtra = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'circle',\n\t\t\tradius: h / 2,\n\t\t\tangle: _angle,\n\t\t\tx: ((w / _xmax) * i) + point.x,\n\t\t\ty: centerY + point.y,\n\t\t}\n\t\tReflect.setField(shape, 'point', point);\n\t\t// onAnimateHandler(shape);\n\t\treturn shape;\n\t}\n\n\t// function onAnimateHandler(circle:Circle){\n\t// \t// Go.to(circle, 5).x(w/2).y(centerY).ease(Sine.easeInOut).onComplete(onAnimateHandler, [circle]);\n\t// }\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(_bgColor);\n\n\t\tctx.strokeColourObj(_lineColor);\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\tvar point : Point = Reflect.getProperty(sh, 'point');\n\t\t\tsh.angle += 1;\n\t\t\tsh.y = centerY + point.y + Math.sin(radians(sh.angle)) * radiusY;\n\t\t\tctx.strokeColourObj(_lineColor, 1);\n\t\t\tctx.strokeCircle(sh.x, sh.y, 10);\n\n\t\t\tvar sh2 = shapeArray2[i];\n\t\t\tvar point2 : Point = Reflect.getProperty(sh2, 'point');\n\t\t\tsh2.angle += 1;\n\t\t\tsh2.y = centerY + point2.y + Math.sin(radians(sh2.angle)) * radiusY;\n\t\t\tctx.strokeColourObj(_lineColor, 1);\n\t\t\tctx.strokeCircle(sh2.x, sh2.y, 10);\n\n\t\t\tctx.strokeColourObj(_lineColor2, 1);\n\t\t\tctx.lineColour(_fillColor.r, _fillColor.g, _fillColor.b, 1);\n\t\t\tctx.line(sh.x, sh.y, sh2.x, sh2.y);\n\n\t\t}\n\t}\n\n\toverride function setup() {\n\t\t// trace('setup: ${toString()}');\n\n\t\t// var colorArray = ColorUtil.niceColor100[randomInt(ColorUtil.niceColor100.length-1)];\n\t\tvar colorArray = ColorUtil.niceColor100[5];\n\t\t_bgColor = hex2RGB(colorArray[0]);\n\t\t_lineColor = hex2RGB(colorArray[1]);\n\t\t_fillColor = hex2RGB(colorArray[2]);\n\t\t_lineColor2 = hex2RGB(colorArray[3]);\n\t\t_fillColor2 = hex2RGB(colorArray[4]);\n\n\t\t// isDebug = true;\n\n\t\tshapeArray = [];\n\t\tfor (i in 0..._xmax) {\n\t\t\tvar point:Point = {x: -50, y: -50}\n\t\t\tshapeArray.push(createShape(i, point));\n\t\t}\n\t\tshapeArray2 = [];\n\t\tfor (i in 0..._xmax) {\n\t\t\tvar point:Point = {x: 50, y: 50}\n\t\t\tshapeArray2.push(createShape(i, point));\n\t\t}\n\n\t\t// console.table(shapeArray);\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC024 extends CCBase implements ICCBase {\n\n\tvar shapeArray:Array<CircleExtra> = [];\n\tvar shapeArray2:Array<CircleExtra> = [];\n\n\tvar _bgColor:RGB = null;\n\tvar _lineColor:RGB = null;\n\tvar _fillColor:RGB = null;\n\tvar _lineColor2:RGB = null;\n\tvar _fillColor2:RGB = null;\n\n\tvar _xmax = 50;\n\n\tvar maxDistance = 250;\n\n\tvar centerX = w / 2;\n\tvar centerY = h / 2;\n\tvar radiusY = h / 3;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t\tdescription = '';\n\t}\n\n\tfunction createShape(i:Int, ?point:Point) {\n\t\tvar _angle = (360 / _xmax) * i;\n\t\tvar shape:CircleExtra = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'circle',\n\t\t\tradius: h / 2,\n\t\t\tangle: _angle,\n\t\t\tx: ((w / _xmax) * i) + point.x,\n\t\t\ty: centerY + point.y,\n\t\t}\n\t\tReflect.setField(shape, 'point', point);\n\t\t// onAnimateHandler(shape);\n\t\treturn shape;\n\t}\n\n\t// function onAnimateHandler(circle:Circle){\n\t// \t// Go.to(circle, 5).x(w/2).y(centerY).ease(Sine.easeInOut).onComplete(onAnimateHandler, [circle]);\n\t// }\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(_bgColor);\n\n\t\tctx.strokeColourObj(_lineColor);\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\tvar point : Point = Reflect.getProperty(sh, 'point');\n\t\t\tsh.angle += 1;\n\t\t\tsh.y = centerY + point.y + Math.sin(radians(sh.angle)) * radiusY;\n\t\t\tctx.strokeColourObj(_lineColor, 1);\n\t\t\tctx.strokeCircle(sh.x, sh.y, 10);\n\n\t\t\tvar sh2 = shapeArray2[i];\n\t\t\tvar point2 : Point = Reflect.getProperty(sh2, 'point');\n\t\t\tsh2.angle += 1;\n\t\t\tsh2.y = centerY + point2.y + Math.sin(radians(sh2.angle)) * radiusY;\n\t\t\tctx.strokeColourObj(_lineColor, 1);\n\t\t\tctx.strokeCircle(sh2.x, sh2.y, 10);\n\n\t\t\tctx.strokeColourObj(_lineColor2, 1);\n\t\t\tctx.lineColour(_fillColor.r, _fillColor.g, _fillColor.b, 1);\n\t\t\tctx.line(sh.x, sh.y, sh2.x, sh2.y);\n\n\n\t\t\tfor (j in 0...shapeArray2.length) {\n\t\t\t\tvar b2 = shapeArray2[j];\n\t\t\t\tif (sh == b2) continue;\n\t\t\t\tvar _dist = distance(sh.x, sh.y, b2.x, b2.y);\n\t\t\t\t// trace('-----\\n ${line} / ${b2} -- ${_dist}');\n\t\t\t\tif (_dist < maxDistance) {\n\t\t\t\t\tvar alpha:Float = 0.8 - (_dist / maxDistance); // 0.5\n\t\t\t\t\t// trace(alpha);\n\t\t\t\t\t// alpha = 1;\n\t\t\t\t\tctx.lineColour(_fillColor2.r, _fillColor2.g, _fillColor2.b, alpha);\n\t\t\t\t\tctx.line(sh.x, sh.y, b2.x, b2.y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\toverride function setup() {\n\t\t// trace('setup: ${toString()}');\n\n\t\t// var colorArray = ColorUtil.niceColor100[randomInt(ColorUtil.niceColor100.length-1)];\n\t\tvar colorArray = ColorUtil.niceColor100[2];\n\t\t_bgColor = hex2RGB(colorArray[0]);\n\t\t_lineColor = hex2RGB(colorArray[1]);\n\t\t_fillColor = hex2RGB(colorArray[2]);\n\t\t_lineColor2 = hex2RGB(colorArray[3]);\n\t\t_fillColor2 = hex2RGB(colorArray[4]);\n\n\t\t// isDebug = true;\n\n\t\tshapeArray = [];\n\t\tfor (i in 0..._xmax) {\n\t\t\tvar point:Point = {x: -50, y: -50}\n\t\t\tshapeArray.push(createShape(i, point));\n\t\t}\n\t\tshapeArray2 = [];\n\t\tfor (i in 0..._xmax) {\n\t\t\tvar point:Point = {x: 50, y: 50}\n\t\t\tshapeArray2.push(createShape(i, point));\n\t\t}\n\n\t\t// console.table(shapeArray);\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC025 extends CCBase implements ICCBase {\n\n\tvar shapeArray : Array<Circle> = [];\n\tvar grid : GridUtil = new GridUtil();\n\n\tvar _radius = 150;\n\tvar _cellsize = 150;\n\tvar _bgColor:RGB = null;\n\tvar _lineColor:RGB = null;\n\tvar _fillColor:RGB = null;\n\tvar _lineColor2:RGB = null;\n\tvar _fillColor2:RGB = null;\n\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t\tdescription = '';\n\t}\n\n\tfunction createShape(i:Int, ?point:Point){\n\t\tvar shape : Circle = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'circle',\n\t\t\tx: point.x,\n\t\t\ty: point.y,\n\t\t\tradius:_radius,\n\t\t}\n\t\tonAnimateHandler(shape);\n\t\treturn shape;\n\t}\n\n\tfunction onAnimateHandler(circle:Circle){\n\t\t// Go.to(circle, 5).x(w/2).y(h/2).ease(Sine.easeInOut).onComplete(onAnimateHandler, [circle]);\n\t}\n\n\tfunction drawShape(){\n\t\tctx.clearRect(0,0,w,h);\n\t\tctx.backgroundObj(WHITE);\n\n\n\t\tif (isDebug) {\n\t\t\tShapeUtil.gridField(ctx, grid);\n\t\t}\n\n\n\t\tfor ( i in 0 ... grid.array.length ) {\n\t\t\tvar point : Point = grid.array[i];\n\t\t\tvar colorArray = ColorUtil.niceColor100[i];\n\t\t\tvar color0 = hex2RGB(colorArray[0]);\n\t\t\tvar color1 = hex2RGB(colorArray[1]);\n\t\t\tvar color2 = hex2RGB(colorArray[2]);\n\t\t\tvar color3 = hex2RGB(colorArray[3]);\n\t\t\tvar color4 = hex2RGB(colorArray[4]);\n\t\t\tvar _colorA = [color0, color1, color2, color3, color4];\n\t\t\tfor ( j in 0 ... _colorA.length ) {\n\t\t\t\tvar px = 10;\n\n\t\t\t\tvar _w = Math.round((grid.cellWidth-px)/_colorA.length);\n\t\t\t\tvar offsetX = j*_w;\n\t\t\t\t// ctx.strokeColourRGB(_colorA[j]);\n\t\t\t\t// ctx.strokeWeight(_w);\n\t\t\t\tctx.fillColourRGB(_colorA[j]);\n\t\t\t\tctx.fillRect(offsetX + point.x, point.y, _w , grid.cellHeight - px);\n\t\t\t}\n\t\t}\n\t}\n\n\n\toverride function setup(){\n\t\t// trace('setup: ${toString()}');\n\n\t\t// var colorArray = ColorUtil.niceColor100[randomInt(ColorUtil.niceColor100.length-1)];\n\t\tvar colorArray = ColorUtil.niceColor100[10];\n\t\t_bgColor = hex2RGB(colorArray[0]);\n\t\t_lineColor = hex2RGB(colorArray[1]);\n\t\t_fillColor = hex2RGB(colorArray[2]);\n\t\t_lineColor2 = hex2RGB(colorArray[3]);\n\t\t_fillColor2 = hex2RGB(colorArray[4]);\n\n\t\t// isDebug = true;\n\n\t\t// grid.setDimension(w*2.1, h*2.1);\n\t\tgrid.setNumbered(10,10);\n\t\t// grid.setCellSize(_cellsize);\n\t\t// grid.setIsCenterPoint(true);\n\n\t}\n\n\toverride function draw(){\n\t\ttrace('draw: ${toString()}');\n\t\tdrawShape();\n\t\tstop();\n\t}\n}","package art;\n\n/**\n * short description what this does\n */\nclass CC026 extends CCBase implements ICCBase {\n\n\tvar shapeArray:Array<Circle> = [];\n\tvar shapeMax = 5000;\n\tvar ctxHidden:CanvasRenderingContext2D;\n\tvar readyCounter = 0;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t\tdescription = '';\n\t\tHelperUtil.stats();\n\t}\n\n\t// ____________________________________ handlers ____________________________________\n\tfunction onAnimateHandler(circle:Circle) {\n\t\tvar startx = circle.x;\n\t\tvar starty = circle.y;\n\n\t\tif (posNeg() > 0) {\n\t\t\tstartx = (circle.x < w / 2) ? circle.x - w : circle.x + w;\n\t\t\tstarty += random(-h, h);\n\t\t} else {\n\t\t\tstartx += random(-w, w);\n\t\t\tstarty = (circle.y < h / 2) ? circle.y - h : circle.y + h;\n\t\t}\n\n\t\tvar time = random(1, 3);\n\t\tvar delay = random(0, 3);\n\n\t\tGo.from(circle, time)\n\t\t\t.delay(delay)\n\t\t\t.x(startx)\n\t\t\t.y(starty)\n\t\t\t.ease(Sine.easeOut)\n\t\t\t.onComplete(onCompleteHandler, [circle]);\n\t}\n\n\tfunction onCompleteHandler(circle) {\n\t\treadyCounter++;\n\t\tif (readyCounter >= shapeArray.length) {\n\t\t\ttrace('stop');\n\t\t\tstop();\n\t\t}\n\t}\n\n\t// ____________________________________ shape related  ____________________________________\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar circle = shapeArray[i];\n\n\t\t\tctx.fillStyle = circle.colour;\n\t\t\tctx.circle(circle.x, circle.y, 5);\n\t\t}\n\t}\n\n\tfunction getPixel() {\n\t\tfor (i in 0...shapeMax) {\n\t\t\tvar xpos = random(0, ctxHidden.canvas.width);\n\t\t\tvar ypos = random(0, ctxHidden.canvas.height);\n\n\t\t\tvar pixel = ctxHidden.getImageData(xpos, ypos, 1, 1);\n\t\t\tvar data = pixel.data;\n\t\t\tif (data[0] == 255 && data[1] == 255 && data[2] == 255)\n\t\t\t\tcontinue;\n\t\t\tif (data[0] != 0 && data[1] != 0 && data[2] != 0)\n\t\t\t\tcontinue;\n\t\t\tvar rgba = 'rgba(' + data[0] + ', ' + data[1] + ', ' + data[2] + ', ' + (data[3] / 255) + ')';\n\t\t\t// trace(rgba);\n\n\t\t\tvar xstart = Math.round((w - ctxHidden.canvas.width) / 2);\n\t\t\tvar ystart = Math.round((h - ctxHidden.canvas.height) / 2);\n\n\t\t\tvar circle:Circle = {\n\t\t\t\t_id: '$i',\n\t\t\t\t_type: 'circle',\n\t\t\t\tx: xstart + xpos,\n\t\t\t\ty: ystart + ypos,\n\t\t\t\tradius: 10,\n\t\t\t\tcolour: rgba,\n\t\t\t}\n\n\t\t\tshapeArray.push(circle);\n\t\t\t// ctx.strokeCircle(circle.x, circle.y, 10);\n\t\t}\n\n\t\t// console.table(shapeArray);\n\t\ttrace(shapeArray.length);\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar _shapeArray = shapeArray[i];\n\t\t\tonAnimateHandler(_shapeArray);\n\t\t}\n\t}\n\n\t// ____________________________________ override  ____________________________________\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\t\tvar img = new Image();\n\t\timg.src = 'assets/img/planb.png';\n\t\timg.onload = function() {\n\t\t\tvar option = new Sketch.SketchOption();\n\t\t\toption.width = img.width;\n\t\t\toption.height = img.height;\n\t\t\tctxHidden = Sketch.createHiddenCanvas('imageholder', option);\n\t\t\tctxHidden.drawImage(img, 0, 0, img.width, img.height);\n\t\t\timg.style.display = 'none';\n\n\t\t\tgetPixel();\n\t\t};\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\t// stop();\n\t}\n\n\t// ____________________________________ helpers ____________________________________\n\tfunction pixelData2RGBA(data):RGBA {\n\t\treturn {\n\t\t\tr: data[0],\n\t\t\tg: data[1],\n\t\t\tb: data[2],\n\t\t\ta: (data[3] / 255),\n\t\t}\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC027 extends CCBase implements ICCBase {\n\n\tvar shapeArray:Array<Circle> = [];\n\tvar shapeMax = 5000;\n\tvar ctxHidden:CanvasRenderingContext2D;\n\tvar readyCounter = 0;\n\tvar grid:GridUtil = new GridUtil();\n\tvar _cellsize = 10;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t\tdescription = 'dots bombard plan b';\n\t\tHelperUtil.stats();\n\t}\n\n\t// ____________________________________ handlers ____________________________________\n\n\tfunction onAnimateHandler(circle:Circle) {\n\t\tvar startx = circle.x;\n\t\tvar starty = circle.y;\n\n\t\tif (posNeg() > 0) {\n\t\t\tstartx = (circle.x < w / 2) ? circle.x - w : circle.x + w;\n\t\t\tstarty += random(-h, h);\n\t\t} else {\n\t\t\tstartx += random(-w, w);\n\t\t\tstarty = (circle.y < h / 2) ? circle.y - h : circle.y + h;\n\t\t}\n\n\t\tvar time = random(1, 3);\n\t\tvar delay = random(0, 3) + 2; // wait for 2 seconds\n\n\t\tGo.from(circle, time)\n\t\t\t.delay(delay)\n\t\t\t.x(startx)\n\t\t\t.y(starty)\n\t\t\t.ease(Quart.easeOut)\n\t\t\t.onComplete(onCompleteHandler, [circle]);\n\t}\n\n\tfunction onCompleteHandler(circle) {\n\t\treadyCounter++;\n\t\tif (readyCounter >= shapeArray.length) {\n\t\t\ttrace('stop');\n\t\t\tstop();\n\t\t}\n\t}\n\n\t// ____________________________________ shape related  ____________________________________\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\t// if (isDebug) {\n\t\t// \tShapeUtil.gridDots(ctx, grid);\n\t\t// }\n\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar circle = shapeArray[i];\n\n\t\t\t// ctx.fillStyle = circle.colour;\n\t\t\t// ctx.fillStyle = getColourObj(BLACK);\n\t\t\t// ctx.circle(circle.x, circle.y, circle.radius);\n\t\t\t// ctx.strokeColourRGB (circle.rgb);\n\t\t\tctx.strokeCircle(circle.x, circle.y, circle.radius);\n\t\t}\n\t}\n\n\tfunction buildGrid() {\n\n\t\tgrid.setPosition(0,0);\n\t\tgrid.setCellSize(_cellsize);\n\t\tgrid.setDimension(ctxHidden.canvas.width, ctxHidden.canvas.height);\n\t\ttrace('canvas (width,height): ${ctxHidden.canvas.width},${ctxHidden.canvas.height}');\n\t\ttrace('grid (width,height): ${grid.width},${grid.height}');\n\t\ttrace('grid.array.length: ${grid.array.length}');\n\t\ttrace('grid cell (width,height): ${grid.cellHeight}, ${grid.cellWidth}');\n\n\t\tfor (i in 0...grid.array.length) {\n\t\t\tvar point = grid.array[i];\n\t\t\tvar xpos = Math.round(point.x);\n\t\t\tvar ypos = Math.round(point.y);\n\n\t\t\tvar pixel = ctxHidden.getImageData(xpos, ypos, 1, 1);\n\t\t\tvar data = pixel.data;\n\t\t\tif (data[0] == 255 && data[1] == 255 && data[2] == 255)\n\t\t\t\tcontinue;\n\t\t\tif (data[0] != 0 && data[1] != 0 && data[2] != 0)\n\t\t\t\tcontinue;\n\t\t\tvar rgba = 'rgba(' + data[0] + ', ' + data[1] + ', ' + data[2] + ', ' + (data[3] / 255) + ')';\n\t\t\t// trace(rgba);\n\n\t\t\tvar xstart = Math.round((w - ctxHidden.canvas.width) / 2);\n\t\t\tvar ystart = Math.round((h - ctxHidden.canvas.height) / 2);\n\n\t\t\tvar circle:Circle = {\n\t\t\t\t_id: '$i',\n\t\t\t\t_type: 'circle',\n\t\t\t\tx: xstart + xpos,\n\t\t\t\ty: ystart + ypos,\n\t\t\t\tradius: _cellsize/2,\n\t\t\t\tcolour: rgba,\n\t\t\t}\n\t\t\tshapeArray.push(circle);\n\t\t}\n\n\t\t// console.table(shapeArray);\n\t\ttrace('total shape: ${shapeArray.length} from total grid ${grid.array.length}');\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar _shapeArray = shapeArray[i];\n\t\t\tonAnimateHandler(_shapeArray);\n\t\t}\n\t}\n\n\n\t// ____________________________________ override  ____________________________________\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\tshapeArray = [];\n\t\t// isDebug = true;\n\n\t\t// start loading image\n\t\tvar img = new Image();\n\t\timg.src = 'assets/img/planb.png';\n\t\timg.onload = function() {\n\t\t\tvar option = new Sketch.SketchOption();\n\t\t\toption.width = img.width;\n\t\t\toption.height = img.height;\n\t\t\tctxHidden = Sketch.createHiddenCanvas('imageholder', option);\n\t\t\tctxHidden.drawImage(img, 0, 0, img.width, img.height);\n\t\t\timg.style.display = 'none';\n\n\t\t\tbuildGrid();\n\t\t};\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\t// stop();\n\t}\n\n\t// ____________________________________ helpers ____________________________________\n\n\tfunction pixelData2RGBA(data:Uint8ClampedArray):RGBA {\n\t\treturn {\n\t\t\tr: data[0],\n\t\t\tg: data[1],\n\t\t\tb: data[2],\n\t\t\ta: (data[3] / 255),\n\t\t}\n\t}\n\n\tfunction pixelData2RGB(data:Uint8ClampedArray):RGB {\n\t\treturn {\n\t\t\tr: data[0],\n\t\t\tg: data[1],\n\t\t\tb: data[2],\n\t\t}\n\t}\n}\n","package art;\n\nusing hxColorToolkit.ColorToolkit;\nusing StringTools;\n\n// // import ColorUtil;\nimport mloader.Loader;\nimport mloader.JsonLoader;\nimport cc.tool.ExportFile;\n\n/**\n * short description what this does\n */\nclass CC028 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Circle> = [];\n\tvar grid:GridUtil = new GridUtil();\n\tvar loader:JsonLoader<Dynamic>;\n\tvar colorArr:Array<Array<String>> = [];\n\tvar exportStringArray:Array<Array<String>> = [];\n\tvar exportIntArray:Array<Array<Int>> = [];\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Convert 1000 colorcombos based on gray scale from light to dark';\n\t\tsuper(ctx);\n\n\t\t// loading gigantic 1000.json file with arrays\n\t\tloader = new JsonLoader<Dynamic>('assets/1000.json');\n\t\tloader.loaded.add(loaded);\n\t\tloader.load();\n\t}\n\n\tfunction loaded(event) {\n\t\tswitch (event.type) {\n\t\t\tcase Fail(error):\n\t\t\t\ttrace(error);\n\t\t\tcase Complete:\n\t\t\t\t// trace(event.target);\n\t\t\t\t// trace(event.target.content);\n\t\t\t\t// trace(event.target.content.length);\n\t\t\t\tcolorArr = cast event.target.content;\n\t\t\t\tconvertColors();\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tfunction convertColors() {\n\t\texportStringArray = [];\n\t\texportIntArray = [];\n\t\tfor (i in 0...colorArr.length) {\n\t\t\tvar _colorArr = colorArr[i];\n\t\t\t// trace('$i , $_colorArr');\n\t\t\tvar array:Array<{hex:Int, gray:Int}> = [\n\t\t\t\t{hex: convertToHex2(_colorArr[0]), gray: convertToHex2(_colorArr[0]).toGray().getColor()},\n\t\t\t\t{hex: convertToHex2(_colorArr[1]), gray: convertToHex2(_colorArr[1]).toGray().getColor()},\n\t\t\t\t{hex: convertToHex2(_colorArr[2]), gray: convertToHex2(_colorArr[2]).toGray().getColor()},\n\t\t\t\t{hex: convertToHex2(_colorArr[3]), gray: convertToHex2(_colorArr[3]).toGray().getColor()},\n\t\t\t\t{hex: convertToHex2(_colorArr[4]), gray: convertToHex2(_colorArr[4]).toGray().getColor()},\n\t\t\t];\n\t\t\tvar copy = array.copy();\n\t\t\thaxe.ds.ArraySort.sort(copy, function(a, b) {\n\t\t\t\tif (a.gray < b.gray)\n\t\t\t\t\treturn 1;\n\t\t\t\telse if (a.gray > b.gray)\n\t\t\t\t\treturn -1;\n\t\t\t\telse\n\t\t\t\t\treturn 0;\n\t\t\t});\n\n\t\t\tvar storeStringArray:Array<String> = [];\n\t\t\tvar storeIntArray:Array<Int> = [];\n\t\t\tfor (j in 0...copy.length) {\n\t\t\t\tvar __c = copy[j].hex;\n\t\t\t\t// trace(StringTools.hex(__c,6));\n\t\t\t\t// trace(__c);\n\t\t\t\tstoreStringArray.push('#' + StringTools.hex(__c, 6));\n\t\t\t\tstoreIntArray.push(__c);\n\t\t\t\t// ctx.fillColour(Math.round(__c.red), Math.round(__c.green), Math.round(__c.blue));\n\t\t\t}\n\n\t\t\texportStringArray.push(storeStringArray);\n\t\t\texportIntArray.push(storeIntArray);\n\t\t}\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\t// if (isDebug) {\n\t\t// \tShapeUtil.gridDots(ctx, grid);\n\t\t// }\n\n\t\tvar colorArray = ColorUtil.niceColor100[10];\n\t\tvar _color0 = hex2RGB(colorArray[0]);\n\t\tvar _color1 = hex2RGB(colorArray[1]);\n\t\tvar _color2 = hex2RGB(colorArray[2]);\n\t\tvar _color3 = hex2RGB(colorArray[3]);\n\t\tvar _color4 = hex2RGB(colorArray[4]);\n\n\t\tvar _colorA = [_color0, _color1, _color2, _color3, _color4];\n\t\tvar point:Point = grid.array[0];\n\t\tfor (j in 0..._colorA.length) {\n\t\t\tvar px = 10;\n\t\t\tvar _w = Math.round((grid.cellWidth - px) / _colorA.length);\n\t\t\tvar offsetX = j * _w;\n\t\t\tctx.fillColourRGB(_colorA[j]);\n\t\t\tctx.fillRect(offsetX + point.x, point.y, _w, grid.cellHeight - px);\n\t\t}\n\n\t\tvar color = (Std.parseInt(colorArray[0].replace('#', '0x')));\n\n\t\tvar _color0 = convertToHexToGray(colorArray[0]);\n\t\tvar _color1 = convertToHexToGray(colorArray[1]);\n\t\tvar _color2 = convertToHexToGray(colorArray[2]);\n\t\tvar _color3 = convertToHexToGray(colorArray[3]);\n\t\tvar _color4 = convertToHexToGray(colorArray[4]);\n\n\t\tvar px = 10;\n\t\tvar _w = Math.round((grid.cellWidth - px) / _colorA.length);\n\n\t\tvar point:Point = grid.array[1];\n\t\tvar _colorA = [_color0, _color1, _color2, _color3, _color4];\n\t\tfor (j in 0..._colorA.length) {\n\t\t\tvar offsetX = j * _w;\n\t\t\tctx.fillColourRGB(_colorA[j]);\n\t\t\tctx.fillRect(offsetX + point.x, point.y, _w, grid.cellHeight - px);\n\t\t}\n\n\t\tvar array:Array<{hex:Int, gray:Int}> = [\n\t\t\t{hex: convertToHex2(colorArray[0]), gray: convertToHex2(colorArray[0]).toGray().getColor()},\n\t\t\t{hex: convertToHex2(colorArray[1]), gray: convertToHex2(colorArray[1]).toGray().getColor()},\n\t\t\t{hex: convertToHex2(colorArray[2]), gray: convertToHex2(colorArray[2]).toGray().getColor()},\n\t\t\t{hex: convertToHex2(colorArray[3]), gray: convertToHex2(colorArray[3]).toGray().getColor()},\n\t\t\t{hex: convertToHex2(colorArray[4]), gray: convertToHex2(colorArray[4]).toGray().getColor()},\n\t\t];\n\t\tconsole.log(\"An Array with objects\", array);\n\n\t\tvar copy = array.copy();\n\t\thaxe.ds.ArraySort.sort(copy, function(a, b) {\n\t\t\tif (a.gray < b.gray)\n\t\t\t\treturn 1;\n\t\t\telse if (a.gray > b.gray)\n\t\t\t\treturn -1;\n\t\t\telse\n\t\t\t\treturn 0;\n\t\t});\n\n\t\tconsole.log(\"An Array with objects\", copy);\n\n\t\tvar point:Point = grid.array[2];\n\t\tfor (j in 0...copy.length) {\n\t\t\tvar offsetX = j * _w;\n\t\t\tvar __c = copy[j].gray.toRGB();\n\t\t\tctx.fillColour(Math.round(__c.red), Math.round(__c.green), Math.round(__c.blue));\n\t\t\tctx.fillRect(offsetX + point.x, point.y, _w, grid.cellHeight - px);\n\t\t}\n\n\t\tvar point:Point = grid.array[3];\n\t\tfor (j in 0...copy.length) {\n\t\t\tvar offsetX = j * _w;\n\t\t\tvar __c = copy[j].hex.toRGB();\n\t\t\tctx.fillColour(Math.round(__c.red), Math.round(__c.green), Math.round(__c.blue));\n\t\t\tctx.fillRect(offsetX + point.x, point.y, _w, grid.cellHeight - px);\n\t\t}\n\t}\n\n\t// ____________________________________ override ____________________________________\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\t\tgrid.setNumbered(4, 1);\n\n\t\twindow.addEventListener(KEY_DOWN, function(e:js.html.KeyboardEvent) {\n\t\t\te.preventDefault();\n\t\t\tswitch (e.key) {\n\t\t\t\tcase 's':\n\t\t\t\t\tvar arrayInt100 = [];\n\t\t\t\t\tvar arrayString100 = [];\n\t\t\t\t\tvar arrayInt500 = [];\n\t\t\t\t\tvar arrayString500 = [];\n\n\t\t\t\t\tfor (i in 0...exportIntArray.length) {\n\t\t\t\t\t\tvar _exportIntArray = exportIntArray[i];\n\t\t\t\t\t\tvar _exportStringArray = exportStringArray[i];\n\n\t\t\t\t\t\tif (i <= 100) {\n\t\t\t\t\t\t\tarrayInt100.push(_exportIntArray);\n\t\t\t\t\t\t\tarrayString100.push(_exportStringArray);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (i <= 500) {\n\t\t\t\t\t\t\tarrayInt500.push(_exportIntArray);\n\t\t\t\t\t\t\tarrayString500.push(_exportStringArray);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// ExportFile.downloadTextFile(\"This is the content of my file :)\", \"hello.json\");\n\t\t\t\t\tExportFile.downloadTextFile(haxe.Json.stringify(arrayInt100), \"sorted_int_100.json\");\n\t\t\t\t\tExportFile.downloadTextFile(haxe.Json.stringify(arrayString100), \"sorted_100.json\");\n\t\t\t\t\tExportFile.downloadTextFile(haxe.Json.stringify(arrayInt500), \"sorted_int_500.json\");\n\t\t\t\t\tExportFile.downloadTextFile(haxe.Json.stringify(arrayString500), \"sorted_500.json\");\n\t\t\t\t\tExportFile.downloadTextFile(haxe.Json.stringify(exportIntArray), \"sorted_int_1000.json\");\n\t\t\t\t\tExportFile.downloadTextFile(haxe.Json.stringify(exportStringArray), \"sorted_1000.json\");\n\t\t\t\tdefault:\n\t\t\t\t\ttrace(\"case '\" + e.key + \"': trace ('\" + e.key + \"');\");\n\t\t\t}\n\t\t}, false);\n\t}\n\n\toverride function draw() {\n\t\ttrace('draw: ${toString()}');\n\t\tdrawShape();\n\t\tstop();\n\t}\n\n\t// ____________________________________ misc ____________________________________\n\n\tfunction convertToHex(value:String):RGB {\n\t\tvar _color = (Std.parseInt(value.replace('#', '0x')));\n\t\tvar rgb:RGB = {\n\t\t\tr: Math.round(_color.toRGB().red),\n\t\t\tg: Math.round(_color.toRGB().green),\n\t\t\tb: Math.round(_color.toRGB().blue),\n\t\t}\n\t\treturn rgb;\n\t}\n\n\tfunction convertToHexToGray(value:String):RGB {\n\t\tvar _color = (Std.parseInt(value.replace('#', '0x')));\n\t\tvar rgb:RGB = {\n\t\t\tr: Math.round(_color.toGray().toRGB().red),\n\t\t\tg: Math.round(_color.toGray().toRGB().green),\n\t\t\tb: Math.round(_color.toGray().toRGB().blue),\n\t\t}\n\t\treturn rgb;\n\t}\n\n\tfunction convertToHex2(value:String):Int {\n\t\tvar _color = (Std.parseInt(value.replace('#', '0x')));\n\t\treturn _color;\n\t}\n}\n","package art;\n\n// // import ColorUtil;\nimport mloader.Loader;\nimport mloader.JsonLoader;\n\n/**\n * short description what this does\n */\nclass CC029 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Circle> = [];\n\tvar grid:GridUtil = new GridUtil();\n\tvar loader:JsonLoader<Dynamic>;\n\tvar colorArr:Array<Array<String>> = [];\n\tvar _radius = 150;\n\tvar _cellsize = 150;\n\tvar _bgColor:RGB = null;\n\tvar _lineColor:RGB = null;\n\tvar _fillColor:RGB = null;\n\tvar _lineColor2:RGB = null;\n\tvar _fillColor2:RGB = null;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Show 1000 sorted colors';\n\t\tcolorArr = ColorUtil.niceColor100SortedString;\n\n\t\tsuper(ctx);\n\n\t\t// loading gigantic 1000.json file with arrays\n\t\tloader = new JsonLoader<Dynamic>('assets/sorted_1000.json');\n\t\t// loader = new JsonLoader<Dynamic>('assets/1000.json');\n\t\tloader.loaded.add(loaded);\n\t\tloader.load();\n\t}\n\n\tfunction loaded(event) {\n\t\tswitch (event.type) {\n\t\t\tcase Fail(error):\n\t\t\t\ttrace(error);\n\t\t\tcase Complete:\n\t\t\t\t// trace(event.target);\n\t\t\t\t// trace(event.target.content);\n\t\t\t\ttrace(event.target.content.length);\n\t\t\t\tcolorArr = cast event.target.content;\n\t\t\t\tdrawShape();\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\tif (isDebug) {\n\t\t\tShapeUtil.gridDots(ctx, grid);\n\t\t}\n\n\t\tfor (i in 0...colorArr.length) {\n\t\t\tvar colorArray = colorArr[i];\n\t\t\ttrace(colorArray);\n\n\t\t\tvar point:Point = grid.array[i];\n\n\t\t\tvar color0 = hex2RGB(colorArray[0]);\n\t\t\tvar color1 = hex2RGB(colorArray[1]);\n\t\t\tvar color2 = hex2RGB(colorArray[2]);\n\t\t\tvar color3 = hex2RGB(colorArray[3]);\n\t\t\tvar color4 = hex2RGB(colorArray[4]);\n\t\t\tvar _colorA = [color0, color1, color2, color3, color4];\n\t\t\tfor (j in 0..._colorA.length) {\n\t\t\t\tvar px = 1;\n\n\t\t\t\tvar _w = Math.floor((grid.cellWidth - px) / _colorA.length);\n\t\t\t\tvar offsetX = j * _w;\n\t\t\t\t// ctx.strokeColourRGB(_colorA[j]);\n\t\t\t\t// ctx.strokeWeight(_w);\n\t\t\t\tctx.fillColourRGB(_colorA[j]);\n\t\t\t\tctx.fillRect(offsetX + point.x, point.y, _w, grid.cellHeight - px);\n\t\t\t}\n\t\t}\n\t}\n\n\toverride function setup() {\n\t\t// trace('setup: ${toString()}');\n\t\t// isDebug = true;\n\n\t\t// grid.setDimension(w*2.1, h*2.1);\n\t\tgrid.setNumbered(32, 32);\n\t\t// grid.setCellSize(_cellsize);\n\t\t// grid.setIsCenterPoint(true);\n\t}\n\n\toverride function draw() {\n\t\ttrace('draw: ${toString()}');\n\t\tdrawShape();\n\t\tstop();\n\t}\n}\n","package art;\n\n// import MathUtil;\n\n/**\n * short description what this does\n */\nclass CC030 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<CircleExtra> = [];\n\tvar max = 7;\n\tvar _startRadius = 100;\n\tvar _startLineWidth = 30;\n\tvar _px = 2;\n\tvar _bgColor:RGB = null;\n\tvar _lineColor:RGB = null;\n\tvar _lineColor2:RGB = null;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t\tdescription = '';\n\n\t\twindow.addEventListener(KEY_DOWN, onKeyDown);\n\t}\n\n\tfunction createShape(i:Int, ?point:Point) {\n\t\tvar shape:CircleExtra = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'CircleExtra',\n\t\t\tx: w / 2,\n\t\t\ty: h / 2,\n\t\t\tradius: _startRadius,\n\t\t\trotation: 0,\n\t\t\tangle: 250,\n\t\t\tspeed: 1,\n\t\t}\n\t\t// onAnimateHandler(shape);\n\t\treturn shape;\n\t}\n\n\t// function onAnimateHandler(arc:Arc){\n\t// \tGo.to(arc, random).x(w/2).y(h/2).ease(Sine.easeInOut).onComplete(onAnimateHandler, [arc]);\n\t// }\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(BLACK);\n\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\tsh.rotation = radians(randomInt(360));\n\t\t\t// sh.rotation += sh.speed + (i * 1);\n\n\t\t\tctx.strokeStyle = getColourObj(WHITE);\n\t\t\tctx.lineCap = 'butt'; // \"butt|round|square\";\n\t\t\tctx.lineWidth = _startLineWidth;\n\n\t\t\tvar _radius = _startRadius + (i * (_startLineWidth + _px));\n\n\t\t\tctx.setLineDash(createDashedArray(_radius));\n\n\t\t\tctx.save();\n\t\t\tctx.translate(sh.x, sh.y);\n\t\t\tctx.rotate(sh.rotation);\n\t\t\t// ctx.centreFillRect(0, 0, sh.width, sh.height);\n\t\t\t// ctx.strokeCircle(sh.x, sh.y, _radius);\n\t\t\tctx.strokeCircle(0, 0, _radius);\n\t\t\tctx.restore();\n\n\t\t\t// ctx.arc(w/2, h/2, sh.radius * (0.6*i+1), radians(0 + sh.rotation), radians(sh.angle + sh.rotation));\n\t\t}\n\t}\n\n\tfunction createDashedArray(radius:Float):Array<Float> {\n\t\tvar omtrek = (MathUtil.circumferenceCircle(radius));\n\t\t// trace('omtrek: $omtrek');\n\t\tvar arr:Array<Float> = [];\n\t\tvar randomParts = randomInt(0, 50);\n\t\tif (randomParts % 2 != 0)\n\t\t\trandomParts++;\n\t\t// trace('randomParts: $randomParts');\n\t\tvar counter = 0;\n\t\tfor (i in 0...randomParts) {\n\t\t\tvar value = randomInt(0, 100);\n\t\t\tcounter += value;\n\t\t\tarr.push(value);\n\t\t}\n\t\t// trace('counter: $counter');\n\t\tvar temp = omtrek / counter;\n\t\t// trace('temp ($omtrek/$counter): $temp');\n\n\t\tfor (i in 0...arr.length) {\n\t\t\tarr[i] = arr[i] * temp;\n\t\t}\n\t\t// trace('arr: $arr');\n\t\treturn arr;\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\t\tvar colorArray = ColorUtil.niceColor100SortedString[randomInt(ColorUtil.niceColor100SortedString.length - 1)];\n\t\t_bgColor = hex2RGB(colorArray[0]);\n\t\t_lineColor = hex2RGB(colorArray[1]);\n\t\t_lineColor2 = hex2RGB(colorArray[2]);\n\n\t\tfor (i in 0...max) {\n\t\t\tshapeArray.push(createShape(i));\n\t\t}\n\n\t\t// trace(1 % 2); // 1\n\t\t// trace(2 % 2); // 0\n\t\t// trace(3 % 2); // 1\n\t\t// trace(4 % 2); // 0\n\t\t// trace(40152 % 2); // 0\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\tstop();\n\t}\n\n\t// ____________________________________ onhandler ____________________________________\n\toverride function onKeyDown(e:js.html.KeyboardEvent) {\n\t\tswitch (e.key) {\n\t\t\tcase ' ':\n\t\t\t\tdrawShape();\n\t\t\tdefault:\n\t\t\t\ttrace(\"case '\" + e.key + \"': trace ('\" + e.key + \"');\");\n\t\t}\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC031 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Circle> = [];\n\tvar grid:GridUtil = new GridUtil();\n\tvar minRadius = 10;\n\tvar maxRadius = 35;\n\tvar cellsize = 50;\n\tvar maxDistance = h;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Circles react to mouse';\n\t\tsuper(ctx);\n\t}\n\n\tfunction createShape(i:Int, ?point:Point) {\n\t\tvar shape:Circle = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'circle',\n\t\t\tx: point.x,\n\t\t\ty: point.y,\n\t\t\tradius: minRadius,\n\t\t}\n\t\tonAnimateHandler(shape);\n\t\treturn shape;\n\t}\n\n\t// ____________________________________ shape creation ____________________________________\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\tif (isDebug) {\n\t\t\tShapeUtil.gridDots(ctx, grid);\n\t\t}\n\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\tctx.fillColourRGB(BLACK);\n\t\t\tctx.fillCircle(sh.x, sh.y, sh.radius);\n\t\t}\n\t\t// var rgb = randomColourObject();\n\t\t// ctx.strokeColour(rgb.r, rgb.g, rgb.b);\n\t\t// ctx.xcross(w / 2, h / 2, 200);\n\t}\n\n\t// ____________________________________ override ____________________________________\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\tshapeArray = [];\n\n\t\t// isDebug = true;\n\n\t\t// grid.setDimension(w*2.1, h*2.1);\n\t\t// grid.setNumbered(3,3);\n\t\tgrid.setCellSize(cellsize);\n\t\tgrid.setIsCenterPoint(true);\n\n\t\tfor (i in 0...grid.array.length) {\n\t\t\tvar point = grid.array[i];\n\t\t\tshapeArray.push(createShape(i, point));\n\t\t}\n\n\t\twindow.addEventListener(\"mousemove\", onMouseMoveHandler);\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\t// stop();\n\t}\n\n\t// ____________________________________ handler ____________________________________\n\tfunction onMouseMoveHandler(e:js.html.MouseEvent) {\n\t\t// trace(e.clientX, e.clientY);\n\t\tvar point:Point = {\n\t\t\tx: e.clientX,\n\t\t\ty: e.clientY\n\t\t}\n\t\tfor (j in 0...shapeArray.length) {\n\t\t\tvar b2 = shapeArray[j];\n\t\t\tif (point == b2)\n\t\t\t\tcontinue;\n\t\t\tvar currentDistance = distance(point.x, point.y, b2.x, b2.y);\n\t\t\t// trace('-----\\n ${line} / ${b2} -- ${currentDistance}');\n\t\t\tif (currentDistance < maxDistance) {\n\n\t\t\t\tconsole.log('minRadius: $minRadius');\n\t\t\t\tconsole.log('maxRadius: $maxRadius');\n\t\t\t\tconsole.log('(maxRadius / minRadius): ($maxRadius / $minRadius) -> ${(maxRadius / minRadius)}');\n\t\t\t\tconsole.log('(maxDistance / currentDistance): ($maxDistance / $currentDistance) -> ${(maxDistance / currentDistance)}');\n\n\t\t\t\t// var alpha:Float = 0.8 - (currentDistance / maxDistance); // 0.5\n\t\t\t\t// b2.radius = alpha;\n\t\t\t\t// b2.radius = minRadius + ((maxRadius / minRadius) * (maxDistance / currentDistance));\n\t\t\t\t// b2.radius = maxRadius - (minRadius + ((currentDistance/maxDistance) * (maxRadius-minRadius))) ;\n\t\t\t\tb2.radius = maxRadius - ((currentDistance/maxDistance) * (maxRadius-minRadius)) ;\n\t\t\t} else {\n\t\t\t\tb2.radius = minRadius;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction onAnimateHandler(circle:Circle) {\n\t\t// Go.to(circle, 5).x(w/2).y(h/2).ease(Sine.easeInOut).onComplete(onAnimateHandler, [circle]);\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC031a extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Circle> = [];\n\tvar grid:GridUtil = new GridUtil();\n\tvar minRadius = 10;\n\tvar maxRadius = 35;\n\tvar cellsize = 50;\n\tvar maxDistance = 300;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Circles react to mouse';\n\t\tsuper(ctx);\n\t}\n\n\tfunction createShape(i:Int, ?point:Point) {\n\t\tvar shape:Circle = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'circle',\n\t\t\tx: point.x,\n\t\t\ty: point.y,\n\t\t\tradius: minRadius,\n\t\t\trgb: BLACK\n\t\t}\n\t\tonAnimateHandler(shape);\n\t\treturn shape;\n\t}\n\n\t// ____________________________________ shape creation ____________________________________\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\tif (isDebug) {\n\t\t\tShapeUtil.gridDots(ctx, grid);\n\t\t}\n\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\tctx.fillColourRGB(sh.rgb);\n\t\t\tctx.fillCircle(sh.x, sh.y, sh.radius);\n\t\t}\n\t\t// var rgb = randomColourObject();\n\t\t// ctx.strokeColour(rgb.r, rgb.g, rgb.b);\n\t\t// ctx.xcross(w / 2, h / 2, 200);\n\t}\n\n\t// ____________________________________ override ____________________________________\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\tshapeArray = [];\n\n\t\t// isDebug = true;\n\n\t\t// grid.setDimension(w*2.1, h*2.1);\n\t\t// grid.setNumbered(3,3);\n\t\tgrid.setCellSize(cellsize);\n\t\tgrid.setIsCenterPoint(true);\n\n\t\tfor (i in 0...grid.array.length) {\n\t\t\tvar point = grid.array[i];\n\t\t\tshapeArray.push(createShape(i, point));\n\t\t}\n\n\t\twindow.addEventListener(\"mousemove\", onMouseMoveHandler);\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\t// stop();\n\t}\n\n\t// ____________________________________ handler ____________________________________\n\tfunction onMouseMoveHandler(e:js.html.MouseEvent) {\n\t\t// trace(e.clientX, e.clientY);\n\t\tvar point:Point = {\n\t\t\tx: e.clientX,\n\t\t\ty: e.clientY\n\t\t}\n\n\t\t/*\n\t\t\tvar count = Math.round(grid.array.length / 2);\n\t\t\tvar b2 = shapeArray[count];\n\t\t\tvar originalpoint = grid.array[count];\n\t\t\tb2.rgb = PINK;\n\n\t\t\t// var currentDistance = distance(point.x, point.y, b2.x, b2.y);\n\n\t\t\t// trace('point / '+dist(point.x, point.y, b2.x, b2.y));\n\t\t\t// trace(dist(point.x, point.y, b2.x, b2.y));\n\t\t\t// trace('b2 /'+dist(b2.x, b2.y, point.x, point.y));\n\n\n\t\t\tvar currentDistance = (dist(b2.x, b2.y, point.x, point.y));\n\t\t\t// trace('-----\\n ${point} / ${b2} -- ${currentDistance}');\n\t\t\t// trace('${currentDistance}');\n\n\t\t\tif(currentDistance < maxDistance){\n\t\t\t\t// trace('${maxDistance} / ${currentDistance} = ${currentDistance/ maxDistance }');\n\n\t\t\t\tvar scale = 1 - (currentDistance/ maxDistance );\n\t\t\t\tvar xoff = b2.x - point.x;\n\t\t\t\tvar yoff = b2.y - point.y;\n\n\n\t\t\t\tb2.x = originalpoint.x + (xoff * scale);\n\t\t\t\tb2.y = originalpoint.y + (yoff * scale);\n\t\t\t} else {\n\t\t\t\tb2.x = originalpoint.x ;\n\t\t\t\tb2.y = originalpoint.y ;\n\n\t\t\t}\n\n\n\t\t\treturn; //\n\n\t\t */\n\n\t\tfor (j in 0...shapeArray.length) {\n\t\t\tvar b2 = shapeArray[j];\n\t\t\tvar originalpoint = grid.array[j];\n\t\t\tif (point == b2)\n\t\t\t\tcontinue;\n\t\t\tvar currentDistance = distance(point.x, point.y, b2.x, b2.y);\n\t\t\t// trace('-----\\n ${line} / ${b2} -- ${currentDistance}');\n\t\t\tif (currentDistance < maxDistance) {\n\t\t\t\tvar scale = 1 - (currentDistance / maxDistance);\n\t\t\t\tvar xoff = b2.x - point.x;\n\t\t\t\tvar yoff = b2.y - point.y;\n\t\t\t\tb2.x = originalpoint.x + (xoff * scale);\n\t\t\t\tb2.y = originalpoint.y + (yoff * scale);\n\t\t\t\t// b2.rgb = PINK;\n\t\t\t} else {\n\t\t\t\tb2.x = originalpoint.x;\n\t\t\t\tb2.y = originalpoint.y;\n\t\t\t\tb2.rgb = BLACK;\n\t\t\t\t// b2.radius = minRadius;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction onAnimateHandler(circle:Circle) {\n\t\t// Go.to(circle, 5).x(w/2).y(h/2).ease(Sine.easeInOut).onComplete(onAnimateHandler, [circle]);\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC032 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Circle> = [];\n\tvar grid:GridUtil = new GridUtil();\n\tvar _rotation = 0.0;\n\tvar _speed = 0.5;\n\tvar cellsize = 150;\n\tvar delaycounter = 0.0;\n\tvar totalCounter = 100;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t\tdescription = '';\n\t}\n\n\tfunction arrowConverter(size):Array<Point> {\n\t\tvar _w = size;\n\t\tvar _h = size;\n\t\tvar pointArray:Array<Point> = [];\n\t\tpointArray.push({x: _w / 2, y: 0});\n\t\tpointArray.push({x: _w, y: _h / 2});\n\t\tpointArray.push({x: _w - (_w / 4), y: _h / 2});\n\t\tpointArray.push({x: _w - (_w / 4), y: _h});\n\t\tpointArray.push({x: (_w / 4), y: _h});\n\t\tpointArray.push({x: (_w / 4), y: _h / 2});\n\t\tpointArray.push({x: 0, y: _h / 2});\n\t\treturn pointArray;\n\t}\n\n\tfunction arrowDraw(pointArray:Array<Point>, pos:Point) {\n\t\tctx.save();\n\t\tctx.translate(pos.x + cellsize / 2, pos.y + cellsize / 2);\n\t\tctx.rotate(radians(_rotation));\n\n\t\tctx.beginPath();\n\t\tctx.fillColourRGB(WHITE);\n\t\tfor (i in 0...pointArray.length) {\n\t\t\tvar _point = pointArray[i];\n\t\t\t_point.x -= cellsize / 2;\n\t\t\t_point.y -= cellsize / 2;\n\t\t\tif (i == 0) {\n\t\t\t\tctx.moveTo(_point.x, _point.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(_point.x, _point.y);\n\t\t\t}\n\t\t}\n\t\tctx.fill();\n\t\tctx.closePath();\n\t\tctx.restore();\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(BLACK);\n\n\t\tif (isDebug) {\n\t\t\tShapeUtil.gridField(ctx, grid);\n\t\t}\n\t\tfor (i in 0...grid.array.length) {\n\t\t\tvar gridPoint:Point = grid.array[i];\n\t\t\tvar pointArray:Array<Point> = arrowConverter(cellsize);\n\t\t\tarrowDraw(pointArray, gridPoint);\n\t\t}\n\n\t\tif (Math.round(_rotation) == 360)\n\t\t\t_rotation = 0;\n\t\tif (Math.round(_rotation) == 0 || Math.round(_rotation) == 90 || Math.round(_rotation) == 180 || Math.round(_rotation) == 270) {\n\t\t\tdelaycounter++;\n\t\t\tif (delaycounter >= totalCounter) {\n\t\t\t\tdelaycounter = 0;\n\t\t\t\t_rotation += _speed;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t_rotation += _speed;\n\t}\n\n\t// ____________________________________ override ____________________________________\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\t// isDebug = true;\n\n\t\t// grid.setDimension(w*2.1, h*2.1);\n\t\t// grid.setNumbered(3,3);\n\t\tgrid.setCellSize(cellsize);\n\t\t// grid.setIsCenterPoint(true);\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC033 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Circle> = [];\n\tvar grid:GridUtil = new GridUtil();\n\tvar cellsize = 50;\n\t// var _rotation = 0.0;\n\t// var _speed = 0.5;\n\t// var delaycounter = 0.0;\n\t// var totalCounter = 100;\n\tvar clientX:Int;\n\tvar clientY:Int;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Arrows following mouse';\n\t\ttype = [CCType.INTERACTIVE];\n\t\tsuper(ctx);\n\t\twindow.addEventListener(\"mousemove\", onMouseMoveHandler);\n\t}\n\n\tfunction arrowConverter(size):Array<Point> {\n\t\tvar _w = size;\n\t\tvar _h = size;\n\t\tvar pointArray:Array<Point> = [];\n\t\tpointArray.push({x: _w / 2, y: 0});\n\t\tpointArray.push({x: _w, y: _h / 2});\n\t\tpointArray.push({x: _w - (_w / 4), y: _h / 2});\n\t\tpointArray.push({x: _w - (_w / 4), y: _h});\n\t\tpointArray.push({x: (_w / 4), y: _h});\n\t\tpointArray.push({x: (_w / 4), y: _h / 2});\n\t\tpointArray.push({x: 0, y: _h / 2});\n\t\treturn pointArray;\n\t}\n\n\tfunction arrowDraw(pointArray:Array<Point>, pos:Point) {\n\n\t\t// [mck] hacky, but it gets the job done!\n\t\tvar _rotation = MathUtil.angle(pos.x+cellsize/2, pos.y+cellsize/2, clientX, clientY);\n\t\t// trace(angle2);\n\n\t\tctx.save();\n\t\tctx.translate(pos.x + cellsize / 2, pos.y + cellsize / 2);\n\t\tctx.rotate(radians(_rotation+90));\n\n\t\tctx.beginPath();\n\t\tctx.fillColourRGB(WHITE);\n\t\tfor (i in 0...pointArray.length) {\n\t\t\tvar _point = pointArray[i];\n\t\t\t_point.x -= cellsize / 2;\n\t\t\t_point.y -= cellsize / 2;\n\t\t\tif (i == 0) {\n\t\t\t\tctx.moveTo(_point.x, _point.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(_point.x, _point.y);\n\t\t\t}\n\t\t}\n\t\tctx.fill();\n\t\tctx.closePath();\n\t\tctx.restore();\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(BLACK);\n\n\t\tif (isDebug) {\n\t\t\tShapeUtil.gridField(ctx, grid);\n\t\t}\n\t\tfor (i in 0...grid.array.length) {\n\t\t\tvar gridPoint:Point = grid.array[i];\n\t\t\tvar pointArray:Array<Point> = arrowConverter(cellsize);\n\t\t\tarrowDraw(pointArray, gridPoint);\n\t\t}\n\t}\n\n\t// ____________________________________ override ____________________________________\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\t// isDebug = true;\n\n\t\t// grid.setDimension(w*2.1, h*2.1);\n\t\t// grid.setNumbered(3,3);\n\t\tgrid.setCellSize(cellsize);\n\t\t// grid.setIsCenterPoint(true);\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\t// stop();\n\t}\n\n\t// ____________________________________ handler ____________________________________\n\n\tfunction onMouseMoveHandler(e:js.html.MouseEvent) {\n\t\t// trace(e.clientX, e.clientY);\n\t\tvar point:Point = {\n\t\t\tx: e.clientX,\n\t\t\ty: e.clientY\n\t\t}\n\n\t\tclientX = e.clientX;\n\t\tclientY = e.clientY;\n\n\t\t// var gridP = grid.array[0];\n\t\t// // var angle = MathUtil.angle(point.x, point.y, gridP.x, gridP.y);\n\t\t// // trace(angle);\n\t\t// var angle2 = MathUtil.angle(gridP.x, gridP.y, point.x, point.y);\n\t\t// trace(angle2);\n\t}\n\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC034 extends CCBase implements ICCBase {\n\n\tvar shapeArray : Array<CircleExtra> = [];\n\tvar shapeMax : Int = 25;\n\n\tvar maxRadius = h/3;\n\tvar minRadius = -50;\n\tvar maxCircleSize = 30;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Circles in a circle';\n\t\ttype = [CCType.ANIMATION];\n\t\tsuper(ctx);\n\t}\n\n\tfunction createShape(i:Int){\n\t\tvar shape : CircleExtra = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'circle',\n\t\t\tx: w/2,\n\t\t\ty: h/2,\n\t\t\trgb: BLACK,\n\t\t\tradius: maxRadius + (i * (minRadius/shapeMax)), // offset of\n\t\t\tsize: (maxCircleSize/shapeMax)*i, // size of circles\n\t\t\tangle: (360/shapeMax)*i, // steps for rotation\n\t\t\tspeed: 1, // rotation speed\n\t\t}\n\t\treturn shape;\n\t}\n\n\tfunction drawShape(){\n\t\tctx.clearRect(0,0,w,h);\n\t\tfor ( i in 0 ... shapeArray.length ) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\t// sh.radius += i*5;\n\t\t\tsh.angle += sh.speed;\n\t\t\t// plot the balls x to cos and y to sin\n\t\t\tsh.x = w/2 + Math.cos(radians(sh.angle))*sh.radius;\n\t\t\tsh.y = h/2 + Math.sin(radians(sh.angle))*sh.radius;\n\t\t\t// ctx.fillStyle = getColourObj(sh.rgb, sh.alpha);\n\t\t\tctx.fillStyle = getColourObj(sh.rgb);\n\t\t\tctx.circle(sh.x, sh.y, sh.size);\n\t\t}\n\t}\n\n\toverride function setup(){\n\t\ttrace('setup: ${toString()}');\n\t\tfor ( i in 0 ... shapeMax ) {\n\t\t\tshapeArray.push(createShape(i));\n\t\t}\n\t}\n\n\toverride function draw(){\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}","package art;\n\n// import MathUtil;\n\n/**\n * short description what this does\n */\nclass CC035 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<CircleExtra> = [];\n\tvar max = 2;\n\n\tvar startRadius = 200;\n\tvar startLineWidth = 30;\n\n\tvar lineWidthArray = [60,120];\n\tvar divideArray = [360,180];\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'circle lines';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\t\tsuper(ctx);\n\t}\n\n\tfunction createShape(i:Int, ?point:Point) {\n\t\tvar shape:CircleExtra = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'CircleExtra',\n\t\t\tx: w / 2,\n\t\t\ty: h / 2,\n\t\t\tradius: startRadius,\n\t\t\trotation: 0,\n\t\t\tangle: 250,\n\t\t\tspeed: 0.0001,\n\t\t}\n\t\t// onAnimateHandler(shape);\n\t\treturn shape;\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(BLACK);\n\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\t// sh.rotation = radians(randomInt(360));\n\t\t\tsh.rotation += sh.speed;\n\n\t\t\tctx.strokeStyle = getColourObj(WHITE);\n\t\t\tctx.lineCap = 'butt'; // \"butt|round|square\";\n\t\t\tctx.lineWidth = lineWidthArray[i];\n\n\t\t\tvar radius = startRadius;\n\t\t\tvar omtrek = (MathUtil.circumferenceCircle(radius));\n\t\t\tctx.setLineDash([1,Math.round(omtrek/divideArray[i])]);\n\n\t\t\tctx.save();\n\t\t\tctx.translate(sh.x, sh.y);\n\t\t\tctx.rotate(sh.rotation);\n\t\t\tctx.strokeCircle(0, 0, radius);\n\t\t\tctx.restore();\n\n\t\t\t// ctx.strokeCircle(sh.x, sh.y, radius);\n\t\t}\n\t}\n\n\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\t\tshapeArray = [];\n\t\tfor (i in 0...max) {\n\t\t\tshapeArray.push(createShape(i));\n\t\t}\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\tstop();\n\t}\n\n}\n","package art;\n\n// import MathUtil;\n\n\n/**\n * short description what this does\n */\nclass CC036 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<CircleExtra> = [];\n\tvar max = 2;\n\n\tvar startRadius = 200;\n\tvar startLineWidth = 30;\n\tvar lineW = 30;\n\n\tvar lineWidthArray = [30,60,90];\n\t// var divideArray = [60,6,4];\n\tvar divideArray = [60,12];\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'circle lines';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\t\tsuper(ctx);\n\t}\n\n\tfunction createShape(i:Int, ?point:Point) {\n\t\tvar shape:CircleExtra = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'CircleExtra',\n\t\t\tx: w / 2,\n\t\t\ty: h / 2,\n\t\t\tradius: startRadius,\n\t\t\trotation: -90,\n\t\t\tangle: 250,\n\t\t\tspeed: 0.0001,\n\t\t}\n\t\t// onAnimateHandler(shape);\n\t\treturn shape;\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(BLACK);\n\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\t// sh.rotation = radians(randomInt(360));\n\t\t\t// sh.rotation += sh.speed;\n\t\t\tsh.radius -= ((lineW/2)*i);\n\t\t\tctx.strokeStyle = getColourObj(WHITE);\n\t\t\tctx.lineCap = 'butt'; // \"butt|round|square\";\n\t\t\tctx.lineWidth = lineWidthArray[i];\n\n\t\t\tvar omtrek = (MathUtil.circumferenceCircle(sh.radius));\n\t\t\tctx.setLineDash([1,(omtrek/divideArray[i])-1]);\n\n\t\t\tctx.save();\n\t\t\tctx.translate(sh.x, sh.y);\n\t\t\tctx.rotate(radians(sh.rotation));\n\t\t\tctx.strokeCircle(0, 0, sh.radius);\n\t\t\tctx.restore();\n\n\t\t\t// ctx.strokeCircle(sh.x, sh.y, radius);\n\t\t}\n\t}\n\n\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\t\tshapeArray = [];\n\t\tfor (i in 0...max) {\n\t\t\tshapeArray.push(createShape(i));\n\t\t}\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\tstop();\n\t}\n\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC037 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Polygon> = [];\n\tvar grid:GridUtil = new GridUtil();\n\t// var shapeMax = 100;\n\tvar cellsize = 20;\n\tvar maxSides = 6;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t\tdescription = '';\n\t}\n\n\tfunction createShape(i:Int) {\n\t\tvar shape:Polygon = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'polygon',\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tsides: maxSides,\n\t\t\tsize: cellsize\n\t\t}\n\t\treturn shape;\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\t// https://nl.wikipedia.org/wiki/Sinusregel\n\t\tvar hoek = 360 / maxSides;\n\t\tvar hoek_2 = radians(hoek / 2);\n\t\tvar horDistSin = Math.sin(hoek_2) * cellsize;\n\t\tvar horDistCos = Math.cos(hoek_2) * cellsize;\n\t\tvar horDistTan = Math.tan(hoek_2) * cellsize;\n\n\t\ttrace('schuine zijde: $cellsize');\n\t\ttrace('- horDistSin: $horDistSin');\n\t\ttrace('> horDistCos: $horDistCos');\n\t\ttrace('- horDistTan: $horDistTan');\n\n\t\ttrace((MathUtil.pythagoreanTheorem(0, horDistCos, cellsize)));\n\n\t\t// var distX = cellsize + (MathUtil.pythagoreanTheorem(0,horDistCos,cellsize));\n\t\tvar distX = cellsize + horDistSin;\n\t\tvar distY = horDistCos;\n\n\t\tgrid.setIsFullscreen();\n\t\t// grid.setDimension(w, h);\n\t\t// grid.setPosition(0, 0);\n\t\tgrid.setCellSize(distX, distY);\n\t\tgrid.setIsCenterPoint(true);\n\n\t\tfor (i in 0...grid.array.length) {\n\t\t\tshapeArray.push(createShape(i));\n\t\t}\n\n\t\ttrace('w: ${w}, h: ${h}');\n\t\ttrace('total: ${grid.array.length}');\n\t\ttrace('numHor: ${grid.numHor}, numVer: ${grid.numVer}');\n\t\ttrace('width: ${grid.width}, height: ${grid.height}');\n\t\ttrace('x: ${grid.x}, y: ${grid.y}');\n\n\t\tvar startX:Float = grid.x;\n\t\tvar startY:Float = grid.y;\n\n\t\tvar gridCounterY = 0;\n\t\tvar gridCounterX = 0;\n\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\tsh.x = startX + (gridCounterX * (distX));\n\t\t\tsh.y = startY + (gridCounterY * (distY * 2));\n\t\t\tctx.strokeColourRGB(BLACK);\n\t\t\tctx.fillColourRGB(randomColourObject());\n\t\t\t// ctx.strokePolygon(sh.x, sh.y, sh.sides, sh.size);\n\t\t\tctx.outlinedPolygon(sh.x, sh.y, sh.sides, sh.size, getColourObj(randomColourObject()), getColourObj(BLACK));\n\t\t\tgridCounterY++;\n\t\t\tif (gridCounterY >= grid.numVer) {\n\t\t\t\tgridCounterX++;\n\t\t\t\tgridCounterY = 0;\n\t\t\t\tstartX = grid.x;\n\t\t\t\tif ((gridCounterX % 2) == 1) {\n\t\t\t\t\tstartY = grid.y + distY;\n\t\t\t\t} else {\n\t\t\t\t\tstartY = grid.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (isDebug) {\n\t\t\t// ShapeUtil.gridDots(ctx, grid);\n\t\t\tShapeUtil.gridField(ctx, grid);\n\t\t}\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\t\t// isDebug = true;\n\t}\n\n\toverride function draw() {\n\t\ttrace('draw: ${toString()}');\n\t\tdrawShape();\n\t\tstop();\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC038 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Polygon> = [];\n\tvar grid:GridUtil = new GridUtil();\n\t// var shapeMax = 100;\n\tvar cellsize = 20;\n\tvar maxSides = 6;\n\tvar ctxHidden:CanvasRenderingContext2D;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsuper(ctx);\n\t\tdescription = '';\n\t}\n\n\tfunction createShape(i:Int) {\n\t\tvar shape:Polygon = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'polygon',\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tsides: maxSides,\n\t\t\tsize: cellsize\n\t\t}\n\t\treturn shape;\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\t// https://nl.wikipedia.org/wiki/Sinusregel\n\t\tvar hoek = 360 / maxSides;\n\t\tvar hoek_2 = radians(hoek / 2);\n\t\tvar horDistSin = Math.sin(hoek_2) * cellsize;\n\t\tvar horDistCos = Math.cos(hoek_2) * cellsize;\n\t\tvar horDistTan = Math.tan(hoek_2) * cellsize;\n\n\t\ttrace('schuine zijde: $cellsize');\n\t\ttrace('- horDistSin: $horDistSin');\n\t\ttrace('> horDistCos: $horDistCos');\n\t\ttrace('- horDistTan: $horDistTan');\n\n\t\ttrace((MathUtil.pythagoreanTheorem(0, horDistCos, cellsize)));\n\n\t\t// var distX = cellsize + (MathUtil.pythagoreanTheorem(0,horDistCos,cellsize));\n\t\tvar distX = cellsize + horDistSin;\n\t\tvar distY = horDistCos;\n\n\t\tgrid.setIsFullscreen();\n\t\t// grid.setDimension(w*2, h*2);\n\t\t// grid.setPosition(0, 0);\n\t\tgrid.setCellSize(distX, distY);\n\t\tgrid.setIsCenterPoint(true);\n\n\t\tfor (i in 0...grid.array.length) {\n\t\t\tshapeArray.push(createShape(i));\n\t\t}\n\n\t\ttrace('w: ${w}, h: ${h}');\n\t\ttrace('total: ${grid.array.length}');\n\t\ttrace('numHor: ${grid.numHor}, numVer: ${grid.numVer}');\n\t\ttrace('width: ${grid.width}, height: ${grid.height}');\n\t\ttrace('x: ${grid.x}, y: ${grid.y}');\n\n\t\tvar startX:Float = grid.x;\n\t\tvar startY:Float = grid.y;\n\n\t\tvar gridCounterY = 0;\n\t\tvar gridCounterX = 0;\n\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\tsh.x = startX + (gridCounterX * (distX));\n\t\t\tsh.y = startY + (gridCounterY * (distY * 2));\n\t\t\tctx.strokeColourRGB(BLACK);\n\t\t\tctx.fillColourRGB(randomColourObject());\n\t\t\t// ctx.strokePolygon(sh.x, sh.y, sh.sides, sh.size);\n\t\t\tvar __color = getPixel(sh.x, sh.y);\n\t\t\tctx.outlinedPolygon(sh.x, sh.y, sh.sides, sh.size, __color, getColourObj(BLACK));\n\t\t\tgridCounterY++;\n\t\t\tif (gridCounterY >= grid.numVer) {\n\t\t\t\tgridCounterX++;\n\t\t\t\tgridCounterY = 0;\n\t\t\t\tstartX = grid.x;\n\t\t\t\tif ((gridCounterX % 2) == 1) {\n\t\t\t\t\tstartY = grid.y + distY;\n\t\t\t\t} else {\n\t\t\t\t\tstartY = grid.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (isDebug) {\n\t\t\t// ShapeUtil.gridDots(ctx, grid);\n\t\t\tShapeUtil.gridField(ctx, grid);\n\t\t}\n\t}\n\n\tfunction getPixel(x, y):String{\n\t\tvar xpos = x;\n\t\tvar ypos = y;\n\t\tvar pixel = ctxHidden.getImageData(xpos, ypos, 1, 1);\n\t\tvar data = pixel.data;\n\t\tvar rgba = 'rgba(' + data[0] + ', ' + data[1] + ', ' + data[2] + ', ' + (data[3] / 255) + ')';\n\t\treturn rgba;\n\t}\n\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\t// isDebug = true;\n\n\t\tvar colorArray = ColorUtil.niceColor100SortedString[randomInt(ColorUtil.niceColor100SortedString.length - 1)];\n\t\tvar _color0 = hex2RGB(colorArray[0]);\n\t\tvar _color1 = hex2RGB(colorArray[1]);\n\t\tvar _color2 = hex2RGB(colorArray[2]);\n\t\tvar _color3 = hex2RGB(colorArray[3]);\n\t\tvar _color4 = hex2RGB(colorArray[4]);\n\n\t\tvar option = new Sketch.SketchOption();\n\t\toption.width = w;\n\t\toption.height = h;\n\t\tctxHidden = Sketch.createHiddenCanvas('imageholder', option, isDebug);\n\t\t// ctxHidden.drawImage(img, 0, 0, img.width, img.height);\n\n\t\t// create gradient\n\t\tvar gradient = ctx.createLinearGradient(0, 0, w, h);\n\t\t// Add three color stops\n\t\tgradient.addColorStop(0, getColourObj(_color0));\n\t\tgradient.addColorStop(1, getColourObj(_color4));\n\n\t\t// Set the fill style and draw a rectangle (on \"hidden\" canvas)\n\t\tctxHidden.fillStyle = gradient;\n\t\tctxHidden.fillRect(0, 0, w, h);\n\t}\n\n\toverride function draw() {\n\t\ttrace('draw: ${toString()}');\n\t\tdrawShape();\n\t\tstop();\n\t}\n}\n","package art;\n\nimport quicksettings.QuickSettings;\n\nusing cc.util.FilterUtil;\n\n/**\n * short description what this does\n */\nclass CC039 extends CCBase implements ICCBase {\n\tvar ctxHidden:CanvasRenderingContext2D;\n\tvar panel1:QuickSettings;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Image manipulation';\n\n\t\tcreateQuickSettings();\n\n\t\tsuper(ctx);\n\t}\n\n\tfunction QuicksettingsDefaults() {\n\t\tpanel1.setValue('grayscale', 0);\n\t\tpanel1.setValue('brightness', 100);\n\t\tpanel1.setValue('contrast', 100);\n\t\tpanel1.setValue('invert', 0);\n\t\tpanel1.setValue('opacity', 100);\n\t\tpanel1.setValue('saturate', 100);\n\t\tpanel1.setValue('sepia', 0);\n\t\tpanel1.setValue('mirrorfran', 0);\n\t\tdrawShape();\n\t}\n\n\t/**\n\t *\n\t * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/filter#Browser_compatibility\n\t */\n\tfunction createQuickSettings() {\n\t\t// demo/basic example\n\t\tpanel1 = QuickSettings.create(10, 10, \"Filters\")\n\t\t\t.addRange(\"grayscale\", 0, 100, 0, 1, function(value) setFilter(\"grayscale\", value))\n\t\t\t.addRange(\"brightness\", 0, 300, 100, 1, function(value) setFilter(\"brightness\", value))\n\t\t\t.addRange(\"contrast\", 0, 100, 100, 1, function(value) setFilter(\"contrast\", value))\n\t\t\t.addRange(\"invert\", 0, 100, 0, 1, function(value) setFilter(\"invert\", value))\n\t\t\t.addRange(\"opacity\", 0, 100, 100, 1, function(value) setFilter(\"opacity\", value))\n\t\t\t.addRange(\"saturate\", 0, 100, 100, 1, function(value) setFilter(\"saturate\", value))\n\t\t\t.addRange(\"sepia\", 0, 100, 0, 1, function(value) setFilter(\"sepia\", value))\n\t\t\t\t// .addRange(\"Range\", 0, 100, 30, 1, function(value) output(\"Range\", value))\n\t\t\t\t// .addNumber(\"Number\", 0, 100, 50, 1, function(value) output(\"Number\", value))\n\t\t\t\t// .addColor(\"Color\", \"#ff0000\", function(value) output(\"Color\", value))\n\t\t\t\t// .addBoolean(\"Boolean\", true, function(value) output(\"Boolean\", value))\n\t\t\t.addDropDown(\"mirror\",[\"none\",\"horizontal\",\"vertical\",\"both\"], function(value) dropdown(\"DropDown\", value))\n\t\t\t// .addBoolean(\"mirror horizontal\", false, function(value) setMirror(\"mirror horizontal\", value)) // .addText(\"Text\", \"some text\", function(value) output(\"Text\", value))\n\t\t\t// .addBoolean(\"mirror vertical\", false, function(value) setMirror(\"mirror vertical\", value)) // .addText(\"Text\", \"some text\", function(value) output(\"Text\", value))\n\t\t\t// .addBoolean(\"mirror both\", false, function(value) setMirror(\"mirror both\", value)) // .addText(\"Text\", \"some text\", function(value) output(\"Text\", value))\n\t\t\t.addBoolean(\"flip horizonal\", false, function(value) setFlip(\"flip horizonal\", value)) // .addText(\"Text\", \"some text\", function(value) output(\"Text\", value))\n\t\t\t.addBoolean(\"flip vertical\", false, function(value) setFlip(\"flip vertical\", value)) // .addText(\"Text\", \"some text\", function(value) output(\"Text\", value))\n\t\t\t\t// .addTextArea(\"TextArea\", \"a whole bunch of text can go here\", function(value) output(\"TextArea\", value))\n\t\t\t.addButton(\"Defaults\", function(value) QuicksettingsDefaults()) // .addButton(\"Button\", function(value) output(\"Button\", \"clicked\"))\n\t\t\t.addHTML(\"Info\", \"Info. This is a description...\");\n\t\t// .setKey(\"s\")\n\t\t// .saveInLocalStorage(\"localstoragedemo_v3.0\");\n\t}\n\n\tinline function output<T>(name:String, value:T) {\n\t\tconsole.log(\"Output\", '$name: $value');\n\t}\n\n\tfunction dropdown(value:String, index:Dynamic){\n\t\t// trace( 'value: ' + value );\n\t\t// trace( 'index: ' + index );\n\t\t// trace( 'index.label: ' + index.label );\n\t\tswitch (index.label) {\n\t\t\tcase 'none':\n\t\t\t\tctx.drawImage(ctxHidden.canvas, 0, 0, w, h);\n\t\t\tcase 'horizontal':\n\t\t\t\tctx.drawImage(ctxHidden.canvas, 0, 0, w, h);\n\t\t\t\tEffectUtil.mirror(ctx, true);\n\t\t\tcase 'vertical':\n\t\t\t\tctx.drawImage(ctxHidden.canvas, 0, 0, w, h);\n\t\t\t\tEffectUtil.mirror(ctx, false);\n\t\t\tcase 'both':\n\t\t\t\tctx.drawImage(ctxHidden.canvas, 0, 0, w, h);\n\t\t\t\tEffectUtil.mirror(ctx, false);\n\t\t\t\tEffectUtil.mirror(ctx, true);\n\t\t\t\ttrace ('both');\n\t\t\tdefault : trace (\"case '\"+index.label+\"': trace ('\"+index.label+\"');\");\n\t\t}\n\t}\n\n\tfunction setFlip(type:String, isTrue:Bool) {\n\t\tvar isHorizontal = false;\n\t\tif (type == 'flip horizonal') isHorizontal = true;\n\t\tif (isTrue) {\n\t\t\tEffectUtil.flip(ctx, isHorizontal);\n\t\t} else {\n\t\t\tctx.drawImage(ctxHidden.canvas, 0, 0, w, h);\n\t\t}\n\t}\n\tfunction setMirror(type:String, isTrue:Bool) {\n\t\tswitch (type) {\n\t\t\tcase 'mirror horizontal': trace ('mirror horizontal');\n\t\t\tcase 'mirror vertical': trace ('mirror vertical');\n\t\t\tcase 'mirror both': trace ('mirror both');\n\t\t\tdefault : trace (\"case '\"+type+\"': trace ('\"+type+\"');\");\n\t\t}\n\t\tif (isTrue) {\n\t\t\ttrace('mirror');\n\t\t\tEffectUtil.mirror(ctx);\n\t\t} else {\n\t\t\ttrace('reset mirror');\n\t\t\tctx.drawImage(ctxHidden.canvas, 0, 0, w, h);\n\t\t}\n\t}\n\n\tfunction setFilter(type:String, value:Float) {\n\t\tif (ctx == null) return;\n\t\tswitch (type.toLowerCase()) {\n\t\t\tcase 'grayscale': ctx.grayscale(value);\n\t\t\tcase 'brightness': ctx.brightness(value);\n\t\t\tcase 'contrast': ctx.contrast(value);\n\t\t\tcase 'invert': ctx.invert(value);\n\t\t\tcase 'opacity': ctx.opacity(value);\n\t\t\tcase 'saturate': ctx.saturate(value);\n\t\t\tcase 'sepia': ctx.sepia(value);\n\t\t\tdefault:\n\t\t\t\ttrace(\"case '\" + type + \"': trace ('\" + type + \"');\");\n\t\t}\n\t\tdrawShape();\n\t}\n\n\tfunction drawShape() {\n\t\tif (ctxHidden == null) return;\n\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\t// ctx.filter = 'blur(4px)';\n\t\t// ctx.grayscale(50);\n\t\tctx.drawImage(ctxHidden.canvas, 0, 0, w, h);\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\tisDebug = true;\n\n\t\t// start loading image\n\t\tvar img = new Image();\n\t\timg.src = 'assets/img/lotus.jpg';\n\t\timg.onload = function() {\n\t\t\tvar option = new Sketch.SketchOption();\n\t\t\toption.width = img.width;\n\t\t\toption.height = img.height;\n\t\t\tctxHidden = Sketch.createHiddenCanvas('imageholder', option, false);\n\t\t\tctxHidden.drawImage(img, 0, 0, img.width, img.height);\n\t\t\timg.style.display = 'none';\n\t\t\tdrawShape();\n\t\t};\n\t}\n\n\toverride function draw() {\n\t\ttrace('draw: ${toString()}');\n\t\tdrawShape();\n\t\tstop();\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC040 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Circle> = [];\n\tvar grid:GridUtil = new GridUtil();\n\tvar _cellsize = 150;\n\tvar _color0:RGB = null;\n\tvar _color1:RGB = null;\n\tvar _color2:RGB = null;\n\tvar _color3:RGB = null;\n\tvar _color4:RGB = null;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Quarter growing circle through dashed lines';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\t\tsuper(ctx);\n\t}\n\n\tfunction createShape(i:Int, point:Point) {\n\t\tvar shape:Circle = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'circle',\n\t\t\tx: point.x,\n\t\t\ty: point.y,\n\t\t\tradius: _cellsize / 2,\n\t\t}\n\t\tReflect.setField(shape, 'part', 0);\n\t\tReflect.setField(shape, 'dir', 1);\n\t\treturn shape;\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(BLACK);\n\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar sh = shapeArray[i];\n\n\t\t\tctx.strokeStyle = getColourObj(WHITE);\n\t\t\tctx.lineCap = 'butt'; // \"butt|round|square\";\n\t\t\tctx.lineWidth = 15;\n\n\t\t\t// get circumference from circles\n\t\t\tvar omtrek:Float = MathUtil.circumferenceCircle(sh.radius);\n\t\t\tvar part:Float = Reflect.getProperty(sh, 'part');\n\t\t\tvar dir = Reflect.getProperty(sh, 'dir');\n\n\t\t\t// trace(Reflect.getProperty(sh, 'part'));\n\t\t\t// [mck] I have no idea why I need to sutrace `-0.5` but it fixes my little line problem\n\t\t\tctx.setLineDash([part, (omtrek / 4)-0.5 -part]);\n\t\t\tctx.strokeCircle(sh.x, sh.y, sh.radius);\n\n\t\t\tif (part >= omtrek / 4) {\n\t\t\t\tReflect.setField(sh, 'dir', -1);\n\t\t\t}\n\t\t\tif (part < 0) {\n\t\t\t\tReflect.setField(sh, 'dir', 1);\n\t\t\t}\n\n\t\t\tReflect.setField(sh, 'part', part + dir);\n\t\t}\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\tvar colorArray = ColorUtil.niceColor100[randomInt(ColorUtil.niceColor100.length - 1)];\n\t\t_color0 = hex2RGB(colorArray[0]);\n\t\t_color1 = hex2RGB(colorArray[1]);\n\t\t_color2 = hex2RGB(colorArray[2]);\n\t\t_color3 = hex2RGB(colorArray[3]);\n\t\t_color4 = hex2RGB(colorArray[4]);\n\n\t\t// isDebug = true;\n\n\t\t// grid.setDimension(w*2.1, h*2.1);\n\t\t// // grid.setNumbered(3,3);\n\t\tgrid.setDebug(isDebug);\n\t\tgrid.setCellSize(_cellsize);\n\t\tgrid.setIsCenterPoint(true);\n\n\t\tshapeArray = [];\n\t\tfor (i in 0...grid.array.length) {\n\t\t\tshapeArray.push(createShape(i, grid.array[i]));\n\t\t}\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}\n","package art;\n\nimport cc.noise.OpenSimplexNoise;\n\n/**\n * short description what this does\n */\nclass CC041 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Circle> = [];\n\tvar grid:GridUtil = new GridUtil();\n\tvar _radius = 150;\n\tvar _cellsize = 150;\n\tvar _bgColor:RGB = null;\n\tvar _lineColor:RGB = null;\n\tvar _fillColor:RGB = null;\n\t// var perlin:Perlin = new Perlin();\n\tvar openSimple:OpenSimplexNoise = new OpenSimplexNoise();\n\tvar xpos = 0;\n\tvar ypos = 0;\n\tvar counter = 0;\n\tvar maxFrameRate = 60;\n\tvar frameRate = 15;\n\tvar _min = 0.0;\n\tvar _max = 0.0;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Example of random created with Perlin Noise';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\n\t\t// https://fonts.googleapis.com/css?family=Open+Sans+Condensed:300,300i,700\n\t\tText.embedGoogleFont('Open+Sans+Condensed:300,300i,700', onEmbedHandler);\n\n\t\tsuper(ctx);\n\t}\n\n\tfunction onEmbedHandler(e) {\n\t\ttrace('onEmbedHandler: \"${e}\"');\n\t\tdrawShape();\n\t}\n\n\tfunction createShape(i:Int, ?point:Point) {\n\t\tvar shape:Circle = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'circle',\n\t\t\tx: point.x,\n\t\t\ty: point.y,\n\t\t\tradius: _radius,\n\t\t}\n\t\treturn shape;\n\t}\n\n\tfunction drawShape() {\n\t\tcounter++;\n\t\tif (counter % (maxFrameRate / frameRate) != 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\tctx.fillStyle = getColourObj(BLACK);\n\t\tText.centerFillText(ctx, 'Math.random', grid.array[0].x, grid.array[0].y - (_radius * 1.5), \"'Open Sans Condensed', sans-serif\", 60);\n\t\tText.centerFillText(ctx, 'Perlin noise', grid.array[1].x, grid.array[1].y - (_radius * 1.5), \"'Open Sans Condensed', sans-serif\", 60);\n\n\t\tif (isDebug) {\n\t\t\tShapeUtil.gridField(ctx, grid);\n\t\t}\n\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\tvar valx = openSimple.eval(xpos, ypos);\n\t\t\tvar valy = openSimple.eval(xpos * 24, ypos * 24);\n\t\t\tif (valx < _min)\n\t\t\t\t_min = valx;\n\t\t\tif (valx > _max)\n\t\t\t\t_max = valx;\n\n\t\t\tvar _randomX = random(_min, _max);\n\t\t\tvar _randomY = random(_min, _max);\n\t\t\tvar _value = 50;\n\t\t\tif (i == 1) {\n\t\t\t\t_randomX = valx;\n\t\t\t\t_randomY = valy;\n\n\t\t\t\t// trace(_randomX, _randomY);\n\n\t\t\t\txpos++;\n\t\t\t\tif (xpos >= 100) {\n\t\t\t\t\typos++;\n\t\t\t\t\txpos = 0;\n\t\t\t\t\tif (ypos >= 100)\n\t\t\t\t\t\typos = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar _xpos = sh.x + (_randomX * _value);\n\t\t\tvar _ypos = sh.y + (_randomY * _value);\n\t\t\tctx.circle(_xpos, _ypos, sh.radius);\n\t\t}\n\n\t\t/*\n\t\t\tvar _width = 100;\n\t\t\tvar _height = 100;\n\n\t\t\tvar min = 100000.0;\n\t\t\tvar max = 0.0;\n\t\t\tvar min2 = 100000.0;\n\t\t\tvar max2 = 0.0;\n\n\t\t\tfor (x in 0..._width) {\n\t\t\t\tfor (y in 0..._height) {\n\t\t\t\t\t// var value:Float = perlin.noise2d(x / 10.0, y / 10.0);\n\t\t\t\t\tvar value:Float = Math.abs(perlin.noise2d(x / 50, y / 50));\n\t\t\t\t\t// Do stuff with it...\n\t\t\t\t\tvalue *= 256;\n\t\t\t\t\t// trace('x:$x, y:$y , value: $value');\n\t\t\t\t\tif (value <= min) min = value;\n\t\t\t\t\tif (value >= max) max = value;\n\n\t\t\t\t\tctx.colour(Math.round(value), Math.round(value), Math.round(value));\n\t\t\t\t\t// ctx.fillRect(x, y, 1, 1);\n\n\t\t\t\t\tvar value2 = (perlin.noise2d(x*1.1,y*1.1));\n\t\t\t\t\tif (value2 <= min2) min2 = value2;\n\t\t\t\t\tif (value2 >= max2) max2 = value2;\n\t\t\t\t\t// trace('x '+m_perlin.OctavePerlin(x, y, 0.1, 1, 0.9, 2));\n\t\t\t\t\t// trace('y '+m_perlin.OctavePerlin(x, y, 0.1, 5, 0.5, 0.25));\n\t\t\t\t\t//  var c = m_perlin.OctavePerlin(x / 8, y / 8, 0.1, 5, 0.5, 0.25);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttrace('min: $min');\n\t\t\ttrace('max: $max');\n\n\t\t\ttrace('min2: $min2');\n\t\t\ttrace('max2: $max2');\n\t\t */\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\tvar colorArray = ColorUtil.niceColor100[randomInt(ColorUtil.niceColor100.length - 1)];\n\t\t_bgColor = hex2RGB(colorArray[0]);\n\t\t_lineColor = hex2RGB(colorArray[1]);\n\t\t_fillColor = hex2RGB(colorArray[2]);\n\n\t\tisDebug = true;\n\n\t\t// grid.setDimension(w*2.1, h*2.1);\n\t\t// grid.setNumbered(3,3);\n\t\tgrid.setCellSize(w / 2, h);\n\t\tgrid.setIsCenterPoint(true);\n\n\t\topenSimple.setup(randomInt(0, 6000));\n\n\t\tshapeArray = [];\n\t\tfor (i in 0...grid.array.length) {\n\t\t\tshapeArray.push(createShape(i, grid.array[i]));\n\t\t}\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC042 extends CCBase implements ICCBase {\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Happy mistake';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\t\tsuper(ctx);\n\t}\n\n\tfunction drawShape() {\n\t\tvar r = Math.min(w, h) / 2.3;\n\t\tctx.strokeColourRGB(BLACK, 0.1);\n\t\tctx.strokeEllipse(w / 2, h / 2, random(0, r), random(0, r));\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\t}\n\n\toverride function draw() {\n\t\tdrawShape();\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC043 extends CCBase implements ICCBase {\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'First attempt at creating snake like patterns';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\t\tsuper(ctx);\n\t}\n\n\tvar xpos :Float = w/2;\n\tvar ypos :Float = h;\n\n\tfunction drawShape() {\n\n\t\t/*\n\t\tvar r = Math.min(w, h) / 2.3;\n\t\tctx.strokeColourRGB(BLACK, 0.1);\n\t\tctx.strokeEllipse(xpos, ypos, random(0, r), random(0, r));\n\n\t\typos--;\n\n\t\tif(ypos <= -h) {\n\t\t\ttrace('stop');\n\t\t\tstop();\n\t\t}\n\t\t*/\n\n\n\n\t\tvar imageData = ctx.getImageData(0,0, w,h);\n\t\tctx.putImageData(imageData,0, 1);\n\n\t\tctx.strokeWeight(2);\n\t\tctx.fillColourRGB(GRAY);\n\t\tctx.strokeColourRGB(BLACK);\n\n\t\t// ctx.circleFillStroke(w/2, h/2, 100);\n\n\t\tvar r = Math.min(w, h) / 2.3;\n\t\txpos = w/2;\n\t\typos = h/3;\n\t\t// ctx.strokeColourRGB(BLACK, 1);\n\t\tctx.ellipseFillStroke(xpos, ypos, random(0, r), random(20, 40));\n\n\n\n\t\t// ctx.save();\n\t\t// ctx.translate(sh.x, sh.y);\n\t\t// ctx.rotate(radians(sh.rotation) );\n\t\t// ctx.centreFillRect(0, 0, sh.width, sh.height);\n\t\t// ctx.restore();\n\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\typos = h;\n\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundRGB(WHITE);\n\n\t\tisDebug = true;\n\t}\n\n\toverride function draw() {\n\t\tdrawShape();\n\t}\n}\n","package art;\n\nimport cc.noise.Perlin;\n\nimport quicksettings.QuickSettings;\n\n// using lib.util.FilterUtil;\n\n/**\n * short description what this does\n */\nclass CC044 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Circle> = [];\n\tvar grid:GridUtil = new GridUtil();\n\tvar _radius = 150;\n\tvar _cellsize = 150;\n\tvar _bgColor:RGB = null;\n\tvar _lineColor:RGB = null;\n\tvar _fillColor:RGB = null;\n\n\n\tvar perlin:Perlin = new Perlin();\n\n\tvar xValue:Float = 50;\n\tvar yValue:Float = 50;\n\tvar octaves:Int = 1;\n\tvar amplitude:Float = 1;\n\tvar persistence:Float = 0.9;\n\tvar lacunarity:Float = 2;\n\n\tvar _width = w;\n\tvar _height = h;\n\n\tvar defaultW = 300;\n\tvar defaultH = 300;\n\n\tvar ctxHidden:CanvasRenderingContext2D;\n\tvar panel1:QuickSettings;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Test with Perlin Noise, see what happens with different settings';\n\t\ttype = [CCType.IMAGE];\n\n\t\tcreateQuickSettings();\n\n\t\tsuper(ctx);\n\t}\n\n/**\n\t *\n\t * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/filter#Browser_compatibility\n\t */\n\tfunction createQuickSettings() {\n\t\t// demo/basic example\n\t\tpanel1 = QuickSettings.create(10, 10, \"Perlin Noise\")\n\t\t\t.setGlobalChangeHandler(untyped drawShape)\n\n\t\t\t.addHTML(\"About\", \"I had problems wrapping my head around the patterns created with Perlin Noise. It feels kinda magical and I don't seem to get the images I expect\")\n\n\t\t\t.addRange(\"perlin\", 0, 65536, 50, 1, function(value) perlin = new Perlin (value) )\n\n\t\t\t.addRange(\"xValue\", 0.0, 100.0, 50.0, 1.0, function(value) xValue = value )\n\t\t\t.addRange(\"yValue\",  0.0, 100.0, 50.0, 1.0, function(value) yValue = value )\n\n\t\t\t.addRange(\"octaves\", 0, 10, 1, 1, function(value) octaves = value )\n\n\t\t\t.addRange(\"amplitude\", 0.0, 10.0, 1.0, 0.1, function(value) amplitude = value )\n\t\t\t.addRange(\"persistence\", 0.0, 10.0, 0.9, 0.1, function(value) persistence = value )\n\t\t\t.addRange(\"lacunarity\", 0.0, 10.0, 2.0, .1, function(value) lacunarity = value )\n\n\n\t\t\t.addBoolean(\"Fullscreen\", false, function(value) isFullscreen(value))\n\n\t\t\t.addButton(\"defaults\",function (value) quicksetttingsDefault() )\n\n\t\t\t.saveInLocalStorage(\"localstoragedemo_v3.0\");\n\t}\n\n\tinline function output<T>(name:String, value:T) {\n\t\tconsole.log(\"Output\", '$name: $value');\n\t}\n\n\tfunction quicksetttingsDefault(){\n\t\ttrace('defaults');\n\t\tpanel1.setValue('Fullscreen', false);\n\t\tpanel1.setValue('octaves', 1);\n\n\n\n\t\tpanel1.setValue('xValue', 50.0);\n\t\tpanel1.setValue('yValue',50.0);\n\t\tpanel1.setValue('amplitude',1.0);\n\t\tpanel1.setValue('persistence',0.9);\n\t\tpanel1.setValue('lacunarity', 2.0);\n\n\t}\n\n\tfunction isFullscreen(isfullscreen:Bool){\n\t\tif(isfullscreen){\n\t\t\t_width = w;\n\t\t\t_height = h;\n\t\t} else {\n\t\t\t_width = defaultW;\n\t\t\t_height = defaultH;\n\t\t}\n\t}\n\n\tfunction drawShape():Void {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\tvar min = 100000.0;\n\t\tvar max = 0.0;\n\n\t\tvar xOffset = 0.0;\n\t\tvar yOffset = 0.0;\n\n\t\tif(_width == defaultW) xOffset = (w-defaultW)/2;\n\t\tif(_height == defaultH) yOffset = (h-defaultH)/2;\n\n\t\tfor (x in 0..._width) {\n\t\t\tfor (y in 0..._height) {\n\t\t\t\t// var value:Float = perlin.noise2d(x / 10.0, y / 10.0);\n\t\t\t\tvar value:Float = Math.abs(perlin.noise2d(x / xValue, y / yValue, octaves, amplitude, persistence, lacunarity));\n\t\t\t\t// Do stuff with it...\n\t\t\t\tvalue *= 256;\n\t\t\t\t// trace('x:$x, y:$y , value: $value');\n\t\t\t\tif (value <= min)\n\t\t\t\t\tmin = value;\n\t\t\t\tif (value >= max)\n\t\t\t\t\tmax = value;\n\t\t\t\tctx.colour(Math.round(value), Math.round(value), Math.round(value));\n\t\t\t\tctx.fillRect(xOffset + x, yOffset + y, 1, 1);\n\t\t\t}\n\t\t}\n\n\t\ttrace('min: $min');\n\t\ttrace('max: $max');\n\n\t\tconsole.group('Perlin Noise values');\n\t\tconsole.log('xValue: $xValue');\n\t\tconsole.log('yValue: $yValue');\n\t\tconsole.log('octaves: $octaves');\n\t\tconsole.log('amplitude: $amplitude');\n\t\tconsole.log('persistence: $persistence');\n\t\tconsole.log('lacunarity: $lacunarity');\n\t\tconsole.groupEnd();\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\tvar colorArray = ColorUtil.niceColor100[randomInt(ColorUtil.niceColor100.length - 1)];\n\t\t_bgColor = hex2RGB(colorArray[0]);\n\t\t_lineColor = hex2RGB(colorArray[1]);\n\t\t_fillColor = hex2RGB(colorArray[2]);\n\n\t\tisDebug = true;\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\tstop();\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC045 extends CCBase implements ICCBase {\n\n\tvar _radius = 150;\n\tvar max = 1000;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Repeating a lot of cirlces, just a nice image';\n\t\ttype = [CCType.IMAGE];\n\t\tsuper(ctx);\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(BLACK);\n\n\t\tctx.strokeColourRGB(WHITE, 0.05);\n\t\tctx.strokeWeight(1);\n\n\t\tvar offset = 50;\n\t\tfor (i in 0...max) {\n\t\t\tvar offsetX = random(-offset, offset);\n\t\t\tvar offsetY = random(-offset, offset);\n\t\t\tctx.strokeCircle(offsetX + w / 2, offsetY + h / 2, h / 3);\n\t\t}\n\t}\n\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\tstop();\n\t}\n}\n","package art;\n\nusing StringTools;\n\n/**\n * short description what this does\n */\nclass CC046 extends CCBase implements ICCBase {\n\n\tvar counter = 0;\n\tvar maxFrameRate = 60;\n\tvar frameRate = 15;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = '';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\n\t\t// <link href=\"https://fonts.googleapis.com/css?family=Share+Tech+Mono\" rel=\"stylesheet\">\n\t\tText.embedGoogleFont('Share+Tech+Mono', onEmbedHandler);\n\n\t\tsuper(ctx);\n\t}\n\n\tfunction onEmbedHandler(e) {\n\t\ttrace('onEmbedHandler: \"${e}\"');\n\t\tdrawShape();\n\t}\n\n\n\n\tfunction drawShape(){\n\t\tcounter++;\n\t\tif (counter % (maxFrameRate / frameRate) != 0) {\n\t\t\treturn;\n\t\t}\n\n\n\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\n\t\tvar time = Date.now();\n\t\tvar hours = time.getHours(); // 24\n\t\tvar min = time.getMinutes(); // 60\n\t\tvar sec = time.getSeconds(); // 60\n\t\t// var sec = time.get() + 1; // 60\n\n\t\tvar text = '${Std.string(hours).lpad('0',2)}:${Std.string(min).lpad('0',2)}:${Std.string(sec).lpad('0',2)}';\n\n\t\tctx.fillStyle = getColourObj(BLACK);\n\t\tText.centerFillText(ctx, text, w/2, h/2, \"'Share Tech Mono', monospace\", 160);\n\n\n\n\t}\n\n\n\toverride function setup(){\n\t\ttrace('setup: ${toString()}');\n\t\tisDebug = true;\n\t}\n\n\toverride function draw(){\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}","package art;\n\n/**\n * short description what this does\n */\nclass CC047 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Circle> = [];\n\tvar grid:GridUtil = new GridUtil();\n\t// sizes\n\tvar _radius = 150;\n\tvar _cellsize = 150;\n\tvar _max = 1;\n\t// colors\n\tvar _color0:RGB = null;\n\tvar _color1:RGB = null;\n\tvar _color2:RGB = null;\n\tvar _color3:RGB = null;\n\tvar _color4:RGB = null;\n\t// settings\n\tvar panel1:QuickSettings;\n\t// mouse stuff\n\tvar _follow:Circle;\n\tvar _leader:Circle;\n\t// mouse settings\n\tvar isClear:Bool = true;\n\tvar isClearDefault:Bool = true;\n\tvar isAuto:Bool = false;\n\tvar isAutoDefault:Bool = false;\n\tvar momentumx = 0.0;\n\tvar momentumy = 0.0;\n\tvar speed = 6.0; // default: 3, quicker: 1, slower: 6\n\tvar defaultSpeed = 6.0;\n\tvar bounce = 0.9; // default: 0.75, less bounce: 0.5, more bounce: 0.9\n\tvar defaultBounce = 0.75;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Mouse trailer with elasticy';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE, CCType.INTERACTIVE];\n\n\t\tcreateQuickSettings();\n\n\t\tsuper(ctx);\n\t}\n\n\t// ____________________________________ settings ____________________________________\n\tfunction createQuickSettings() {\n\t\t// demo/basic example\n\t\tpanel1 = QuickSettings.create(10, 10, \"Elastic mouse\")\n\t\t\t.setGlobalChangeHandler(untyped drawShape) // .addHTML(\"Check the best settings\", \"Sometimes I need a quick quote, to post on Instagram\")\n\n\t\t\t.addHTML('Speed and Bounce', '<b>speed</b> changes the speed of the movement (1=high, 9=slow),<br><b>bounce</b> the elasticy (0.5=less, 0.9=more)')\n\n\t\t\t.addRange('Speed', 0.0, 100.0, defaultSpeed, 1.0, function(value) setSpeed(value))\n\t\t\t.addRange('Bounce', 0.0, 0.99, defaultBounce, 0.01, function(value) setBounce(value))\n\n\t\t\t.addBoolean('Auto', isAutoDefault, function(value) setAutomatic(value))\n\t\t\t.addBoolean('Clear', isClearDefault, function(value) setClear(value))\n\n\t\t\t.addButton('Reset', function(e) setReset())\n\n\t\t\t.saveInLocalStorage('store-data-${toString()}');\n\t}\n\n\tfunction setBounce(value) {\n\t\tbounce = value;\n\t}\n\n\tfunction setSpeed(value) {\n\t\tspeed = value;\n\t}\n\n\tfunction setClear(is:Bool) {\n\t\tisClear = is;\n\t}\n\tfunction setAutomatic(isAutomatic:Bool) {\n\t\tisAuto = isAutomatic;\n\t\tif (isAuto) {\n\t\t\tonAnimateHandler();\n\t\t} else {\n\t\t\tif (go != null) {\n\t\t\t\tgo.stop();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction setReset() {\n\t\tspeed = defaultSpeed;\n\t\tbounce = defaultBounce;\n\t\tisAuto = isAutoDefault;\n\t\tpanel1.setValue('Speed', defaultSpeed);\n\t\tpanel1.setValue('Bounce', defaultBounce);\n\t\tpanel1.setValue('Auto', isAutoDefault);\n\t}\n\n\t// ____________________________________ shapes ____________________________________\n\tfunction createShape(i:Int) {\n\t\tvar shape:Circle = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'circle',\n\t\t\tx: w / 2,\n\t\t\ty: h / 2,\n\t\t\tradius: _radius,\n\t\t}\n\t\treturn shape;\n\t}\n\n\tvar counter = 0;\n\tvar leaderX = w / 2;\n\tvar leaderY = h / 2;\n\tvar go:Go;\n\tvar padding = 50;\n\n\tfunction onAnimateHandler() {\n\t\tif (_leader == null){\n\t\t\ttrace('no leader');\n\t\t\tGo.timer(1).onComplete(onAnimateHandler);\n\t\t\treturn;\n\t\t}\n\n\t\tvar xpos = random(padding, w-(padding*2));\n\t\tvar ypos = random(padding, h-(padding*2));\n\n\t\t// trace('GO: xpos: $xpos, ypos: $ypos, _leader.x: ${_leader.x}, _leader.y: ${_leader.y}');\n\n\t\tgo = Go.to(_leader, random(0.1, 0.5))\n\t\t\t.x(xpos)\n\t\t\t.y(ypos)\n\t\t\t.ease(Sine.easeInOut)\n\t\t\t.onComplete(onAnimateHandler);\n\t}\n\n\tfunction drawShape() {\n\t\tif (!isAuto && mouseX == null)\n\t\t\treturn;\n\n\t\tif(isClear){\n\t\t\tctx.clearRect(0, 0, w, h);\n\t\t\tctx.backgroundObj(WHITE);\n\t\t}\n\n\t\tif (isAuto) {\n\t\t\t// if(counter >= 50){\n\t\t\t// \tcounter = 0;\n\t\t\t// }\n\t\t\t// if(counter == 0){\n\t\t\t// \tleaderX = randomInt(0,w);\n\t\t\t// \tleaderY = randomInt(0,h);\n\t\t\t// }\n\t\t\t// counter++;\n\t\t\t// ctx.fillColourRGB(RED);\n\t\t\t// ctx.circleFill(leaderX, leaderY, 2);\n\n\t\t\tleaderX = _leader.x;\n\t\t\tleaderY = _leader.y;\n\n\t\t\tctx.fillColourRGB(RED);\n\t\t\t// ctx.circleFill(leaderX, leaderY, 2);\n\t\t\tShapeUtil.registerPoint(ctx,leaderX, leaderY);\n\t\t} else {\n\t\t\tleaderX = mouseX;\n\t\t\tleaderY = mouseY;\n\t\t}\n\n\t\t// follow the mouse in a more elastic way\n\t\t// by using momentum\n\t\tvar distx:Float = _follow.x - leaderX;\n\t\tvar disty:Float = _follow.y - leaderY;\n\t\tmomentumx -= distx / speed;\n\t\tmomentumy -= disty / speed;\n\n\t\t// dampen the momentum a little\n\t\tmomentumx *= bounce;\n\t\tmomentumy *= bounce;\n\n\t\t// go get that mouse!\n\t\t_follow.x += momentumx;\n\t\t_follow.y += momentumy;\n\n\t\tctx.fillColourRGB(BLACK);\n\t\tctx.circleFill(_follow.x, _follow.y, 10);\n\t}\n\n\t// ____________________________________ setup ____________________________________\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\tvar colorArray = ColorUtil.niceColor100SortedString[randomInt(ColorUtil.niceColor100SortedString.length - 1)];\n\t\t_color0 = hex2RGB(colorArray[0]);\n\t\t_color1 = hex2RGB(colorArray[1]);\n\t\t_color2 = hex2RGB(colorArray[2]);\n\t\t_color3 = hex2RGB(colorArray[3]);\n\t\t_color4 = hex2RGB(colorArray[4]);\n\n\t\tisDebug = true;\n\n\t\t_follow = createShape(0);\n\t\t_leader = createShape(1);\n\t}\n\n\t// ____________________________________ draw ____________________________________\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}\n","package art;\n\n/**\n * https://unsplash.com/search/photos/fruit\n */\nclass CC048 extends CCBase implements ICCBase {\n\tvar ctxHidden:CanvasRenderingContext2D;\n\tvar shapeArray:Array<Pixel> = [];\n\tvar grid:GridUtil = new GridUtil();\n\t// sizes\n\t// var _radius = 150;\n\t// var _cellsize = 150;\n\t// colors\n\tvar _color0:RGB = null;\n\tvar _color1:RGB = null;\n\tvar _color2:RGB = null;\n\tvar _color3:RGB = null;\n\tvar _color4:RGB = null;\n\t// var panel1:QuickSettings;\n\tvar _sizeX = 0;\n\tvar _sizeY = 0;\n\tvar _total = 0;\n\tvar _padding = 0;\n\tvar _scale = 0.2;\n\tvar pixelCounter = 0;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = '';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\t\tsuper(ctx);\n\t}\n\n\tfunction startCanvasImage(){\n\t\ttrace('startCanvasImage :: start');\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\tif (shapeArray.length <= 0)\treturn;\n\t\t_padding = Math.round((w - ctxHidden.canvas.width) / 2);\n\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\tvar xpos = _padding + sh.x;\n\t\t\tvar ypos = _padding + sh.y;\n\t\t\tctx.fillColour(sh.rgba.r, sh.rgba.g, sh.rgba.b, sh.rgba.a);\n\t\t\tctx.fillRect(xpos, ypos, 1, 1);\n\t\t}\n\t\ttrace('startCanvasImage :: done');\n\t}\n\n\tfunction drawShape() {\n\n\t\tif (shapeArray.length <= 0) return;\n\n\n\t\tfor (i in 0..._sizeX){\n\t\t\tvar sh = shapeArray[pixelCounter];\n\n\n\t\t\t// trace(sh.x, sh.y);\n\n\t\t\tsh.x = sh.x + randomInt(-1,1);\n\t\t\tsh.y = sh.y - 1;\n\n\t\t\t// trace(sh.x, sh.y);\n\t\t\tvar __size = 5;\n\n\t\t\tvar xpos = _padding + sh.x;\n\t\t\tvar ypos = _padding + sh.y;\n\t\t\tctx.fillColour(sh.rgba.r, sh.rgba.g, sh.rgba.b, sh.rgba.a);\n\t\t\t// ctx.fillColourRGB(randomColourObject());\n\t\t\tctx.fillRect(xpos, ypos, 1, 1);\n\n\n\t\t\tpixelCounter++;\n\t\t\tif (pixelCounter >= _total) pixelCounter = 0;\n\n\t\t\t// trace(pixelCounter);\n\t\t\t\t//your code\n\t\t}\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\t// isDebug = true;\n\n\t\ttrace('setup: start loading image');\n\n\t\t// start loading image\n\t\tvar img = new Image();\n\t\timg.src = 'assets/img/fresh/xiaolong-wong-1297576-unsplash_square500x500.jpg';\n\t\timg.onload = function() {\n\t\t\ttrace('setup: image loaded');\n\t\t\tvar option = new Sketch.SketchOption();\n\t\t\toption.width = Math.round(img.width*_scale);\n\t\t\toption.height = Math.round(img.height*_scale);\n\n\t\t\t_sizeX = option.width;\n\t\t\t_sizeY = option.height;\n\t\t\t_total = _sizeX * _sizeY;\n\n\t\t\ttrace('setup -> _sizeX: ${_sizeX}, _sizeY: ${_sizeY}, total pixels: ${_total}');\n\n\t\t\tctxHidden = Sketch.createHiddenCanvas('imageholder', option, isDebug);\n\t\t\tctxHidden.drawImage(img, 0, 0, option.width, option.height);\n\t\t\timg.style.display = 'none';\n\t\t\tsetupDataArray(option.width, option.height);\n\t\t};\n\t}\n\n\tfunction setupDataArray(xdir, ydir) {\n\t\ttrace('convert image: Start converting pixels to data');\n\t\tfor (y in 0...ydir) {\n\t\t\tfor (x in 0...xdir) {\n\t\t\t\tvar pixel:Pixel = {\n\t\t\t\t\tx: x,\n\t\t\t\t\ty: y,\n\t\t\t\t\tcolour: getPixel(x, y),\n\t\t\t\t\trgb: getPixelRGB(x, y),\n\t\t\t\t\trgba: getPixelRGBA(x, y),\n\t\t\t\t}\n\t\t\t\tshapeArray.push(pixel);\n\t\t\t}\n\t\t}\n\t\ttrace('convert image: DONE');\n\t\tpixelCounter = 0;\n\t\tstartCanvasImage();\n\t}\n\n\tfunction getPixel(x, y):String {\n\t\tvar xpos = x;\n\t\tvar ypos = y;\n\t\tvar pixel = ctxHidden.getImageData(xpos, ypos, 1, 1);\n\t\tvar data = pixel.data;\n\t\tvar rgba = 'rgba(' + data[0] + ', ' + data[1] + ', ' + data[2] + ', ' + (data[3] / 255) + ')';\n\t\treturn rgba;\n\t}\n\n\tfunction getPixelRGB(x, y):RGB {\n\t\tvar xpos = x;\n\t\tvar ypos = y;\n\t\tvar pixel = ctxHidden.getImageData(xpos, ypos, 1, 1);\n\t\tvar data = pixel.data;\n\t\tvar RGBA:RGB = {\n\t\t\tr: data[0],\n\t\t\tg: data[1],\n\t\t\tb: data[2],\n\t\t}\n\t\treturn RGBA;\n\t}\n\n\tfunction getPixelRGBA(x, y):RGBA {\n\t\tvar xpos = x;\n\t\tvar ypos = y;\n\t\tvar pixel = ctxHidden.getImageData(xpos, ypos, 1, 1);\n\t\tvar data = pixel.data;\n\t\tvar RGBA:RGBA = {\n\t\t\tr: data[0],\n\t\t\tg: data[1],\n\t\t\tb: data[2],\n\t\t\ta: (data[3] / 255)\n\t\t}\n\t\treturn RGBA;\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}\n","package art;\n\nimport lib.model.constants.Onom;\n\n/**\n * short description what this does\n */\nclass CC049 extends CCBase implements ICCBase {\n\t// sizes\n\tvar _radius = 150;\n\tvar _cellsize = 150;\n\t// colors\n\tvar _color0:RGB = null;\n\tvar _color1:RGB = null;\n\tvar _color2:RGB = null;\n\tvar _color3:RGB = null;\n\tvar _color4:RGB = null;\n\n\tvar _text:String = '[mck]';\n\tvar _stroke:Int = 20;\n\tvar _grid = 10;\n\tvar _gridX = 10;\n\tvar _gridY = 10;\n\n\tvar panel1:QuickSettings;\n\tvar onom:Onom = new Onom();\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = '';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\n\t\tcreateQuickSettings();\n\n\t\tsuper(ctx);\n\t}\n\n\t// ____________________________________ settings ____________________________________\n\n\tfunction createQuickSettings() {\n\t\t// demo/basic example\n\t\tpanel1 = QuickSettings.create(10, 10, \"Onom font\")\n\t\t\t.setGlobalChangeHandler(untyped drawShape)\n\t\t\t.addHTML(\"Onom\", \"how to draw fonts from scratch\")\n\n\t\t\t.addText('Text', '[mck]', function(value) setText(value))\n\n\t\t\t.addRange('Stroke', 1, 100, _stroke, 1, function(e) setStroke(e)) // .addTextArea('Quote', '[]', function (value) trace(value) )\n\t\t\t.addRange('Grid', 1, 100, _grid, 1, function(e) setGrid(e)) // .addTextArea('Quote', '[]', function (value) trace(value) )\n\t\t\t.addRange('GridX', 1, 100, _grid, 1, function(e) setGridX(e)) // .addTextArea('Quote', '[]', function (value) trace(value) )\n\t\t\t.addRange('GridY', 1, 100, _grid, 1, function(e) setGridY(e)) // .addTextArea('Quote', '[]', function (value) trace(value) )\n\n\t\t\t\t// .addBoolean('All Caps', false, function (value) trace(value) )\n\n\t\t\t.saveInLocalStorage('store-data-${toString()}');\n\t}\n\n\t// ____________________________________ set settings ____________________________________\n\n\tfunction setText(value) {\n\t\t_text = value;\n\t}\n\n\tfunction setStroke(value) {\n\t\t_stroke = value;\n\t}\n\tfunction setGrid(value) {\n\t\tif(panel1 != null){\n\t\t\tpanel1.setValue('GridX' , value);\n\t\t\tpanel1.setValue('GridY' , value);\n\t\t}\n\t\t_grid = value;\n\t}\n\tfunction setGridX(value) {\n\t\t_gridX = value;\n\t}\n\tfunction setGridY(value) {\n\t\t_gridY = value;\n\t}\n\n\n\t// ____________________________________ draw shape  ____________________________________\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\tvar xpadding = 100;\n\t\tvar ypadding = 100;\n\n\t\tvar offsetx = 0;\n\t\tvar offsety = 0;\n\n\t\tvar inputArray:Array<String> = _text.split('');\n\t\tfor (i in 0...inputArray.length) {\n\t\t\tvar char = inputArray[i];\n\t\t\tvar charPointArray = null;\n\t\t\tcharPointArray = onom.getChar(char);\n\t\t\tctx.beginPath();\n\t\t\tctx.lineCap = 'round';\n\t\t\tctx.lineJoin = 'round';\n\t\t\tctx.strokeColourRGB(BLACK);\n\t\t\tctx.strokeWeight(_stroke);\n\n\t\t\tfor (i in 0...charPointArray.length) {\n\t\t\t\tvar m = charPointArray[i];\n\n\t\t\t\tvar xpos:Int = (offsetx * (9 * _gridX)) + (m.x * _gridX);\n\t\t\t\tvar ypos = (offsety * (15 * _gridY)) + (m.y * _gridY);\n\n\t\t\t\tif (i == 0)\n\t\t\t\t\tctx.moveTo(xpos + xpadding, ypos + ypadding);\n\t\t\t\telse\n\t\t\t\t\tctx.lineTo(xpos + xpadding, ypos + ypadding);\n\t\t\t}\n\t\t\tctx.stroke();\n\n\t\t\toffsetx++;\n\t\t}\n\n\t\t// testMe();\n\t}\n\n\t// ____________________________________ override ____________________________________\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\t\tisDebug = true;\n\t}\n\n\toverride function draw() {\n\t\ttrace('draw: ${toString()}');\n\t\tdrawShape();\n\t\tstop();\n\t}\n\n\t// ____________________________________ test ____________________________________\n\n\tfunction testMe() {\n\t\tvar m = onom.getChar('x');\n\n\t\tvar xpadding = 100;\n\t\tvar ypadding = 100;\n\t\tvar scale = 50;\n\t\ttrace(m);\n\n\t\tctx.beginPath();\n\t\tctx.lineCap = 'round';\n\t\tctx.lineJoin = 'round';\n\t\tctx.strokeColourRGB(BLACK);\n\t\tctx.strokeWeight(_stroke);\n\t\tfor (i in 0...m.length) {\n\t\t\tvar _m = m[i];\n\t\t\tvar xpos = _m.x * scale;\n\t\t\tvar ypos = _m.y * scale;\n\t\t\tif (i == 0)\n\t\t\t\tctx.moveTo(xpos + xpadding, ypos + ypadding);\n\t\t\telse\n\t\t\t\tctx.lineTo(xpos + xpadding, ypos + ypadding);\n\t\t}\n\t\tctx.stroke();\n\t}\n\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC050 extends CCBase implements ICCBase {\n\tvar text:String = 'It is impossible to make anything foolproof because fools are so ingenious.';\n\tvar _color0:RGB = null;\n\tvar _color1:RGB = null;\n\tvar _color2:RGB = null;\n\tvar _color3:RGB = null;\n\tvar _color4:RGB = null;\n\tvar panel1:QuickSettings;\n\tvar isFontLoaded:Bool = false;\n\tvar _fontSize:Int = 160;\n\tvar _defaultFontSize:Int = 160;\n\tvar _lineHeight:Int = 100;\n\tvar _defaultLineHeight:Int = 100;\n\tvar _padding:Int = 0;\n\tvar _defaultPadding:Int = 0;\n\tvar _paddingTop:Int = 0;\n\tvar _defaultPaddingTop:Int = 0;\n\tvar square:Int;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'A tool to create quick quotes for Instagram';\n\t\ttype = [CCType.IMAGE];\n\n\t\t// <link href=\"https://fonts.googleapis.com/css?family=Oswald:200,300,400,500,600,700\" rel=\"stylesheet\">\n\t\tText.embedGoogleFont('Oswald:200,300,400,500,600,700', onEmbedHandler);\n\n\t\tcreateQuickSettings();\n\n\t\t// setup Sketch\n\t\tvar option = new Sketch.SketchOption();\n\t\toption.width = 1080; // 1080\n\t\t// option.height = 1000;\n\t\toption.autostart = true;\n\t\toption.padding = 10;\n\t\toption.scale = true;\n\t\tctx = Sketch.create(\"creative_code_mck\", option);\n\n\t\tsuper(ctx);\n\t}\n\n\tfunction onEmbedHandler(e) {\n\t\ttrace('onEmbedHandler: \"${e}\"');\n\t\tisFontLoaded = true;\n\t\tdrawShape();\n\t}\n\n\tfunction createQuickSettings() {\n\t\t// demo/basic example\n\t\tpanel1 = QuickSettings.create(10, 10, \"Quote generator\")\n\t\t\t.setGlobalChangeHandler(untyped drawShape)\n\t\t\t.addHTML(\"Reason\", \"Sometimes I need a quick quote, to post on Instagram\")\n\n\t\t\t.addTextArea('Quote', text, function(value) trace(value))\n\t\t\t.addBoolean('All Caps', false, function(value) setCaps(value))\n\t\t\t.addRange('Font size', 10, 500, _defaultFontSize, 1, function(value) setFontSize(value))\n\t\t\t.addRange('Line height', 10, 500, _defaultLineHeight, 1, function(value) setLineHeight(value))\n\t\t\t.addRange('Padding left/right', 0, 500, _defaultPadding, 1, function(value) setPadding(value))\n\t\t\t.addRange('Padding top', -100, 500, _defaultPaddingTop, 1, function(value) setPaddingTop(value))\n\n\t\t\t.addButton('Random Color', function(value) randomColorize())\n\n\t\t\t.saveInLocalStorage('store-data-${toString()}');\n\t}\n\n\tfunction setCaps(isCaps:Bool) {\n\t\tif (isCaps) {\n\t\t\ttext = text.toUpperCase();\n\t\t} else {\n\t\t\ttext = text.toLowerCase();\n\t\t}\n\t\t// hmmmm remember previouse... with caps, etc\n\t}\n\n\tfunction setFontSize(value:Int) {\n\t\t_fontSize = value;\n\t}\n\n\tfunction setLineHeight(value:Int) {\n\t\t_lineHeight = value;\n\t}\n\n\tfunction setPadding(value:Int) {\n\t\t_padding = value;\n\t}\n\n\tfunction setPaddingTop(value:Int) {\n\t\t_paddingTop = value;\n\t}\n\n\tfunction randomColorize() {\n\t\tvar colorArray = ColorUtil.niceColor100SortedString[randomInt(ColorUtil.niceColor100SortedString.length - 1)];\n\t\t_color0 = hex2RGB(colorArray[0]);\n\t\t_color1 = hex2RGB(colorArray[1]);\n\t\t_color2 = hex2RGB(colorArray[2]);\n\t\t_color3 = hex2RGB(colorArray[3]);\n\t\t_color4 = hex2RGB(colorArray[4]);\n\t}\n\n\t// source: https://en.wikiquote.org/wiki/Talk:Murphy%27s_law\n\tfunction drawShape() {\n\t\tif (!isFontLoaded)\n\t\t\treturn;\n\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(_color0);\n\n\t\t// important to have a example text in the canvas, otherwise the measurement don't work\n\t\t// important to have the font loaded\n\t\tctx.fillStyle = getColourObj(_color4);\n\t\tText.fillText(ctx, text, w / 2, -h, \"'Oswald', sans-serif;\", _fontSize);\n\n\t\t// split text up into string/lines\n\t\tvar lines:Array<String> = TextUtil.getLines(ctx, text, square - (2 * _padding));\n\t\tfor (i in 0...lines.length) {\n\t\t\tvar line = lines[i];\n\t\t\tText.fillText(ctx, line, _padding, _paddingTop + ((i + 1) * _lineHeight), \"'Oswald', sans-serif;\", _fontSize);\n\t\t}\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\trandomColorize();\n\n\t\tisDebug = true;\n\n\t\t// resize canvas to Square\n\t\tvar canvas:js.html.CanvasElement = cast document.getElementById('creative_code_mck');\n\t\tsquare = Math.round(Math.min(w, h));\n\n\t\ttrace('w: $w, h: $h');\n\t\ttrace('square: $square');\n\n\t\tcanvas.width = square - 2;\n\t\tcanvas.height = square - 2;\n\t\tcanvas.style.border = '1px solid silver';\n\t}\n\n\toverride function draw() {\n\t\ttrace('draw: ${toString()}');\n\t\tdrawShape();\n\t\tstop();\n\t}\n}\n","package art;\n\nimport js.Browser.*;\n\n/**\n * short description what this does\n */\nclass CC051 extends CCBase implements ICCBase {\n\t// colors\n\tvar _color0:RGB = null;\n\tvar _color1:RGB = null;\n\tvar _color2:RGB = null;\n\tvar _color3:RGB = null;\n\tvar _color4:RGB = null;\n\t// font\n\tvar isFondEmbedded = false;\n\n\t/**\n\t\t*\n\t\t* .your-style {\n\t\tfont-family: 'Gunplay';\n\t\tfont-weight: normal;\n\t\tfont-style: normal;\n\t\t}\n\t\t*\n\t\t* @param ctx\n\t */\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Font embedding: Gunplay (not Google font)';\n\t\ttype = [CCType.TOOL, CCType.IMAGE];\n\n\t\tsuper(ctx);\n\n\t\tvar font = new FontFace('Gunplay', 'url(assets/font/gunplay/Gunplay-Regular.woff2)', {\n\t\t\tstyle: 'normal',\n\t\t\tweight: '400',\n\t\t});\n\t\tdocument.fonts.add(font);\n\t\tfont.load();\n\t\tfont.loaded.then(function(fontface) {\n\t\t\ttrace(fontface.family);\n\t\t\tisFondEmbedded = true;\n\t\t\tdrawShape();\n\t\t});\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(_color4);\n\t\tif (isFondEmbedded) {\n\t\t\tctx.fillStyle = getColourObj(_color0);\n\t\t\tText.centerFillText(ctx, 'GUNPLAY', w / 2, h / 2, \"'Gunplay', sans-serif;\", 160);\n\n\t\t\tctx.fillStyle = getColourObj(_color1);\n\t\t\tctx.font = '100px Gunplay';\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.fillText('TEQ63: RAVAGER', w / 2, (h / 2) + 200);\n\n\t\t\t// Text.centerFillText(ctx, 'TEQ63: RAVAGER', w/2, (h/2)+200, \"'Gunplay', sans-serif;\", 160);\n\t\t}\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\tvar colorArray = ColorUtil.niceColor100SortedString[randomInt(ColorUtil.niceColor100SortedString.length - 1)];\n\t\t_color0 = hex2RGB(colorArray[0]);\n\t\t_color1 = hex2RGB(colorArray[1]);\n\t\t_color2 = hex2RGB(colorArray[2]);\n\t\t_color3 = hex2RGB(colorArray[3]);\n\t\t_color4 = hex2RGB(colorArray[4]);\n\n\t\tisDebug = true;\n\t}\n\n\toverride function draw() {\n\t\ttrace('draw: ${toString()}');\n\t\tdrawShape();\n\t\tstop();\n\t}\n}\n","package art;\n\nimport js.Browser.*;\n\n/**\n * short description what this does\n */\nclass CC051a extends CCBase implements ICCBase {\n\n\t// colors\n\tvar _color0:RGB = null;\n\tvar _color1:RGB = null;\n\tvar _color2:RGB = null;\n\tvar _color3:RGB = null;\n\tvar _color4:RGB = null;\n\t// font\n\tvar isFondEmbedded = false;\n\n\t/**\n\t\t*\n\t\t* .your-style {\n\t\tfont-family: 'Gunplay';\n\t\tfont-weight: normal;\n\t\tfont-style: normal;\n\t\t}\n\t\t*\n\t\t* @param ctx\n\t */\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = '';\n\t\ttype = [CCType.TOOL, CCType.IMAGE];\n\n\t\tsuper(ctx);\n\n\t\tvar font = new FontFace('Miso', 'url(assets/font/miso/Miso.ttf)', {\n\t\t\tstyle: 'normal',\n\t\t\tweight: '400',\n\t\t});\n\t\tdocument.fonts.add(font);\n\t\tfont.load();\n\t\tfont.loaded.then(function(fontface) {\n\t\t\ttrace(fontface.family);\n\t\t\tisFondEmbedded = true;\n\t\t\tdrawShape();\n\t\t});\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(_color4);\n\t\tif (isFondEmbedded) {\n\t\t\tctx.fillStyle = getColourObj(_color0);\n\t\t\tText.centerFillText(ctx, 'Miso MISO', w / 2, h / 2, \"'Miso', sans-serif;\", scaling(160));\n\n\t\t\tctx.fillStyle = getColourObj(_color1);\n\t\t\tctx.font = '${scaling(100)}px Miso';\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.fillText('1234567890', w / 2, (h / 2) + scaling(200));\n\n\t\t\tvar text = 'Matthijs Kamstra aka [mck]';\n\t\t\tctx.fillStyle = getColourObj(_color2);\n\t\t\tText.create(ctx, text)\n\t\t\t\t.font('Miso')\n\t\t\t\t.centerAlign()\n\t\t\t\t.pos(w / 2, scaling(100))\n\t\t\t\t// .size(Math.round(w / 2))\n\t\t\t\t// .size(Math.round(w / text.split('').length))\n\t\t\t\t.size(scaling(50))\n\t\t\t\t.draw();\n\n\t\t\t// Text.centerFillText(ctx, 'TEQ63: RAVAGER', w/2, (h/2)+200, \"'Miso', sans-serif;\", 160);\n\t\t}\n\t}\n\n\tfunction scaling (value){\n\t\treturn value;\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\tvar colorArray = ColorUtil.niceColor100SortedString[randomInt(ColorUtil.niceColor100SortedString.length - 1)];\n\t\t_color0 = hex2RGB(colorArray[0]);\n\t\t_color1 = hex2RGB(colorArray[1]);\n\t\t_color2 = hex2RGB(colorArray[2]);\n\t\t_color3 = hex2RGB(colorArray[3]);\n\t\t_color4 = hex2RGB(colorArray[4]);\n\n\t\tisDebug = true;\n\t}\n\n\toverride function draw() {\n\t\ttrace('draw: ${toString()}');\n\t\tdrawShape();\n\t\tstop();\n\t}\n}\n","package cc.draw;\n\nimport js.html.CanvasRenderingContext2D;\nimport js.html.*;\nimport js.Browser.document;\nimport js.Browser.window;\n// import cc.Global.*;\nimport cc.util.ColorUtil.RGB;\nimport cc.util.MathUtil.*;\n\nusing cc.CanvasTools;\nusing StringTools;\n\nclass Text {\n\t// are always set\n\tprivate var _ctx:CanvasRenderingContext2D;\n\tprivate var _text:String;\n\n\t// defaults\n\t@:isVar public var _x(get, set):Float = 100;\n\t@:isVar public var _y(get, set):Float = 100;\n\t@:isVar public var _radius(get, set):Float = 100;\n\t@:isVar public var _alpha(get, set):Float = 1; // 0 -> 1\n\t@:isVar public var _rotate(get, set):Int = 0; // weird for circles ???\n\t// type related\n\t@:isVar public var _size(get, set):Int;\n\n\tprivate var _font:String = 'Arial'; // italic small-caps bold 12px aria\n\t// https://www.w3schools.com/tags/canvas_textalign.asp\n\tprivate var _textAlign:String = 'left'; // center|end|left|right|start\"\n\t// https://www.w3schools.com/tags/canvas_textbaseline.asp\n\tprivate var _textBaseline:String = 'alphabetic'; // alphabetic|top|hanging|middle|ideographic|bottom\n\t// Color\n\tprivate var _color:RGB;\n\tprivate var _colorstoke:RGB;\n\tprivate var _lineArray:Array<String>;\n\n\t@:isVar public var _gradient(get, set):js.html.CanvasGradient;\n\t@:isVar public var _leading(get, set):Int;\n\n\t// ____________________________________ constructor ____________________________________\n\tpublic function new(ctx:CanvasRenderingContext2D, text:String) {\n\t\tthis._ctx = ctx;\n\t\tthis._text = text;\n\t}\n\n\t/**\n\t * var text = Text.create (ctx, 'Matthijs Kamstra aka [mck]').draw();\n\t *\n\t * @param ctx\n\t * @param text\n\t * @return Text\n\t */\n\tstatic inline public function create(ctx:CanvasRenderingContext2D, text:String):Text {\n\t\tvar Text = new Text(ctx, text);\n\t\treturn Text;\n\t}\n\n\t// ____________________________________ properties ____________________________________\n\n\tinline public function text(text:String):Text {\n\t\tthis._text = text;\n\t\treturn this;\n\t}\n\n\tinline public function x(x:Float):Text {\n\t\tthis._x = x;\n\t\treturn this;\n\t}\n\n\tinline public function y(y:Float):Text {\n\t\tthis._y = y;\n\t\treturn this;\n\t}\n\n\tinline public function pos(x:Float, y:Float):Text {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\treturn this;\n\t}\n\n\tinline public function font(font:String):Text {\n\t\tthis._font = font.replace(';', '').replace('+', ' ');\n\t\treturn this;\n\t}\n\n\tinline public function size(px:Int):Text {\n\t\tthis._size = px;\n\t\tif (_leading == null)\n\t\t\t_leading = px;\n\t\treturn this;\n\t}\n\n\tinline public function leading(px:Int):Text {\n\t\tthis._leading = px;\n\t\treturn this;\n\t}\n\n\tinline public function textAlign(pos:String):Text {\n\t\tthis._textAlign = pos; // left/right/center\n\t\treturn this;\n\t}\n\n\tinline public function leftAlign():Text {\n\t\tthis._textAlign = 'left'; // left/right/center\n\t\treturn this;\n\t}\n\n\tinline public function rightAlign():Text {\n\t\tthis._textAlign = 'right'; // left/right/center\n\t\treturn this;\n\t}\n\n\tinline public function centerAlign():Text {\n\t\tthis._textAlign = 'center'; // left/right/center\n\t\treturn this;\n\t}\n\n\tinline public function topBaseline():Text {\n\t\tthis._textBaseline = 'top'; // top/middle/bottom\n\t\treturn this;\n\t}\n\n\tinline public function middleBaseline():Text {\n\t\tthis._textBaseline = 'middle'; // top/middle/bottom\n\t\treturn this;\n\t}\n\n\tinline public function bottomBaseline():Text {\n\t\tthis._textBaseline = 'bottom'; // top/middle/bottom\n\t\treturn this;\n\t}\n\n\tinline public function textBaseline(pos:String):Text {\n\t\tthis._textBaseline = pos; // top/middle/bottom\n\t\treturn this;\n\t}\n\n\tinline public function rotate(degree:Int):Text {\n\t\tthis._rotate = degree;\n\t\treturn this;\n\t}\n\n\tinline public function rotateLeft():Text {\n\t\tthis._rotate = -90;\n\t\treturn this;\n\t}\n\n\tinline public function rotateRight():Text {\n\t\tthis._rotate = 90;\n\t\treturn this;\n\t}\n\n\tinline public function rotateDown():Text {\n\t\tthis._rotate = 180;\n\t\treturn this;\n\t}\n\n\tinline public function color(value:RGB, ?alpha:Float = 1):Text {\n\t\tthis._color = value;\n\t\tthis._alpha = clamp(alpha, 0, 1); // a value r should be between 0 and 1\n\t\treturn this;\n\t}\n\n\tinline public function alpha(alpha:Float):Text {\n\t\tthis._alpha = clamp(alpha, 0, 1); // a value r should be between 0 and 1\n\t\t// this._alpha = alpha; // a value r should be between 0 and 1\n\t\treturn this;\n\t}\n\n\tinline public function visible(isVisible:Bool):Text {\n\t\tif (isVisible) {\n\t\t\talpha(1);\n\t\t} else {\n\t\t\talpha(0);\n\t\t}\n\t\treturn this;\n\t}\n\n\tinline public function draw():Text {\n\t\tvar isLines = false;\n\t\t// draw to convast\n\t\t_ctx.save(); // save current state\n\t\t// split in lines\n\t\tif (_text.indexOf('\\n') != -1) {\n\t\t\t_lineArray = _text.split('\\n');\n\t\t\tisLines = true;\n\t\t}\n\t\t// remembor previous color\n\t\tvar previousColor = _ctx.fillStyle;\n\t\t// check if color is set\n\t\tif (_color != null) {\n\t\t\t_ctx.fillColourRGB(_color, this._alpha);\n\t\t} else {\n\t\t\t_ctx.fillColourRGB(cc.util.ColorUtil.hex2RGB(previousColor), this._alpha);\n\t\t}\n\t\t_ctx.font = '${_size}px ${_font}';\n\t\t_ctx.textAlign = _textAlign;\n\t\t_ctx.textBaseline = _textBaseline;\n\n\t\t// move canvas and rotate\n\t\t_ctx.translate(_x, _y);\n\t\t_ctx.rotate(radians(_rotate));\n\t\tif (!isLines) {\n\t\t\t// print text\n\t\t\t_ctx.fillText(_text, 0, 0);\n\t\t} else {\n\t\t\tfor (i in 0..._lineArray.length) {\n\t\t\t\tvar line = _lineArray[i];\n\t\t\t\t_ctx.fillText(line, 0, i * _leading);\n\t\t\t}\n\t\t}\n\t\t// restore canvas to previous position\n\t\t_ctx.restore();\n\n\t\t// restore previous color?\n\t\t_ctx.fillStyle = previousColor;\n\n\t\treturn this;\n\t}\n\n\t// public static function text(, x:Float, y:Float, css:String, ?size:Int = 20) {\n\t// \tctx.font = '${size}px ${css.replace(';', '')}';\n\t// \t// seems to break something if css has `;`\n\t// \tctx.textAlign = \"left\"; // center / right\n\t// \tctx.font = '100px Miso';\n\t// \tctx.textAlign = 'center';\n\t// \tctx.textBaseline = 'middle';\n\t// \tctx.fillText(text, x, y);\n\t// }\n\t// TODO:\n\t//\t\t2 fonts in one <link>\n\t// \t\tresize window and not end up with multiple <links>\n\t//\t\tchaining? `ctx.embedFillText().color().multiline()`\n\tpublic static function fillText(ctx:CanvasRenderingContext2D, text:String, x:Float, y:Float, css:String, ?size:Int = 20) {\n\t\tctx.font = '${size}px ${css.replace(';', '')}';\n\t\t// seems to break something if css has `;`\n\t\tctx.textAlign = \"left\";\n\t\tctx.fillText(text, x, y);\n\t}\n\n\t// function lines () {\n\t// \t// important to have a example text in the canvas, otherwise the measurement don't work\n\t// \t// important to have the font loaded\n\t// \tctx.fillStyle = getColourObj(_color4);\n\t// \tText.fillText(ctx, text, w / 2, -h, \"'Oswald', sans-serif;\", _fontSize);\n\t// \t// split text up into string/lines\n\t// \tvar lines:Array<String> = TextUtil.getLines(ctx, text, square - (2 * _padding));\n\t// \tfor (i in 0...lines.length) {\n\t// \t\tvar line = lines[i];\n\t// \t\tText.fillText(ctx, line, _padding, _paddingTop + ((i + 1) * _lineHeight), \"'Oswald', sans-serif;\", _fontSize);\n\t// \t}\n\t// }\n\n\t/**\n\t * make sure to use Google fonts for this\n\t * @param ctx\n\t * @param text\n\t * @param x\n\t * @param y\n\t * @param css\n\t * @param size\n\t */\n\tpublic static function centerFillText(ctx:CanvasRenderingContext2D, text:String, x:Float, y:Float, css:String, ?size:Int = 20) {\n\t\tctx.font = '${size}px ${css.replace(';', '')}';\n\t\t// seems to break something if css has `;`\n\t\tctx.textAlign = \"center\";\n\t\tctx.fillText(text, x, y);\n\n\t\t// trace( text, x, y, css, size);\n\t}\n\n\t/**\n\t * [Description]\n\t *\n\t * @exampe\n\t * \t\tText.embedGoogleFont('Press+Start+2P', onEmbedHandler);\n\t *\n\t * @param family\tname given after `...css?family=` (example: Press+Start+2P)\n\t * @param callback\n\t * @param callbackArray\n\t */\n\tpublic static function embedGoogleFont(family:String, ?callback:Dynamic, ?callbackArray:Array<Dynamic>) {\n\t\t// trace('embedGoogleFont');\n\t\tvar _id = 'embededGoogleFonts';\n\t\tvar _url = 'https://fonts.googleapis.com/css?family=';\n\t\tvar link:LinkElement = cast document.getElementById(_id);\n\t\tif (link != null) {\n\t\t\tvar temp = link.href.replace(_url, '');\n\t\t\tfamily = temp + '|' + family;\n\t\t} else {\n\t\t\tlink = document.createLinkElement();\n\t\t}\n\t\tif (callbackArray == null)\n\t\t\tcallbackArray = [family];\n\t\tlink.href = '${_url}${family}';\n\t\tlink.rel = \"stylesheet\";\n\t\tlink.id = _id;\n\t\tlink.onload = function() {\n\t\t\tif (callback != null)\n\t\t\t\tReflect.callMethod(callback, callback, callbackArray);\n\t\t}\n\t\tdocument.head.appendChild(link);\n\t}\n\n\t// ____________________________________ getter/setter ____________________________________\n\n\tfunction get__x():Float {\n\t\treturn _x;\n\t}\n\n\tfunction set__x(value:Float):Float {\n\t\treturn _x = value;\n\t}\n\n\tfunction get__y():Float {\n\t\treturn _y;\n\t}\n\n\tfunction set__y(value:Float):Float {\n\t\treturn _y = value;\n\t}\n\n\tfunction get__radius():Float {\n\t\treturn _radius;\n\t}\n\n\tfunction set__radius(value:Float):Float {\n\t\treturn _radius = value;\n\t}\n\n\tfunction get__alpha():Float {\n\t\treturn _alpha;\n\t}\n\n\tfunction set__alpha(value:Float):Float {\n\t\treturn _alpha = value;\n\t}\n\n\tfunction get__rotate():Int {\n\t\treturn _rotate;\n\t}\n\n\tfunction set__rotate(value:Int):Int {\n\t\treturn _rotate = value;\n\t}\n\n\tfunction get__gradient():js.html.CanvasGradient {\n\t\treturn _gradient;\n\t}\n\n\tfunction set__gradient(value:js.html.CanvasGradient):js.html.CanvasGradient {\n\t\treturn _gradient = value;\n\t}\n\n\tfunction get__size():Int {\n\t\treturn _size;\n\t}\n\n\tfunction set__size(value:Int):Int {\n\t\treturn _size = value;\n\t}\n\n\tfunction get__leading():Int {\n\t\treturn _leading;\n\t}\n\n\tfunction set__leading(value:Int):Int {\n\t\treturn _leading = value;\n\t}\n\n\t// ____________________________________ tostring ____________________________________\n\tpublic function toString() {\n\t\t// return haxe.Json.stringify(this);\n\t\treturn ('Text: ' + haxe.Json.parse(haxe.Json.stringify(this)));\n\t}\n}\n","package art;\n\nimport AST;\n\n/**\n * short description what this does\n */\nclass CC052 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<InstaLikes> = [];\n\tvar grid:GridUtil = new GridUtil();\n\t// sizes\n\tvar _radius = 150;\n\tvar _cellsize = 150;\n\t// colors\n\tvar _color0:RGB = null;\n\tvar _color1:RGB = null;\n\tvar _color2:RGB = null;\n\tvar _color3:RGB = null;\n\tvar _color4:RGB = null;\n\tvar panel1:QuickSettings;\n\tvar svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 81 71\"><path d=\"M70.6.31H10.78C5.06.31.38 4.99.38 10.71v33.53c0 5.72 4.68 10.4 10.4 10.4H21.3c1.08 0 2.11.43 2.88 1.19l13.6 13.6a4.062 4.062 0 0 0 5.75 0l13.6-13.6a4.08 4.08 0 0 1 2.88-1.19H70.6c5.72 0 10.4-4.68 10.4-10.4V10.71C81 4.99 76.32.31 70.6.31z\" fill=\"#f4555a\"/><path d=\"M43.5 22.04c0-4.03-3.26-7.29-7.29-7.29-3.39 0-6.23 2.31-7.05 5.44a7.288 7.288 0 0 0-7.05-5.44c-4.03 0-7.29 3.26-7.29 7.29 0 1.98.79 3.77 2.07 5.09l.03.03.06.06 11.66 11.66 12.29-11.31a7.178 7.178 0 0 0 2.57-5.53z\" fill=\"#fff\"/></svg>';\n\tvar svgImage:Image;\n\t// image for some reason looses its size\n\tvar svgWidth = 81;\n\tvar svgHeight = 71;\n\tvar isSvgReady = false;\n\tvar isFontReady = false; // doesn't work offline...\n\tvar padding = 5;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = '';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\n\t\t// _cellsize = svgWidth;\n\n\t\t// <link href=\"https://fonts.googleapis.com/css?family=Oswald:200,300,400,500,600,700\" rel=\"stylesheet\">\n\t\t// Text.embedGoogleFont('Roboto:300', onEmbedHandler);\n\n\t\tsuper(ctx);\n\n\t\tinitSVG();\n\t}\n\n\tfunction initSVG() {\n\t\t// create the image used\n\t\tsvgImage = new Image();\n\t\tsvgImage.onload = function() {\n\t\t\ttrace('base64 square');\n\t\t\ttrace('w: ' + svgImage.width);\n\t\t\ttrace('h: ' + svgImage.height);\n\n\t\t\tisSvgReady = true;\n\t\t\t// svgImage.width = 81;\n\t\t\t// svgImage.height  = 71;\n\t\t\t// ctx.drawImage(img, w/2, h/2,81,71);\n\t\t\tdrawShape();\n\t\t}\n\n\t\t// get svg data (from the dom)\n\t\t// var xml = new XMLSerializer().serializeToString(svg);\n\n\t\t// make it base64\n\t\tvar svg64 = window.btoa(svg);\n\t\tvar b64Start = 'data:image/svg+xml;base64,';\n\n\t\t// prepend a \"header\"\n\t\tvar image64 = b64Start + svg64;\n\n\t\t// set it as the source of the img element\n\t\tsvgImage.src = image64;\n\n\t\t// draw the image onto the canvas\n\t\t// ctx.drawImage(img, 10, 10);\n\t}\n\n\tfunction onEmbedHandler(e) {\n\t\ttrace('onEmbedHandler: \"${e}\"');\n\t\tisFontReady = true;\n\t\tdrawShape();\n\t}\n\n\tfunction createLike(i:Int, ?point:Point) {\n\t\tvar shape:InstaLikes = {\n\t\t\t_id: '$i',\n\t\t\tx: point.x,\n\t\t\ty: point.y,\n\t\t\twidth: svgWidth,\n\t\t\theight: svgHeight,\n\t\t\tcount: i,\n\t\t\tpercentage: 0,\n\t\t}\n\t\t// onAnimateHandler(shape);\n\t\treturn shape;\n\t}\n\n\t// function onAnimateHandler(circle:Circle){\n\t// \t// Go.to(circle, 5).x(w/2).y(h/2).ease(Sine.easeInOut).onComplete(onAnimateHandler, [circle]);\n\t// }\n\n\tfunction drawShape() {\n\t\tif (!isSvgReady)\n\t\t\treturn;\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\tif (isDebug) {\n\t\t\tShapeUtil.gridField(ctx, grid);\n\t\t}\n\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\tctx.drawImage(svgImage, sh.x - (sh.width / 2), sh.y - (sh.height / 2), sh.width, sh.height);\n\t\t\tctx.fillColourRGB(WHITE);\n\t\t\tText.create(ctx, Std.string(sh.count + 1))\n\t\t\t\t// .font('Miso')\n\t\t\t\t.centerAlign()\n\t\t\t\t.pos(sh.x + 20, sh.y)\n\t\t\t\t.size(20)\n\t\t\t\t.draw();\n\t\t}\n\t\t// var rgb = randomColourObject();\n\t\t// ctx.strokeColour(rgb.r, rgb.g, rgb.b);\n\t\t// ctx.xcross(w/2, h/2, 200);\n\t\tstop();\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\tvar colorArray = ColorUtil.niceColor100SortedString[randomInt(ColorUtil.niceColor100SortedString.length - 1)];\n\t\t_color0 = hex2RGB(colorArray[0]);\n\t\t_color1 = hex2RGB(colorArray[1]);\n\t\t_color2 = hex2RGB(colorArray[2]);\n\t\t_color3 = hex2RGB(colorArray[3]);\n\t\t_color4 = hex2RGB(colorArray[4]);\n\n\t\t// isDebug = true;\n\n\t\t// grid.setDimension(w*2.1, h*2.1);\n\t\t// grid.setNumbered(3,3);\n\t\tgrid.setCellSize(svgWidth + padding, svgHeight + padding);\n\t\tgrid.setIsCenterPoint(true);\n\n\t\tshapeArray = [];\n\t\tfor (i in 0...grid.array.length) {\n\t\t\tshapeArray.push(createLike(i, grid.array[i]));\n\t\t}\n\t}\n\n\toverride function draw() {\n\t\ttrace('draw: ${toString()}');\n\t\tdrawShape();\n\t\t// stop();\n\t}\n\n\t/**\n\t * just keep this here for reference\n\t */\n\tfunction didnotwork() {\n\t\tvar img = new Image();\n\t\timg.onload = function() {\n\t\t\ttrace('green square');\n\t\t\tctx.drawImage(img, w / 2, h / 2);\n\t\t}\n\t\t// img.src = \"assets/img/likes/likes.svg\";\n\t\t// img.src = \"assets/img/mck.png\";\n\t\timg.src = \"http://upload.wikimedia.org/wikipedia/commons/d/d2/Svg_example_square.svg\";\n\t\ttrace(img.src);\n\n\t\tvar img = new Image();\n\t\timg.onload = function() {\n\t\t\ttrace('png');\n\t\t\tctx.drawImage(img, w / 2, h / 2);\n\t\t}\n\t\t// img.src = \"assets/img/likes/likes.svg\";\n\t\timg.src = \"assets/img/mck.png\";\n\t\t// img.src = \"http://upload.wikimedia.org/wikipedia/commons/d/d2/Svg_example_square.svg\";\n\t\ttrace(img.src);\n\n\t\tvar img = new Image();\n\t\timg.onload = function() {\n\t\t\ttrace('likes');\n\t\t\tctx.drawImage(img, w / 2, h / 2);\n\t\t}\n\t\timg.src = \"assets/img/likes/likes.svg\";\n\t\t// img.src = \"assets/img/mck.png\";\n\t\t// img.src = \"http://upload.wikimedia.org/wikipedia/commons/d/d2/Svg_example_square.svg\";\n\t\ttrace(img.src);\n\n\t\tvar img = new Image();\n\t\timg.onload = function() {\n\t\t\ttrace('likes.min');\n\t\t\tctx.drawImage(img, w / 2, h / 2);\n\t\t}\n\t\timg.src = \"assets/img/likes/likes.min.svg\";\n\t\t// img.src = \"assets/img/mck.png\";\n\t\t// img.src = \"http://upload.wikimedia.org/wikipedia/commons/d/d2/Svg_example_square.svg\";\n\t\ttrace(img.src);\n\t}\n}\n\n\n","package art;\n\nimport cc.*;\n// // import cc.tool.Export;\nimport Sketch;\n\nusing StringTools;\n\n/**\n * short description what this does\n */\nclass CC052a extends CCBase implements ICCBase {\n\t// store stuff here\n\tvar shapeArray:Array<InstaLikes> = [];\n\tvar grid:GridUtil = new GridUtil();\n\tvar max = 100;\n\t// sizes\n\tvar _radius = 150;\n\tvar _cellsize = 150;\n\t// colors\n\tvar _color0:RGB = null;\n\tvar _color1:RGB = null;\n\tvar _color2:RGB = null;\n\tvar _color3:RGB = null;\n\tvar _color4:RGB = null;\n\t// settings\n\tvar panel1:QuickSettings;\n\t// svg\n\tvar svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 81 71\"><path d=\"M70.6.31H10.78C5.06.31.38 4.99.38 10.71v33.53c0 5.72 4.68 10.4 10.4 10.4H21.3c1.08 0 2.11.43 2.88 1.19l13.6 13.6a4.062 4.062 0 0 0 5.75 0l13.6-13.6a4.08 4.08 0 0 1 2.88-1.19H70.6c5.72 0 10.4-4.68 10.4-10.4V10.71C81 4.99 76.32.31 70.6.31z\" fill=\"#f4555a\"/><path d=\"M43.5 22.04c0-4.03-3.26-7.29-7.29-7.29-3.39 0-6.23 2.31-7.05 5.44a7.288 7.288 0 0 0-7.05-5.44c-4.03 0-7.29 3.26-7.29 7.29 0 1.98.79 3.77 2.07 5.09l.03.03.06.06 11.66 11.66 12.29-11.31a7.178 7.178 0 0 0 2.57-5.53z\" fill=\"#fff\"/></svg>';\n\tvar svgImage:Image;\n\t// image for some reason looses its size\n\tvar svgWidth = 81;\n\tvar svgHeight = 71;\n\tvar isSvgReady = false;\n\t// make sure font is loaded\n\tvar isFontReady = false; // doesn't work offline...\n\t// pos\n\tvar padding = 5;\n\tvar yoffset = 50;\n\n\t// export video\n\t// var export:Export;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\t// setup Sketch\n\t\tvar option = new SketchOption();\n\t\toption.width = 1080; // 1080\n\t\t// option.height = 1000;\n\t\toption.autostart = true;\n\t\toption.padding = 10;\n\t\toption.scale = true;\n\t\tctx = Sketch.create(\"creative_code_mck\", option);\n\n\t\tdescription = 'Get a lot of likes animation';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\n\t\t// <link href=\"https://fonts.googleapis.com/css?family=Oswald:200,300,400,500,600,700\" rel=\"stylesheet\">\n\t\t// Text.embedGoogleFont('Roboto:300', onEmbedHandler);\n\n\t\tsuper(ctx);\n\n\t\tinitSVG();\n\t}\n\n\tfunction initSVG() {\n\t\t// create the image used\n\t\tsvgImage = new Image();\n\t\tsvgImage.onload = function() {\n\t\t\ttrace('base64 square');\n\t\t\ttrace('w: ' + svgImage.width);\n\t\t\ttrace('h: ' + svgImage.height);\n\n\t\t\tisSvgReady = true;\n\t\t\t// svgImage.width = 81;\n\t\t\t// svgImage.height  = 71;\n\t\t\t// ctx.drawImage(img, w/2, h/2,81,71);\n\t\t\tdrawShape();\n\t\t}\n\n\t\t// get svg data (from the dom)\n\t\t// var xml = new XMLSerializer().serializeToString(svg);\n\n\t\t// make it base64\n\t\tvar svg64 = window.btoa(svg);\n\t\tvar b64Start = 'data:image/svg+xml;base64,';\n\n\t\t// prepend a \"header\"\n\t\tvar image64 = b64Start + svg64;\n\n\t\t// set it as the source of the img element\n\t\tsvgImage.src = image64;\n\n\t\t// draw the image onto the canvas\n\t\t// ctx.drawImage(img, 10, 10);\n\t}\n\n\tfunction onEmbedHandler(e) {\n\t\ttrace('onEmbedHandler: \"${e}\"');\n\t\tisFontReady = true;\n\t\tdrawShape();\n\t}\n\n\tfunction createLike(i:Int, ?point:Point):InstaLikes {\n\t\tvar sh:InstaLikes = {\n\t\t\t_id: '$i',\n\t\t\tx: w / 2,\n\t\t\ty: h / 2,\n\t\t\t// x: random(w) - (svgWidth / 2),\n\t\t\t// y: h + yoffset - (svgHeight / 2),\n\t\t\twidth: svgWidth,\n\t\t\theight: svgHeight,\n\t\t\tcount: i,\n\t\t\tpercentage: 0,\n\t\t\tradius: random(20, 50),\n\t\t\tspeed: random(-3, 3),\n\t\t\talpha: 2,\n\t\t\tangle: random(360),\n\t\t}\n\t\tonAnimateHandler(sh);\n\t\treturn sh;\n\t}\n\n\tfunction resetInstaLike(sh:InstaLikes) {\n\t\tsh.x = random(w);\n\t\tsh.y = h + yoffset;\n\t\tsh.alpha = 2; // little hacky, because normally alpha is from 0 to 1\n\t}\n\n\tfunction onAnimateHandler(sh:InstaLikes) {\n\t\tresetInstaLike(sh);\n\t\tGo.to(sh, random(3, 8)).delay(random(0.1, 7)).x(sh.x).y(random(h / 2, 0)).prop('alpha', 0).ease(Sine.easeOut).onComplete(onAnimateHandler, [sh]);\n\t}\n\n\tfunction drawShape() {\n\t\tif (!isSvgReady)\n\t\t\treturn;\n\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\tctx.save();\n\t\t\tctx.globalAlpha = sh.alpha;\n\n\t\t\tsh.angle += sh.speed;\n\t\t\t// plot the balls x to cos and y to sin\n\t\t\tvar xpos = sh.x + Math.cos(radians(sh.angle)) * sh.radius;\n\t\t\tvar ypos = sh.y + Math.sin(radians(sh.angle)) * sh.radius;\n\n\t\t\t// trace('x: ${sh.x}, y: ${sh.y}, angle: ${sh.angle}, radius: ${sh.radius}' );\n\t\t\tctx.drawImage(svgImage, xpos, ypos, sh.width, sh.height);\n\t\t\t// ctx.drawImage(svgImage, sh.x , sh.y, sh.width, sh.height);\n\t\t\tctx.fillColourRGB(WHITE);\n\t\t\tText.create(ctx, Std.string(sh.count + 1))\n\t\t\t\t.centerAlign()\n\t\t\t\t.pos(xpos + (sh.width / 2) + 20, ypos + (sh.height / 2))\n\t\t\t\t.size(20)\n\t\t\t\t.draw();\n\n\t\t\tctx.globalAlpha = 1;\n\t\t\tctx.restore();\n\t\t}\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\tvar colorArray = ColorUtil.niceColor100SortedString[randomInt(ColorUtil.niceColor100SortedString.length - 1)];\n\t\t_color0 = hex2RGB(colorArray[0]);\n\t\t_color1 = hex2RGB(colorArray[1]);\n\t\t_color2 = hex2RGB(colorArray[2]);\n\t\t_color3 = hex2RGB(colorArray[3]);\n\t\t_color4 = hex2RGB(colorArray[4]);\n\n\t\t// isDebug = true;\n\n\t\t// grid.setDimension(w*2.1, h*2.1);\n\t\t// grid.setNumbered(3,3);\n\t\t// grid.setCellSize(svgWidth+padding, svgHeight+padding);\n\t\t// grid.setIsCenterPoint(true);\n\n\t\tshapeArray = [];\n\t\tfor (i in 0...max) {\n\t\t\tshapeArray.push(createLike(i, grid.array[i]));\n\t\t}\n\n\t\t// // settings export\n\t\t// export = new Export(ctx);\n\t\t// export.time(30);\n\t\t// export.name('${toString()}');\n\t\t// export.folder('${toString()}');\n\t\t// export.debug(isDebug);\n\t\t// export.clear(true);\n\t\t// export.start();\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\t// stop();\n\t}\n\n\t/**\n\t * just keep this here for reference\n\t */\n\tfunction didnotwork() {\n\t\tvar img = new Image();\n\t\timg.onload = function() {\n\t\t\ttrace('green square');\n\t\t\tctx.drawImage(img, w / 2, h / 2);\n\t\t}\n\t\t// img.src = \"assets/img/likes/likes.svg\";\n\t\t// img.src = \"assets/img/mck.png\";\n\t\timg.src = \"http://upload.wikimedia.org/wikipedia/commons/d/d2/Svg_example_square.svg\";\n\t\ttrace(img.src);\n\n\t\tvar img = new Image();\n\t\timg.onload = function() {\n\t\t\ttrace('png');\n\t\t\tctx.drawImage(img, w / 2, h / 2);\n\t\t}\n\t\t// img.src = \"assets/img/likes/likes.svg\";\n\t\timg.src = \"assets/img/mck.png\";\n\t\t// img.src = \"http://upload.wikimedia.org/wikipedia/commons/d/d2/Svg_example_square.svg\";\n\t\ttrace(img.src);\n\n\t\tvar img = new Image();\n\t\timg.onload = function() {\n\t\t\ttrace('likes');\n\t\t\tctx.drawImage(img, w / 2, h / 2);\n\t\t}\n\t\timg.src = \"assets/img/likes/likes.svg\";\n\t\t// img.src = \"assets/img/mck.png\";\n\t\t// img.src = \"http://upload.wikimedia.org/wikipedia/commons/d/d2/Svg_example_square.svg\";\n\t\ttrace(img.src);\n\n\t\tvar img = new Image();\n\t\timg.onload = function() {\n\t\t\ttrace('likes.min');\n\t\t\tctx.drawImage(img, w / 2, h / 2);\n\t\t}\n\t\timg.src = \"assets/img/likes/likes.min.svg\";\n\t\t// img.src = \"assets/img/mck.png\";\n\t\t// img.src = \"http://upload.wikimedia.org/wikipedia/commons/d/d2/Svg_example_square.svg\";\n\t\ttrace(img.src);\n\t}\n\n\toverride function toString():String {\n\t\treturn 'cc052a';\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC053 extends CCBase implements ICCBase {\n\tvar _isEmbedded = false;\n\tvar panel1:QuickSettings;\n\tvar defaultText = \"Hier moet iets staan dat de moeite waard is\";\n\tvar _text:String;\n\tvar _radius:Int = 180;\n\tvar _angle:Float = 10;\n\tvar _startAngle:Int = -90;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\t// setup Sketch\n\t\tvar option = new SketchOption();\n\t\toption.width = 1080; // 1080\n\t\t// option.height = 1000;\n\t\toption.autostart = true;\n\t\toption.padding = 10;\n\t\toption.scale = true;\n\t\tctx = Sketch.create(\"creative_code_mck\", option);\n\n\t\tdescription = 'Show a large text in a spiral';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\n\t\t_text = defaultText;\n\n\t\tText.embedGoogleFont('PT+Mono', onEmbedHandler);\n\t\tcreateQuickSettings();\n\t\tsuper(ctx);\n\n\t\t// https://www.mathsisfun.com/algebra/trig-solving-sss-triangles.html\n\t\tvar a = 8;\n\t\tvar b = 6;\n\t\tvar c = 7;\n\t\tvar cosa = (Math.pow(b, 2) + Math.pow(c, 2) - Math.pow(a, 2)) / (2 * b * c);\n\t\ttrace(cosa);\n\t\ttrace((Math.acos(cosa)));\n\t\ttrace(degrees(Math.acos(cosa)));\n\t\t// trace((Math.cos(degrees(cosa))));\n\t\t// trace((Math.cos(radians(cosa))));\n\t\t// trace(radians(Math.cos(cosa)));\n\t\t// trace(degrees(Math.cos(cosa)));\n\t}\n\n\tfunction createQuickSettings() {\n\t\t// demo/basic example\n\t\tpanel1 = QuickSettings.create(10, 10, \"Test rotation\")\n\t\t\t.setGlobalChangeHandler(untyped drawShape)\n\t\t\t.addTextArea('Reason', 'Test this text in circle thing', null)\n\t\t\t.addTextArea('Quote', defaultText, function(value) setText(value))\n\t\t\t.addRange('radius', 200, 500, 180, 1, function(value) setRadius(value))\n\t\t\t.addRange('start angle', 0, 360, 180, 1, function(value) setStartAngle(value))\n\t\t\t.addDropDown('text', ['one', 'two'], function(value) dropdown(\"DropDown\", value))\n\t\t\t.addButton('default', function(e) setText(defaultText))\n\t\t\t.saveInLocalStorage('store-data-${toString()}');\n\t}\n\n\tfunction dropdown(value:String, index:Dynamic) {\n\t\tvar sub = lyrics.split('').length;\n\t\tthis._text = lyrics.substring(0, Math.round(sub / 6));\n\t}\n\n\tfunction setText(str:String):Void {\n\t\tthis._text = str;\n\t}\n\n\tfunction setRadius(px:Int):Void {\n\t\tthis._radius = px;\n\t}\n\n\tfunction setStartAngle(degree:Int):Void {\n\t\tthis._startAngle = degree;\n\t}\n\n\tfunction setAngle(angle:Float):Void {\n\t\tthis._angle = angle;\n\t}\n\n\tfunction onEmbedHandler(e) {\n\t\ttrace('onEmbedHandler: \"${e}\"');\n\t\tthis._isEmbedded = true;\n\t\tdrawShape();\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\tif (!_isEmbedded)\n\t\t\treturn;\n\n\t\tvar xoffset = 7;\n\t\tText.create(ctx, preformer)\n\t\t\t.color(PINK)\n\t\t\t.font(\"PT Mono\")\n\t\t\t.size(30)\n\t\t\t.leftAlign()\n\t\t\t.pos(w2 - xoffset, h2 - _radius - 60)\n\t\t\t.draw();\n\t\tText.create(ctx, song)\n\t\t\t.font(\"PT Mono\")\n\t\t\t.color(PINK)\n\t\t\t.leftAlign()\n\t\t\t.size(25)\n\t\t\t.pos(w2 - xoffset, h2 - _radius - 30)\n\t\t\t.draw();\n\n\t\tvar centerX = w2;\n\t\tvar centerY = h2;\n\t\t// var angle = Math.PI * 0.8; // radians\n\t\t// var radius = 180;\n\t\tctx.fillColourRGB(BLACK);\n\n\t\t// important to have a example text in the canvas, otherwise the measurement don't work\n\t\t// important to have the font loaded\n\t\t// ctx.fillStyle = getColourObj(PINK);\n\t\t// Text.fillText(ctx, _text, w2, h2, \"PT Mono\", 20);\n\n\t\t// use and create with the correct fonr\n\t\tctx.fillColourRGB(BLACK);\n\t\tctx.textAlign = \"center\";\n\t\tctx.textBaseline = \"bottom\";\n\t\tctx.font = '20px PT Mono';\n\t\tTextUtil.drawTextAlongArc4(ctx, _text, centerX, centerY, this._radius, this._startAngle);\n\n\t\t// ctx.strokeColourRGB(GRAY);\n\t\t// ctx.circleStroke(centerX, centerY, this._radius);\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\tisDebug = true;\n\t}\n\n\toverride function draw() {\n\t\ttrace('draw: ${toString()}');\n\t\tdrawShape();\n\t\tstop();\n\t}\n\n\tvar song = \"Rapper's Delight\";\n\tvar preformer = \"The Sugarhill Gang\";\n\tvar lyrics = \"I said a hip hop\nHippie to the hippie\nThe hip, hip a hop, and you don't stop, a rock it out\nBubba to the bang bang boogie, boobie to the boogie\nTo the rhythm of the boogie the beat\nNow, what you hear is not a test I'm rappin' to the beat\nAnd me, the groove, and my friends are gonna try to move your feet\nSee, I am Wonder Mike, and I'd like to say hello\nTo the black, to the white, the red and the brown\nThe purple and yellow, but first, I gotta\nBang bang, the boogie to the boogie\nSay up jump the boogie to the bang bang boogie\nLet's rock, you don't stop\nRock the rhythm that'll make your body rock\nWell so far you've heard my voice but I brought two friends along\nAnd the next on the mic is my man Hank\nC'mon, Hank, sing that song, check it out\nWell, I'm Imp the Dimp, the ladies' pimp\nThe women fight for my delight\nBut I'm the grandmaster with the three MCs\nThat shock the house for the young ladies\nAnd when you come inside, into the front\nYou do the Freak, Spank, and do the Bump\nAnd when the sucker MC's try to prove a point\nWe're Treacherous Trio, we're the serious joint\nA from sun to sun and day to day\nI sit down and write a brand new rhyme\nBecause they say that miracles never cease\nI've created a devastating masterpiece\nI'm gonna rock the mic 'til you can't resist\nEverybody, I say it goes like this\nWell, I was coming home late one dark afternoon\nA reporter stopped me for an interview\nShe said she's heard stories and she's heard fables\nThat I'm vicious on the mic and the turntable\nThis young reporter I did adore\nSo I rocked some vicious rhymes like I never did before\nShe said, \\\"damn, fly guy, I'm in love with you\nThe Casanova legend must have been true\\\"\nI said, \\\"by the way, baby, what's your name?\\\"\nSaid, \\\"I go by name of Lois Lane\\\"\n\\\"And you could be my boyfriend, you surely can\nJust let me quit my boyfriend called Superman\\\"\nI said, \\\"he's a fairy, I do suppose\nFlyin' through the air in pantyhose\nHe may be very sexy, or even cute\nBut he looks like a sucker in a blue and red suit\\\"\nI said, \\\"you need a man man who's got finesse\nAnd his whole name across his chest\nHe may be able to fly all through the night\nBut can he rock a party 'til the early light?\nHe can't satisfy you with his little worm\nBut I can bust you out with my super sperm!\\\"\nI go do it, I go do it, I go do it, do it, do it\nAn' I'm here an' I'm there, I'm Big Ban Hank, I'm everywhere\nJust throw your hands up in the air\nAnd party hardy like you just don't care\nLet's do it, don't stop, y'all, a tick tock, y'all, you don't stop!\nGo ho-tel, mo-tel, whatcha gonna do today? (say what?)\nI'm gonna get a fly girl, gonna get some spank, drive off in a def OJ\nEverybody go, \\\"ho-tel, mo-tel, Holiday Inn\\\"\nYou say if your girl starts actin' up, then you take her friend\nI say skip, dive, what can I say?\nI can't fit 'em all inside my OJ\nSo I just take half, and bust 'em out\nI give the rest to Master Gee so he can shock the house\nI said M-A-S, T-E-R, a G with a double E\nI said I go by the unforgettable name\nOf the man they call the Master Gee\nWell, my name is known all over the world\nBy all the foxy ladies and the pretty girls\nI'm goin' down in history\nAs the baddest rapper there ever could be\nNow I'm feelin' the highs and you're feelin' the lows\nThe beat starts gettin' into your toes\nYou start poppin' your fingers and stompin' your feet\nAnd movin' your body while while you're sitting in your seat\nAnd then damn! Ya start doin' the freak, I said\nDamn! Right outta your seat\nThen you throw your hands high in the air\nYa rockin' to the rhythm, shake your derriere\nYa rockin' to the beat without a care\nWith the sureshot MCs for the affair\nNow, I'm not as tall as the rest of the gang\nBut I rap to the beat just the same\nI got a little face, and a pair of brown eyes\nAll I'm here to do, ladies, is hypnotize\nSingin' on'n'n'on'n'on on'n'on\nThe beat don't stop until the break of dawn\nSingin' on'n'n'on'n'on on'n'on\nLike a hot buttered pop da pop da pop dibbie dibbie\nPop da pop pop, don't you dare stop\nCome alive y'all, gimme whatcha got\nI guess by now you can take a hunch\nAnd find that I am the baby of the bunch\nBut that's okay, I still keep in stride\n'Cause all I'm here to do is just wiggle your behind\nSingin' on'n'n'on'n'on on'n'on\nThe beat don't stop until the break of dawn\nSingin' on'n'n'on'n'on on'n'on\nRock rock, y'all, throw it on the floor\nI'm gonna freak you here, I'm gona freak you there\nI'm gonna move you outta this atmosphere\n'Cause I'm one of a kind and I'll shock your mind\nI'll put TNT in your behind. I said\nOne, two, three, four, come on, girls, get on the floor\nA-come alive, y'all, a-gimme whatcha got\n'Cause I'm guaranteed to make you rock\nI said one, two, three, four, tell me, Wonder Mike\nWhat are you waiting for?\nI said a hip hop\nThe hippie to the hippie\nThe hip hip a hop, and you don't stop, a rock it\nTo the bang bang boogie, say up jump the boogie\nTo the rhythm of the boogie, the beat\nA skiddleebebop, we rock, scooby doo\nAnd guess what, America, we love you\n'Cause you rocked and a rolled with so much soul\nYou could rock 'til a hundred and one years old\nI don't mean to brag, I don't mean to boast\nBut we like hot butter on our breakfast toast\nRock it up, Baby Bubba!\nBaby Bubba to the boogie da bang bang da boogie\nTo the beat, beat, it's unique\nCome on everybody and dance to the beat!\nHave you ever went over a friends house to eat\nAnd the food just ain't no good?\nI mean the macaroni's soggy, the peas are mushed\nAnd the chicken tastes like wood\nSo you try to play it off like you think you can\nBy saying that you're full\nAnd then your friend says, \\\"mama, he's just being polite\nHe ain't finished, uh-uh, that's bull!\\\"\nSo your heart starts pumpin' and you think of a lie\nAnd you say that you already ate\nAnd your friend says \\\"man, there's plenty of food\\\"\nSo you pile some more on your plate\nWhile the stinky food's steamin', your mind starts to dreamin'\nOf the moment that it's time to leave\nAnd then you look at your plate and your chicken's slowly rottin'\nInto something that looks like cheese\nOh so you say \\\"that's it, I gotta leave this place\nI don't care what these people think\nI'm just sittin' here makin' myself nauseous\nWith this ugly food that stinks\\\"\nSo you bust out the door while it's still closed\nStill sick from the food you ate\nAnd then you run to the store for quick relief\nFrom a bottle of Kaopectate\nAnd then you call your friend two weeks later\nTo see how he has been\nAnd he says, \\\"I understand about the food\nBaby Bubba, but we're still friends\\\"\nWith a hip hop the hippie to the hippie\nThe hip hip a hop, a you don't stop the rockin'\nTo the bang bang boogie\nSay up jump the boogie to the rhythm of the boogie the beat\";\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC054 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Circle> = [];\n\tvar grid:GridUtil = new GridUtil();\n\t// sizes\n\tvar _radius = 150;\n\tvar _cellsize = 150;\n\t// colors\n\tvar _color0:RGB = null;\n\tvar _color1:RGB = null;\n\tvar _color2:RGB = null;\n\tvar _color3:RGB = null;\n\tvar _color4:RGB = null;\n\tvar panel1:QuickSettings;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = '';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\n\t\t// <link href=\"https://fonts.googleapis.com/css?family=Oswald:200,300,400,500,600,700\" rel=\"stylesheet\">\n\t\tText.embedGoogleFont('Oswald:200,300,400,500,600,700', onEmbedHandler);\n\n\t\tsuper(ctx);\n\t}\n\n\tfunction onEmbedHandler(e) {\n\t\ttrace('onEmbedHandler: \"${e}\"');\n\t\tdrawShape();\n\t}\n\n\tfunction createQuickSettings() {\n\t\t// demo/basic example\n\t\tpanel1 = QuickSettings.create(10, 10, \"Quote generator\").setGlobalChangeHandler(untyped drawShape)\n\t\t\t.addHTML(\"Reason\", \"Sometimes I need a quick quote, to post on Instagram\").addTextArea('Quote', 'text', function(value) trace(value))\n\n\t\t\t.addBoolean('All Caps', false, function(value) trace(value)).saveInLocalStorage('store-data-${toString()}');\n\t}\n\n\tfunction createShape(i:Int, ?point:Point) {\n\t\tvar shape:Circle = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'circle',\n\t\t\tx: point.x,\n\t\t\ty: point.y,\n\t\t\tradius: _radius,\n\t\t}\n\t\tonAnimateHandler(shape);\n\t\treturn shape;\n\t}\n\n\tfunction onAnimateHandler(circle:Circle) {\n\t\t// Go.to(circle, 5).x(w/2).y(h/2).ease(Sine.easeInOut).onComplete(onAnimateHandler, [circle]);\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\tcreateEye();\n\t}\n\n\tfunction createEye() {\n\t\tvar colorArr = [GREEN, PINK, BLUE, AQUA, TEAL, OLIVE];\n\n\t\tvar outerR = 120;\n\t\tvar innerR = 50;\n\t\t// outline\n\t\tcc.draw.Circle.create(ctx)\n\t\t\t.pos(w2 + random(-3, 3), h2 + random(-3, 3))\n\t\t\t.fill(BLACK)\n\t\t\t.radius(outerR + 10)\n\t\t\t.draw();\n\n\t\t// eye color\n\t\tcc.draw.Circle.create(ctx)\n\t\t\t.pos(w2, h2)\n\t\t\t.fill(colorArr[randomInt(colorArr.length - 1)])\n\t\t\t.radius(outerR)\n\t\t\t.draw();\n\n\t\t// pattern\n\t\tctx.strokeColourRGB(WHITE, 0.1);\n\t\tfor (i in 0...1000) {\n\t\t\tvar point = MathUtil.orbit(w2, h2, random(360), random(innerR, outerR - 5));\n\t\t\tctx.line(w2, h2, point.x, point.y);\n\t\t}\n\t\t// inner black eye..\n\t\tcc.draw.Circle.create(ctx).pos(w2, h2).fill(BLACK).radius(innerR).draw();\n\t\t// high light\n\t\tvar xpos = w2 - innerR + 10;\n\t\tvar ypos = h2 - innerR + 20;\n\t\tcc.draw.Circle.create(ctx) // .pos(w2 + random(-innerR, innerR), h2 + random(-innerR, innerR))\n\t\t\t.color(WHITE).pos(xpos, ypos).radius(20).alpha(0.7).draw();\n\t\t// random blink\n\t\tvar out = outerR - 50;\n\t\tcc.draw.Circle.create(ctx)\n\t\t\t.pos(w2 + random(-out, out), h2 + random(-out, out))\n\t\t\t.color(WHITE)\n\t\t\t.radius(10)\n\t\t\t.alpha(0.7)\n\t\t\t.draw();\n\n\t\t// // try gradient circle\n\t\t// var circle = cc.draw.Circle.create(ctx).radius(20).pos(55,55).radius(20);\n\t\t// var grad = cc.draw.Gradient.create(ctx).circle(circle).draw();\n\t\t// circle.gradient(grad.get).draw();\n\n\t\t// trace(circle.toString());\n\t\t// trace(grad.toString());\n\n\t\t// ctx.fillStyle = grad.get;\n\t\t// ctx.fillRect(grad.xpos, grad.ypos, grad.width, grad.height);\n\n\t\t// trace('gradient.xpos: ${grad.xpos} , gradient.ypos: ${grad.ypos}');\n\t\t// trace('gradient.width: ${grad.width}  , gradient.height: ${grad.height}');\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\tvar colorArray = ColorUtil.niceColor100SortedString[randomInt(ColorUtil.niceColor100SortedString.length - 1)];\n\t\t_color0 = hex2RGB(colorArray[0]);\n\t\t_color1 = hex2RGB(colorArray[1]);\n\t\t_color2 = hex2RGB(colorArray[2]);\n\t\t_color3 = hex2RGB(colorArray[3]);\n\t\t_color4 = hex2RGB(colorArray[4]);\n\n\t\tisDebug = true;\n\n\t\t// grid.setDimension(w*2.1, h*2.1);\n\t\t// grid.setNumbered(3,3);\n\t\tgrid.setCellSize(_cellsize);\n\t\tgrid.setIsCenterPoint(true);\n\n\t\tshapeArray = [];\n\t\tfor (i in 0...grid.array.length) {\n\t\t\tshapeArray.push(createShape(i, grid.array[i]));\n\t\t}\n\t}\n\n\toverride function draw() {\n\t\ttrace('draw: ${toString()}');\n\t\tdrawShape();\n\t\tstop();\n\t}\n}\n","package art;\n\n// import cc.tool.Export;\n\n/**\n * short description what this does\n */\nclass CC054a extends CCBase implements ICCBase {\n\tvar shapeArray:Array<EyeObj> = [];\n\tvar grid:GridUtil = new GridUtil();\n\t// sizes\n\tvar _radius = 150;\n\tvar _cellsize = 150;\n\tvar colorArr = [GREEN, PINK, BLUE, AQUA, TEAL, OLIVE, PURPLE, MAROON, GRAY];\n\tvar outerR = 0.0;\n\tvar cell = 0.0;\n\tvar innerR = 50.0;\n\tvar maxDistance = 200;\n\n\t// export to node server\n\t// var export:Export;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Eyes following mouse by looking at it';\n\t\ttype = [CCType.ANIMATION, CCType.INTERACTIVE, CCType.IMAGE];\n\n\t\t// setup Sketch\n\t\tvar option = new Sketch.SketchOption();\n\t\toption.width = 1080; // 1080\n\t\t// option.height = 1000;\n\t\toption.autostart = true;\n\t\toption.padding = 10;\n\t\toption.scale = true;\n\t\tctx = Sketch.create(\"creative_code_mck\", option);\n\n\t\tsuper(ctx);\n\n\t\t// trace((colorArr));\n\t\tvar shuffle = MathUtil.shuffle(colorArr);\n\t\t// trace(shuffle);\n\t}\n\n\tfunction createShape(i:Int, ?point:Point) {\n\t\tcell = Math.min(grid.cellHeight, grid.cellWidth);\n\t\touterR = Math.round(cell / 2) - 20;\n\t\tvar out = outerR - 50;\n\t\tvar shape:EyeObj = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'EyeObj',\n\t\t\tx: point.x,\n\t\t\ty: point.y,\n\t\t\toutline: {x: point.x + random(-3, 3), y: point.y + random(-3, 3)},\n\t\t\thighlight: {x: point.x + (innerR - (innerR / 2)), y: point.y + (innerR - (innerR / 2))},\n\t\t\trandomHightlight: {x: point.x + random(-out, out), y: point.y + random(-out, out)},\n\t\t\trgb: colorArr[i],\n\t\t}\n\n\t\treturn shape;\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tcreateEye(i, shapeArray[i]);\n\t\t}\n\t}\n\n\tfunction createEye(i:Int, eye:EyeObj) {\n\t\t// outline\n\t\tcc.draw.Circle.create(ctx)\n\t\t\t.pos(eye.outline.x, eye.outline.y)\n\t\t\t.fill(BLACK)\n\t\t\t.radius(Math.round(outerR + 10))\n\t\t\t.draw();\n\n\t\t// eye color\n\t\tcc.draw.Circle.create(ctx)\n\t\t\t.pos(eye.x, eye.y)\n\t\t\t.fill(eye.rgb)\n\t\t\t.radius(Math.round(outerR))\n\t\t\t.draw();\n\n\t\t// ____________________________________ set mask ____________________________________\n\n\t\t// Save the state, so we can undo the clipping\n\t\tctx.save();\n\t\t// eye color\n\t\tcc.draw.Circle.create(ctx)\n\t\t\t.pos(eye.x, eye.y)\n\t\t\t.fill(eye.rgb)\n\t\t\t.radius(Math.round(outerR))\n\t\t\t.draw();\n\n\t\t// Clip to the current path\n\t\tctx.clip();\n\n\t\tvar currentDistance = distance(mouseX, mouseY, eye.x, eye.y);\n\t\t// trace('-----\\n ${line} / ${b2} -- ${currentDistance}');\n\t\tif (currentDistance < maxDistance) {\n\t\t\t// console.log('minRadius: $minRadius');\n\t\t\t// console.log('maxRadius: $maxRadius');\n\t\t\t// console.log('(maxRadius / minRadius): ($maxRadius / $minRadius) -> ${(maxRadius / minRadius)}');\n\t\t\t// console.log('(maxDistance / currentDistance): ($maxDistance / $currentDistance) -> ${(maxDistance / currentDistance)}');\n\n\t\t\t// b2.radius = maxRadius - ((currentDistance / maxDistance) * (maxRadius - minRadius));\n\t\t} else {\n\t\t\t// b2.radius = minRadius;\n\t\t}\n\n\t\t// this is going to move\n\t\t// trace('${Sketch.Global.mouseX}');\n\t\t// trace(MathUtil.pythagoreanTheorem(Sketch.Global.mouseX - eye.x, Sketch.Global.mouseY));\n\n\t\t// var dirX = eye.x - (innerR / 2);\n\t\t// var dirY = eye.y - (innerR / 2);\n\t\tvar dirX = eye.x + ((mouseX - eye.x) * 0.2);\n\t\tvar dirY = eye.y + ((mouseY - eye.y) * 0.2);\n\t\t// pattern\n\t\tctx.strokeColourRGB(WHITE, 0.1);\n\t\tfor (i in 0...1000) {\n\t\t\tvar point = MathUtil.orbit(dirX, dirY, random(360), random(innerR, outerR - 5));\n\t\t\tctx.line(dirX, dirY, point.x, point.y);\n\t\t}\n\t\t// inner black eye..\n\t\tcc.draw.Circle.create(ctx)\n\t\t\t.pos(dirX, dirY)\n\t\t\t.fill(BLACK)\n\t\t\t.radius(Math.round(innerR))\n\t\t\t.draw();\n\n\t\t// Undo the clipping\n\t\tctx.restore();\n\n\t\t// ____________________________________ restore to old ____________________________________\n\n\t\t// highlight left top\n\t\t// random blink\n\t\tvar xpos = eye.x - innerR + 10;\n\t\tvar ypos = eye.y - innerR + 20;\n\t\tcc.draw.Circle.create(ctx)\n\t\t\t.color(WHITE)\n\t\t\t.pos(xpos, ypos) // .pos(w2 + random(-innerR, innerR), h2 + random(-innerR, innerR))\n\t\t\t.radius(20)\n\t\t\t.alpha(0.7).draw();\n\n\t\t// highlight random\n\t\tcc.draw.Circle.create(ctx)\n\t\t\t.pos(eye.randomHightlight.x, eye.randomHightlight.y)\n\t\t\t.color(WHITE)\n\t\t\t.radius(10)\n\t\t\t.alpha(0.7)\n\t\t\t.draw();\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\tisDebug = true;\n\n\t\tvar padding = 20;\n\n\t\tgrid.setDimension(w - (padding * 2), h - (padding * 2));\n\t\tgrid.setNumbered(3, 3);\n\t\tgrid.setIsCenterPoint(true);\n\n\t\tshapeArray = [];\n\t\tfor (i in 0...grid.array.length) {\n\t\t\tshapeArray.push(createShape(i, grid.array[i]));\n\t\t}\n\n\t\t// setup export settings\n\t\t// export = new Export(ctx); // bind context\n\t\t// export.time(10, 2); // 60 seconds recording after 2 second delay (optional)\n\t\t// export.name('${toString()}'); // file names start with\n\t\t// export.folder('${toString()}'); // folder name to export in\n\t\t// // export.debug(isDebug);\t\t\t// debug\n\t\t// export.clear(true); // empty folder when start/restart recording\n\n\t\t// // start recording\n\t\t// export.start();\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\t// stop();\n\t}\n\n\toverride function toString() {\n\t\treturn 'cc054a';\n\t}\n}\n\n/**\n * need this if we need to animate\n */\ntypedef EyeObj = {\n\t> Base,\n\t> Position,\n\t> Appearance,\n\tvar outline:Point;\n\tvar highlight:Point;\n\tvar randomHightlight:Point;\n\t// var color:RGB;\n};\n","package art;\n\nimport cc.draw.Spritesheet;\n\n/**\n * short description what this does\n */\nclass CC055 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Circle> = [];\n\tvar grid:GridUtil = new GridUtil();\n\t// sizes\n\tvar _cellsize = 100;\n\t// colors\n\tvar _color0:RGB = null;\n\tvar _color1:RGB = null;\n\tvar _color2:RGB = null;\n\tvar _color3:RGB = null;\n\tvar _color4:RGB = null;\n\tvar panel1:QuickSettings;\n\tvar isFontLoaded:Bool = false;\n\tvar isImageLoaded:Bool = false;\n\tvar spritesheet:Spritesheet; // hmm doesn't work like expected\n\tvar src = '/assets/img/spritesheet/web_heart_animation_edge.png';\n\tvar _img:Image;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = '';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\n\t\t// setup Sketch\n\t\tvar option = new Sketch.SketchOption();\n\t\toption.width = 1080; // 1080\n\t\t// option.height = 1000;\n\t\toption.autostart = true;\n\t\toption.padding = 10;\n\t\toption.scale = true;\n\t\tctx = Sketch.create(\"creative_code_mck\", option);\n\n\t\tinit();\n\n\t\tsuper(ctx);\n\t}\n\n\t/**\n\t *\n\t * like image from twitter\n\t * https://abs.twimg.com/a/1552443372/img/animations/web_heart_animation_edge.png\n\t *\n\t**/\n\tfunction init() {\n\t\tcreateQuickSettings();\n\t\tSpritesheet.load(src, onSpritesheetComplete);\n\t\tText.embedGoogleFont('Berkshire+Swash', onFontComplete);\n\t}\n\n\tfunction createQuickSettings() {\n\t\t// demo/basic example\n\t\tpanel1 = QuickSettings.create(10, 10, \"Zip exporter\")\n\t\t\t.setGlobalChangeHandler(untyped drawShape)\n\t\t\t.addRange('delay', 0.0, 5.0, 2.0, 0.5, function(e) setDelay(e))\n\t\t\t.addRange('record', 0.0, 30.0, 2.0, 0.5, function(e) setRecord(e))\n\n\t\t\t.addButton('init recording', function(e) onClickHandler(e))\n\t\t\t.addButton('start recording', function(e) onClickHandler(e))\n\t\t\t.addButton('stop recording', function(e) onClickHandler(e))\n\n\t\t\t.saveInLocalStorage('store-data-${toString()}');\n\t}\n\n\tfunction setDelay(e) {\n\t\ttrace(e);\n\t}\n\n\tfunction setRecord(e) {\n\t\ttrace(e);\n\t}\n\n\tfunction onClickHandler(e:js.html.MouseEvent) {\n\t\tvar input:js.html.InputElement = cast(e);\n\n\t\tswitch (input.value) {\n\t\t\tcase 'init recording':\n\t\t\t\ttrace('init recording');\n\t\t\tcase 'start recording':\n\t\t\t\ttrace('start recording');\n\t\t\tcase 'stop recording':\n\t\t\t\ttrace('stop recording');\n\t\t\tdefault:\n\t\t\t\ttrace(\"case '\" + input.value + \"': trace ('\" + input.value + \"');\");\n\t\t}\n\t}\n\n\tfunction onSpritesheetComplete(img:Image) {\n\t\tthis._img = img;\n\t\tisImageLoaded = true;\n\t\tdrawShape();\n\n\t\thaxe.Timer.delay(function() {\n\t\t\tdelayCallHandler();\n\t\t}, 2000);\n\t}\n\n\tfunction delayCallHandler() {\n\t\tfor (i in 0...10) {\n\t\t\tSpritesheet.create(ctx, _img)\n\t\t\t\t.cell(100, 100)\n\t\t\t\t.pos(i * 110, 0)\n\t\t\t\t.animate()\n\t\t\t\t.delay(60 * i)\n\t\t\t\t.draw();\n\t\t}\n\n\t\tvar _scale = 4;\n\t\tSpritesheet.create(ctx, _img)\n\t\t\t.debug(isDebug)\n\t\t\t.fps(5)\n\t\t\t.cell(100, 100)\n\t\t\t.scale(_scale)\n\t\t\t.pos(w - (100 * _scale), 0)\n\t\t\t.animate()\n\t\t\t.draw();\n\n\t\tSpritesheet.create(ctx, _img)\n\t\t\t.debug(isDebug)\n\t\t\t.fps(15)\n\t\t\t.cell(100, 100)\n\t\t\t.scale(_scale)\n\t\t\t.pos(0, h - (100 * _scale))\n\t\t\t.animate()\n\t\t\t.draw();\n\n\t\tSpritesheet.create(ctx, _img)\n\t\t\t.debug(isDebug)\n\t\t\t.fps(30)\n\t\t\t.cell(100, 100)\n\t\t\t.scale(_scale)\n\t\t\t.center()\n\t\t\t.pos(w3, h3)\n\t\t\t.animate()\n\t\t\t.draw();\n\n\t\tSpritesheet.create(ctx, _img)\n\t\t\t.debug(isDebug)\n\t\t\t.fps(60)\n\t\t\t.cell(100, 100)\n\t\t\t.scale(_scale)\n\t\t\t.center()\n\t\t\t.pos(w3 * 2, h3 * 2)\n\t\t\t.animate()\n\t\t\t.draw();\n\n\t\tctx.strokeWeight(2);\n\t\tctx.strokeColourRGB(_color2);\n\t\tctx.centreStrokeRect(w3 * 2, h3 * 2, 100 * _scale, 100 * _scale);\n\t\tctx.strokeColourRGB(_color3);\n\t\tctx.centreStrokeRect(w3, h3, 100 * _scale, 100 * _scale);\n\t}\n\n\tfunction onFontComplete(e) {\n\t\ttrace('onFontComplete: \"${e}\"');\n\t\tisFontLoaded = true;\n\t\tdrawShape();\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(_color0);\n\n\t\t// if (isDebug) {\n\t\t// \tShapeUtil.gridField(ctx, grid);\n\t\t// }\n\n\t\t// if (isEmbedded) {\n\t\t// \tvar size = 100;\n\t\t// \tText.create(ctx, \"Like me or not,\")\n\t\t// \t\t.color(_color4)\n\t\t// \t\t.font('Berkshire+Swash')\n\t\t// \t\t.centerAlign()\n\t\t// \t\t.size(size)\n\t\t// \t\t.pos(w2, h2)\n\t\t// \t\t.draw();\n\t\t// \tText.create(ctx, \"that is the question!\")\n\t\t// \t\t.color(_color4)\n\t\t// \t\t.font('Berkshire+Swash')\n\t\t// \t\t.centerAlign()\n\t\t// \t\t.size(size)\n\t\t// \t\t.pos(w2, h2 + size)\n\t\t// \t\t.draw();\n\t\t// }\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\tvar colorArray = ColorUtil.niceColor100SortedString[randomInt(ColorUtil.niceColor100SortedString.length - 1)];\n\t\t_color0 = hex2RGB(colorArray[0]);\n\t\t_color1 = hex2RGB(colorArray[1]);\n\t\t_color2 = hex2RGB(colorArray[2]);\n\t\t_color3 = hex2RGB(colorArray[3]);\n\t\t_color4 = hex2RGB(colorArray[4]);\n\n\t\tisDebug = true;\n\n\t\t// grid.setDimension(w*2.1, h*2.1);\n\t\t// grid.setNumbered(3,3);\n\t\tgrid.setCellSize(_cellsize);\n\t\tgrid.setIsCenterPoint(true);\n\n\t\t// shapeArray = [];\n\t\t// for (i in 0...grid.array.length) {\n\t\t// \tshapeArray.push(createShape(i, grid.array[i]));\n\t\t// }\n\t}\n\n\toverride function draw() {\n\t\ttrace('draw: ${toString()}');\n\t\tdrawShape();\n\t\tstop();\n\t}\n}\n","package cc.draw;\n\nimport js.html.CanvasRenderingContext2D;\nimport js.html.*;\nimport js.Browser.document;\nimport js.Browser.window;\nimport js.Browser.*;\n// import cc.Global.*;\nimport cc.util.ColorUtil.RGB;\nimport cc.util.MathUtil.*;\n\nusing cc.CanvasTools;\nusing StringTools;\n\nclass Spritesheet {\n\t// are always set\n\tprivate var _ctx:CanvasRenderingContext2D;\n\n\t// defaults\n\t@:isVar public var _x(get, set):Float = 100;\n\t@:isVar public var _y(get, set):Float = 100;\n\t@:isVar public var _radius(get, set):Float = 100; // ????\n\t@:isVar public var _alpha(get, set):Float = 1; // 0 -> 1\n\t@:isVar public var _rotate(get, set):Int = 0;\n\t@:isVar public var _width(get, set):Int;\n\t@:isVar public var _height(get, set):Int;\n\t@:isVar public var _cellWidth(get, set):Int;\n\t@:isVar public var _cellHeight(get, set):Int;\n\t@:isVar public var _index(get, set):Int = 0;\n\t@:isVar public var _isDebug(get, set):Bool = false;\n\t@:isVar public var _isCentered(get, set):Bool = false;\n\t@:isVar public var _img(get, set):Image;\n\t@:isVar public var _fps(get, set):Int = 60; // default 60 fps\n\t@:isVar public var _scale(get, set):Float = 1;\n\t@:isVar public var _id(get, set):String;\n\n\t// image related stuff\n\t// loading\n\t// var _src:String;\n\t// var isLoaded:Bool = false;\n\t// var isDrawPreviouslyCalled:Bool = false;\n\t// animation\n\tprivate var _isAnimation:Bool = false;\n\tprivate var _isActive:Bool = false; // toggle for window framerate\n\tprivate var _isLoop:Bool = false;\n\tprivate var _loopRepeat:Int;\n\tprivate var _currentSprite:Int = 0;\n\n\t// var _delayCounter:Int = 0;\n\tpublic var _totalFrame:Int;\n\n\tpublic static var _idCounter:Int = -1;\n\n\tpublic var _pulse:Int = null;\n\n\tvar _fpsCounter:Int = 0;\n\tvar _delayCounter:Int = 0;\n\tvar _delay:Int = 0;\n\n\t// ____________________________________ constructor ____________________________________\n\tpublic function new(ctx:CanvasRenderingContext2D, img:Image) {\n\t\tthis._ctx = ctx;\n\t\tthis._img = img;\n\t\tSpritesheet._idCounter++;\n\t\tthis._id = 'spritesheet-${Spritesheet._idCounter}-${Date.now().getTime()}';\n\n\t\tthis._width = _img.width;\n\t\tthis._height = _img.height;\n\t\tthis._totalFrame = Math.round(this._width / this._cellWidth); // TODO fix this for horzontal and vertical total\n\t\tif (this._index > this._totalFrame)\n\t\t\tthis._index = this._totalFrame;\n\t}\n\n\t/**\n\t * var text = Text.create (ctx, 'Matthijs Kamstra aka [mck]').draw();\n\t *\n\t * @param ctx\n\t * @param text\n\t * @return Text\n\t */\n\tstatic inline public function create(ctx:CanvasRenderingContext2D, img:Image):Spritesheet {\n\t\tvar spritesheet = new Spritesheet(ctx, img);\n\t\treturn spritesheet;\n\t}\n\n\t/**\n\t * Load a spritesheet via this class, values need to be fed backt to this class\n\t * nothing clever here, just a helper\n\t *\n\t * @example\n\t *\t\tSpritesheet.load(src, onLoadedComplete);\n\t * \t\tfunction onLoadedComplete(img:Image) {\n\t *\t\t\tthis._img = img;\n\t *\t\t\tisImageLoaded = true;\n\t *\t\t}\n\t *\n\t * @param src \t\t\t\t\tpath to file\n\t * @param onLoadComplete\t\tcomplete handler to catch the image\n\t */\n\tpublic static function load(src:String, onLoadComplete:Image->Void) {\n\t\t// create the image used\n\t\tvar _img = new Image();\n\t\t_img.crossOrigin = \"Anonymous\";\n\t\t_img.src = src;\n\t\t_img.onload = function() {\n\t\t\t// trace('w: ' + _img.width);\n\t\t\t// trace('h: ' + _img.height);\n\t\t\tif (Reflect.isFunction(onLoadComplete))\n\t\t\t\tReflect.callMethod(onLoadComplete, onLoadComplete, [_img]);\n\t\t}\n\t}\n\n\t// ____________________________________ properties ____________________________________\n\n\tinline public function img(img:Image):Spritesheet {\n\t\tthis._img = img;\n\t\treturn this;\n\t}\n\n\tinline public function x(x:Float):Spritesheet {\n\t\tthis._x = x;\n\t\treturn this;\n\t}\n\n\tinline public function y(y:Float):Spritesheet {\n\t\tthis._y = y;\n\t\treturn this;\n\t}\n\n\tinline public function pos(x:Float, y:Float):Spritesheet {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\treturn this;\n\t}\n\n\tinline public function cell(width:Int, height:Int):Spritesheet {\n\t\tthis._cellWidth = width;\n\t\tthis._cellHeight = height;\n\n\t\t// doesn't work, because of delay of loading\n\t\tthis._totalFrame = Math.round(this._width / this._cellWidth); // TODO fix this for horzontal and vertical total\n\t\treturn this;\n\t}\n\n\tinline public function center():Spritesheet {\n\t\tthis._isCentered = true;\n\t\treturn this;\n\t}\n\n\tinline public function scale(scale:Float):Spritesheet {\n\t\tthis._scale = scale;\n\t\treturn this;\n\t}\n\n\t/**\n\t * show image number (zero based)\n\t * @param index \tzero based,\n\t * @return Spritesheet\n\t */\n\tinline public function show(index:Int = 0):Spritesheet {\n\t\tthis._index = index;\n\t\treturn this;\n\t}\n\n\t/**\n\t * show image number (zero based)\n\t * @param index \tzero based,\n\t * @return Spritesheet\n\t */\n\tinline public function index(index:Int = 0):Spritesheet {\n\t\tthis._index = index;\n\t\treturn this;\n\t}\n\n\t// ____________________________________ animation controlers ____________________________________\n\n\tinline public function animate():Spritesheet {\n\t\tthis._isAnimation = true;\n\t\tthis._isActive = true;\n\t\treturn this;\n\t}\n\n\tinline public function loop(?nr:Int = -1):Spritesheet {\n\t\tthis._isLoop = true;\n\t\tthis._loopRepeat = nr;\n\t\treturn this;\n\t}\n\n\tinline public function start():Spritesheet {\n\t\tthis._isActive = true;\n\t\treturn this;\n\t}\n\n\tinline public function stop():Spritesheet {\n\t\tthis._isActive = false;\n\t\treturn this;\n\t}\n\n\tinline public function debug(value:Bool):Spritesheet {\n\t\tthis._isDebug = value;\n\t\treturn this;\n\t}\n\n\tinline public function fps(value:Int):Spritesheet {\n\t\tthis._fps = value;\n\t\treturn this;\n\t}\n\n\tinline public function delay(frames:Int):Spritesheet {\n\t\tthis._delay = frames;\n\t\treturn this;\n\t}\n\n\t// function pulseFun() {\n\t// \ttrace('pulse: ' + Date.now().getTime());\n\t// }\n\t// inline public function pulse(func:Void->Void):Spritesheet {\n\t// \tReflect.callMethod(pulseFun, func, []);\n\t// \treturn this;\n\t// }\n\t// ____________________________________ rotation ____________________________________\n\n\tinline public function rotate(degree:Int):Spritesheet {\n\t\tthis._rotate = degree;\n\t\treturn this;\n\t}\n\n\tinline public function rotateLeft():Spritesheet {\n\t\tthis._rotate = -90;\n\t\treturn this;\n\t}\n\n\tinline public function rotateRight():Spritesheet {\n\t\tthis._rotate = 90;\n\t\treturn this;\n\t}\n\n\tinline public function rotateDown():Spritesheet {\n\t\tthis._rotate = 180;\n\t\treturn this;\n\t}\n\n\t// ____________________________________ transparance ____________________________________\n\n\tinline public function alpha(alpha:Float):Spritesheet {\n\t\tthis._alpha = clamp(alpha, 0, 1); // a value r should be between 0 and 1\n\t\t// this._alpha = alpha; // a value r should be between 0 and 1\n\t\treturn this;\n\t}\n\n\t// ____________________________________ draw ____________________________________\n\n\tinline public function draw():Spritesheet {\n\t\tif (_isActive && _pulse == null) {\n\t\t\tconsole.info('${this._id} - this should happen only once! (${_pulse} == null)');\n\n\t\t\tconsole.groupCollapsed('Spritesheet (${this._id}):');\n\t\t\tconsole.warn('${toString()}');\n\t\t\tconsole.groupEnd();\n\n\t\t\t_pulse = window.requestAnimationFrame(pulseHandler);\n\t\t}\n\t\tvar xpos = 0;\n\t\tvar ypos = 0;\n\t\tif (this._isCentered) {\n\t\t\txpos = -Math.round((this._cellWidth) / 2);\n\t\t\typos = -Math.round((this._cellHeight) / 2);\n\t\t}\n\n\t\t// draw to convast\n\t\t_ctx.save(); // save current state\n\n\t\t// move canvas and rotate\n\t\t_ctx.translate(_x, _y);\n\t\t_ctx.rotate(radians(_rotate));\n\t\t// print sprite\n\t\t_ctx.clearRect(xpos * _scale, ypos * _scale, this._cellWidth * _scale, this._cellHeight * _scale);\n\t\t// draw each frame + place them in the middle\n\t\tvar shiftX = this._currentSprite * this._cellWidth;\n\t\tvar shiftY = 0; // FIX this later: this._index * this._cellHeight;\n\n\t\t// trace('shiftX: $shiftX , _currentSprite: $_currentSprite, _index: $_index');\n\t\t_ctx.scale(_scale, _scale);\n\t\t_ctx.drawImage(_img, shiftX, shiftY, this._cellWidth, this._cellHeight, xpos, ypos, this._cellWidth, this._cellHeight);\n\n\t\t// restore canvas to previous position\n\t\t_ctx.restore();\n\n\t\t/*\n\t\t\tStart at the beginning once you've reached the\n\t\t\tend of your sprite!\n\t\t */\n\t\tif (_isAnimation) {\n\t\t\tthis._currentSprite++;\n\t\t\tif (this._currentSprite > this._totalFrame) {\n\t\t\t\tif (this._isLoop) {\n\t\t\t\t\tif (_isDebug)\n\t\t\t\t\t\ttrace('${this._id} - start loop');\n\t\t\t\t\tthis._currentSprite = this._index;\n\t\t\t\t} else {\n\t\t\t\t\tif (_isDebug)\n\t\t\t\t\t\ttrace('${this._id} - stop animation');\n\t\t\t\t\tthis._isAnimation = false;\n\t\t\t\t\tthis._currentSprite = this._totalFrame - 1;\n\t\t\t\t\tdraw();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tfunction pulseHandler(?nr:Float) {\n\t\tif (this._isActive) {\n\t\t\t// trace('totalFrames: ' + _totalFrame);\n\t\t\tif (_delayCounter >= _delay) {\n\t\t\t\tif (this._isAnimation) {\n\t\t\t\t\tif (_isDebug) {\n\t\t\t\t\t\t// trace('${this._id} | _fpsCounter: $_fpsCounter % (60 / $_fps) -> ' + (_fpsCounter % (60 / _fps)));\n\t\t\t\t\t\t// trace(' % 60 / $_fps');\n\t\t\t\t\t\t// trace('_fpsCounter: $_fpsCounter % 60 / $_fps -> ' + (_fpsCounter % (60 / _fps)));\n\t\t\t\t\t}\n\t\t\t\t\tif (_fpsCounter % (60 / _fps) == 0) {\n\t\t\t\t\t\tdraw();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t_delayCounter++;\n\t\t\t}\n\t\t\twindow.requestAnimationFrame(pulseHandler);\n\t\t\tthis._fpsCounter++;\n\t\t}\n\t}\n\n\t// ____________________________________ getter setters ____________________________________\n\n\tfunction get__x():Float {\n\t\treturn _x;\n\t}\n\n\tfunction set__x(value:Float):Float {\n\t\treturn _x = value;\n\t}\n\n\tfunction get__y():Float {\n\t\treturn _y;\n\t}\n\n\tfunction set__y(value:Float):Float {\n\t\treturn _y = value;\n\t}\n\n\tfunction get__radius():Float {\n\t\treturn _radius;\n\t}\n\n\tfunction set__radius(value:Float):Float {\n\t\treturn _radius = value;\n\t}\n\n\tfunction get__alpha():Float {\n\t\treturn _alpha;\n\t}\n\n\tfunction set__alpha(value:Float):Float {\n\t\treturn _alpha = value;\n\t}\n\n\tfunction get__rotate():Int {\n\t\treturn _rotate;\n\t}\n\n\tfunction set__rotate(value:Int):Int {\n\t\treturn _rotate = value;\n\t}\n\n\tfunction get__cellHeight():Int {\n\t\treturn _cellHeight;\n\t}\n\n\tfunction set__cellHeight(value:Int):Int {\n\t\treturn _cellHeight = value;\n\t}\n\n\tfunction get__cellWidth():Int {\n\t\treturn _cellWidth;\n\t}\n\n\tfunction set__cellWidth(value:Int):Int {\n\t\treturn _cellWidth = value;\n\t}\n\n\tfunction get__height():Int {\n\t\treturn _height;\n\t}\n\n\tfunction set__height(value:Int):Int {\n\t\treturn _height = value;\n\t}\n\n\tfunction get__width():Int {\n\t\treturn _width;\n\t}\n\n\tfunction set__width(value:Int):Int {\n\t\treturn _width = value;\n\t}\n\n\tfunction get__index():Int {\n\t\treturn _index;\n\t}\n\n\tfunction set__index(value:Int):Int {\n\t\t_currentSprite = value;\n\t\treturn _index = value;\n\t}\n\n\tfunction get__isDebug():Bool {\n\t\treturn _isDebug;\n\t}\n\n\tfunction set__isDebug(value:Bool):Bool {\n\t\treturn _isDebug = value;\n\t}\n\n\tfunction get__img():Image {\n\t\treturn _img;\n\t}\n\n\tfunction set__img(value:Image):Image {\n\t\treturn _img = value;\n\t}\n\n\tfunction get__isCentered():Bool {\n\t\treturn _isCentered;\n\t}\n\n\tfunction set__isCentered(value:Bool):Bool {\n\t\treturn _isCentered = value;\n\t}\n\n\tfunction get__fps():Int {\n\t\treturn _fps;\n\t}\n\n\tfunction set__fps(value:Int):Int {\n\t\treturn _fps = value;\n\t}\n\n\tfunction get__scale():Float {\n\t\treturn _scale;\n\t}\n\n\tfunction set__scale(value:Float):Float {\n\t\treturn _scale = value;\n\t}\n\n\tfunction get__id():String {\n\t\treturn _id;\n\t}\n\n\tfunction set__id(value:String):String {\n\t\treturn _id = value;\n\t}\n\n\t// ____________________________________ tostring ____________________________________\n\n\tpublic function toString() {\n\t\t// return haxe.Json.stringify(this);\n\t\treturn ('Spritesheet: ' + haxe.Json.parse(haxe.Json.stringify(this)));\n\t};\n}\n","package art;\n\nimport cc.draw.Spritesheet;\n\n\n/**\n * short description what this does\n */\nclass CC055a extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Circle> = [];\n\tvar grid:GridUtil = new GridUtil();\n\t// sizes\n\tvar _cellsize = 100;\n\t// colors\n\tvar _color0:RGB = null;\n\tvar _color1:RGB = null;\n\tvar _color2:RGB = null;\n\tvar _color3:RGB = null;\n\tvar _color4:RGB = null;\n\tvar panel1:QuickSettings;\n\tvar isFont:Bool = false;\n\tvar isZip:Bool = false;\n\tvar isSpritesheet:Bool = false;\n\tvar isFirstRun:Bool = false;\n\tvar spritesheet:Spritesheet; // hmm doesn't work like expected\n\tvar src = 'assets/img/spritesheet/web_heart_animation_edge.png';\n\t// var zip:Zip;\n\tvar _img:Image;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Loading spritesheet, animation spritesheet';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\n\t\t// setup Sketch\n\t\tvar option = new Sketch.SketchOption();\n\t\toption.width = 1080; // 1080\n\t\t// option.height = 1000;\n\t\toption.autostart = true;\n\t\toption.padding = 10;\n\t\toption.scale = true;\n\t\tctx = Sketch.create(\"creative_code_mck\", option);\n\n\t\t// zip = new Zip(ctx, '${toString()}');\n\t\t// zip.menu(false);\n\t\t// zip.delay(0);\n\t\t// zip.recordInSeconds(11);\n\t\t// zip.embedScripts(onZipHandler);\n\n\t\tinit();\n\n\t\tsuper(ctx);\n\t}\n\n\t/**\n\t *\n\t * like image from twitter\n\t * https://abs.twimg.com/a/1552443372/img/animations/web_heart_animation_edge.png\n\t *\n\t**/\n\tfunction init() {\n\t\tSpritesheet.load(src, onSpritesheetHandler);\n\t\tText.embedGoogleFont('Berkshire+Swash', onFontHandler);\n\t}\n\n\tfunction onZipHandler(?value:String) {\n\t\ttrace(value);\n\t\tisZip = true;\n\t\tdrawShape();\n\t}\n\n\tfunction onSpritesheetHandler(img:Image) {\n\t\tthis._img = img;\n\t\tisSpritesheet = true;\n\t\tdrawShape();\n\t}\n\n\tfunction onFontHandler(e) {\n\t\ttrace('onFontHandler: \"${e}\"');\n\t\tisFont = true;\n\t\tdrawShape();\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\tif (isDebug) {\n\t\t\tShapeUtil.gridField(ctx, grid);\n\t\t}\n\n\t\tif (isSpritesheet) {\n\t\t\tfor (i in 0...grid.array.length) {\n\t\t\t\tvar point = grid.array[i];\n\n\t\t\t\tSpritesheet.create(ctx, _img)\n\t\t\t\t\t.fps(30)\n\t\t\t\t\t.debug(false)\n\t\t\t\t\t.cell(100, 100)\n\t\t\t\t\t.pos(point.x, point.y)\n\t\t\t\t\t.animate()\n\t\t\t\t\t.delay(5 * i)\n\t\t\t\t\t.center()\n\t\t\t\t\t.draw();\n\t\t\t}\n\t\t}\n\t\tif (isSpritesheet && isFont && isZip && !isFirstRun) {\n\t\t\t// zip.start();\n\t\t\tisFirstRun = true;\n\t\t}\n\n\t\t// if (isFont) {\n\t\t// \tvar size = 100;\n\t\t// \tText.create(ctx, \"Like me or not,\")\n\t\t// \t\t.color(_color4)\n\t\t// \t\t.font('Berkshire+Swash')\n\t\t// \t\t.centerAlign()\n\t\t// \t\t.size(size)\n\t\t// \t\t.pos(w2, h2)\n\t\t// \t\t.draw();\n\t\t// \tText.create(ctx, \"that is the question!\")\n\t\t// \t\t.color(_color4)\n\t\t// \t\t.font('Berkshire+Swash')\n\t\t// \t\t.centerAlign()\n\t\t// \t\t.size(size)\n\t\t// \t\t.pos(w2, h2 + size)\n\t\t// \t\t.draw();\n\t\t// }\n\n\t\t// for (i in 0...shapeArray.length) {\n\t\t// \tvar sh = shapeArray[i];\n\t\t// }\n\t\t// var rgb = randomColourObject();\n\t\t// ctx.strokeColour(rgb.r, rgb.g, rgb.b);\n\t\t// ctx.xcross(w / 2, h / 2, 200);\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\tvar colorArray = ColorUtil.niceColor100SortedString[randomInt(ColorUtil.niceColor100SortedString.length - 1)];\n\t\t_color0 = hex2RGB(colorArray[0]);\n\t\t_color1 = hex2RGB(colorArray[1]);\n\t\t_color2 = hex2RGB(colorArray[2]);\n\t\t_color3 = hex2RGB(colorArray[3]);\n\t\t_color4 = hex2RGB(colorArray[4]);\n\n\t\t// isDebug = true;\n\n\t\t// grid.setDimension(w*2.1, h*2.1);\n\t\t// grid.setNumbered(3,3);\n\t\tgrid.setCellSize(_cellsize);\n\t\tgrid.setIsCenterPoint(true);\n\n\t\t// shapeArray = [];\n\t\t// for (i in 0...grid.array.length) {\n\t\t// \tshapeArray.push(createShape(i, grid.array[i]));\n\t\t// }\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\t// zip.pulse();\n\t\t// drawShape();\n\t\t// stop();\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC056 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Dynamic> = [];\n\tvar grid:GridUtil = new GridUtil();\n\t// sizes\n\tvar _radius = 150;\n\tvar _cellsize = 150;\n\t// colors\n\tvar _color0:RGB = null;\n\tvar _color1:RGB = null;\n\tvar _color2:RGB = null;\n\tvar _color3:RGB = null;\n\tvar _color4:RGB = null;\n\tvar panel1:QuickSettings;\n\tvar isFontLoaded:Bool = false;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = '';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\n\t\t// <link href=\"https://fonts.googleapis.com/css?family=Oswald:200,300,400,500,600,700\" rel=\"stylesheet\">\n\t\tText.embedGoogleFont('Oswald:200,300,400,500,600,700', onEmbedHandler);\n\n\t\t// setup Sketch\n\t\tvar option = new Sketch.SketchOption();\n\t\toption.width = 1080; // 1080\n\t\t// option.height = 1000;\n\t\toption.autostart = true;\n\t\toption.padding = 10;\n\t\toption.scale = true;\n\t\tctx = Sketch.create(\"creative_code_mck\", option);\n\n\t\tsuper(ctx);\n\t}\n\n\tfunction onEmbedHandler(e) {\n\t\ttrace('onEmbedHandler: \"${e}\"');\n\t\tisFontLoaded = true;\n\t\tdrawShape();\n\t}\n\n\tfunction createQuickSettings() {\n\t\t// demo/basic example\n\t\tpanel1 = QuickSettings.create(10, 10, \"Quote generator\")\n\t\t\t.setGlobalChangeHandler(untyped drawShape)\n\t\t\t.addHTML(\"Reason\", \"Sometimes I need a quick quote, to post on Instagram\")\n\t\t\t.addTextArea('Quote', 'text', function(value) trace(value))\n\t\t\t.addBoolean('All Caps', false, function(value) trace(value))\n\t\t\t.saveInLocalStorage('store-data-${toString()}');\n\t}\n\n\tfunction createShape(i:Int, ?point:Point) {\n\t\tvar shape:Dynamic = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'poly',\n\t\t\tx: point.x,\n\t\t\ty: point.y,\n\t\t\tradius: _radius,\n\t\t}\n\t\tonAnimateHandler(shape);\n\t\treturn shape;\n\t}\n\n\tfunction onAnimateHandler(circle:Circle) {\n\t\t// Go.to(circle, 5).x(w/2).y(h/2).ease(Sine.easeInOut).onComplete(onAnimateHandler, [circle]);\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\tif (isDebug) {\n\t\t\t// ShapeUtil.gridField(ctx, grid);\n\t\t}\n\n\t\tctx.strokeWeight(1);\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tctx.save();\n\t\t\tvar sh = shapeArray[i];\n\t\t\tctx.translate(sh.x, sh.y);\n\t\t\tctx.rotate(radians(180 / 6));\n\t\t\tctx.outlinedPolygon(0, 0, 6, _cellsize / 2, getColourObj(WHITE), getColourObj(BLACK));\n\t\t\tctx.restore();\n\t\t}\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\tvar colorArray = ColorUtil.niceColor100SortedString[randomInt(ColorUtil.niceColor100SortedString.length - 1)];\n\t\t_color0 = hex2RGB(colorArray[0]);\n\t\t_color1 = hex2RGB(colorArray[1]);\n\t\t_color2 = hex2RGB(colorArray[2]);\n\t\t_color3 = hex2RGB(colorArray[3]);\n\t\t_color4 = hex2RGB(colorArray[4]);\n\n\t\tisDebug = true;\n\n\t\t// grid.setDimension(w*2.1, h*2.1);\n\t\t// grid.setNumbered(3,3);\n\t\tgrid.setCellSize(_cellsize);\n\t\tgrid.setIsCenterPoint(true);\n\n\t\tshapeArray = [];\n\t\tfor (i in 0...grid.array.length) {\n\t\t\tshapeArray.push(createShape(i, grid.array[i]));\n\t\t}\n\t}\n\n\toverride function draw() {\n\t\ttrace('draw: ${toString()}');\n\t\tdrawShape();\n\t\tstop();\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC057 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Circle> = [];\n\tvar grid:GridUtil = new GridUtil();\n\t// sizes\n\tvar _radius = 150;\n\tvar _cellsize = 150;\n\t// colors\n\tvar _color0:RGB = null;\n\tvar _color1:RGB = null;\n\tvar _color2:RGB = null;\n\tvar _color3:RGB = null;\n\tvar _color4:RGB = null;\n\tvar panel1:QuickSettings;\n\tvar isFontLoaded:Bool = false;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = '';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\n\t\t// setup Sketch\n\t\tvar option = new Sketch.SketchOption();\n\t\toption.width = 1080; // 1080\n\t\t// option.height = 1000;\n\t\toption.autostart = true;\n\t\toption.padding = 10;\n\t\toption.scale = true;\n\t\tctx = Sketch.create(\"creative_code_mck\", option);\n\n\t\tsuper(ctx);\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\tctx.fillPolygon(w2, h2, 6, w3);\n\t\tctx.clip();\n\t\tvar max = 50;\n\t\tfor (i in 0...max) {\n\t\t\tvar offset = 10;\n\t\t\tctx.save();\n\t\t\tctx.translate(w2, h2);\n\t\t\tctx.rotate(radians(180 / 6));\n\t\t\tctx.strokeColourRGB(BLACK);\n\t\t\tctx.strokePolygon(0, 0, 6, offset * i);\n\t\t\tctx.restore();\n\t\t}\n\t}\n\n\toverride function draw() {\n\t\ttrace('draw: ${toString()}');\n\t\tdrawShape();\n\t\tstop();\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC058 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Circle> = [];\n\tvar grid:GridUtil = new GridUtil();\n\t// sizes\n\tvar _radius = 150;\n\tvar _cellsize = 150;\n\t// colors\n\tvar _color0:RGB = null;\n\tvar _color1:RGB = null;\n\tvar _color2:RGB = null;\n\tvar _color3:RGB = null;\n\tvar _color4:RGB = null;\n\tvar panel1:QuickSettings;\n\tvar isFontLoaded:Bool = false;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = '';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\n\t\t// setup Sketch\n\t\tvar option = new Sketch.SketchOption();\n\t\toption.width = 1080; // 1080\n\t\t// option.height = 1000;\n\t\toption.autostart = true;\n\t\toption.padding = 10;\n\t\toption.scale = true;\n\t\tctx = Sketch.create(\"creative_code_mck\", option);\n\n\t\tsuper(ctx);\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\tctx.fillPolygon(w2, h2, 6, w3);\n\t\tctx.clip();\n\t\tvar max = 50;\n\t\tfor (i in 0...max) {\n\t\t\tvar offset = 10;\n\t\t\tvar startDegree = 180 / 6;\n\t\t\tctx.save();\n\t\t\tctx.translate(w2, h2);\n\t\t\tctx.rotate(radians(startDegree + (i * 1)));\n\t\t\tctx.strokeColourRGB(BLACK);\n\t\t\tctx.strokePolygon(0, 0, 6, offset * i);\n\t\t\tctx.restore();\n\t\t}\n\t}\n\n\toverride function draw() {\n\t\ttrace('draw: ${toString()}');\n\t\tdrawShape();\n\t\tstop();\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC059 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Dynamic> = [];\n\tvar max = 50;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = '';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\n\t\t// setup Sketch\n\t\tvar option = new Sketch.SketchOption();\n\t\toption.width = 1080; // 1080\n\t\t// option.height = 1000;\n\t\toption.autostart = true;\n\t\toption.padding = 10;\n\t\toption.scale = true;\n\t\tctx = Sketch.create(\"creative_code_mck\", option);\n\n\t\tsuper(ctx);\n\t}\n\n\tfunction createShape(i:Int, ?point:Point) {\n\t\tvar offset = 10;\n\t\tvar shape:Dynamic = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'poly',\n\t\t\tx: w2,\n\t\t\ty: h2,\n\t\t\tsize: i * offset,\n\t\t\tdegree: 180 / 6\n\t\t}\n\t\tonAnimateHandler(shape, i, 3);\n\t\treturn shape;\n\t}\n\n\tfunction onAnimateHandler(sh:Dynamic, id:Int, count:Int) {\n\t\tGo.to(sh, 1)\n\t\t\t.delay(id * 0.1)\n\t\t\t.prop('degree', (180 / 6) * count)\n\t\t\t.ease(Sine.easeInOut)\n\t\t\t.onComplete(onAnimateHandler, [sh, id, count]);\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\t// ctx.fillPolygon(w2, h2, 6, w3);\n\t\t// ctx.clip();\n\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\tctx.save();\n\t\t\tctx.translate(sh.x, sh.y);\n\t\t\tctx.rotate(radians(sh.degree));\n\t\t\tctx.strokeColourRGB(BLACK);\n\t\t\tctx.strokePolygon(0, 0, 6, sh.size);\n\t\t\tctx.restore();\n\t\t}\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\tshapeArray = [];\n\t\tfor (i in 0...max) {\n\t\t\tshapeArray.push(createShape(i));\n\t\t}\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\t// super.draw();\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC059a extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Dynamic> = [];\n\tvar max = 50;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Polygon animation back and forth';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\n\t\t// setup Sketch\n\t\tvar option = new Sketch.SketchOption();\n\t\toption.width = 1080; // 1080\n\t\t// option.height = 1000;\n\t\toption.autostart = true;\n\t\toption.padding = 10;\n\t\toption.scale = true;\n\t\tctx = Sketch.create(\"creative_code_mck\", option);\n\n\t\tsuper(ctx);\n\t}\n\n\tfunction createShape(i:Int, ?point:Point) {\n\t\tvar offset = 10;\n\t\tvar shape:Dynamic = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'poly',\n\t\t\tx: w2,\n\t\t\ty: h2,\n\t\t\tsize: i * offset,\n\t\t\tdegree: 180 / 6\n\t\t}\n\t\tonAnimateHandler(shape, i, 3);\n\t\treturn shape;\n\t}\n\n\tfunction onAnimateHandler(sh:Dynamic, id:Int, count:Int) {\n\t\tGo.to(sh, 1)\n\t\t\t.delay(id * 0.1)\n\t\t\t.prop('degree', (180 / 6) * count)\n\t\t\t.yoyo()\n\t\t\t.ease(Sine.easeInOut);\n\t\t// .onComplete(onAnimateHandler, [sh, id, count]);\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\t// ctx.fillPolygon(w2, h2, 6, w3);\n\t\t// ctx.clip();\n\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\tctx.save();\n\t\t\tctx.translate(sh.x, sh.y);\n\t\t\tctx.rotate(radians(sh.degree));\n\t\t\tctx.strokeColourRGB(BLACK);\n\t\t\tctx.strokePolygon(0, 0, 6, sh.size);\n\t\t\tctx.restore();\n\t\t}\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\tshapeArray = [];\n\t\tfor (i in 0...max) {\n\t\t\tshapeArray.push(createShape(i));\n\t\t}\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\t// super.draw();\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC059b extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Dynamic> = [];\n\tvar max = 50;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Polygon animation back and forth';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\n\t\t// setup Sketch\n\t\tvar option = new Sketch.SketchOption();\n\t\toption.width = 1080; // 1080\n\t\t// option.height = 1000;\n\t\toption.autostart = true;\n\t\toption.padding = 10;\n\t\toption.scale = true;\n\t\tctx = Sketch.create(\"creative_code_mck\", option);\n\n\t\tsuper(ctx);\n\n\t\t// zip.recordInSeconds(20);\n\t}\n\n\tfunction createShape(i:Int, ?point:Point) {\n\t\tvar offset = 10;\n\t\tvar shape:Dynamic = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'poly',\n\t\t\tx: w2,\n\t\t\ty: h2,\n\t\t\tsize: i * offset,\n\t\t\tdegree: 180 / 6\n\t\t}\n\t\tonAnimateHandler(shape, i, 3);\n\t\treturn shape;\n\t}\n\n\tfunction onAnimateHandler(sh:Dynamic, id:Int, count:Int) {\n\t\tGo.to(sh, 2)\n\t\t\t.delay(id * 0.1)\n\t\t\t.prop('degree', (180 / 6) * 6)\n\t\t\t.ease(Sine.easeInOut)\n\t\t\t.onComplete(onAnimateHandler2, [sh, id, count++]);\n\t}\n\n\tfunction onAnimateHandler2(sh:Dynamic, id:Int, count:Int) {\n\t\tGo.to(sh, 3) // .delay(id * 0.1)\n\t\t\t.prop('degree', (180 / 6) * 3)\n\t\t\t.ease(Sine.easeInOut);\n\t\t// .onComplete(onAnimateHandler, [sh, id, count]);\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\t// ctx.fillPolygon(w2, h2, 6, w3);\n\t\t// ctx.clip();\n\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\tctx.save();\n\t\t\tctx.translate(sh.x, sh.y);\n\t\t\tctx.rotate(radians(sh.degree));\n\t\t\tctx.strokeColourRGB(BLACK);\n\t\t\tctx.strokePolygon(0, 0, 6, sh.size);\n\t\t\tctx.restore();\n\t\t}\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\tshapeArray = [];\n\t\tfor (i in 0...max) {\n\t\t\tshapeArray.push(createShape(i));\n\t\t}\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\t// super.draw();\n\t\tdrawShape();\n\t\t// zip.pulse();\n\t\t// stop();\n\t}\n}\n","package art;\n\nimport cc.tool.Loader;\n\nusing StringTools;\n\n/**\n * short description what this does\n */\nclass CC060 extends CCBase implements ICCBase {\n\t// colors\n\tvar _color0:RGB = hex2RGB('#000000'); // black\n\tvar _color1:RGB = hex2RGB('#FEF006'); // yellow\n\tvar _color2:RGB = hex2RGB('#C52C03'); // red\n\tvar _color3:RGB = hex2RGB('#FF8E5B'); // oragne\n\tvar _color4:RGB = hex2RGB('#FFC506'); // yellow\n\tvar _color5:RGB = hex2RGB('#8EC52D'); // green\n\tvar _color6:RGB = hex2RGB('#2D8E03'); // dark green\n\tvar panel1:QuickSettings;\n\t// svg\n\tvar svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path fill=\"red\" stroke=\"black\" stroke-width=\"2\" d=\"M25 39.7l-.6-.5C11.5 28.7 8 25 8 19c0-5 4-9 9-9 4.1 0 6.4 2.3 8 4.1 1.6-1.8 3.9-4.1 8-4.1 5 0 9 4 9 9 0 6-3.5 9.7-16.4 20.2l-.6.5z\"/></svg>';\n\tvar svgImage:Image;\n\t// image for some reason looses its size\n\tvar svgSize = 600;\n\t// var svgWidth = 200;\n\t// var svgHeight = 71;\n\tvar isSvgLoaded:Bool = false;\n\tvar isFontLoaded:Bool = false;\n\tvar isImageLoaded:Bool = false;\n\tvar patternCounter = 0;\n\t// heart\n\tvar heartObj:Dynamic;\n\tvar cursorObj:Dynamic;\n\tvar animationInSeconds = 1.5;\n\tvar src = 'assets/img/cursor/hand_fill.png';\n\tvar _img:Image;\n\tvar imgSize = 100;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Warning: like this post and you will be featured in the next animation!';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\n\t\t// setup Sketch\n\t\tvar option = new Sketch.SketchOption();\n\t\toption.width = 1080; // 1080\n\t\t// option.height = 1000;\n\t\toption.autostart = true;\n\t\toption.padding = 10;\n\t\toption.scale = true;\n\t\tctx = Sketch.create(\"creative_code_mck\", option);\n\n\t\tsuper(ctx);\n\t}\n\n\tfunction onSvgHandler(image:Image) {\n\t\tsvgImage = image;\n\t\tisSvgLoaded = true;\n\t\tdrawShape();\n\t}\n\n\tfunction onImageHandler(arr:Array<cc.tool.LoaderObj>) {\n\t\ttrace('total images: ' + arr.length);\n\t\t// trace('first image width: ' + arr[0].width);\n\t\tthis._img = arr[0].image;\n\t\tisImageLoaded = true;\n\t\tdrawShape();\n\t}\n\n\tfunction onHeartYoyoHandler(sh:Dynamic) {\n\t\tGo.to(sh, animationInSeconds)\n\t\t\t.prop('size', (svgSize * .7))\n\t\t\t.yoyo()\n\t\t\t.ease(Quart.easeInOut)\n\t\t\t.onComplete(onHeartYoyoHandler, [sh]);\n\t}\n\n\tfunction onShowCursorHandler(sh:Dynamic) {\n\t\tGo.to(sh, animationInSeconds)\n\t\t\t.delay(animationInSeconds * 3)\n\t\t\t.x(w2)\n\t\t\t.y(h2)\n\t\t\t.ease(Quart.easeInOut)\n\t\t\t.onComplete(onHideCursorHandler, [cursorObj]);\n\t}\n\n\tfunction onHideCursorHandler(sh:Dynamic) {\n\t\tGo.to(sh, animationInSeconds)\n\t\t\t.delay(.5)\n\t\t\t.x(w + (imgSize))\n\t\t\t.y(h + (imgSize))\n\t\t\t.ease(Quart.easeInOut) // .onComplete(onHideCursorHandler, [cursorObj])\n\t\t;\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(BLACK);\n\n\t\tif (!isFontLoaded && !isSvgLoaded)\n\t\t\treturn;\n\n\t\tvar size = 1080;\n\t\tvar strokeW = 50;\n\t\t// background pattern black and yellow\n\t\tfor (i in 0...size) {\n\t\t\tctx.save();\n\t\t\tctx.translate((strokeW * i) - size + patternCounter, 0);\n\t\t\tctx.strokeWeight(strokeW);\n\t\t\tif (i % 2 == 0) {\n\t\t\t\tctx.lineColourRGB(_color1);\n\t\t\t} else {\n\t\t\t\tctx.lineColourRGB(_color0);\n\t\t\t}\n\t\t\tctx.lineCap = ('square');\n\t\t\tctx.line(size, size, 0, 0);\n\t\t\tctx.restore();\n\t\t}\n\t\tvar xpos = w2;\n\t\tvar ypos = h4 - 70;\n\t\tvar padding = 50;\n\n\t\t// warning block at the top\n\n\t\tctx.fillColourRGB(_color0);\n\t\tctx.fillRect(padding, padding, w - (2 * padding), 250);\n\t\tvar text = Text.create(ctx, 'warning'.toUpperCase())\n\t\t\t.pos(xpos, ypos)\n\t\t\t.color(_color1)\n\t\t\t.centerAlign()\n\t\t\t.middleBaseline()\n\t\t\t.font('Gunplay')\n\t\t\t.size(200)\n\t\t\t.draw();\n\n\t\tvar xpos = w2;\n\t\tvar ypos = (h4 * 3) - 10;\n\t\tvar bHeight = 300;\n\t\tctx.fillColourRGB(_color0);\n\t\tctx.fillRect(padding, h - padding - bHeight, w - (2 * padding), bHeight);\n\t\tvar text = Text.create(ctx, 'this post and you\\nwill be featured in\\nthe next animation!'.toUpperCase())\n\t\t\t.pos(xpos, ypos)\n\t\t\t.color(_color1)\n\t\t\t.centerAlign()\n\t\t\t.middleBaseline()\n\t\t\t.font('Gunplay')\n\t\t\t.size(90)\n\t\t\t.draw();\n\n\t\tctx.drawImage(svgImage, heartObj.x + ((svgSize - heartObj.size) / 2), heartObj.y + ((svgSize - heartObj.size) / 2), heartObj.size, heartObj.size);\n\n\t\tif (isImageLoaded) {\n\t\t\tctx.drawImage(_img, cursorObj.x, cursorObj.y, imgSize, imgSize);\n\t\t}\n\n\t\tpatternCounter++;\n\t\tif (patternCounter >= strokeW * 2)\n\t\t\tpatternCounter = 0;\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\t\tvar font = new FontFace('Gunplay', 'url(assets/font/gunplay/Gunplay-Regular.woff2)', {\n\t\t\tstyle: 'normal',\n\t\t\tweight: '400',\n\t\t});\n\t\tdocument.fonts.add(font);\n\t\tfont.load();\n\t\tfont.loaded.then(function(fontface) {\n\t\t\ttrace(fontface.family);\n\t\t\tisFontLoaded = true;\n\t\t\tdrawShape();\n\t\t});\n\n\t\t// isDebug = true;\n\n\t\theartObj = {\n\t\t\tx: w2 - svgSize / 2,\n\t\t\ty: h2 - svgSize / 2,\n\t\t\tsize: svgSize,\n\t\t}\n\t\tvar _svg = svg.replace('fill=\"red\"', 'fill=\"${getColourObj(_color2)}\"');\n\t\tcc.tool.convert.SvgToImage.convert(_svg, onSvgHandler);\n\t\tonHeartYoyoHandler(heartObj);\n\n\t\tcursorObj = {\n\t\t\tx: w + (imgSize),\n\t\t\ty: h + (imgSize),\n\t\t\tsize: imgSize,\n\t\t}\n\t\tvar load = Loader.create()\n\t\t\t.isDebug(isDebug)\n\t\t\t.add(src)\n\t\t\t.onComplete(onImageHandler)\n\t\t\t.isDebug(isDebug)\n\t\t\t.load();\n\t\tonShowCursorHandler(cursorObj);\n\n\t\t// zip.recordInSeconds(animationInSeconds * 6);\n\t\t// zip.record(600);\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\t// super.draw(); // don't forget to add\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}\n","package art;\n\n\n\n/**\n * short description what this does\n */\nclass CC061 extends CCBase // ZipBase\nimplements ICCBase {\n\tvar shapeArray:Array<Dynamic> = [];\n\tvar max = 20;\n\tvar size = 400;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Polygon animation, rotate with hidden others';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\n\t\t// setup Sketch\n\t\tvar option = new Sketch.SketchOption();\n\t\toption.width = 1080; // 1080\n\t\t// option.height = 1000;\n\t\toption.autostart = true;\n\t\toption.padding = 10;\n\t\toption.scale = true;\n\t\tctx = Sketch.create(\"creative_code_mck\", option);\n\n\t\tsuper(ctx);\n\n\t\t// zip.recordInSeconds(20);\n\t}\n\n\tfunction createShape(i:Int, ?point:Point) {\n\t\tvar offset = 10;\n\t\tvar shape:Dynamic = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'poly',\n\t\t\tx: w2,\n\t\t\ty: h2,\n\t\t\tsize: this.size,\n\t\t\tdegree: 180 / 6\n\t\t}\n\t\tonAnimateHandler(shape, i, 3);\n\t\treturn shape;\n\t}\n\n\tfunction onAnimateHandler(sh:Dynamic, id:Int, count:Int) {\n\t\tGo.to(sh, 2)\n\t\t\t.delay(id * 0.1)\n\t\t\t.prop('degree', (180 / 6) * 3)\n\t\t\t.ease(Sine.easeInOut)\n\t\t\t.onComplete(onAnimateHandler, [sh, id, count++]);\n\t}\n\n\t// function onAnimateHandler2(sh:Dynamic, id:Int, count:Int) {\n\t// \tGo.to(sh, 3) // .delay(id * 0.1)\n\t// \t\t.prop('degree', (180 / 6) * 3)\n\t// \t\t.ease(Sine.easeInOut);\n\t// \t// .onComplete(onAnimateHandler, [sh, id, count]);\n\t// }\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\t// ctx.fillPolygon(w2, h2, 6, w3);\n\t\t// ctx.clip();\n\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\tctx.save();\n\t\t\tctx.translate(sh.x, sh.y);\n\t\t\tctx.rotate(radians(sh.degree));\n\t\t\tctx.strokeColourRGB(BLACK);\n\t\t\tctx.strokePolygon(0, 0, 6, sh.size);\n\t\t\tctx.restore();\n\t\t}\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\tshapeArray = [];\n\t\tfor (i in 0...max) {\n\t\t\tshapeArray.push(createShape(i));\n\t\t}\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\t// super.draw();\n\t\tdrawShape();\n\t\t// zip.pulse();\n\t\t// stop();\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC062 extends CCBase // ExportBase\nimplements ICCBase {\n\tvar shapeArray:Array<Dynamic> = [];\n\tvar max = 20;\n\tvar size = 400;\n\tvar _rotationCounter = 0;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Triangles animation with delay, rotation complete';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\n\t\t// setup Sketch\n\t\tvar option = new Sketch.SketchOption();\n\t\toption.width = 1080; // 1080\n\t\t// option.height = 1000;\n\t\toption.autostart = true;\n\t\toption.padding = 10;\n\t\toption.scale = true;\n\t\tctx = Sketch.create(\"creative_code_mck\", option);\n\n\t\tsuper(ctx);\n\n\t\t// export.recordInSeconds(100);\n\t\t// export.type(ZIP);\n\t\t// export.start();\n\t}\n\n\tfunction createShape(i:Int, ?point:Point) {\n\t\tvar offset = 10;\n\t\tvar shape:Dynamic = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'poly',\n\t\t\tx: w2,\n\t\t\ty: h2,\n\t\t\tsize: this.size,\n\t\t\tdegree: 180 / 6\n\t\t}\n\t\tonAnimateHandler(shape, i, 3);\n\t\treturn shape;\n\t}\n\n\tfunction onAnimateHandler(sh:Dynamic, id:Int, count:Int) {\n\t\tGo.to(sh, 2)\n\t\t\t.delay(id * 0.1)\n\t\t\t.prop('degree', (180 / 6) * count)\n\t\t\t.ease(Sine.easeInOut)\n\t\t\t.onComplete(onAnimateHandler2, [sh, id, count + 3]);\n\t}\n\n\tfunction onAnimateHandler2(sh:Dynamic, id:Int, count:Int) {\n\t\t_rotationCounter++;\n\t\tif (_rotationCounter == (max * 3)) {\n\t\t\ttrace('stop export');\n\t\t\t// export.stop();\n\t\t}\n\t\tGo.to(sh, 3)\n\t\t\t.delay(2)\n\t\t\t.prop('degree', (180 / 6) * count)\n\t\t\t.ease(Sine.easeInOut)\n\t\t\t.onComplete(onAnimateHandler2, [sh, id, count + 3]);\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\t// ctx.fillPolygon(w2, h2, 6, w3);\n\t\t// ctx.clip();\n\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\tctx.save();\n\t\t\tctx.translate(sh.x, sh.y);\n\t\t\tctx.rotate(radians(sh.degree));\n\t\t\tctx.strokeColourRGB(BLACK);\n\t\t\tctx.strokePolygon(0, 0, 3, sh.size);\n\t\t\tctx.restore();\n\t\t}\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\tshapeArray = [];\n\t\tfor (i in 0...max) {\n\t\t\tshapeArray.push(createShape(i));\n\t\t}\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC063 extends CCBase // ExportBase\nimplements ICCBase {\n\tvar shapeArray:Array<CircleExtra> = [];\n\tvar shapeArray2:Array<CircleExtra> = [];\n\tvar shapeMax:Int = 15;\n\tvar maxRadius = h / 3;\n\tvar minRadius = -100;\n\tvar maxCircleSize = 30;\n\tvar strokeWidth = 5;\n\tvar minDistance:Float;\n\tvar _startT:Float;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Circles in a circle, connected';\n\t\ttype = [CCType.ANIMATION];\n\t\tsuper(ctx);\n\n\t\t// export.recordInSeconds(100);\n\t\t// export.type(ZIP);\n\t\t// // export.start();\n\t}\n\n\tfunction createShape(i:Int, radius:Float, speed:Float) {\n\t\tvar shape:CircleExtra = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'circle',\n\t\t\tx: w2,\n\t\t\ty: h2,\n\t\t\trgb: BLACK,\n\t\t\tradius: radius,\n\t\t\tsize: 20,\n\t\t\tangle: (360 / shapeMax) * i, // steps for rotation\n\t\t\tspeed: speed, // rotation speed\n\t\t}\n\t\treturn shape;\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundRGB(WHITE);\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\t// // sh.radius += i*5;\n\t\t\tsh.angle += sh.speed;\n\t\t\t// // plot the balls x to cos and y to sin\n\t\t\tsh.x = w / 2 + Math.cos(radians(sh.angle)) * sh.radius;\n\t\t\tsh.y = h / 2 + Math.sin(radians(sh.angle)) * sh.radius;\n\t\t\t// // ctx.fillStyle = getColourObj(sh.rgb, sh.alpha);\n\t\t\tctx.fillStyle = getColourObj(WHITE);\n\t\t\tctx.strokeStyle = getColourObj(sh.rgb);\n\t\t\tctx.strokeWeight(strokeWidth);\n\t\t\tctx.circleFillStroke(sh.x, sh.y, sh.size);\n\t\t}\n\t\tfor (i in 0...shapeArray2.length) {\n\t\t\tvar sh = shapeArray2[i];\n\t\t\t// // sh.radius += i*5;\n\t\t\tsh.angle += sh.speed;\n\t\t\t// // plot the balls x to cos and y to sin\n\t\t\tsh.x = w / 2 + Math.cos(radians(sh.angle)) * sh.radius;\n\t\t\tsh.y = h / 2 + Math.sin(radians(sh.angle)) * sh.radius;\n\t\t\t// // ctx.fillStyle = getColourObj(sh.rgb, sh.alpha);\n\t\t\tctx.fillStyle = getColourObj(WHITE);\n\t\t\tctx.strokeStyle = getColourObj(sh.rgb);\n\t\t\tctx.strokeWeight(strokeWidth);\n\t\t\tctx.circleFillStroke(sh.x, sh.y, sh.size);\n\t\t}\n\t\tfor (i in 0...shapeArray2.length) {\n\t\t\tvar sh1 = shapeArray[i];\n\t\t\tvar sh2 = shapeArray2[i];\n\n\t\t\tif (minDistance == null) {\n\t\t\t\tminDistance = MathUtil.distance(sh1.x, sh1.y, sh2.x, sh2.y);\n\t\t\t\ttrace('start export');\n\t\t\t\t_startT = Date.now().getTime();\n\t\t\t\t// export.start();\n\t\t\t} else {\n\t\t\t\tif (minDistance == MathUtil.distance(sh1.x, sh1.y, sh2.x, sh2.y)) {\n\t\t\t\t\ttrace('stop export');\n\t\t\t\t\ttrace((Date.now().getTime() - _startT) / 1000 + '.sec');\n\t\t\t\t\t// export.stop();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tctx.lineColourRGB(BLACK);\n\t\t\tctx.lineWidth = strokeWidth * 1;\n\t\t\tctx.lineCap = \"round\"; // \"butt|round|square\";\n\t\t\tctx.line(sh1.x, sh1.y, sh2.x, sh2.y);\n\t\t}\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\t\tfor (i in 0...shapeMax) {\n\t\t\tshapeArray.push(createShape(i, maxRadius, 0.25));\n\t\t\tshapeArray2.push(createShape(i, maxRadius + minRadius, 0.5));\n\t\t}\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC064 extends CCBase // ExportBase\nimplements ICCBase {\n\tvar shapeArray:Array<Square> = [];\n\tvar max = 20;\n\tvar _maxSize = w;\n\tvar _offsetSize = 50;\n\tvar _rotationCounter = 0;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Triangles animation with delay, rotation complete';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\n\t\t// setup Sketch\n\t\tvar option = new Sketch.SketchOption();\n\t\toption.width = 1080; // 1080\n\t\t// option.height = 1000;\n\t\toption.autostart = true;\n\t\toption.padding = 10;\n\t\toption.scale = true;\n\t\tctx = Sketch.create(\"creative_code_mck\", option);\n\n\t\tsuper(ctx);\n\n\t\t// export.recordInSeconds(100);\n\t\t// export.type(ZIP);\n\t\t// export.start();\n\t}\n\n\tfunction createShape(i:Int, ?point:Point) {\n\t\tvar shape:Square = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'square',\n\t\t\tx: w2,\n\t\t\ty: h2,\n\t\t\tsize: _maxSize - (i * _offsetSize)\n\t\t\t// degree: 180 / 6\n\t\t}\n\t\t// onAnimateHandler(shape, i, 1);\n\t\thaxe.Timer.delay(function() {\n\t\t\tonAnimationContinue(shape, i, 1);\n\t\t}, i * 100);\n\t\treturn shape;\n\t}\n\n\t// function onAnimateHandler(sh:Square, id:Int, count:Int) {\n\t// \tGo.to(sh, 3)\n\t// \t\t.delay(id * 0.1)\n\t// \t\t.prop('angle', -(180 / 2) * count)\n\t// \t\t.ease(Elastic.easeInOut)\n\t// \t\t.onComplete(onAnimationContinue, [sh, id, ++count]);\n\t// }\n\n\tfunction onAnimationContinue(sh:Square, id:Int, count:Int) {\n\t\tGo.to(sh, 3)\n\t\t\t.delay(2)\n\t\t\t.prop('angle', -(180 / 2) * count)\n\t\t\t.ease(Elastic.easeInOut)\n\t\t\t.onComplete(onAnimationContinue, [sh, id, ++count]);\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\tctx.save();\n\t\t\tctx.translate(sh.x, sh.y);\n\t\t\tctx.rotate(radians(sh.angle));\n\t\t\t// ctx.strokeColourRGB(BLACK);\n\t\t\t// Shadow\n\t\t\tctx.shadowColorRGB(BLACK, 0.1);\n\t\t\tctx.shadowBlur = 15;\n\t\t\tctx.centreFillRect(0, 0, sh.size);\n\t\t\tctx.restore();\n\t\t}\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\tshapeArray = [];\n\t\tfor (i in 0...max) {\n\t\t\tshapeArray.push(createShape(i));\n\t\t}\n\n\t\t// console.table(shapeArray);\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC065 extends CCBase // ExportBase\nimplements ICCBase {\n\tvar shapeArray:Array<CircleExtra> = [];\n\tvar max = 20;\n\tvar _maxSize = w;\n\tvar _offsetSize = 50;\n\tvar _rotationCounter = 0;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Circle animation with delay, rotation complete';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\n\t\t// setup Sketch\n\t\tvar option = new Sketch.SketchOption();\n\t\toption.width = 1080; // 1080\n\t\t// option.height = 1000;\n\t\toption.autostart = true;\n\t\toption.padding = 10;\n\t\toption.scale = true;\n\t\tctx = Sketch.create(\"creative_code_mck\", option);\n\n\t\tsuper(ctx);\n\n\t\t// export.recordInSeconds(100);\n\t\t// export.type(ZIP);\n\t\t// export.start();\n\t}\n\n\tfunction createShape(i:Int, ?point:Point) {\n\t\tvar shape:CircleExtra = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'CircleExtra',\n\t\t\tx: w2,\n\t\t\ty: h2,\n\t\t\tsize: _maxSize - (i * _offsetSize),\n\t\t\tscale: 1\n\t\t}\n\t\tReflect.setField(shape, 'shadowBlur', 15);\n\t\t// onAnimateHandler(shape, i, 1);\n\t\thaxe.Timer.delay(function() {\n\t\t\tonAnimationContinue(shape, i, 1);\n\t\t}, i * 100);\n\t\treturn shape;\n\t}\n\n\tfunction onAnimationContinue(sh:CircleExtra, id:Int, count:Int) {\n\t\tGo.to(sh, 5)\n\t\t\t.delay(0.1)\n\t\t\t.prop('scale', 3) // .prop('angle', -(180 / 2) * count)\n\t\t\t\t// .prop('shadowBlur', 5)\n\t\t\t.yoyo() // .ease(Bounce.easeInOut)\n\t\t\t.ease(Elastic.easeInOut)\n\t\t\t.onComplete(onAnimationContinue, [sh, id, ++count]);\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\tctx.save();\n\t\t\tctx.translate(sh.x, sh.y);\n\t\t\tctx.rotate(radians(sh.angle));\n\t\t\t// ctx.strokeColourRGB(BLACK);\n\t\t\t// Shadow\n\t\t\tctx.shadowColorRGB(BLACK, 0.1);\n\t\t\tctx.shadowBlur = untyped sh.shadowBlur;\n\t\t\tctx.centreFillRect(0, 0, sh.size * sh.scale);\n\t\t\tctx.restore();\n\t\t}\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\tshapeArray = [];\n\t\tfor (i in 0...max) {\n\t\t\tshapeArray.push(createShape(i));\n\t\t}\n\n\t\t// console.table(shapeArray);\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC066 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Line> = [];\n\tvar shapeArray2:Array<{}> = [];\n\tvar shapeMax:Int = 7;\n\tvar radius0:Int = 150;\n\tvar radius1:Int = 350;\n\tvar divide:Int = Math.round(360 / 7);\n\tvar _strokeW = 15;\n\tvar _blobSize = 50;\n\tvar _padding = 50;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = 'Bio spere';\n\t\tdivide = Math.round(360 / shapeMax);\n\t\tradius1 = Math.round(w2 - (2 * _padding));\n\t\tsuper(ctx);\n\t}\n\n\tfunction createShape(i:Int):Line {\n\t\tvar angle = i * divide;\n\t\tvar line:Line = {\n\t\t\t_id: i,\n\t\t\tx1: (w / 2) + Math.cos(radians(angle)) * radius0,\n\t\t\ty1: (h / 2) + Math.sin(radians(angle)) * radius0,\n\t\t\tx2: (w / 2) + Math.cos(radians(angle)) * radius1,\n\t\t\ty2: (h / 2) + Math.sin(radians(angle)) * radius1,\n\t\t\tstroke: _strokeW,\n\t\t\tradius: random(radius0 + _blobSize, radius1),\n\t\t}\n\t\t// trace(line);\n\t\tonAnimationHandler(line);\n\t\treturn line;\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(BLACK);\n\t\t//\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar line = shapeArray[i];\n\t\t\tvar angle = i * divide;\n\t\t\tline.x2 = (w / 2) + Math.cos(radians(angle)) * line.radius;\n\t\t\tline.y2 = (h / 2) + Math.sin(radians(angle)) * line.radius;\n\t\t\tctx.lineColour(WHITE.r, WHITE.g, WHITE.b, 1);\n\t\t\tctx.lineWidth = line.stroke;\n\t\t\t// ctx.lineCap = \"round\"; // \"butt|round|square\";\n\t\t\tctx.line(line.x1, line.y1, line.x2, line.y2);\n\t\t\tctx.circleFillStroke(line.x2, line.y2, _blobSize);\n\t\t}\n\n\t\tctx.strokeWeight(_strokeW);\n\t\tctx.circleFillStroke(w2, h2, radius0);\n\t}\n\n\t// ____________________________________ onHandlers ____________________________________\n\n\tfunction onAnimationHandler(line) {\n\t\t// trace('complete: $e');\n\t\tGo.to(line, random(0.5, 1.5))\n\t\t\t.prop('radius', random(radius0 + _blobSize, radius1))\n\t\t\t.ease(Sine.easeInOut)\n\t\t\t.onComplete(onAnimationHandler, [line]);\n\t}\n\n\t// ____________________________________ override ____________________________________\n\n\toverride function setup() {\n\t\t// trace('setup: ${toString()}');\n\t\tfor (i in 0...shapeMax) {\n\t\t\tshapeArray.push(createShape(i));\n\t\t}\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}\n","package art;\n\n/**\n * short description what this does\n */\nclass CC067 extends CCBase implements ICCBase {\n\tvar shapeArray:Array<Circle> = [];\n\t// sizes\n\tvar _minR = 20;\n\tvar _maxR = 150;\n\tvar strokeW = 50;\n\tvar max = 20;\n\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tdescription = '';\n\t\ttype = [CCType.ANIMATION, CCType.IMAGE];\n\n\t\tsuper(ctx);\n\t}\n\n\tfunction createShape(i:Int, ?point:Point) {\n\t\tvar padding = _maxR + (strokeW / 2);\n\t\tvar shape:Circle = {\n\t\t\t_id: '$i',\n\t\t\t_type: 'circle',\n\t\t\tx: padding + random(w - (padding * 2)),\n\t\t\ty: padding + random(h - (padding * 2)),\n\t\t\tradius: random(_minR, _maxR),\n\t\t}\n\t\tonAnimateHandler(shape);\n\t\treturn shape;\n\t}\n\n\tfunction onAnimateHandler(circle:Circle) {\n\t\tGo.wiggle(circle, circle.x, circle.y, 20);\n\t}\n\n\tfunction drawShape() {\n\t\tctx.clearRect(0, 0, w, h);\n\t\tctx.backgroundObj(WHITE);\n\n\t\t// ctx.fillStyle = getColourObj(_color4);\n\t\t// Text.centerFillText(ctx, 'text', w / 2, h / 2, \"'Oswald', sans-serif;\", 160);\n\n\t\t// if (isDebug) {\n\t\t// \tShapeUtil.gridField(ctx, grid);\n\t\t// }\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\tctx.fillColourRGB(BLACK);\n\t\t\tctx.strokeColourRGB(BLACK);\n\t\t\tctx.strokeWeight(strokeW);\n\t\t\tctx.circleFillStroke(sh.x, sh.y, sh.radius);\n\t\t}\n\t\tfor (i in 0...shapeArray.length) {\n\t\t\tvar sh = shapeArray[i];\n\t\t\tctx.fillColourRGB(WHITE);\n\t\t\tctx.fillCircle(sh.x, sh.y, sh.radius);\n\t\t}\n\n\t\t// var rgb = randomColourObject();\n\t\t// ctx.strokeColour(rgb.r, rgb.g, rgb.b);\n\t\t// ctx.xcross(w / 2, h / 2, 200);\n\t}\n\n\toverride function setup() {\n\t\ttrace('setup: ${toString()}');\n\n\t\tisDebug = true;\n\n\t\tshapeArray = [];\n\t\tfor (i in 0...max) {\n\t\t\tshapeArray.push(createShape(i));\n\t\t}\n\t}\n\n\toverride function draw() {\n\t\t// trace('draw: ${toString()}');\n\t\tdrawShape();\n\t\t// stop();\n\t}\n}\n","package cc;\n\nimport Sketch.Global.*;\nimport cc.util.*;\nimport cc.util.ColorUtil.*;\nimport cc.util.ColorUtil.RGB;\nimport js.html.CanvasRenderingContext2D;\n\n/**\n * using cc.CanvasTools;\n**/\nclass CanvasTools {\n\t/**\n\t * rectangles\n\t */\n\tstatic public function square(ctx:CanvasRenderingContext2D, x:Float, y:Float, width:Float, ?height:Float) {\n\t\tif (height == null)\n\t\t\theight = width;\n\t\tctx.fillRect(x, y, width, height);\n\t};\n\n\tstatic public function leftStrokeRect(ctx:CanvasRenderingContext2D, x:Float, y:Float, width:Float, ?height:Float) {\n\t\tif (height == null)\n\t\t\theight = width;\n\t\tctx.strokeRect(x, y, width, height);\n\t};\n\n\tstatic public function centreStrokeRect(ctx:CanvasRenderingContext2D, x:Float, y:Float, width:Float, ?height:Float) {\n\t\tif (height == null)\n\t\t\theight = width;\n\t\tctx.strokeRect(x - width / 2, y - height / 2, width, height);\n\t};\n\n\t// static public function centreFillStrokeRect(ctx:CanvasRenderingContext2D, x:Float, y:Float, width:Float, ?height:Float) {\n\t// \tif (height == null)\n\t// \t\theight = width;\n\t// \tctx.strokeRect(x - width / 2, y - height / 2, width, height);\n\t// };\n\n\t/**\n\t * create a rectangle with center point (x,y)\n\t * @param ctx\n\t * @param x\t\t\tcenter point x\n\t * @param y\t\t\tcenter point y\n\t * @param width\t\twidth of rectangle (if no height is given also the height)\n\t * @param height\t(optional) height of rectangle\n\t */\n\tstatic public function centreFillRect(ctx:CanvasRenderingContext2D, x:Float, y:Float, width:Float, ?height:Float) {\n\t\tif (height == null)\n\t\t\theight = width;\n\t\tctx.fillRect(x - width / 2, y - height / 2, width, height);\n\t};\n\n\tstatic public function roundRect(ctx:CanvasRenderingContext2D, _x:Float, _y:Float, _width, _height, _radius:Float = 5, ?_fill:Bool = true,\n\t\t\t?_stroke:Bool = false) {\n\t\t_width = Math.abs(_width);\n\t\t_height = Math.abs(_height);\n\t\t_x = _x - _width / 2;\n\t\t_y = _y - _height / 2;\n\t\t// if (_width < radius) radius = _width;\n\t\tvar radius = {\n\t\t\ttl: _radius,\n\t\t\ttr: _radius,\n\t\t\tbr: _radius,\n\t\t\tbl: _radius\n\t\t};\n\t\tctx.beginPath();\n\t\tctx.moveTo(_x + radius.tl, _y);\n\t\tctx.lineTo(_x + _width - radius.tr, _y);\n\t\tctx.quadraticCurveTo(_x + _width, _y, _x + _width, _y + radius.tr);\n\t\tctx.lineTo(_x + _width, _y + _height - radius.br);\n\t\tctx.quadraticCurveTo(_x + _width, _y + _height, _x + _width - radius.br, _y + _height);\n\t\tctx.lineTo(_x + radius.bl, _y + _height);\n\t\tctx.quadraticCurveTo(_x, _y + _height, _x, _y + _height - radius.bl);\n\t\tctx.lineTo(_x, _y + radius.tl);\n\t\tctx.quadraticCurveTo(_x, _y, _x + radius.tl, _y);\n\t\tctx.closePath();\n\t\tif (_fill) {\n\t\t\tctx.fill();\n\t\t}\n\t\tif (_stroke) {\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\t/**\n\t * circles\n\t */\n\tstatic public function makeCircle(ctx:CanvasRenderingContext2D, x:Float, y:Float, radius:Float) {\n\t\tctx.beginPath();\n\t\tctx.arc(x, y, radius, 0, Math.PI * 2, true);\n\t};\n\n\tstatic public function circle(ctx:CanvasRenderingContext2D, x:Float, y:Float, radius:Float) {\n\t\tmakeCircle(ctx, x, y, radius);\n\t\tctx.fill();\n\t\tctx.closePath();\n\t};\n\n\tstatic public function circleFillStroke(ctx:CanvasRenderingContext2D, x:Float, y:Float, radius:Float) {\n\t\tmakeCircle(ctx, x, y, radius);\n\t\tctx.fill();\n\t\tctx.stroke();\n\t\tctx.closePath();\n\t};\n\n\tstatic public function circleFill(ctx:CanvasRenderingContext2D, x:Float, y:Float, radius:Float)\n\t\tfillCircle(ctx, x, y, radius);\n\n\tstatic public function fillCircle(ctx:CanvasRenderingContext2D, x:Float, y:Float, radius:Float) {\n\t\tmakeCircle(ctx, x, y, radius);\n\t\tctx.fill();\n\t\tctx.closePath();\n\t};\n\n\tstatic public function circleStroke(ctx:CanvasRenderingContext2D, x:Float, y:Float, radius:Float)\n\t\tstrokeCircle(ctx, x, y, radius);\n\n\tstatic public function strokeCircle(ctx:CanvasRenderingContext2D, x:Float, y:Float, radius:Float) {\n\t\tmakeCircle(ctx, x, y, radius);\n\t\tctx.stroke();\n\t\tctx.closePath();\n\t};\n\n\t/**\n\t * polygon\n\t */\n\tstatic public function strokePolygon(ctx:CanvasRenderingContext2D, x:Float, y:Float, sides, size) {\n\t\tpolygon(ctx, x, y, sides, size);\n\t\tctx.stroke();\n\t}\n\n\tstatic public function fillPolygon(ctx:CanvasRenderingContext2D, x:Float, y:Float, sides, size) {\n\t\tpolygon(ctx, x, y, sides, size);\n\t\tctx.fill();\n\t}\n\n\tstatic public function outlinedPolygon(ctx:CanvasRenderingContext2D, x:Float, y:Float, _sides:Int, _size:Float, _fill:String, _stroke:String) {\n\t\tctx.fillStyle = _fill;\n\t\tfillPolygon(ctx, x, y, _sides, _size);\n\t\tctx.strokeStyle = _stroke;\n\t\tstrokePolygon(ctx, x, y, _sides, _size);\n\t}\n\n\t/**\n\t * more shaped stuff\n\t *\n\t * @example\n\t *\t\t\tctx.fillPolygon(point.x, point.y, 8, _size);\n\t *\n\t * @param ctx\t\tcanvas\n\t * @param x\t\t\tx position of the shape\n\t * @param y\t\t\ty position of the shape\n\t * @param sides\t\tnumber of sides (3=triangle, 4=square, etc)\n\t * @param size\t\tradius of the polygon (length to the corner)\n\t */\n\tstatic public function polygon(ctx:CanvasRenderingContext2D, x:Float, y:Float, sides:Int, size:Float) {\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + size * Math.cos(0), y + size * Math.sin(0));\n\t\tfor (i in 0...sides) {\n\t\t\tctx.lineTo(x + size * Math.cos(i * 2 * Math.PI / sides), y + size * Math.sin(i * 2 * Math.PI / sides));\n\t\t}\n\t\tctx.closePath();\n\t}\n\n\t/**\n\t * elipse\n\t */\n\tstatic public function eellipse(ctx:CanvasRenderingContext2D, x:Float, y:Float, width:Float, height:Float) {\n\t\tctx.beginPath();\n\t\tvar i:Float = 0;\n\t\tvar counter = 0;\n\t\twhile (i < Math.PI * 2) {\n\t\t\ttrace('$counter. - $i < ${Math.PI * 2}');\n\t\t\tctx.lineTo(x + (Math.cos(i) * width / 2), y + (Math.sin(i) * height / 2));\n\t\t\ti += Math.PI / 16;\n\t\t\tcounter++;\n\t\t}\n\n\t\t// for(var i=0;i<Math.PI*2;i+=Math.PI/16) {\n\t\t// \tctx.lineTo(x+(Math.cos(i)*width/2), y+(Math.sin(i)*height/2));\n\t\t// }\n\t\tctx.closePath();\n\t};\n\n\tstatic public function ellipseFill(ctx:CanvasRenderingContext2D, x:Float, y:Float, width:Float, height:Float)\n\t\tfillEllipse(ctx, x, y, width, height);\n\n\tstatic public function fillEllipse(ctx:CanvasRenderingContext2D, x:Float, y:Float, width:Float, height:Float) {\n\t\tctx.beginPath();\n\t\tctx.ellipse(x, y, width, height, 0, 0, 2 * Math.PI);\n\t\tctx.fill();\n\t};\n\n\tstatic public function ellipseStroke(ctx:CanvasRenderingContext2D, x:Float, y:Float, width:Float, height:Float)\n\t\tstrokeEllipse(ctx, x, y, width, height);\n\n\tstatic public function strokeEllipse(ctx:CanvasRenderingContext2D, x:Float, y:Float, width:Float, height:Float) {\n\t\tctx.beginPath();\n\t\tctx.ellipse(x, y, width, height, 0, 0, 2 * Math.PI);\n\t\tctx.stroke();\n\t};\n\n\tstatic public function ellipseFillStroke(ctx:CanvasRenderingContext2D, x:Float, y:Float, width:Float, height:Float)\n\t\tfillStrokeEllipse(ctx, x, y, width, height);\n\n\tstatic public function fillStrokeEllipse(ctx:CanvasRenderingContext2D, x:Float, y:Float, width:Float, height:Float) {\n\t\tctx.beginPath();\n\t\tctx.ellipse(x, y, width, height, 0, 0, 2 * Math.PI);\n\t\tctx.fill();\n\t\tctx.stroke();\n\t};\n\n\t/**\n\t * lines\n\t */\n\tstatic public function line(ctx:CanvasRenderingContext2D, x1:Float, y1:Float, x2:Float, y2:Float) {\n\t\tctx.beginPath();\n\t\tctx.moveTo(x1, y1);\n\t\tctx.lineTo(x2, y2);\n\t\tctx.stroke();\n\t\tctx.beginPath();\n\t};\n\n\t/**\n\t * triangle\n\t */\n\tstatic public function triangle(ctx:CanvasRenderingContext2D, x1:Float, y1:Float, x2:Float, y2:Float, x3:Float, y3:Float) {\n\t\tctx.beginPath();\n\t\tctx.moveTo(x1, y1);\n\t\tctx.lineTo(x2, y2);\n\t\tctx.lineTo(x3, y3);\n\t\tctx.lineTo(x1, y1);\n\t\tctx.stroke();\n\t\tctx.closePath();\n\t};\n\n\tstatic public function strokeTriangle(ctx:CanvasRenderingContext2D, x1:Float, y1:Float, x2:Float, y2:Float, x3:Float, y3:Float) {\n\t\tctx.beginPath();\n\t\tctx.moveTo(x1, y1);\n\t\tctx.lineTo(x2, y2);\n\t\tctx.lineTo(x3, y3);\n\t\tctx.lineTo(x1, y1);\n\t\tctx.stroke();\n\t\tctx.closePath();\n\t}\n\n\tstatic public function fillTriangle(ctx:CanvasRenderingContext2D, x1:Float, y1:Float, x2:Float, y2:Float, x3:Float, y3:Float) {\n\t\tctx.beginPath();\n\t\tctx.moveTo(x1, y1);\n\t\tctx.lineTo(x2, y2);\n\t\tctx.lineTo(x3, y3);\n\t\tctx.lineTo(x1, y1);\n\t\tctx.fill();\n\t\tctx.closePath();\n\t};\n\n\tstatic public function eqDownFillTriangle(ctx:CanvasRenderingContext2D, x:Float, y:Float, sz:Float) {\n\t\tctx.translate(x, y);\n\t\tctx.rotate(MathUtil.radians(180));\n\t\tfillTriangle(ctx, 0, 0 - sz, 0 + sz, 0 + sz / 2, 0 - sz, 0 + sz / 2);\n\t\tctx.rotate(MathUtil.radians(-180));\n\t\tctx.translate(-x, -y);\n\t}\n\n\tstatic public function eqDownTriangle(ctx:CanvasRenderingContext2D, x:Float, y:Float, sz:Float) {\n\t\tctx.translate(x, y);\n\t\tctx.rotate(MathUtil.radians(180));\n\t\ttriangle(ctx, 0, 0 - sz, 0 + sz, 0 + sz / 2, 0 - sz, 0 + sz / 2);\n\t\tctx.rotate(MathUtil.radians(-180));\n\t\tctx.translate(-x, -y);\n\t}\n\n\tstatic public function eqFillTriangle(ctx:CanvasRenderingContext2D, x:Float, y:Float, sz:Float) {\n\t\tfillTriangle(ctx, x, y - sz, x + sz, y + sz / 2, x - sz, y + sz / 2);\n\t}\n\n\tstatic public function eqTriangle(ctx:CanvasRenderingContext2D, x:Float, y:Float, sz:Float) {\n\t\ttriangle(ctx, x, y - sz, x + sz, y + sz / 2, x - sz, y + sz / 2);\n\t}\n\n\t/**\n\t * change appairance\n\t */\n\tstatic public function strokeWeight(ctx:CanvasRenderingContext2D, inPx:Int) {\n\t\tctx.lineWidth = inPx; // px\n\t}\n\n\tstatic public function fillColour(ctx:CanvasRenderingContext2D, r:Int, ?g:Int, ?b:Int, ?a:Float) {\n\t\tcolour(ctx, r, g, b, a);\n\t};\n\n\tstatic public function fillColourRGB(ctx:CanvasRenderingContext2D, rgb:cc.util.ColorUtil.RGB, ?a:Float) {\n\t\tcolour(ctx, rgb.r, rgb.g, rgb.b, a);\n\t};\n\n\tstatic public function colour(ctx:CanvasRenderingContext2D, r:Int, ?g:Int, ?b:Int, ?a:Float) {\n\t\tvar c = ColorUtil.getColour(r, g, b, a);\n\t\tctx.fillStyle = c;\n\t};\n\n\tstatic public function colourObj(ctx:CanvasRenderingContext2D, rgb:cc.util.ColorUtil.RGB, ?a:Float) {\n\t\tvar c = ColorUtil.getColour(rgb.r, rgb.g, rgb.b, a);\n\t\tctx.fillStyle = c;\n\t};\n\n\tstatic public function shadowColorRGB(ctx:CanvasRenderingContext2D, rgb:cc.util.ColorUtil.RGB, ?a:Float) {\n\t\tvar c = ColorUtil.getColour(rgb.r, rgb.g, rgb.b, a);\n\t\tctx.shadowColor = c;\n\t};\n\n\tstatic public function strokeColourObj(ctx:CanvasRenderingContext2D, rgb:cc.util.ColorUtil.RGB, ?a:Float) {\n\t\tlineColour(ctx, rgb.r, rgb.g, rgb.b, a);\n\t};\n\n\tstatic public function lineColourRGB(ctx:CanvasRenderingContext2D, rgb:cc.util.ColorUtil.RGB, ?a:Float) {\n\t\tlineColour(ctx, rgb.r, rgb.g, rgb.b, a);\n\t};\n\n\tstatic public function strokeColourRGB(ctx:CanvasRenderingContext2D, rgb:cc.util.ColorUtil.RGB, ?a:Float) {\n\t\tlineColour(ctx, rgb.r, rgb.g, rgb.b, a);\n\t};\n\n\tstatic public function strokeColour(ctx:CanvasRenderingContext2D, r:Int, ?g:Int, ?b:Int, ?a:Float) {\n\t\tlineColour(ctx, r, g, b, a);\n\t};\n\n\tstatic public function lineColour(ctx:CanvasRenderingContext2D, r:Int, ?g:Int, ?b:Int, ?a:Float) {\n\t\tctx.strokeStyle = ColorUtil.getColour(r, g, b, a);\n\t};\n\n\tstatic public function colourName(ctx:CanvasRenderingContext2D, name:String) {\n\t\tctx.fillStyle = name;\n\t};\n\n\t/**\n\t * create background colors for sketch\n\t * @param ctx\n\t * @param r\tred\n\t * @param g\t(optional) green\n\t * @param b\t(optional) blue\n\t * @param a\t(optional) alpha\n\t */\n\tstatic public function background(ctx:CanvasRenderingContext2D, r:Int, ?g:Int, ?b:Int, ?a:Float) {\n\t\tif (g == null) {\n\t\t\tctx.fillStyle = ColorUtil.rgb(r, r, r);\n\t\t} else if (b == null && a == null) {\n\t\t\tctx.fillStyle = ColorUtil.rgba(r, r, r, g);\n\t\t} else if (a == null) {\n\t\t\tctx.fillStyle = ColorUtil.rgb(r, g, b);\n\t\t} else {\n\t\t\tctx.fillStyle = ColorUtil.rgba(r, g, b, a);\n\t\t}\n\t\tctx.fillRect(0, 0, w, h);\n\t};\n\n\tstatic public function backgroundObj(ctx:CanvasRenderingContext2D, rgb:ColorUtil.RGB) {\n\t\tbackground(ctx, rgb.r, rgb.g, rgb.b);\n\t}\n\n\tstatic public function backgroundRGB(ctx:CanvasRenderingContext2D, rgb:ColorUtil.RGB) {\n\t\tbackground(ctx, rgb.r, rgb.g, rgb.b);\n\t}\n}\n","package cc.draw;\n\nimport js.html.CanvasRenderingContext2D;\nimport js.html.*;\nimport js.Browser.document;\nimport js.Browser.window;\n// import cc.Global.*;\nimport cc.util.ColorUtil.RGB;\nimport cc.util.MathUtil.*;\nimport cc.draw.Gradient;\n\nusing cc.CanvasTools;\nusing StringTools;\n\nclass Circle {\n\t// are always set\n\tprivate var _ctx:CanvasRenderingContext2D;\n\n\t// defaults\n\t@:isVar public var _x(get, set):Float = 100;\n\t@:isVar public var _y(get, set):Float = 100;\n\t@:isVar public var _radius(get, set):Float = 100;\n\t@:isVar public var _alpha(get, set):Float = 1; // 0 -> 1\n\t@:isVar public var _rotate(get, set):Int = 0; // weird for circles ???\n\n\t// Color\n\tprivate var _color:RGB;\n\tprivate var _colorstoke:RGB;\n\n\t@:isVar public var _gradient(get, set):js.html.CanvasGradient;\n\n\t// ____________________________________ constructor ____________________________________\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tthis._ctx = ctx;\n\t}\n\n\t/**\n\t * var text = Text.create (ctx, 'Matthijs Kamstra aka [mck]').draw();\n\t *\n\t * @param ctx\n\t * @param text\n\t * @return Text\n\t */\n\tstatic inline public function create(ctx:CanvasRenderingContext2D):Circle {\n\t\tvar c = new Circle(ctx);\n\t\treturn c;\n\t}\n\n\t// ____________________________________ properties ____________________________________\n\n\tinline public function x(x:Float):Circle {\n\t\tthis._x = x;\n\t\treturn this;\n\t}\n\n\tinline public function y(y:Float):Circle {\n\t\tthis._y = y;\n\t\treturn this;\n\t}\n\n\tinline public function pos(x:Float, y:Float):Circle {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\treturn this;\n\t}\n\n\tinline public function radius(px:Int):Circle {\n\t\tthis._radius = px;\n\t\treturn this;\n\t}\n\n\tinline public function rotate(degree:Int):Circle {\n\t\tthis._rotate = degree;\n\t\treturn this;\n\t}\n\n\tinline public function rotateLeft():Circle {\n\t\tthis._rotate = -90;\n\t\treturn this;\n\t}\n\n\tinline public function rotateRight():Circle {\n\t\tthis._rotate = 90;\n\t\treturn this;\n\t}\n\n\tinline public function rotateDown():Circle {\n\t\tthis._rotate = 180;\n\t\treturn this;\n\t}\n\n\tinline public function color(value:RGB):Circle {\n\t\tthis._color = value;\n\t\treturn this;\n\t}\n\n\tinline public function gradient(value:js.html.CanvasGradient):Circle {\n\t\tthis._gradient = value;\n\t\treturn this;\n\t}\n\n\tinline public function fill(value:RGB):Circle {\n\t\tthis._color = value;\n\t\treturn this;\n\t}\n\n\tinline public function stroke(value:RGB):Circle {\n\t\tthis._colorstoke = value;\n\t\treturn this;\n\t}\n\n\tinline public function alpha(value:Float):Circle {\n\t\tthis._alpha = value;\n\t\treturn this;\n\t}\n\n\tinline public function draw():Circle {\n\t\t// draw to convast\n\t\t_ctx.save(); // save current state\n\n\t\tvar previousColor = _ctx.fillStyle;\n\t\t// check if color is set\n\t\tif (_color != null && _gradient == null) {\n\t\t\t_ctx.fillColourRGB(_color, _alpha);\n\t\t}\n\n\t\tif (_gradient != null) {\n\t\t\t_ctx.fillStyle = _gradient;\n\t\t}\n\t\tthis.circleFill(_ctx, _x, _y, _radius);\n\n\t\t// move canvas and rotate\n\t\t// _ctx.translate(_x, _y);\n\t\t// _ctx.rotate(radians(_rotate) );\n\t\t// print text\n\t\t// _ctx.fillText(_text, 0, 0);\n\n\t\t// restore canvas to previous position\n\t\t_ctx.restore();\n\n\t\t// restore previous color?\n\t\t_ctx.fillStyle = previousColor;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * circles\n\t */\n\tfunction makeCircle(ctx:CanvasRenderingContext2D, x:Float, y:Float, radius:Float) {\n\t\tctx.beginPath();\n\t\tctx.arc(x, y, radius, 0, Math.PI * 2, true);\n\t};\n\n\tfunction circleFillStroke(ctx:CanvasRenderingContext2D, x:Float, y:Float, radius:Float) {\n\t\tmakeCircle(ctx, x, y, radius);\n\t\tctx.fill();\n\t\tctx.stroke();\n\t\tctx.closePath();\n\t};\n\n\tfunction circleFill(ctx:CanvasRenderingContext2D, x:Float, y:Float, radius:Float) {\n\t\tmakeCircle(ctx, x, y, radius);\n\t\tctx.fill();\n\t\tctx.closePath();\n\t};\n\n\tfunction circleStroke(ctx:CanvasRenderingContext2D, x:Float, y:Float, radius:Float) {\n\t\tmakeCircle(ctx, x, y, radius);\n\t\tctx.stroke();\n\t\tctx.closePath();\n\t};\n\n\t// ____________________________________ getter/setter ____________________________________\n\n\tfunction get__x():Float {\n\t\treturn _x;\n\t}\n\n\tfunction set__x(value:Float):Float {\n\t\treturn _x = value;\n\t}\n\n\tfunction get__y():Float {\n\t\treturn _y;\n\t}\n\n\tfunction set__y(value:Float):Float {\n\t\treturn _y = value;\n\t}\n\n\tfunction get__radius():Float {\n\t\treturn _radius;\n\t}\n\n\tfunction set__radius(value:Float):Float {\n\t\treturn _radius = value;\n\t}\n\n\tfunction get__alpha():Float {\n\t\treturn _alpha;\n\t}\n\n\tfunction set__alpha(value:Float):Float {\n\t\treturn _alpha = value;\n\t}\n\n\tfunction get__rotate():Int {\n\t\treturn _rotate;\n\t}\n\n\tfunction set__rotate(value:Int):Int {\n\t\treturn _rotate = value;\n\t}\n\n\tfunction get__gradient():js.html.CanvasGradient {\n\t\treturn _gradient;\n\t}\n\n\tfunction set__gradient(value:js.html.CanvasGradient):js.html.CanvasGradient {\n\t\treturn _gradient = value;\n\t}\n\n\t// ____________________________________ tostring ____________________________________\n\tpublic function toString() {\n\t\t// return haxe.Json.stringify(this);\n\t\treturn ('Circle: ' + haxe.Json.parse(haxe.Json.stringify(this)));\n\t}\n}\n","package cc.draw;\n\nimport js.html.CanvasRenderingContext2D;\nimport js.html.*;\nimport js.Browser.document;\nimport js.Browser.window;\n// import cc.Global.*;\nimport cc.util.ColorUtil.RGB;\nimport cc.util.MathUtil.*;\n\nusing cc.CanvasTools;\nusing StringTools;\n\n/**\n * @example:\n * \t\tvar gradient = cc.draw.Gradient.create(ctx).draw();\n * \t\tctx.fillRect(0, 0, gradient.width, gradient.height);\n *\n * \t\t// try gradient circle\n * \t\tvar circle = cc.draw.Circle.create(ctx).radius(20).pos(55, 55).radius(20);\n *\t\tvar grad = cc.draw.Gradient.create(ctx).circle(circle).draw();\n *\t\tcircle.gradient(grad.get).draw();\n *\t\ttrace(circle.toString());\n *\t\ttrace(grad.toString());\n */\nclass Gradient {\n\t// are always set\n\tprivate var _ctx:CanvasRenderingContext2D;\n\tprivate var _x:Float = 0;\n\tprivate var _y:Float = 0;\n\tprivate var _width:Float = 100;\n\tprivate var _height:Float = 100;\n\tprivate var _startPoint:GradientObj = {x: 0, y: 0};\n\tprivate var _endPoint:GradientObj = {x: 100, y: 100};\n\tprivate var _get:js.html.CanvasGradient;\n\tprivate var _colorArray:Array<Dynamic>;\n\tprivate var _circle:cc.draw.Circle;\n\tprivate var _dir:String = 'l';\n\n\t// getter setter\n\t@:isVar public var _linear(get, set):Bool = true;\n\t@:isVar public var _radial(get, set):Bool = false;\n\n\t// /\n\tpublic function new(ctx:CanvasRenderingContext2D) {\n\t\tsetDir(_dir);\n\t\tthis._colorArray = [{stop: 0, color: \"black\"}, {stop: 1, color: \"white\"},];\n\t\tthis._ctx = ctx;\n\t}\n\n\t/**\n\t * var Gradient = Gradient.create (ctx, 'Matthijs Kamstra aka [mck]').draw();\n\t *\n\t * @param ctx\n\t *\n\t * @return Gradient\n\t */\n\tstatic inline public function create(ctx:CanvasRenderingContext2D):Gradient {\n\t\tvar c = new Gradient(ctx);\n\t\treturn c;\n\t}\n\n\t// ____________________________________ properties ____________________________________\n\tinline public function x(x:Float):Gradient {\n\t\tthis._x = x;\n\t\treturn this;\n\t}\n\n\tinline public function y(y:Float):Gradient {\n\t\tthis._y = y;\n\t\treturn this;\n\t}\n\n\tinline public function pos(x:Float, y:Float):Gradient {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\treturn this;\n\t}\n\n\tinline public function size(w:Float, h:Float):Gradient {\n\t\tthis._width = w;\n\t\tthis._height = h;\n\t\treturn this;\n\t}\n\n\tinline public function linear():Gradient {\n\t\tthis._linear = true;\n\t\tthis._radial = false;\n\t\treturn this;\n\t}\n\n\tinline public function radial():Gradient {\n\t\tthis._linear = false;\n\t\tthis._radial = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * attach the values of cc.draw.Circle\n\t *\n\t * @param circle\n\t * @return Gradient\n\t */\n\tinline public function circle(circle:cc.draw.Circle):Gradient {\n\t\tthis._circle = circle;\n\t\ttrace(circle.toString());\n\t\tthis._x = (circle._x - circle._radius * 1);\n\t\tthis._y = (circle._y - circle._radius * 1);\n\t\tthis._width = circle._radius * 2;\n\t\tthis._height = circle._radius * 2;\n\t\treturn this;\n\t}\n\n\tinline public function left():Gradient {\n\t\tsetDir('l');\n\t\treturn this;\n\t}\n\n\tinline public function right():Gradient {\n\t\tsetDir('r');\n\t\treturn this;\n\t}\n\n\tinline public function top():Gradient {\n\t\tsetDir('t');\n\t\treturn this;\n\t}\n\n\tinline public function bottom():Gradient {\n\t\tsetDir('b');\n\t\treturn this;\n\t}\n\n\tinline public function direction(startPoint:GradientObj, endPoint:GradientObj):Gradient {\n\t\tthis._startPoint = startPoint;\n\t\tthis._endPoint = endPoint;\n\t\treturn this;\n\t}\n\n\t/**\n\t * add colors, not clever right now. Just send a string for now\n\t * @param stop value between 0 and 1\n\t * @param color\n\t * @return inline public function draw():Gradient\n\t */\n\tinline public function color(stop:Float, color:String):Gradient {\n\t\tstop = clamp(stop, 0, 1);\n\t\tthis._colorArray.push({stop: stop, color: color});\n\t\treturn this;\n\t}\n\n\tfunction setDir(dir:String) {\n\t\tthis._dir = dir;\n\t\tswitch (dir) {\n\t\t\tcase 'l':\n\t\t\t\tthis._startPoint = {x: _x, y: _y};\n\t\t\t\tthis._endPoint = {x: _x + _width, y: _y};\n\t\t\tcase 'r':\n\t\t\t\tthis._startPoint = {x: _x + _width, y: _y};\n\t\t\t\tthis._endPoint = {x: _x, y: _y};\n\t\t\tcase 't':\n\t\t\t\tthis._startPoint = {x: _x, y: _y};\n\t\t\t\tthis._endPoint = {x: _x, y: _y + _height};\n\t\t\tcase 'b':\n\t\t\t\tthis._startPoint = {x: _x, y: _y + _height};\n\t\t\t\tthis._endPoint = {x: _x, y: _y};\n\t\t\tdefault:\n\t\t\t\tthis._startPoint = {x: _x, y: _y};\n\t\t\t\tthis._endPoint = {x: _x + _width, y: _y};\n\t\t\t\ttrace(\"case '\" + dir + \"': trace ('\" + dir + \"');\");\n\t\t}\n\t}\n\n\tinline public function draw():Gradient {\n\t\tsetDir(this._dir);\n\t\tif (_linear) {\n\t\t\t_get = _ctx.createLinearGradient(_startPoint.x, _startPoint.y, _endPoint.x, _endPoint.y);\n\t\t} else {\n\t\t\ttrace('WIP');\n\t\t\t// _get = _ctx.createRadialGradient(_startPoint.x, _startPoint.y, _endPoint.x, _endPoint.y);\n\t\t}\n\t\tfor (i in 0..._colorArray.length) {\n\t\t\tvar _c = _colorArray[i];\n\t\t\t_get.addColorStop(_c.stop, _c.color);\n\t\t\t// trace('stop: ${_c.stop}, color; ${_c.color}');\n\t\t}\n\t\t// _get.addColorStop(0, \"black\");\n\t\t// _get.addColorStop(1, \"white\");\n\t\t_ctx.fillStyle = _get;\n\t\treturn this;\n\t}\n\n\t// ____________________________________ getter setters ____________________________________\n\tpublic var width(get_width, set_width):Float;\n\n\tfunction get_width():Float {\n\t\treturn _width;\n\t}\n\n\tfunction set_width(value:Float):Float {\n\t\treturn _width = value;\n\t}\n\n\tpublic var height(get_height, set_height):Float;\n\n\tfunction get_height():Float {\n\t\treturn _height;\n\t}\n\n\tfunction set_height(value:Float):Float {\n\t\treturn _height = value;\n\t}\n\n\tpublic var get(get_get, null):js.html.CanvasGradient;\n\n\tfunction get_get():js.html.CanvasGradient {\n\t\t_get = _ctx.createLinearGradient(_startPoint.x, _startPoint.y, _endPoint.x, _endPoint.y);\n\t\tfor (i in 0..._colorArray.length) {\n\t\t\tvar _c = _colorArray[i];\n\t\t\t_get.addColorStop(_c.stop, _c.color);\n\t\t\t// trace('stop: ${_c.stop}, color; ${_c.color}');\n\t\t}\n\t\t// _get.addColorStop(0, \"black\");\n\t\t// _get.addColorStop(1, \"white\");\n\t\t_ctx.fillStyle = _get;\n\t\treturn _get;\n\t}\n\n\tpublic var xpos(get_xpos, null):Float;\n\n\tfunction get_xpos():Float {\n\t\treturn _x;\n\t}\n\n\tpublic var ypos(get_ypos, null):Float;\n\n\tfunction get_ypos():Float {\n\t\treturn _y;\n\t}\n\n\tfunction get__linear():Bool {\n\t\treturn _linear;\n\t}\n\n\tfunction set__linear(value:Bool):Bool {\n\t\treturn _linear = value;\n\t}\n\n\tfunction get__radial():Bool {\n\t\treturn _radial;\n\t}\n\n\tfunction set__radial(value:Bool):Bool {\n\t\treturn _radial = value;\n\t}\n\n\t// ____________________________________ tostring ____________________________________\n\tpublic function toString() {\n\t\t// return '{\n\t\t// \t_x: ${_x},\n\t\t// \t_y: ${_y},\n\t\t// \t_color: ${_color},\n\t\t// \t_radius: ${_radius},\n\t\t// }';\n\t\treturn ('Gradient: ' + haxe.Json.parse(haxe.Json.stringify(this)));\n\t}\n}\n\ntypedef GradientObj = {\n\tvar x:Float; // The x-coordinate of the starting circle of the gradient\n\tvar y:Float; // The y-coordinate of the starting circle of the gradient\n\t@:optional var r:Float; // The radius of the starting circle\n};\n","package cc.lets;\n\nclass Easing {\n\tstatic inline public function linear(v:Float):Float {\n\t\treturn v;\n\t}\n\n\tstatic inline public function quad(v:Float):Float {\n\t\treturn v * v;\n\t}\n\n\tstatic inline public function cubic(v:Float):Float {\n\t\treturn v * v * v;\n\t}\n\n\tstatic inline public function quart(v:Float):Float {\n\t\treturn v * v * v;\n\t}\n\n\tstatic inline public function quint(v:Float):Float {\n\t\treturn v * v * v;\n\t}\n\n\tstatic inline public function sine(v:Float):Float {\n\t\treturn 1 - Math.cos(v * Math.PI / 2);\n\t}\n\n\tstatic inline public function circ(v:Float):Float {\n\t\treturn 1 - Math.sqrt(1 - v * v);\n\t}\n\n\tstatic inline public function expo(v:Float):Float {\n\t\treturn (v == 0) ? 0 : Math.pow(2, 10 * (v - 1));\n\t}\n\n\tstatic inline public function back(v:Float):Float {\n\t\tvar s = 1.70158;\n\t\treturn v * v * ((s + 1) * v - s);\n\t}\n\n\tstatic inline public function bounce(v:Float):Float {\n\t\tv = 1 - v;\n\t\treturn 1 - if (v < (1 / 2.75)) (7.5625 * v * v)\n\t\telse if (v < (2 / 2.75)) (7.5625 * (v -= (1.5 / 2.75)) * v + .75)\n\t\telse if (v < (2.5 / 2.75)) (7.5625 * (v -= (2.25 / 2.75)) * v + .9375)\n\t\telse\n\t\t\t(7.5625 * (v -= (2.625 / 2.75)) * v + .984375);\n\t}\n\n\tstatic inline public function elastic(v:Float):Float {\n\t\tif (v == 0)\n\t\t\treturn 0;\n\t\tif (v == 1)\n\t\t\treturn 1;\n\t\tvar p = .3;\n\t\tvar s = p / 4;\n\n\t\treturn -(Math.pow(2, 10 * (v -= 1)) * Math.sin((v - 0.075) * (2 * Math.PI) / 0.3));\n\t}\n\n\tstatic public function reverse(f:Float->Float):Float->Float {\n\t\treturn function(v:Float):Float {\n\t\t\treturn 1 - f(1 - v);\n\t\t}\n\t}\n\n\tstatic public function reflect(f:Float->Float):Float->Float {\n\t\treturn function(v:Float):Float {\n\t\t\treturn if (v < 0.5) {\n\t\t\t\tf(v * 2) / 2;\n\t\t\t} else {\n\t\t\t\t1 - f(2 - v * 2) / 2;\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * @author Joshua Granick\n * @author Philippe / http://philippe.elsass.me\n * @author Robert Penner / http://www.robertpenner.com/easing_terms_of_use.html\n */\npackage cc.lets.easing;\n\nclass Elastic {\n\tstatic public var easeIn(get_easeIn, never):IEasing;\n\tstatic public var easeInOut(get_easeInOut, never):IEasing;\n\tstatic public var easeOut(get_easeOut, never):IEasing;\n\n\tprivate static function get_easeIn():IEasing {\n\t\treturn new ElasticEaseIn(0.1, 0.4);\n\t}\n\n\tprivate static function get_easeInOut():IEasing {\n\t\treturn new ElasticEaseInOut(0.1, 0.4);\n\t}\n\n\tprivate static function get_easeOut():IEasing {\n\t\treturn new ElasticEaseOut(0.1, 0.4);\n\t}\n}\n\nclass ElasticEaseIn implements IEasing {\n\tpublic var a:Float;\n\tpublic var p:Float;\n\n\tpublic function new(a:Float, p:Float) {\n\t\tthis.a = a;\n\t\tthis.p = p;\n\t}\n\n\tpublic function calculate(k:Float):Float {\n\t\tif (k == 0)\n\t\t\treturn 0;\n\t\tif (k == 1)\n\t\t\treturn 1;\n\t\tvar s:Float;\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\treturn -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n\t}\n\n\tpublic function ease(t:Float, b:Float, c:Float, d:Float):Float {\n\t\tif (t == 0) {\n\t\t\treturn b;\n\t\t}\n\t\tif ((t /= d) == 1) {\n\t\t\treturn b + c;\n\t\t}\n\t\tvar s:Float;\n\t\tif (a < Math.abs(c)) {\n\t\t\ta = c;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(c / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n\t}\n}\n\nclass ElasticEaseInOut implements IEasing {\n\tpublic var a:Float;\n\tpublic var p:Float;\n\n\tpublic function new(a:Float, p:Float) {\n\t\tthis.a = a;\n\t\tthis.p = p;\n\t}\n\n\tpublic function calculate(k:Float):Float {\n\t\tif (k == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((k /= 1 / 2) == 2) {\n\t\t\treturn 1;\n\t\t}\n\n\t\tvar p:Float = (0.3 * 1.5);\n\t\tvar a:Float = 1;\n\t\tvar s:Float = p / 4;\n\n\t\tif (k < 1) {\n\t\t\treturn -0.5 * (Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t}\n\n\tpublic function ease(t:Float, b:Float, c:Float, d:Float):Float {\n\t\tif (t == 0) {\n\t\t\treturn b;\n\t\t}\n\t\tif ((t /= d / 2) == 2) {\n\t\t\treturn b + c;\n\t\t}\n\t\tvar s:Float;\n\t\tif (a < Math.abs(c)) {\n\t\t\ta = c;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(c / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * 0.5 + c + b;\n\t}\n}\n\nclass ElasticEaseOut implements IEasing {\n\tpublic var a:Float;\n\tpublic var p:Float;\n\n\tpublic function new(a:Float, p:Float) {\n\t\tthis.a = a;\n\t\tthis.p = p;\n\t}\n\n\tpublic function calculate(k:Float):Float {\n\t\tif (k == 0)\n\t\t\treturn 0;\n\t\tif (k == 1)\n\t\t\treturn 1;\n\t\tvar s:Float;\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\treturn (a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n\t}\n\n\tpublic function ease(t:Float, b:Float, c:Float, d:Float):Float {\n\t\tif (t == 0) {\n\t\t\treturn b;\n\t\t}\n\t\tif ((t /= d) == 1) {\n\t\t\treturn b + c;\n\t\t}\n\t\tvar s:Float;\n\t\tif (a < Math.abs(c)) {\n\t\t\ta = c;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(c / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b;\n\t}\n}\n","/**\n * @author Joshua Granick\n * @author Robert Penner / http://www.robertpenner.com/easing_terms_of_use.html\n */\npackage cc.lets.easing;\n\nclass Quad {\n\tstatic public var easeIn(get_easeIn, never):IEasing;\n\tstatic public var easeInOut(get_easeInOut, never):IEasing;\n\tstatic public var easeOut(get_easeOut, never):IEasing;\n\n\tprivate static function get_easeIn():IEasing {\n\t\treturn new QuadEaseIn();\n\t}\n\n\tprivate static function get_easeInOut():IEasing {\n\t\treturn new QuadEaseInOut();\n\t}\n\n\tprivate static function get_easeOut():IEasing {\n\t\treturn new QuadEaseOut();\n\t}\n}\n\nclass QuadEaseIn implements IEasing {\n\tpublic function new() {}\n\n\tpublic function calculate(k:Float):Float {\n\t\treturn k * k;\n\t}\n\n\tpublic function ease(t:Float, b:Float, c:Float, d:Float):Float {\n\t\treturn c * (t /= d) * t + b;\n\t}\n}\n\nclass QuadEaseInOut implements IEasing {\n\tpublic function new() {}\n\n\tpublic function calculate(k:Float):Float {\n\t\tif ((k *= 2) < 1) {\n\t\t\treturn 1 / 2 * k * k;\n\t\t}\n\t\treturn -1 / 2 * ((k - 1) * (k - 3) - 1);\n\t}\n\n\tpublic function ease(t:Float, b:Float, c:Float, d:Float):Float {\n\t\tif ((t /= d / 2) < 1) {\n\t\t\treturn c / 2 * t * t + b;\n\t\t}\n\t\treturn -c / 2 * ((t - 1) * (t - 3) - 1) + b;\n\t}\n}\n\nclass QuadEaseOut implements IEasing {\n\tpublic function new() {}\n\n\tpublic function calculate(k:Float):Float {\n\t\treturn -k * (k - 2);\n\t}\n\n\tpublic function ease(t:Float, b:Float, c:Float, d:Float):Float {\n\t\treturn -c * (t /= d) * (t - 2) + b;\n\t}\n}\n","/**\n * @author Joshua Granick\n * @author Philippe / http://philippe.elsass.me\n * @author Robert Penner / http://www.robertpenner.com/easing_terms_of_use.html\n */\npackage cc.lets.easing;\n\nclass Quart {\n\tstatic public var easeIn(get_easeIn, never):IEasing;\n\tstatic public var easeInOut(get_easeInOut, never):IEasing;\n\tstatic public var easeOut(get_easeOut, never):IEasing;\n\n\tprivate static function get_easeIn():IEasing {\n\t\treturn new QuartEaseIn();\n\t}\n\n\tprivate static function get_easeInOut():IEasing {\n\t\treturn new QuartEaseInOut();\n\t}\n\n\tprivate static function get_easeOut():IEasing {\n\t\treturn new QuartEaseOut();\n\t}\n}\n\nclass QuartEaseIn implements IEasing {\n\tpublic function new() {}\n\n\tpublic function calculate(k:Float):Float {\n\t\treturn k * k * k * k;\n\t}\n\n\tpublic function ease(t:Float, b:Float, c:Float, d:Float):Float {\n\t\treturn c * (t /= d) * t * t * t + b;\n\t}\n}\n\nclass QuartEaseInOut implements IEasing {\n\tpublic function new() {}\n\n\tpublic function calculate(k:Float):Float {\n\t\tif ((k *= 2) < 1)\n\t\t\treturn 0.5 * k * k * k * k;\n\t\treturn -0.5 * ((k -= 2) * k * k * k - 2);\n\t}\n\n\tpublic function ease(t:Float, b:Float, c:Float, d:Float):Float {\n\t\tif ((t /= d / 2) < 1) {\n\t\t\treturn c / 2 * t * t * t * t + b;\n\t\t}\n\t\treturn -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n\t}\n}\n\nclass QuartEaseOut implements IEasing {\n\tpublic function new() {}\n\n\tpublic function calculate(k:Float):Float {\n\t\treturn -(--k * k * k * k - 1);\n\t}\n\n\tpublic function ease(t:Float, b:Float, c:Float, d:Float):Float {\n\t\treturn -c * ((t = t / d - 1) * t * t * t - 1) + b;\n\t}\n}\n","﻿/**\n * @author Joshua Granick\n * @author Robert Penner / http://www.robertpenner.com/easing_terms_of_use.html\n */\npackage cc.lets.easing;\n\nclass Sine {\n\tstatic public var easeIn(get_easeIn, never):IEasing;\n\tstatic public var easeInOut(get_easeInOut, never):IEasing;\n\tstatic public var easeOut(get_easeOut, never):IEasing;\n\n\tprivate static function get_easeIn():IEasing {\n\t\treturn new SineEaseIn();\n\t}\n\n\tprivate static function get_easeInOut():IEasing {\n\t\treturn new SineEaseInOut();\n\t}\n\n\tprivate static function get_easeOut():IEasing {\n\t\treturn new SineEaseOut();\n\t}\n}\n\nclass SineEaseIn implements IEasing {\n\tpublic function new() {}\n\n\tpublic function calculate(k:Float):Float {\n\t\treturn 1 - Math.cos(k * (Math.PI / 2));\n\t}\n\n\tpublic function ease(t:Float, b:Float, c:Float, d:Float):Float {\n\t\treturn -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n\t}\n}\n\nclass SineEaseInOut implements IEasing {\n\tpublic function new() {}\n\n\tpublic function calculate(k:Float):Float {\n\t\treturn -(Math.cos(Math.PI * k) - 1) / 2;\n\t}\n\n\tpublic function ease(t:Float, b:Float, c:Float, d:Float):Float {\n\t\treturn -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n\t}\n}\n\nclass SineEaseOut implements IEasing {\n\tpublic function new() {}\n\n\tpublic function calculate(k:Float):Float {\n\t\treturn Math.sin(k * (Math.PI / 2));\n\t}\n\n\tpublic function ease(t:Float, b:Float, c:Float, d:Float):Float {\n\t\treturn c * Math.sin(t / d * (Math.PI / 2)) + b;\n\t}\n}\n","package cc.noise;\n\n/*\n * OpenSimplex Noise in Java.\n * by Kurt Spencer\n *\n * v1.1 (October 5, 2014)\n * - Added 2D and 4D implementations.\n * - Proper gradient sets for all dimensions, from a\n *   dimensionally-generalizable scheme with an actual\n *   rhyme and reason behind it.\n * - Removed default permutation array in favor of\n *   default seed.\n * - Changed seed-based constructor to be independent\n *   of any particular randomization library, so results\n *   will be the same when ported to other languages.\n */\n\n\n/**\n * https://gist.github.com/KdotJPG/b1270127455a94ac5d19\n *\n */\nclass OpenSimplexNoise {\n\n    private static var STRETCH_CONSTANT_2D:Float = -0.211324865405187;    //(1/Math.sqrt(2+1)-1)/2;\n    private static var SQUISH_CONSTANT_2D:Float = 0.366025403784439;      //(Math.sqrt(2+1)-1)/2;\n    private static var STRETCH_CONSTANT_3D:Float = -1.0 / 6;              //(1/Math.sqrt(3+1)-1)/3;\n    private static var SQUISH_CONSTANT_3D:Float = 1.0 / 3;                //(Math.sqrt(3+1)-1)/3;\n    private static var STRETCH_CONSTANT_4D:Float = -0.138196601125011;    //(1/Math.sqrt(4+1)-1)/4;\n    private static var SQUISH_CONSTANT_4D:Float = 0.309016994374947;      //(Math.sqrt(4+1)-1)/4;\n\n    private static var NORM_CONSTANT_2D:Float = 47;\n    private static var NORM_CONSTANT_3D:Float = 103;\n    private static var NORM_CONSTANT_4D:Float = 30;\n\n    private static var DEFAULT_SEED:Int = 0;\n\n    private var perm:Array<Int>;\n    private var permGradIndex3D:Array<Int>;\n\n    public function new() {\n        setup(DEFAULT_SEED);\n    }\n\n    // public OpenSimplexNoise(perm:Array<Int>) {\n    //     this.perm = perm;\n    //     permGradIndex3D = new Array<Int>();\n\n    //     for (i in 0...256) {\n    //         //Since 3D has 24 gradients, simple bitmask won't work, so precompute modulo array.\n    //         permGradIndex3D.push(((perm[i] % Math.floor(gradients3D.length / 3)) * 3));\n    //     }\n    // }\n\n    //Initializes the class using a permutation array generated from a 64-bit seed.\n    //Generates a proper permutation (i.e. doesn't merely perform N successive pair swaps on a base array)\n    //Uses a simple 64-bit LCG.\n    public function setup(seed:Int) {\n        perm = new Array<Int>();\n        permGradIndex3D = new Array<Int>();\n        var source = new Array<Int>();\n        for (i in 0...256)\n        {\n            source.push(i);\n        }\n        seed = seed * 636413622 + 14426950;\n        seed = seed * 636413622 + 14426950;\n        seed = seed * 636413622 + 14426950;\n        var i = 255;\n        while(i >= 0)\n        {\n            seed = seed * 636413622 + 14426950;\n            var r:Int = ((seed + 31) % (i + 1));\n            if (r < 0)\n                r += (i + 1);\n            perm[i] = source[r];\n            permGradIndex3D[i] = ((perm[i] % Math.floor(gradients3D.length / 3)) * 3);\n            source[r] = source[i];\n            i--;\n        }\n    }\n\n    //2D OpenSimplex Noise.\n    public function eval(x:Float, y:Float):Float {\n\n        //Place input coordinates onto grid.\n        var stretchOffset:Float = (x + y) * STRETCH_CONSTANT_2D;\n        var xs:Float = x + stretchOffset;\n        var ys:Float = y + stretchOffset;\n\n        //Floor to get grid coordinates of rhombus (stretched square) super-cell origin.\n        var xsb:Int = fastFloor(xs);\n        var ysb:Int = fastFloor(ys);\n\n        //Skew out to get actual coordinates of rhombus origin. We'll need these later.\n        var squishOffset:Float = (xsb + ysb) * SQUISH_CONSTANT_2D;\n        var xb:Float = xsb + squishOffset;\n        var yb:Float = ysb + squishOffset;\n\n        //Compute grid coordinates relative to rhombus origin.\n        var xins:Float = xs - xsb;\n        var yins:Float = ys - ysb;\n\n        //Sum those together to get a value that determines which region we're in.\n        var inSum:Float = xins + yins;\n\n        //Positions relative to origin point.\n        var dx0:Float = x - xb;\n        var dy0:Float = y - yb;\n\n        //We'll be defining these inside the next block and using them afterwards.\n        var dx_ext:Float = 0;\n        var dy_ext:Float = 0;\n        var xsv_ext:Int = 0;\n        var ysv_ext:Int = 0;\n        var sv_ext:Int = 0;\n\n        var value:Float = 0;\n\n        //Contribution (1,0)\n        var dx1:Float = dx0 - 1 - SQUISH_CONSTANT_2D;\n        var dy1:Float = dy0 - 0 - SQUISH_CONSTANT_2D;\n        var attn1:Float = 2 - dx1 * dx1 - dy1 * dy1;\n        if (attn1 > 0) {\n            attn1 *= attn1;\n            value += attn1 * attn1 * extrapolate(xsb + 1, ysb + 0, dx1, dy1);\n        }\n\n        //Contribution (0,1)\n        var dx2:Float = dx0 - 0 - SQUISH_CONSTANT_2D;\n        var dy2:Float = dy0 - 1 - SQUISH_CONSTANT_2D;\n        var attn2:Float = 2 - dx2 * dx2 - dy2 * dy2;\n        if (attn2 > 0) {\n            attn2 *= attn2;\n            value += attn2 * attn2 * extrapolate(xsb + 0, ysb + 1, dx2, dy2);\n        }\n\n        if (inSum <= 1) { //We're inside the triangle (2-Simplex) at (0,0)\n            var zins:Float = 1 - inSum;\n            if (zins > xins || zins > yins) { //(0,0) is one of the closest two triangular vertices\n                if (xins > yins) {\n                    xsv_ext = xsb + 1;\n                    ysv_ext = ysb - 1;\n                    dx_ext = dx0 - 1;\n                    dy_ext = dy0 + 1;\n                } else {\n                    xsv_ext = xsb - 1;\n                    ysv_ext = ysb + 1;\n                    dx_ext = dx0 + 1;\n                    dy_ext = dy0 - 1;\n                }\n            } else { //(1,0) and (0,1) are the closest two vertices.\n                xsv_ext = xsb + 1;\n                ysv_ext = ysb + 1;\n                dx_ext = dx0 - 1 - 2 * SQUISH_CONSTANT_2D;\n                dy_ext = dy0 - 1 - 2 * SQUISH_CONSTANT_2D;\n            }\n        } else { //We're inside the triangle (2-Simplex) at (1,1)\n            var zins:Float = 2 - inSum;\n            if (zins < xins || zins < yins) { //(0,0) is one of the closest two triangular vertices\n                if (xins > yins) {\n                    xsv_ext = xsb + 2;\n                    ysv_ext = ysb + 0;\n                    dx_ext = dx0 - 2 - 2 * SQUISH_CONSTANT_2D;\n                    dy_ext = dy0 + 0 - 2 * SQUISH_CONSTANT_2D;\n                } else {\n                    xsv_ext = xsb + 0;\n                    ysv_ext = ysb + 2;\n                    dx_ext = dx0 + 0 - 2 * SQUISH_CONSTANT_2D;\n                    dy_ext = dy0 - 2 - 2 * SQUISH_CONSTANT_2D;\n                }\n            } else { //(1,0) and (0,1) are the closest two vertices.\n                dx_ext = dx0;\n                dy_ext = dy0;\n                xsv_ext = xsb;\n                ysv_ext = ysb;\n            }\n            xsb += 1;\n            ysb += 1;\n            dx0 = dx0 - 1 - 2 * SQUISH_CONSTANT_2D;\n            dy0 = dy0 - 1 - 2 * SQUISH_CONSTANT_2D;\n        }\n\n        //Contribution (0,0) or (1,1)\n        var attn0:Float = 2 - dx0 * dx0 - dy0 * dy0;\n        if (attn0 > 0) {\n            attn0 *= attn0;\n            value += attn0 * attn0 * extrapolate(xsb, ysb, dx0, dy0);\n        }\n\n        //Extra Vertex\n        var attn_ext:Float = 2 - dx_ext * dx_ext - dy_ext * dy_ext;\n        if (attn_ext > 0) {\n            attn_ext *= attn_ext;\n            value += attn_ext * attn_ext * extrapolate(xsv_ext, ysv_ext, dx_ext, dy_ext);\n        }\n\n        return value / NORM_CONSTANT_2D;\n    }\n\n    //3D OpenSimplex Noise.\n    // public double eval(double x, double y, double z) {\n\n    //     //Place input coordinates on simplectic honeycomb.\n    //     double stretchOffset = (x + y + z) * STRETCH_CONSTANT_3D;\n    //     double xs = x + stretchOffset;\n    //     double ys = y + stretchOffset;\n    //     double zs = z + stretchOffset;\n\n    //     //Floor to get simplectic honeycomb coordinates of rhombohedron (stretched cube) super-cell origin.\n    //     int xsb = fastFloor(xs);\n    //     int ysb = fastFloor(ys);\n    //     int zsb = fastFloor(zs);\n\n    //     //Skew out to get actual coordinates of rhombohedron origin. We'll need these later.\n    //     double squishOffset = (xsb + ysb + zsb) * SQUISH_CONSTANT_3D;\n    //     double xb = xsb + squishOffset;\n    //     double yb = ysb + squishOffset;\n    //     double zb = zsb + squishOffset;\n\n    //     //Compute simplectic honeycomb coordinates relative to rhombohedral origin.\n    //     double xins = xs - xsb;\n    //     double yins = ys - ysb;\n    //     double zins = zs - zsb;\n\n    //     //Sum those together to get a value that determines which region we're in.\n    //     double inSum = xins + yins + zins;\n\n    //     //Positions relative to origin point.\n    //     double dx0 = x - xb;\n    //     double dy0 = y - yb;\n    //     double dz0 = z - zb;\n\n    //     //We'll be defining these inside the next block and using them afterwards.\n    //     double dx_ext0, dy_ext0, dz_ext0;\n    //     double dx_ext1, dy_ext1, dz_ext1;\n    //     int xsv_ext0, ysv_ext0, zsv_ext0;\n    //     int xsv_ext1, ysv_ext1, zsv_ext1;\n\n    //     double value = 0;\n    //     if (inSum <= 1) { //We're inside the tetrahedron (3-Simplex) at (0,0,0)\n\n    //         //Determine which two of (0,0,1), (0,1,0), (1,0,0) are closest.\n    //         byte aPoint = 0x01;\n    //         double aScore = xins;\n    //         byte bPoint = 0x02;\n    //         double bScore = yins;\n    //         if (aScore >= bScore && zins > bScore) {\n    //             bScore = zins;\n    //             bPoint = 0x04;\n    //         } else if (aScore < bScore && zins > aScore) {\n    //             aScore = zins;\n    //             aPoint = 0x04;\n    //         }\n\n    //         //Now we determine the two lattice points not part of the tetrahedron that may contribute.\n    //         //This depends on the closest two tetrahedral vertices, including (0,0,0)\n    //         double wins = 1 - inSum;\n    //         if (wins > aScore || wins > bScore) { //(0,0,0) is one of the closest two tetrahedral vertices.\n    //             byte c = (bScore > aScore ? bPoint : aPoint); //Our other closest vertex is the closest out of a and b.\n\n    //             if ((c & 0x01) == 0) {\n    //                 xsv_ext0 = xsb - 1;\n    //                 xsv_ext1 = xsb;\n    //                 dx_ext0 = dx0 + 1;\n    //                 dx_ext1 = dx0;\n    //             } else {\n    //                 xsv_ext0 = xsv_ext1 = xsb + 1;\n    //                 dx_ext0 = dx_ext1 = dx0 - 1;\n    //             }\n\n    //             if ((c & 0x02) == 0) {\n    //                 ysv_ext0 = ysv_ext1 = ysb;\n    //                 dy_ext0 = dy_ext1 = dy0;\n    //                 if ((c & 0x01) == 0) {\n    //                     ysv_ext1 -= 1;\n    //                     dy_ext1 += 1;\n    //                 } else {\n    //                     ysv_ext0 -= 1;\n    //                     dy_ext0 += 1;\n    //                 }\n    //             } else {\n    //                 ysv_ext0 = ysv_ext1 = ysb + 1;\n    //                 dy_ext0 = dy_ext1 = dy0 - 1;\n    //             }\n\n    //             if ((c & 0x04) == 0) {\n    //                 zsv_ext0 = zsb;\n    //                 zsv_ext1 = zsb - 1;\n    //                 dz_ext0 = dz0;\n    //                 dz_ext1 = dz0 + 1;\n    //             } else {\n    //                 zsv_ext0 = zsv_ext1 = zsb + 1;\n    //                 dz_ext0 = dz_ext1 = dz0 - 1;\n    //             }\n    //         } else { //(0,0,0) is not one of the closest two tetrahedral vertices.\n    //             byte c = (byte)(aPoint | bPoint); //Our two extra vertices are determined by the closest two.\n\n    //             if ((c & 0x01) == 0) {\n    //                 xsv_ext0 = xsb;\n    //                 xsv_ext1 = xsb - 1;\n    //                 dx_ext0 = dx0 - 2 * SQUISH_CONSTANT_3D;\n    //                 dx_ext1 = dx0 + 1 - SQUISH_CONSTANT_3D;\n    //             } else {\n    //                 xsv_ext0 = xsv_ext1 = xsb + 1;\n    //                 dx_ext0 = dx0 - 1 - 2 * SQUISH_CONSTANT_3D;\n    //                 dx_ext1 = dx0 - 1 - SQUISH_CONSTANT_3D;\n    //             }\n\n    //             if ((c & 0x02) == 0) {\n    //                 ysv_ext0 = ysb;\n    //                 ysv_ext1 = ysb - 1;\n    //                 dy_ext0 = dy0 - 2 * SQUISH_CONSTANT_3D;\n    //                 dy_ext1 = dy0 + 1 - SQUISH_CONSTANT_3D;\n    //             } else {\n    //                 ysv_ext0 = ysv_ext1 = ysb + 1;\n    //                 dy_ext0 = dy0 - 1 - 2 * SQUISH_CONSTANT_3D;\n    //                 dy_ext1 = dy0 - 1 - SQUISH_CONSTANT_3D;\n    //             }\n\n    //             if ((c & 0x04) == 0) {\n    //                 zsv_ext0 = zsb;\n    //                 zsv_ext1 = zsb - 1;\n    //                 dz_ext0 = dz0 - 2 * SQUISH_CONSTANT_3D;\n    //                 dz_ext1 = dz0 + 1 - SQUISH_CONSTANT_3D;\n    //             } else {\n    //                 zsv_ext0 = zsv_ext1 = zsb + 1;\n    //                 dz_ext0 = dz0 - 1 - 2 * SQUISH_CONSTANT_3D;\n    //                 dz_ext1 = dz0 - 1 - SQUISH_CONSTANT_3D;\n    //             }\n    //         }\n\n    //         //Contribution (0,0,0)\n    //         double attn0 = 2 - dx0 * dx0 - dy0 * dy0 - dz0 * dz0;\n    //         if (attn0 > 0) {\n    //             attn0 *= attn0;\n    //             value += attn0 * attn0 * extrapolate(xsb + 0, ysb + 0, zsb + 0, dx0, dy0, dz0);\n    //         }\n\n    //         //Contribution (1,0,0)\n    //         double dx1 = dx0 - 1 - SQUISH_CONSTANT_3D;\n    //         double dy1 = dy0 - 0 - SQUISH_CONSTANT_3D;\n    //         double dz1 = dz0 - 0 - SQUISH_CONSTANT_3D;\n    //         double attn1 = 2 - dx1 * dx1 - dy1 * dy1 - dz1 * dz1;\n    //         if (attn1 > 0) {\n    //             attn1 *= attn1;\n    //             value += attn1 * attn1 * extrapolate(xsb + 1, ysb + 0, zsb + 0, dx1, dy1, dz1);\n    //         }\n\n    //         //Contribution (0,1,0)\n    //         double dx2 = dx0 - 0 - SQUISH_CONSTANT_3D;\n    //         double dy2 = dy0 - 1 - SQUISH_CONSTANT_3D;\n    //         double dz2 = dz1;\n    //         double attn2 = 2 - dx2 * dx2 - dy2 * dy2 - dz2 * dz2;\n    //         if (attn2 > 0) {\n    //             attn2 *= attn2;\n    //             value += attn2 * attn2 * extrapolate(xsb + 0, ysb + 1, zsb + 0, dx2, dy2, dz2);\n    //         }\n\n    //         //Contribution (0,0,1)\n    //         double dx3 = dx2;\n    //         double dy3 = dy1;\n    //         double dz3 = dz0 - 1 - SQUISH_CONSTANT_3D;\n    //         double attn3 = 2 - dx3 * dx3 - dy3 * dy3 - dz3 * dz3;\n    //         if (attn3 > 0) {\n    //             attn3 *= attn3;\n    //             value += attn3 * attn3 * extrapolate(xsb + 0, ysb + 0, zsb + 1, dx3, dy3, dz3);\n    //         }\n    //     } else if (inSum >= 2) { //We're inside the tetrahedron (3-Simplex) at (1,1,1)\n\n    //         //Determine which two tetrahedral vertices are the closest, out of (1,1,0), (1,0,1), (0,1,1) but not (1,1,1).\n    //         byte aPoint = 0x06;\n    //         double aScore = xins;\n    //         byte bPoint = 0x05;\n    //         double bScore = yins;\n    //         if (aScore <= bScore && zins < bScore) {\n    //             bScore = zins;\n    //             bPoint = 0x03;\n    //         } else if (aScore > bScore && zins < aScore) {\n    //             aScore = zins;\n    //             aPoint = 0x03;\n    //         }\n\n    //         //Now we determine the two lattice points not part of the tetrahedron that may contribute.\n    //         //This depends on the closest two tetrahedral vertices, including (1,1,1)\n    //         double wins = 3 - inSum;\n    //         if (wins < aScore || wins < bScore) { //(1,1,1) is one of the closest two tetrahedral vertices.\n    //             byte c = (bScore < aScore ? bPoint : aPoint); //Our other closest vertex is the closest out of a and b.\n\n    //             if ((c & 0x01) != 0) {\n    //                 xsv_ext0 = xsb + 2;\n    //                 xsv_ext1 = xsb + 1;\n    //                 dx_ext0 = dx0 - 2 - 3 * SQUISH_CONSTANT_3D;\n    //                 dx_ext1 = dx0 - 1 - 3 * SQUISH_CONSTANT_3D;\n    //             } else {\n    //                 xsv_ext0 = xsv_ext1 = xsb;\n    //                 dx_ext0 = dx_ext1 = dx0 - 3 * SQUISH_CONSTANT_3D;\n    //             }\n\n    //             if ((c & 0x02) != 0) {\n    //                 ysv_ext0 = ysv_ext1 = ysb + 1;\n    //                 dy_ext0 = dy_ext1 = dy0 - 1 - 3 * SQUISH_CONSTANT_3D;\n    //                 if ((c & 0x01) != 0) {\n    //                     ysv_ext1 += 1;\n    //                     dy_ext1 -= 1;\n    //                 } else {\n    //                     ysv_ext0 += 1;\n    //                     dy_ext0 -= 1;\n    //                 }\n    //             } else {\n    //                 ysv_ext0 = ysv_ext1 = ysb;\n    //                 dy_ext0 = dy_ext1 = dy0 - 3 * SQUISH_CONSTANT_3D;\n    //             }\n\n    //             if ((c & 0x04) != 0) {\n    //                 zsv_ext0 = zsb + 1;\n    //                 zsv_ext1 = zsb + 2;\n    //                 dz_ext0 = dz0 - 1 - 3 * SQUISH_CONSTANT_3D;\n    //                 dz_ext1 = dz0 - 2 - 3 * SQUISH_CONSTANT_3D;\n    //             } else {\n    //                 zsv_ext0 = zsv_ext1 = zsb;\n    //                 dz_ext0 = dz_ext1 = dz0 - 3 * SQUISH_CONSTANT_3D;\n    //             }\n    //         } else { //(1,1,1) is not one of the closest two tetrahedral vertices.\n    //             byte c = (byte)(aPoint & bPoint); //Our two extra vertices are determined by the closest two.\n\n    //             if ((c & 0x01) != 0) {\n    //                 xsv_ext0 = xsb + 1;\n    //                 xsv_ext1 = xsb + 2;\n    //                 dx_ext0 = dx0 - 1 - SQUISH_CONSTANT_3D;\n    //                 dx_ext1 = dx0 - 2 - 2 * SQUISH_CONSTANT_3D;\n    //             } else {\n    //                 xsv_ext0 = xsv_ext1 = xsb;\n    //                 dx_ext0 = dx0 - SQUISH_CONSTANT_3D;\n    //                 dx_ext1 = dx0 - 2 * SQUISH_CONSTANT_3D;\n    //             }\n\n    //             if ((c & 0x02) != 0) {\n    //                 ysv_ext0 = ysb + 1;\n    //                 ysv_ext1 = ysb + 2;\n    //                 dy_ext0 = dy0 - 1 - SQUISH_CONSTANT_3D;\n    //                 dy_ext1 = dy0 - 2 - 2 * SQUISH_CONSTANT_3D;\n    //             } else {\n    //                 ysv_ext0 = ysv_ext1 = ysb;\n    //                 dy_ext0 = dy0 - SQUISH_CONSTANT_3D;\n    //                 dy_ext1 = dy0 - 2 * SQUISH_CONSTANT_3D;\n    //             }\n\n    //             if ((c & 0x04) != 0) {\n    //                 zsv_ext0 = zsb + 1;\n    //                 zsv_ext1 = zsb + 2;\n    //                 dz_ext0 = dz0 - 1 - SQUISH_CONSTANT_3D;\n    //                 dz_ext1 = dz0 - 2 - 2 * SQUISH_CONSTANT_3D;\n    //             } else {\n    //                 zsv_ext0 = zsv_ext1 = zsb;\n    //                 dz_ext0 = dz0 - SQUISH_CONSTANT_3D;\n    //                 dz_ext1 = dz0 - 2 * SQUISH_CONSTANT_3D;\n    //             }\n    //         }\n\n    //         //Contribution (1,1,0)\n    //         double dx3 = dx0 - 1 - 2 * SQUISH_CONSTANT_3D;\n    //         double dy3 = dy0 - 1 - 2 * SQUISH_CONSTANT_3D;\n    //         double dz3 = dz0 - 0 - 2 * SQUISH_CONSTANT_3D;\n    //         double attn3 = 2 - dx3 * dx3 - dy3 * dy3 - dz3 * dz3;\n    //         if (attn3 > 0) {\n    //             attn3 *= attn3;\n    //             value += attn3 * attn3 * extrapolate(xsb + 1, ysb + 1, zsb + 0, dx3, dy3, dz3);\n    //         }\n\n    //         //Contribution (1,0,1)\n    //         double dx2 = dx3;\n    //         double dy2 = dy0 - 0 - 2 * SQUISH_CONSTANT_3D;\n    //         double dz2 = dz0 - 1 - 2 * SQUISH_CONSTANT_3D;\n    //         double attn2 = 2 - dx2 * dx2 - dy2 * dy2 - dz2 * dz2;\n    //         if (attn2 > 0) {\n    //             attn2 *= attn2;\n    //             value += attn2 * attn2 * extrapolate(xsb + 1, ysb + 0, zsb + 1, dx2, dy2, dz2);\n    //         }\n\n    //         //Contribution (0,1,1)\n    //         double dx1 = dx0 - 0 - 2 * SQUISH_CONSTANT_3D;\n    //         double dy1 = dy3;\n    //         double dz1 = dz2;\n    //         double attn1 = 2 - dx1 * dx1 - dy1 * dy1 - dz1 * dz1;\n    //         if (attn1 > 0) {\n    //             attn1 *= attn1;\n    //             value += attn1 * attn1 * extrapolate(xsb + 0, ysb + 1, zsb + 1, dx1, dy1, dz1);\n    //         }\n\n    //         //Contribution (1,1,1)\n    //         dx0 = dx0 - 1 - 3 * SQUISH_CONSTANT_3D;\n    //         dy0 = dy0 - 1 - 3 * SQUISH_CONSTANT_3D;\n    //         dz0 = dz0 - 1 - 3 * SQUISH_CONSTANT_3D;\n    //         double attn0 = 2 - dx0 * dx0 - dy0 * dy0 - dz0 * dz0;\n    //         if (attn0 > 0) {\n    //             attn0 *= attn0;\n    //             value += attn0 * attn0 * extrapolate(xsb + 1, ysb + 1, zsb + 1, dx0, dy0, dz0);\n    //         }\n    //     } else { //We're inside the octahedron (Rectified 3-Simplex) in between.\n    //         double aScore;\n    //         byte aPoint;\n    //         boolean aIsFurtherSide;\n    //         double bScore;\n    //         byte bPoint;\n    //         boolean bIsFurtherSide;\n\n    //         //Decide between point (0,0,1) and (1,1,0) as closest\n    //         double p1 = xins + yins;\n    //         if (p1 > 1) {\n    //             aScore = p1 - 1;\n    //             aPoint = 0x03;\n    //             aIsFurtherSide = true;\n    //         } else {\n    //             aScore = 1 - p1;\n    //             aPoint = 0x04;\n    //             aIsFurtherSide = false;\n    //         }\n\n    //         //Decide between point (0,1,0) and (1,0,1) as closest\n    //         double p2 = xins + zins;\n    //         if (p2 > 1) {\n    //             bScore = p2 - 1;\n    //             bPoint = 0x05;\n    //             bIsFurtherSide = true;\n    //         } else {\n    //             bScore = 1 - p2;\n    //             bPoint = 0x02;\n    //             bIsFurtherSide = false;\n    //         }\n\n    //         //The closest out of the two (1,0,0) and (0,1,1) will replace the furthest out of the two decided above, if closer.\n    //         double p3 = yins + zins;\n    //         if (p3 > 1) {\n    //             double score = p3 - 1;\n    //             if (aScore <= bScore && aScore < score) {\n    //                 aScore = score;\n    //                 aPoint = 0x06;\n    //                 aIsFurtherSide = true;\n    //             } else if (aScore > bScore && bScore < score) {\n    //                 bScore = score;\n    //                 bPoint = 0x06;\n    //                 bIsFurtherSide = true;\n    //             }\n    //         } else {\n    //             double score = 1 - p3;\n    //             if (aScore <= bScore && aScore < score) {\n    //                 aScore = score;\n    //                 aPoint = 0x01;\n    //                 aIsFurtherSide = false;\n    //             } else if (aScore > bScore && bScore < score) {\n    //                 bScore = score;\n    //                 bPoint = 0x01;\n    //                 bIsFurtherSide = false;\n    //             }\n    //         }\n\n    //         //Where each of the two closest points are determines how the extra two vertices are calculated.\n    //         if (aIsFurtherSide == bIsFurtherSide) {\n    //             if (aIsFurtherSide) { //Both closest points on (1,1,1) side\n\n    //                 //One of the two extra points is (1,1,1)\n    //                 dx_ext0 = dx0 - 1 - 3 * SQUISH_CONSTANT_3D;\n    //                 dy_ext0 = dy0 - 1 - 3 * SQUISH_CONSTANT_3D;\n    //                 dz_ext0 = dz0 - 1 - 3 * SQUISH_CONSTANT_3D;\n    //                 xsv_ext0 = xsb + 1;\n    //                 ysv_ext0 = ysb + 1;\n    //                 zsv_ext0 = zsb + 1;\n\n    //                 //Other extra point is based on the shared axis.\n    //                 byte c = (byte)(aPoint & bPoint);\n    //                 if ((c & 0x01) != 0) {\n    //                     dx_ext1 = dx0 - 2 - 2 * SQUISH_CONSTANT_3D;\n    //                     dy_ext1 = dy0 - 2 * SQUISH_CONSTANT_3D;\n    //                     dz_ext1 = dz0 - 2 * SQUISH_CONSTANT_3D;\n    //                     xsv_ext1 = xsb + 2;\n    //                     ysv_ext1 = ysb;\n    //                     zsv_ext1 = zsb;\n    //                 } else if ((c & 0x02) != 0) {\n    //                     dx_ext1 = dx0 - 2 * SQUISH_CONSTANT_3D;\n    //                     dy_ext1 = dy0 - 2 - 2 * SQUISH_CONSTANT_3D;\n    //                     dz_ext1 = dz0 - 2 * SQUISH_CONSTANT_3D;\n    //                     xsv_ext1 = xsb;\n    //                     ysv_ext1 = ysb + 2;\n    //                     zsv_ext1 = zsb;\n    //                 } else {\n    //                     dx_ext1 = dx0 - 2 * SQUISH_CONSTANT_3D;\n    //                     dy_ext1 = dy0 - 2 * SQUISH_CONSTANT_3D;\n    //                     dz_ext1 = dz0 - 2 - 2 * SQUISH_CONSTANT_3D;\n    //                     xsv_ext1 = xsb;\n    //                     ysv_ext1 = ysb;\n    //                     zsv_ext1 = zsb + 2;\n    //                 }\n    //             } else {//Both closest points on (0,0,0) side\n\n    //                 //One of the two extra points is (0,0,0)\n    //                 dx_ext0 = dx0;\n    //                 dy_ext0 = dy0;\n    //                 dz_ext0 = dz0;\n    //                 xsv_ext0 = xsb;\n    //                 ysv_ext0 = ysb;\n    //                 zsv_ext0 = zsb;\n\n    //                 //Other extra point is based on the omitted axis.\n    //                 byte c = (byte)(aPoint | bPoint);\n    //                 if ((c & 0x01) == 0) {\n    //                     dx_ext1 = dx0 + 1 - SQUISH_CONSTANT_3D;\n    //                     dy_ext1 = dy0 - 1 - SQUISH_CONSTANT_3D;\n    //                     dz_ext1 = dz0 - 1 - SQUISH_CONSTANT_3D;\n    //                     xsv_ext1 = xsb - 1;\n    //                     ysv_ext1 = ysb + 1;\n    //                     zsv_ext1 = zsb + 1;\n    //                 } else if ((c & 0x02) == 0) {\n    //                     dx_ext1 = dx0 - 1 - SQUISH_CONSTANT_3D;\n    //                     dy_ext1 = dy0 + 1 - SQUISH_CONSTANT_3D;\n    //                     dz_ext1 = dz0 - 1 - SQUISH_CONSTANT_3D;\n    //                     xsv_ext1 = xsb + 1;\n    //                     ysv_ext1 = ysb - 1;\n    //                     zsv_ext1 = zsb + 1;\n    //                 } else {\n    //                     dx_ext1 = dx0 - 1 - SQUISH_CONSTANT_3D;\n    //                     dy_ext1 = dy0 - 1 - SQUISH_CONSTANT_3D;\n    //                     dz_ext1 = dz0 + 1 - SQUISH_CONSTANT_3D;\n    //                     xsv_ext1 = xsb + 1;\n    //                     ysv_ext1 = ysb + 1;\n    //                     zsv_ext1 = zsb - 1;\n    //                 }\n    //             }\n    //         } else { //One point on (0,0,0) side, one point on (1,1,1) side\n    //             byte c1, c2;\n    //             if (aIsFurtherSide) {\n    //                 c1 = aPoint;\n    //                 c2 = bPoint;\n    //             } else {\n    //                 c1 = bPoint;\n    //                 c2 = aPoint;\n    //             }\n\n    //             //One contribution is a permutation of (1,1,-1)\n    //             if ((c1 & 0x01) == 0) {\n    //                 dx_ext0 = dx0 + 1 - SQUISH_CONSTANT_3D;\n    //                 dy_ext0 = dy0 - 1 - SQUISH_CONSTANT_3D;\n    //                 dz_ext0 = dz0 - 1 - SQUISH_CONSTANT_3D;\n    //                 xsv_ext0 = xsb - 1;\n    //                 ysv_ext0 = ysb + 1;\n    //                 zsv_ext0 = zsb + 1;\n    //             } else if ((c1 & 0x02) == 0) {\n    //                 dx_ext0 = dx0 - 1 - SQUISH_CONSTANT_3D;\n    //                 dy_ext0 = dy0 + 1 - SQUISH_CONSTANT_3D;\n    //                 dz_ext0 = dz0 - 1 - SQUISH_CONSTANT_3D;\n    //                 xsv_ext0 = xsb + 1;\n    //                 ysv_ext0 = ysb - 1;\n    //                 zsv_ext0 = zsb + 1;\n    //             } else {\n    //                 dx_ext0 = dx0 - 1 - SQUISH_CONSTANT_3D;\n    //                 dy_ext0 = dy0 - 1 - SQUISH_CONSTANT_3D;\n    //                 dz_ext0 = dz0 + 1 - SQUISH_CONSTANT_3D;\n    //                 xsv_ext0 = xsb + 1;\n    //                 ysv_ext0 = ysb + 1;\n    //                 zsv_ext0 = zsb - 1;\n    //             }\n\n    //             //One contribution is a permutation of (0,0,2)\n    //             dx_ext1 = dx0 - 2 * SQUISH_CONSTANT_3D;\n    //             dy_ext1 = dy0 - 2 * SQUISH_CONSTANT_3D;\n    //             dz_ext1 = dz0 - 2 * SQUISH_CONSTANT_3D;\n    //             xsv_ext1 = xsb;\n    //             ysv_ext1 = ysb;\n    //             zsv_ext1 = zsb;\n    //             if ((c2 & 0x01) != 0) {\n    //                 dx_ext1 -= 2;\n    //                 xsv_ext1 += 2;\n    //             } else if ((c2 & 0x02) != 0) {\n    //                 dy_ext1 -= 2;\n    //                 ysv_ext1 += 2;\n    //             } else {\n    //                 dz_ext1 -= 2;\n    //                 zsv_ext1 += 2;\n    //             }\n    //         }\n\n    //         //Contribution (1,0,0)\n    //         double dx1 = dx0 - 1 - SQUISH_CONSTANT_3D;\n    //         double dy1 = dy0 - 0 - SQUISH_CONSTANT_3D;\n    //         double dz1 = dz0 - 0 - SQUISH_CONSTANT_3D;\n    //         double attn1 = 2 - dx1 * dx1 - dy1 * dy1 - dz1 * dz1;\n    //         if (attn1 > 0) {\n    //             attn1 *= attn1;\n    //             value += attn1 * attn1 * extrapolate(xsb + 1, ysb + 0, zsb + 0, dx1, dy1, dz1);\n    //         }\n\n    //         //Contribution (0,1,0)\n    //         double dx2 = dx0 - 0 - SQUISH_CONSTANT_3D;\n    //         double dy2 = dy0 - 1 - SQUISH_CONSTANT_3D;\n    //         double dz2 = dz1;\n    //         double attn2 = 2 - dx2 * dx2 - dy2 * dy2 - dz2 * dz2;\n    //         if (attn2 > 0) {\n    //             attn2 *= attn2;\n    //             value += attn2 * attn2 * extrapolate(xsb + 0, ysb + 1, zsb + 0, dx2, dy2, dz2);\n    //         }\n\n    //         //Contribution (0,0,1)\n    //         double dx3 = dx2;\n    //         double dy3 = dy1;\n    //         double dz3 = dz0 - 1 - SQUISH_CONSTANT_3D;\n    //         double attn3 = 2 - dx3 * dx3 - dy3 * dy3 - dz3 * dz3;\n    //         if (attn3 > 0) {\n    //             attn3 *= attn3;\n    //             value += attn3 * attn3 * extrapolate(xsb + 0, ysb + 0, zsb + 1, dx3, dy3, dz3);\n    //         }\n\n    //         //Contribution (1,1,0)\n    //         double dx4 = dx0 - 1 - 2 * SQUISH_CONSTANT_3D;\n    //         double dy4 = dy0 - 1 - 2 * SQUISH_CONSTANT_3D;\n    //         double dz4 = dz0 - 0 - 2 * SQUISH_CONSTANT_3D;\n    //         double attn4 = 2 - dx4 * dx4 - dy4 * dy4 - dz4 * dz4;\n    //         if (attn4 > 0) {\n    //             attn4 *= attn4;\n    //             value += attn4 * attn4 * extrapolate(xsb + 1, ysb + 1, zsb + 0, dx4, dy4, dz4);\n    //         }\n\n    //         //Contribution (1,0,1)\n    //         double dx5 = dx4;\n    //         double dy5 = dy0 - 0 - 2 * SQUISH_CONSTANT_3D;\n    //         double dz5 = dz0 - 1 - 2 * SQUISH_CONSTANT_3D;\n    //         double attn5 = 2 - dx5 * dx5 - dy5 * dy5 - dz5 * dz5;\n    //         if (attn5 > 0) {\n    //             attn5 *= attn5;\n    //             value += attn5 * attn5 * extrapolate(xsb + 1, ysb + 0, zsb + 1, dx5, dy5, dz5);\n    //         }\n\n    //         //Contribution (0,1,1)\n    //         double dx6 = dx0 - 0 - 2 * SQUISH_CONSTANT_3D;\n    //         double dy6 = dy4;\n    //         double dz6 = dz5;\n    //         double attn6 = 2 - dx6 * dx6 - dy6 * dy6 - dz6 * dz6;\n    //         if (attn6 > 0) {\n    //             attn6 *= attn6;\n    //             value += attn6 * attn6 * extrapolate(xsb + 0, ysb + 1, zsb + 1, dx6, dy6, dz6);\n    //         }\n    //     }\n\n    //     //First extra vertex\n    //     double attn_ext0 = 2 - dx_ext0 * dx_ext0 - dy_ext0 * dy_ext0 - dz_ext0 * dz_ext0;\n    //     if (attn_ext0 > 0)\n    //     {\n    //         attn_ext0 *= attn_ext0;\n    //         value += attn_ext0 * attn_ext0 * extrapolate(xsv_ext0, ysv_ext0, zsv_ext0, dx_ext0, dy_ext0, dz_ext0);\n    //     }\n\n    //     //Second extra vertex\n    //     double attn_ext1 = 2 - dx_ext1 * dx_ext1 - dy_ext1 * dy_ext1 - dz_ext1 * dz_ext1;\n    //     if (attn_ext1 > 0)\n    //     {\n    //         attn_ext1 *= attn_ext1;\n    //         value += attn_ext1 * attn_ext1 * extrapolate(xsv_ext1, ysv_ext1, zsv_ext1, dx_ext1, dy_ext1, dz_ext1);\n    //     }\n\n    //     return value / NORM_CONSTANT_3D;\n    // }\n\n    // //4D OpenSimplex Noise.\n    // public double eval(double x, double y, double z, double w) {\n\n    //     //Place input coordinates on simplectic honeycomb.\n    //     double stretchOffset = (x + y + z + w) * STRETCH_CONSTANT_4D;\n    //     double xs = x + stretchOffset;\n    //     double ys = y + stretchOffset;\n    //     double zs = z + stretchOffset;\n    //     double ws = w + stretchOffset;\n\n    //     //Floor to get simplectic honeycomb coordinates of rhombo-hypercube super-cell origin.\n    //     int xsb = fastFloor(xs);\n    //     int ysb = fastFloor(ys);\n    //     int zsb = fastFloor(zs);\n    //     int wsb = fastFloor(ws);\n\n    //     //Skew out to get actual coordinates of stretched rhombo-hypercube origin. We'll need these later.\n    //     double squishOffset = (xsb + ysb + zsb + wsb) * SQUISH_CONSTANT_4D;\n    //     double xb = xsb + squishOffset;\n    //     double yb = ysb + squishOffset;\n    //     double zb = zsb + squishOffset;\n    //     double wb = wsb + squishOffset;\n\n    //     //Compute simplectic honeycomb coordinates relative to rhombo-hypercube origin.\n    //     double xins = xs - xsb;\n    //     double yins = ys - ysb;\n    //     double zins = zs - zsb;\n    //     double wins = ws - wsb;\n\n    //     //Sum those together to get a value that determines which region we're in.\n    //     double inSum = xins + yins + zins + wins;\n\n    //     //Positions relative to origin point.\n    //     double dx0 = x - xb;\n    //     double dy0 = y - yb;\n    //     double dz0 = z - zb;\n    //     double dw0 = w - wb;\n\n    //     //We'll be defining these inside the next block and using them afterwards.\n    //     double dx_ext0, dy_ext0, dz_ext0, dw_ext0;\n    //     double dx_ext1, dy_ext1, dz_ext1, dw_ext1;\n    //     double dx_ext2, dy_ext2, dz_ext2, dw_ext2;\n    //     int xsv_ext0, ysv_ext0, zsv_ext0, wsv_ext0;\n    //     int xsv_ext1, ysv_ext1, zsv_ext1, wsv_ext1;\n    //     int xsv_ext2, ysv_ext2, zsv_ext2, wsv_ext2;\n\n    //     double value = 0;\n    //     if (inSum <= 1) { //We're inside the pentachoron (4-Simplex) at (0,0,0,0)\n\n    //         //Determine which two of (0,0,0,1), (0,0,1,0), (0,1,0,0), (1,0,0,0) are closest.\n    //         byte aPoint = 0x01;\n    //         double aScore = xins;\n    //         byte bPoint = 0x02;\n    //         double bScore = yins;\n    //         if (aScore >= bScore && zins > bScore) {\n    //             bScore = zins;\n    //             bPoint = 0x04;\n    //         } else if (aScore < bScore && zins > aScore) {\n    //             aScore = zins;\n    //             aPoint = 0x04;\n    //         }\n    //         if (aScore >= bScore && wins > bScore) {\n    //             bScore = wins;\n    //             bPoint = 0x08;\n    //         } else if (aScore < bScore && wins > aScore) {\n    //             aScore = wins;\n    //             aPoint = 0x08;\n    //         }\n\n    //         //Now we determine the three lattice points not part of the pentachoron that may contribute.\n    //         //This depends on the closest two pentachoron vertices, including (0,0,0,0)\n    //         double uins = 1 - inSum;\n    //         if (uins > aScore || uins > bScore) { //(0,0,0,0) is one of the closest two pentachoron vertices.\n    //             byte c = (bScore > aScore ? bPoint : aPoint); //Our other closest vertex is the closest out of a and b.\n    //             if ((c & 0x01) == 0) {\n    //                 xsv_ext0 = xsb - 1;\n    //                 xsv_ext1 = xsv_ext2 = xsb;\n    //                 dx_ext0 = dx0 + 1;\n    //                 dx_ext1 = dx_ext2 = dx0;\n    //             } else {\n    //                 xsv_ext0 = xsv_ext1 = xsv_ext2 = xsb + 1;\n    //                 dx_ext0 = dx_ext1 = dx_ext2 = dx0 - 1;\n    //             }\n\n    //             if ((c & 0x02) == 0) {\n    //                 ysv_ext0 = ysv_ext1 = ysv_ext2 = ysb;\n    //                 dy_ext0 = dy_ext1 = dy_ext2 = dy0;\n    //                 if ((c & 0x01) == 0x01) {\n    //                     ysv_ext0 -= 1;\n    //                     dy_ext0 += 1;\n    //                 } else {\n    //                     ysv_ext1 -= 1;\n    //                     dy_ext1 += 1;\n    //                 }\n    //             } else {\n    //                 ysv_ext0 = ysv_ext1 = ysv_ext2 = ysb + 1;\n    //                 dy_ext0 = dy_ext1 = dy_ext2 = dy0 - 1;\n    //             }\n\n    //             if ((c & 0x04) == 0) {\n    //                 zsv_ext0 = zsv_ext1 = zsv_ext2 = zsb;\n    //                 dz_ext0 = dz_ext1 = dz_ext2 = dz0;\n    //                 if ((c & 0x03) != 0) {\n    //                     if ((c & 0x03) == 0x03) {\n    //                         zsv_ext0 -= 1;\n    //                         dz_ext0 += 1;\n    //                     } else {\n    //                         zsv_ext1 -= 1;\n    //                         dz_ext1 += 1;\n    //                     }\n    //                 } else {\n    //                     zsv_ext2 -= 1;\n    //                     dz_ext2 += 1;\n    //                 }\n    //             } else {\n    //                 zsv_ext0 = zsv_ext1 = zsv_ext2 = zsb + 1;\n    //                 dz_ext0 = dz_ext1 = dz_ext2 = dz0 - 1;\n    //             }\n\n    //             if ((c & 0x08) == 0) {\n    //                 wsv_ext0 = wsv_ext1 = wsb;\n    //                 wsv_ext2 = wsb - 1;\n    //                 dw_ext0 = dw_ext1 = dw0;\n    //                 dw_ext2 = dw0 + 1;\n    //             } else {\n    //                 wsv_ext0 = wsv_ext1 = wsv_ext2 = wsb + 1;\n    //                 dw_ext0 = dw_ext1 = dw_ext2 = dw0 - 1;\n    //             }\n    //         } else { //(0,0,0,0) is not one of the closest two pentachoron vertices.\n    //             byte c = (byte)(aPoint | bPoint); //Our three extra vertices are determined by the closest two.\n\n    //             if ((c & 0x01) == 0) {\n    //                 xsv_ext0 = xsv_ext2 = xsb;\n    //                 xsv_ext1 = xsb - 1;\n    //                 dx_ext0 = dx0 - 2 * SQUISH_CONSTANT_4D;\n    //                 dx_ext1 = dx0 + 1 - SQUISH_CONSTANT_4D;\n    //                 dx_ext2 = dx0 - SQUISH_CONSTANT_4D;\n    //             } else {\n    //                 xsv_ext0 = xsv_ext1 = xsv_ext2 = xsb + 1;\n    //                 dx_ext0 = dx0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //                 dx_ext1 = dx_ext2 = dx0 - 1 - SQUISH_CONSTANT_4D;\n    //             }\n\n    //             if ((c & 0x02) == 0) {\n    //                 ysv_ext0 = ysv_ext1 = ysv_ext2 = ysb;\n    //                 dy_ext0 = dy0 - 2 * SQUISH_CONSTANT_4D;\n    //                 dy_ext1 = dy_ext2 = dy0 - SQUISH_CONSTANT_4D;\n    //                 if ((c & 0x01) == 0x01) {\n    //                     ysv_ext1 -= 1;\n    //                     dy_ext1 += 1;\n    //                 } else {\n    //                     ysv_ext2 -= 1;\n    //                     dy_ext2 += 1;\n    //                 }\n    //             } else {\n    //                 ysv_ext0 = ysv_ext1 = ysv_ext2 = ysb + 1;\n    //                 dy_ext0 = dy0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //                 dy_ext1 = dy_ext2 = dy0 - 1 - SQUISH_CONSTANT_4D;\n    //             }\n\n    //             if ((c & 0x04) == 0) {\n    //                 zsv_ext0 = zsv_ext1 = zsv_ext2 = zsb;\n    //                 dz_ext0 = dz0 - 2 * SQUISH_CONSTANT_4D;\n    //                 dz_ext1 = dz_ext2 = dz0 - SQUISH_CONSTANT_4D;\n    //                 if ((c & 0x03) == 0x03) {\n    //                     zsv_ext1 -= 1;\n    //                     dz_ext1 += 1;\n    //                 } else {\n    //                     zsv_ext2 -= 1;\n    //                     dz_ext2 += 1;\n    //                 }\n    //             } else {\n    //                 zsv_ext0 = zsv_ext1 = zsv_ext2 = zsb + 1;\n    //                 dz_ext0 = dz0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //                 dz_ext1 = dz_ext2 = dz0 - 1 - SQUISH_CONSTANT_4D;\n    //             }\n\n    //             if ((c & 0x08) == 0) {\n    //                 wsv_ext0 = wsv_ext1 = wsb;\n    //                 wsv_ext2 = wsb - 1;\n    //                 dw_ext0 = dw0 - 2 * SQUISH_CONSTANT_4D;\n    //                 dw_ext1 = dw0 - SQUISH_CONSTANT_4D;\n    //                 dw_ext2 = dw0 + 1 - SQUISH_CONSTANT_4D;\n    //             } else {\n    //                 wsv_ext0 = wsv_ext1 = wsv_ext2 = wsb + 1;\n    //                 dw_ext0 = dw0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //                 dw_ext1 = dw_ext2 = dw0 - 1 - SQUISH_CONSTANT_4D;\n    //             }\n    //         }\n\n    //         //Contribution (0,0,0,0)\n    //         double attn0 = 2 - dx0 * dx0 - dy0 * dy0 - dz0 * dz0 - dw0 * dw0;\n    //         if (attn0 > 0) {\n    //             attn0 *= attn0;\n    //             value += attn0 * attn0 * extrapolate(xsb + 0, ysb + 0, zsb + 0, wsb + 0, dx0, dy0, dz0, dw0);\n    //         }\n\n    //         //Contribution (1,0,0,0)\n    //         double dx1 = dx0 - 1 - SQUISH_CONSTANT_4D;\n    //         double dy1 = dy0 - 0 - SQUISH_CONSTANT_4D;\n    //         double dz1 = dz0 - 0 - SQUISH_CONSTANT_4D;\n    //         double dw1 = dw0 - 0 - SQUISH_CONSTANT_4D;\n    //         double attn1 = 2 - dx1 * dx1 - dy1 * dy1 - dz1 * dz1 - dw1 * dw1;\n    //         if (attn1 > 0) {\n    //             attn1 *= attn1;\n    //             value += attn1 * attn1 * extrapolate(xsb + 1, ysb + 0, zsb + 0, wsb + 0, dx1, dy1, dz1, dw1);\n    //         }\n\n    //         //Contribution (0,1,0,0)\n    //         double dx2 = dx0 - 0 - SQUISH_CONSTANT_4D;\n    //         double dy2 = dy0 - 1 - SQUISH_CONSTANT_4D;\n    //         double dz2 = dz1;\n    //         double dw2 = dw1;\n    //         double attn2 = 2 - dx2 * dx2 - dy2 * dy2 - dz2 * dz2 - dw2 * dw2;\n    //         if (attn2 > 0) {\n    //             attn2 *= attn2;\n    //             value += attn2 * attn2 * extrapolate(xsb + 0, ysb + 1, zsb + 0, wsb + 0, dx2, dy2, dz2, dw2);\n    //         }\n\n    //         //Contribution (0,0,1,0)\n    //         double dx3 = dx2;\n    //         double dy3 = dy1;\n    //         double dz3 = dz0 - 1 - SQUISH_CONSTANT_4D;\n    //         double dw3 = dw1;\n    //         double attn3 = 2 - dx3 * dx3 - dy3 * dy3 - dz3 * dz3 - dw3 * dw3;\n    //         if (attn3 > 0) {\n    //             attn3 *= attn3;\n    //             value += attn3 * attn3 * extrapolate(xsb + 0, ysb + 0, zsb + 1, wsb + 0, dx3, dy3, dz3, dw3);\n    //         }\n\n    //         //Contribution (0,0,0,1)\n    //         double dx4 = dx2;\n    //         double dy4 = dy1;\n    //         double dz4 = dz1;\n    //         double dw4 = dw0 - 1 - SQUISH_CONSTANT_4D;\n    //         double attn4 = 2 - dx4 * dx4 - dy4 * dy4 - dz4 * dz4 - dw4 * dw4;\n    //         if (attn4 > 0) {\n    //             attn4 *= attn4;\n    //             value += attn4 * attn4 * extrapolate(xsb + 0, ysb + 0, zsb + 0, wsb + 1, dx4, dy4, dz4, dw4);\n    //         }\n    //     } else if (inSum >= 3) { //We're inside the pentachoron (4-Simplex) at (1,1,1,1)\n    //         //Determine which two of (1,1,1,0), (1,1,0,1), (1,0,1,1), (0,1,1,1) are closest.\n    //         byte aPoint = 0x0E;\n    //         double aScore = xins;\n    //         byte bPoint = 0x0D;\n    //         double bScore = yins;\n    //         if (aScore <= bScore && zins < bScore) {\n    //             bScore = zins;\n    //             bPoint = 0x0B;\n    //         } else if (aScore > bScore && zins < aScore) {\n    //             aScore = zins;\n    //             aPoint = 0x0B;\n    //         }\n    //         if (aScore <= bScore && wins < bScore) {\n    //             bScore = wins;\n    //             bPoint = 0x07;\n    //         } else if (aScore > bScore && wins < aScore) {\n    //             aScore = wins;\n    //             aPoint = 0x07;\n    //         }\n\n    //         //Now we determine the three lattice points not part of the pentachoron that may contribute.\n    //         //This depends on the closest two pentachoron vertices, including (0,0,0,0)\n    //         double uins = 4 - inSum;\n    //         if (uins < aScore || uins < bScore) { //(1,1,1,1) is one of the closest two pentachoron vertices.\n    //             byte c = (bScore < aScore ? bPoint : aPoint); //Our other closest vertex is the closest out of a and b.\n\n    //             if ((c & 0x01) != 0) {\n    //                 xsv_ext0 = xsb + 2;\n    //                 xsv_ext1 = xsv_ext2 = xsb + 1;\n    //                 dx_ext0 = dx0 - 2 - 4 * SQUISH_CONSTANT_4D;\n    //                 dx_ext1 = dx_ext2 = dx0 - 1 - 4 * SQUISH_CONSTANT_4D;\n    //             } else {\n    //                 xsv_ext0 = xsv_ext1 = xsv_ext2 = xsb;\n    //                 dx_ext0 = dx_ext1 = dx_ext2 = dx0 - 4 * SQUISH_CONSTANT_4D;\n    //             }\n\n    //             if ((c & 0x02) != 0) {\n    //                 ysv_ext0 = ysv_ext1 = ysv_ext2 = ysb + 1;\n    //                 dy_ext0 = dy_ext1 = dy_ext2 = dy0 - 1 - 4 * SQUISH_CONSTANT_4D;\n    //                 if ((c & 0x01) != 0) {\n    //                     ysv_ext1 += 1;\n    //                     dy_ext1 -= 1;\n    //                 } else {\n    //                     ysv_ext0 += 1;\n    //                     dy_ext0 -= 1;\n    //                 }\n    //             } else {\n    //                 ysv_ext0 = ysv_ext1 = ysv_ext2 = ysb;\n    //                 dy_ext0 = dy_ext1 = dy_ext2 = dy0 - 4 * SQUISH_CONSTANT_4D;\n    //             }\n\n    //             if ((c & 0x04) != 0) {\n    //                 zsv_ext0 = zsv_ext1 = zsv_ext2 = zsb + 1;\n    //                 dz_ext0 = dz_ext1 = dz_ext2 = dz0 - 1 - 4 * SQUISH_CONSTANT_4D;\n    //                 if ((c & 0x03) != 0x03) {\n    //                     if ((c & 0x03) == 0) {\n    //                         zsv_ext0 += 1;\n    //                         dz_ext0 -= 1;\n    //                     } else {\n    //                         zsv_ext1 += 1;\n    //                         dz_ext1 -= 1;\n    //                     }\n    //                 } else {\n    //                     zsv_ext2 += 1;\n    //                     dz_ext2 -= 1;\n    //                 }\n    //             } else {\n    //                 zsv_ext0 = zsv_ext1 = zsv_ext2 = zsb;\n    //                 dz_ext0 = dz_ext1 = dz_ext2 = dz0 - 4 * SQUISH_CONSTANT_4D;\n    //             }\n\n    //             if ((c & 0x08) != 0) {\n    //                 wsv_ext0 = wsv_ext1 = wsb + 1;\n    //                 wsv_ext2 = wsb + 2;\n    //                 dw_ext0 = dw_ext1 = dw0 - 1 - 4 * SQUISH_CONSTANT_4D;\n    //                 dw_ext2 = dw0 - 2 - 4 * SQUISH_CONSTANT_4D;\n    //             } else {\n    //                 wsv_ext0 = wsv_ext1 = wsv_ext2 = wsb;\n    //                 dw_ext0 = dw_ext1 = dw_ext2 = dw0 - 4 * SQUISH_CONSTANT_4D;\n    //             }\n    //         } else { //(1,1,1,1) is not one of the closest two pentachoron vertices.\n    //             byte c = (byte)(aPoint & bPoint); //Our three extra vertices are determined by the closest two.\n\n    //             if ((c & 0x01) != 0) {\n    //                 xsv_ext0 = xsv_ext2 = xsb + 1;\n    //                 xsv_ext1 = xsb + 2;\n    //                 dx_ext0 = dx0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //                 dx_ext1 = dx0 - 2 - 3 * SQUISH_CONSTANT_4D;\n    //                 dx_ext2 = dx0 - 1 - 3 * SQUISH_CONSTANT_4D;\n    //             } else {\n    //                 xsv_ext0 = xsv_ext1 = xsv_ext2 = xsb;\n    //                 dx_ext0 = dx0 - 2 * SQUISH_CONSTANT_4D;\n    //                 dx_ext1 = dx_ext2 = dx0 - 3 * SQUISH_CONSTANT_4D;\n    //             }\n\n    //             if ((c & 0x02) != 0) {\n    //                 ysv_ext0 = ysv_ext1 = ysv_ext2 = ysb + 1;\n    //                 dy_ext0 = dy0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //                 dy_ext1 = dy_ext2 = dy0 - 1 - 3 * SQUISH_CONSTANT_4D;\n    //                 if ((c & 0x01) != 0) {\n    //                     ysv_ext2 += 1;\n    //                     dy_ext2 -= 1;\n    //                 } else {\n    //                     ysv_ext1 += 1;\n    //                     dy_ext1 -= 1;\n    //                 }\n    //             } else {\n    //                 ysv_ext0 = ysv_ext1 = ysv_ext2 = ysb;\n    //                 dy_ext0 = dy0 - 2 * SQUISH_CONSTANT_4D;\n    //                 dy_ext1 = dy_ext2 = dy0 - 3 * SQUISH_CONSTANT_4D;\n    //             }\n\n    //             if ((c & 0x04) != 0) {\n    //                 zsv_ext0 = zsv_ext1 = zsv_ext2 = zsb + 1;\n    //                 dz_ext0 = dz0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //                 dz_ext1 = dz_ext2 = dz0 - 1 - 3 * SQUISH_CONSTANT_4D;\n    //                 if ((c & 0x03) != 0) {\n    //                     zsv_ext2 += 1;\n    //                     dz_ext2 -= 1;\n    //                 } else {\n    //                     zsv_ext1 += 1;\n    //                     dz_ext1 -= 1;\n    //                 }\n    //             } else {\n    //                 zsv_ext0 = zsv_ext1 = zsv_ext2 = zsb;\n    //                 dz_ext0 = dz0 - 2 * SQUISH_CONSTANT_4D;\n    //                 dz_ext1 = dz_ext2 = dz0 - 3 * SQUISH_CONSTANT_4D;\n    //             }\n\n    //             if ((c & 0x08) != 0) {\n    //                 wsv_ext0 = wsv_ext1 = wsb + 1;\n    //                 wsv_ext2 = wsb + 2;\n    //                 dw_ext0 = dw0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //                 dw_ext1 = dw0 - 1 - 3 * SQUISH_CONSTANT_4D;\n    //                 dw_ext2 = dw0 - 2 - 3 * SQUISH_CONSTANT_4D;\n    //             } else {\n    //                 wsv_ext0 = wsv_ext1 = wsv_ext2 = wsb;\n    //                 dw_ext0 = dw0 - 2 * SQUISH_CONSTANT_4D;\n    //                 dw_ext1 = dw_ext2 = dw0 - 3 * SQUISH_CONSTANT_4D;\n    //             }\n    //         }\n\n    //         //Contribution (1,1,1,0)\n    //         double dx4 = dx0 - 1 - 3 * SQUISH_CONSTANT_4D;\n    //         double dy4 = dy0 - 1 - 3 * SQUISH_CONSTANT_4D;\n    //         double dz4 = dz0 - 1 - 3 * SQUISH_CONSTANT_4D;\n    //         double dw4 = dw0 - 3 * SQUISH_CONSTANT_4D;\n    //         double attn4 = 2 - dx4 * dx4 - dy4 * dy4 - dz4 * dz4 - dw4 * dw4;\n    //         if (attn4 > 0) {\n    //             attn4 *= attn4;\n    //             value += attn4 * attn4 * extrapolate(xsb + 1, ysb + 1, zsb + 1, wsb + 0, dx4, dy4, dz4, dw4);\n    //         }\n\n    //         //Contribution (1,1,0,1)\n    //         double dx3 = dx4;\n    //         double dy3 = dy4;\n    //         double dz3 = dz0 - 3 * SQUISH_CONSTANT_4D;\n    //         double dw3 = dw0 - 1 - 3 * SQUISH_CONSTANT_4D;\n    //         double attn3 = 2 - dx3 * dx3 - dy3 * dy3 - dz3 * dz3 - dw3 * dw3;\n    //         if (attn3 > 0) {\n    //             attn3 *= attn3;\n    //             value += attn3 * attn3 * extrapolate(xsb + 1, ysb + 1, zsb + 0, wsb + 1, dx3, dy3, dz3, dw3);\n    //         }\n\n    //         //Contribution (1,0,1,1)\n    //         double dx2 = dx4;\n    //         double dy2 = dy0 - 3 * SQUISH_CONSTANT_4D;\n    //         double dz2 = dz4;\n    //         double dw2 = dw3;\n    //         double attn2 = 2 - dx2 * dx2 - dy2 * dy2 - dz2 * dz2 - dw2 * dw2;\n    //         if (attn2 > 0) {\n    //             attn2 *= attn2;\n    //             value += attn2 * attn2 * extrapolate(xsb + 1, ysb + 0, zsb + 1, wsb + 1, dx2, dy2, dz2, dw2);\n    //         }\n\n    //         //Contribution (0,1,1,1)\n    //         double dx1 = dx0 - 3 * SQUISH_CONSTANT_4D;\n    //         double dz1 = dz4;\n    //         double dy1 = dy4;\n    //         double dw1 = dw3;\n    //         double attn1 = 2 - dx1 * dx1 - dy1 * dy1 - dz1 * dz1 - dw1 * dw1;\n    //         if (attn1 > 0) {\n    //             attn1 *= attn1;\n    //             value += attn1 * attn1 * extrapolate(xsb + 0, ysb + 1, zsb + 1, wsb + 1, dx1, dy1, dz1, dw1);\n    //         }\n\n    //         //Contribution (1,1,1,1)\n    //         dx0 = dx0 - 1 - 4 * SQUISH_CONSTANT_4D;\n    //         dy0 = dy0 - 1 - 4 * SQUISH_CONSTANT_4D;\n    //         dz0 = dz0 - 1 - 4 * SQUISH_CONSTANT_4D;\n    //         dw0 = dw0 - 1 - 4 * SQUISH_CONSTANT_4D;\n    //         double attn0 = 2 - dx0 * dx0 - dy0 * dy0 - dz0 * dz0 - dw0 * dw0;\n    //         if (attn0 > 0) {\n    //             attn0 *= attn0;\n    //             value += attn0 * attn0 * extrapolate(xsb + 1, ysb + 1, zsb + 1, wsb + 1, dx0, dy0, dz0, dw0);\n    //         }\n    //     } else if (inSum <= 2) { //We're inside the first dispentachoron (Rectified 4-Simplex)\n    //         double aScore;\n    //         byte aPoint;\n    //         boolean aIsBiggerSide = true;\n    //         double bScore;\n    //         byte bPoint;\n    //         boolean bIsBiggerSide = true;\n\n    //         //Decide between (1,1,0,0) and (0,0,1,1)\n    //         if (xins + yins > zins + wins) {\n    //             aScore = xins + yins;\n    //             aPoint = 0x03;\n    //         } else {\n    //             aScore = zins + wins;\n    //             aPoint = 0x0C;\n    //         }\n\n    //         //Decide between (1,0,1,0) and (0,1,0,1)\n    //         if (xins + zins > yins + wins) {\n    //             bScore = xins + zins;\n    //             bPoint = 0x05;\n    //         } else {\n    //             bScore = yins + wins;\n    //             bPoint = 0x0A;\n    //         }\n\n    //         //Closer between (1,0,0,1) and (0,1,1,0) will replace the further of a and b, if closer.\n    //         if (xins + wins > yins + zins) {\n    //             double score = xins + wins;\n    //             if (aScore >= bScore && score > bScore) {\n    //                 bScore = score;\n    //                 bPoint = 0x09;\n    //             } else if (aScore < bScore && score > aScore) {\n    //                 aScore = score;\n    //                 aPoint = 0x09;\n    //             }\n    //         } else {\n    //             double score = yins + zins;\n    //             if (aScore >= bScore && score > bScore) {\n    //                 bScore = score;\n    //                 bPoint = 0x06;\n    //             } else if (aScore < bScore && score > aScore) {\n    //                 aScore = score;\n    //                 aPoint = 0x06;\n    //             }\n    //         }\n\n    //         //Decide if (1,0,0,0) is closer.\n    //         double p1 = 2 - inSum + xins;\n    //         if (aScore >= bScore && p1 > bScore) {\n    //             bScore = p1;\n    //             bPoint = 0x01;\n    //             bIsBiggerSide = false;\n    //         } else if (aScore < bScore && p1 > aScore) {\n    //             aScore = p1;\n    //             aPoint = 0x01;\n    //             aIsBiggerSide = false;\n    //         }\n\n    //         //Decide if (0,1,0,0) is closer.\n    //         double p2 = 2 - inSum + yins;\n    //         if (aScore >= bScore && p2 > bScore) {\n    //             bScore = p2;\n    //             bPoint = 0x02;\n    //             bIsBiggerSide = false;\n    //         } else if (aScore < bScore && p2 > aScore) {\n    //             aScore = p2;\n    //             aPoint = 0x02;\n    //             aIsBiggerSide = false;\n    //         }\n\n    //         //Decide if (0,0,1,0) is closer.\n    //         double p3 = 2 - inSum + zins;\n    //         if (aScore >= bScore && p3 > bScore) {\n    //             bScore = p3;\n    //             bPoint = 0x04;\n    //             bIsBiggerSide = false;\n    //         } else if (aScore < bScore && p3 > aScore) {\n    //             aScore = p3;\n    //             aPoint = 0x04;\n    //             aIsBiggerSide = false;\n    //         }\n\n    //         //Decide if (0,0,0,1) is closer.\n    //         double p4 = 2 - inSum + wins;\n    //         if (aScore >= bScore && p4 > bScore) {\n    //             bScore = p4;\n    //             bPoint = 0x08;\n    //             bIsBiggerSide = false;\n    //         } else if (aScore < bScore && p4 > aScore) {\n    //             aScore = p4;\n    //             aPoint = 0x08;\n    //             aIsBiggerSide = false;\n    //         }\n\n    //         //Where each of the two closest points are determines how the extra three vertices are calculated.\n    //         if (aIsBiggerSide == bIsBiggerSide) {\n    //             if (aIsBiggerSide) { //Both closest points on the bigger side\n    //                 byte c1 = (byte)(aPoint | bPoint);\n    //                 byte c2 = (byte)(aPoint & bPoint);\n    //                 if ((c1 & 0x01) == 0) {\n    //                     xsv_ext0 = xsb;\n    //                     xsv_ext1 = xsb - 1;\n    //                     dx_ext0 = dx0 - 3 * SQUISH_CONSTANT_4D;\n    //                     dx_ext1 = dx0 + 1 - 2 * SQUISH_CONSTANT_4D;\n    //                 } else {\n    //                     xsv_ext0 = xsv_ext1 = xsb + 1;\n    //                     dx_ext0 = dx0 - 1 - 3 * SQUISH_CONSTANT_4D;\n    //                     dx_ext1 = dx0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //                 }\n\n    //                 if ((c1 & 0x02) == 0) {\n    //                     ysv_ext0 = ysb;\n    //                     ysv_ext1 = ysb - 1;\n    //                     dy_ext0 = dy0 - 3 * SQUISH_CONSTANT_4D;\n    //                     dy_ext1 = dy0 + 1 - 2 * SQUISH_CONSTANT_4D;\n    //                 } else {\n    //                     ysv_ext0 = ysv_ext1 = ysb + 1;\n    //                     dy_ext0 = dy0 - 1 - 3 * SQUISH_CONSTANT_4D;\n    //                     dy_ext1 = dy0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //                 }\n\n    //                 if ((c1 & 0x04) == 0) {\n    //                     zsv_ext0 = zsb;\n    //                     zsv_ext1 = zsb - 1;\n    //                     dz_ext0 = dz0 - 3 * SQUISH_CONSTANT_4D;\n    //                     dz_ext1 = dz0 + 1 - 2 * SQUISH_CONSTANT_4D;\n    //                 } else {\n    //                     zsv_ext0 = zsv_ext1 = zsb + 1;\n    //                     dz_ext0 = dz0 - 1 - 3 * SQUISH_CONSTANT_4D;\n    //                     dz_ext1 = dz0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //                 }\n\n    //                 if ((c1 & 0x08) == 0) {\n    //                     wsv_ext0 = wsb;\n    //                     wsv_ext1 = wsb - 1;\n    //                     dw_ext0 = dw0 - 3 * SQUISH_CONSTANT_4D;\n    //                     dw_ext1 = dw0 + 1 - 2 * SQUISH_CONSTANT_4D;\n    //                 } else {\n    //                     wsv_ext0 = wsv_ext1 = wsb + 1;\n    //                     dw_ext0 = dw0 - 1 - 3 * SQUISH_CONSTANT_4D;\n    //                     dw_ext1 = dw0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //                 }\n\n    //                 //One combination is a permutation of (0,0,0,2) based on c2\n    //                 xsv_ext2 = xsb;\n    //                 ysv_ext2 = ysb;\n    //                 zsv_ext2 = zsb;\n    //                 wsv_ext2 = wsb;\n    //                 dx_ext2 = dx0 - 2 * SQUISH_CONSTANT_4D;\n    //                 dy_ext2 = dy0 - 2 * SQUISH_CONSTANT_4D;\n    //                 dz_ext2 = dz0 - 2 * SQUISH_CONSTANT_4D;\n    //                 dw_ext2 = dw0 - 2 * SQUISH_CONSTANT_4D;\n    //                 if ((c2 & 0x01) != 0) {\n    //                     xsv_ext2 += 2;\n    //                     dx_ext2 -= 2;\n    //                 } else if ((c2 & 0x02) != 0) {\n    //                     ysv_ext2 += 2;\n    //                     dy_ext2 -= 2;\n    //                 } else if ((c2 & 0x04) != 0) {\n    //                     zsv_ext2 += 2;\n    //                     dz_ext2 -= 2;\n    //                 } else {\n    //                     wsv_ext2 += 2;\n    //                     dw_ext2 -= 2;\n    //                 }\n\n    //             } else { //Both closest points on the smaller side\n    //                 //One of the two extra points is (0,0,0,0)\n    //                 xsv_ext2 = xsb;\n    //                 ysv_ext2 = ysb;\n    //                 zsv_ext2 = zsb;\n    //                 wsv_ext2 = wsb;\n    //                 dx_ext2 = dx0;\n    //                 dy_ext2 = dy0;\n    //                 dz_ext2 = dz0;\n    //                 dw_ext2 = dw0;\n\n    //                 //Other two points are based on the omitted axes.\n    //                 byte c = (byte)(aPoint | bPoint);\n\n    //                 if ((c & 0x01) == 0) {\n    //                     xsv_ext0 = xsb - 1;\n    //                     xsv_ext1 = xsb;\n    //                     dx_ext0 = dx0 + 1 - SQUISH_CONSTANT_4D;\n    //                     dx_ext1 = dx0 - SQUISH_CONSTANT_4D;\n    //                 } else {\n    //                     xsv_ext0 = xsv_ext1 = xsb + 1;\n    //                     dx_ext0 = dx_ext1 = dx0 - 1 - SQUISH_CONSTANT_4D;\n    //                 }\n\n    //                 if ((c & 0x02) == 0) {\n    //                     ysv_ext0 = ysv_ext1 = ysb;\n    //                     dy_ext0 = dy_ext1 = dy0 - SQUISH_CONSTANT_4D;\n    //                     if ((c & 0x01) == 0x01)\n    //                     {\n    //                         ysv_ext0 -= 1;\n    //                         dy_ext0 += 1;\n    //                     } else {\n    //                         ysv_ext1 -= 1;\n    //                         dy_ext1 += 1;\n    //                     }\n    //                 } else {\n    //                     ysv_ext0 = ysv_ext1 = ysb + 1;\n    //                     dy_ext0 = dy_ext1 = dy0 - 1 - SQUISH_CONSTANT_4D;\n    //                 }\n\n    //                 if ((c & 0x04) == 0) {\n    //                     zsv_ext0 = zsv_ext1 = zsb;\n    //                     dz_ext0 = dz_ext1 = dz0 - SQUISH_CONSTANT_4D;\n    //                     if ((c & 0x03) == 0x03)\n    //                     {\n    //                         zsv_ext0 -= 1;\n    //                         dz_ext0 += 1;\n    //                     } else {\n    //                         zsv_ext1 -= 1;\n    //                         dz_ext1 += 1;\n    //                     }\n    //                 } else {\n    //                     zsv_ext0 = zsv_ext1 = zsb + 1;\n    //                     dz_ext0 = dz_ext1 = dz0 - 1 - SQUISH_CONSTANT_4D;\n    //                 }\n\n    //                 if ((c & 0x08) == 0)\n    //                 {\n    //                     wsv_ext0 = wsb;\n    //                     wsv_ext1 = wsb - 1;\n    //                     dw_ext0 = dw0 - SQUISH_CONSTANT_4D;\n    //                     dw_ext1 = dw0 + 1 - SQUISH_CONSTANT_4D;\n    //                 } else {\n    //                     wsv_ext0 = wsv_ext1 = wsb + 1;\n    //                     dw_ext0 = dw_ext1 = dw0 - 1 - SQUISH_CONSTANT_4D;\n    //                 }\n\n    //             }\n    //         } else { //One point on each \"side\"\n    //             byte c1, c2;\n    //             if (aIsBiggerSide) {\n    //                 c1 = aPoint;\n    //                 c2 = bPoint;\n    //             } else {\n    //                 c1 = bPoint;\n    //                 c2 = aPoint;\n    //             }\n\n    //             //Two contributions are the bigger-sided point with each 0 replaced with -1.\n    //             if ((c1 & 0x01) == 0) {\n    //                 xsv_ext0 = xsb - 1;\n    //                 xsv_ext1 = xsb;\n    //                 dx_ext0 = dx0 + 1 - SQUISH_CONSTANT_4D;\n    //                 dx_ext1 = dx0 - SQUISH_CONSTANT_4D;\n    //             } else {\n    //                 xsv_ext0 = xsv_ext1 = xsb + 1;\n    //                 dx_ext0 = dx_ext1 = dx0 - 1 - SQUISH_CONSTANT_4D;\n    //             }\n\n    //             if ((c1 & 0x02) == 0) {\n    //                 ysv_ext0 = ysv_ext1 = ysb;\n    //                 dy_ext0 = dy_ext1 = dy0 - SQUISH_CONSTANT_4D;\n    //                 if ((c1 & 0x01) == 0x01) {\n    //                     ysv_ext0 -= 1;\n    //                     dy_ext0 += 1;\n    //                 } else {\n    //                     ysv_ext1 -= 1;\n    //                     dy_ext1 += 1;\n    //                 }\n    //             } else {\n    //                 ysv_ext0 = ysv_ext1 = ysb + 1;\n    //                 dy_ext0 = dy_ext1 = dy0 - 1 - SQUISH_CONSTANT_4D;\n    //             }\n\n    //             if ((c1 & 0x04) == 0) {\n    //                 zsv_ext0 = zsv_ext1 = zsb;\n    //                 dz_ext0 = dz_ext1 = dz0 - SQUISH_CONSTANT_4D;\n    //                 if ((c1 & 0x03) == 0x03) {\n    //                     zsv_ext0 -= 1;\n    //                     dz_ext0 += 1;\n    //                 } else {\n    //                     zsv_ext1 -= 1;\n    //                     dz_ext1 += 1;\n    //                 }\n    //             } else {\n    //                 zsv_ext0 = zsv_ext1 = zsb + 1;\n    //                 dz_ext0 = dz_ext1 = dz0 - 1 - SQUISH_CONSTANT_4D;\n    //             }\n\n    //             if ((c1 & 0x08) == 0) {\n    //                 wsv_ext0 = wsb;\n    //                 wsv_ext1 = wsb - 1;\n    //                 dw_ext0 = dw0 - SQUISH_CONSTANT_4D;\n    //                 dw_ext1 = dw0 + 1 - SQUISH_CONSTANT_4D;\n    //             } else {\n    //                 wsv_ext0 = wsv_ext1 = wsb + 1;\n    //                 dw_ext0 = dw_ext1 = dw0 - 1 - SQUISH_CONSTANT_4D;\n    //             }\n\n    //             //One contribution is a permutation of (0,0,0,2) based on the smaller-sided point\n    //             xsv_ext2 = xsb;\n    //             ysv_ext2 = ysb;\n    //             zsv_ext2 = zsb;\n    //             wsv_ext2 = wsb;\n    //             dx_ext2 = dx0 - 2 * SQUISH_CONSTANT_4D;\n    //             dy_ext2 = dy0 - 2 * SQUISH_CONSTANT_4D;\n    //             dz_ext2 = dz0 - 2 * SQUISH_CONSTANT_4D;\n    //             dw_ext2 = dw0 - 2 * SQUISH_CONSTANT_4D;\n    //             if ((c2 & 0x01) != 0) {\n    //                 xsv_ext2 += 2;\n    //                 dx_ext2 -= 2;\n    //             } else if ((c2 & 0x02) != 0) {\n    //                 ysv_ext2 += 2;\n    //                 dy_ext2 -= 2;\n    //             } else if ((c2 & 0x04) != 0) {\n    //                 zsv_ext2 += 2;\n    //                 dz_ext2 -= 2;\n    //             } else {\n    //                 wsv_ext2 += 2;\n    //                 dw_ext2 -= 2;\n    //             }\n    //         }\n\n    //         //Contribution (1,0,0,0)\n    //         double dx1 = dx0 - 1 - SQUISH_CONSTANT_4D;\n    //         double dy1 = dy0 - 0 - SQUISH_CONSTANT_4D;\n    //         double dz1 = dz0 - 0 - SQUISH_CONSTANT_4D;\n    //         double dw1 = dw0 - 0 - SQUISH_CONSTANT_4D;\n    //         double attn1 = 2 - dx1 * dx1 - dy1 * dy1 - dz1 * dz1 - dw1 * dw1;\n    //         if (attn1 > 0) {\n    //             attn1 *= attn1;\n    //             value += attn1 * attn1 * extrapolate(xsb + 1, ysb + 0, zsb + 0, wsb + 0, dx1, dy1, dz1, dw1);\n    //         }\n\n    //         //Contribution (0,1,0,0)\n    //         double dx2 = dx0 - 0 - SQUISH_CONSTANT_4D;\n    //         double dy2 = dy0 - 1 - SQUISH_CONSTANT_4D;\n    //         double dz2 = dz1;\n    //         double dw2 = dw1;\n    //         double attn2 = 2 - dx2 * dx2 - dy2 * dy2 - dz2 * dz2 - dw2 * dw2;\n    //         if (attn2 > 0) {\n    //             attn2 *= attn2;\n    //             value += attn2 * attn2 * extrapolate(xsb + 0, ysb + 1, zsb + 0, wsb + 0, dx2, dy2, dz2, dw2);\n    //         }\n\n    //         //Contribution (0,0,1,0)\n    //         double dx3 = dx2;\n    //         double dy3 = dy1;\n    //         double dz3 = dz0 - 1 - SQUISH_CONSTANT_4D;\n    //         double dw3 = dw1;\n    //         double attn3 = 2 - dx3 * dx3 - dy3 * dy3 - dz3 * dz3 - dw3 * dw3;\n    //         if (attn3 > 0) {\n    //             attn3 *= attn3;\n    //             value += attn3 * attn3 * extrapolate(xsb + 0, ysb + 0, zsb + 1, wsb + 0, dx3, dy3, dz3, dw3);\n    //         }\n\n    //         //Contribution (0,0,0,1)\n    //         double dx4 = dx2;\n    //         double dy4 = dy1;\n    //         double dz4 = dz1;\n    //         double dw4 = dw0 - 1 - SQUISH_CONSTANT_4D;\n    //         double attn4 = 2 - dx4 * dx4 - dy4 * dy4 - dz4 * dz4 - dw4 * dw4;\n    //         if (attn4 > 0) {\n    //             attn4 *= attn4;\n    //             value += attn4 * attn4 * extrapolate(xsb + 0, ysb + 0, zsb + 0, wsb + 1, dx4, dy4, dz4, dw4);\n    //         }\n\n    //         //Contribution (1,1,0,0)\n    //         double dx5 = dx0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //         double dy5 = dy0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //         double dz5 = dz0 - 0 - 2 * SQUISH_CONSTANT_4D;\n    //         double dw5 = dw0 - 0 - 2 * SQUISH_CONSTANT_4D;\n    //         double attn5 = 2 - dx5 * dx5 - dy5 * dy5 - dz5 * dz5 - dw5 * dw5;\n    //         if (attn5 > 0) {\n    //             attn5 *= attn5;\n    //             value += attn5 * attn5 * extrapolate(xsb + 1, ysb + 1, zsb + 0, wsb + 0, dx5, dy5, dz5, dw5);\n    //         }\n\n    //         //Contribution (1,0,1,0)\n    //         double dx6 = dx0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //         double dy6 = dy0 - 0 - 2 * SQUISH_CONSTANT_4D;\n    //         double dz6 = dz0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //         double dw6 = dw0 - 0 - 2 * SQUISH_CONSTANT_4D;\n    //         double attn6 = 2 - dx6 * dx6 - dy6 * dy6 - dz6 * dz6 - dw6 * dw6;\n    //         if (attn6 > 0) {\n    //             attn6 *= attn6;\n    //             value += attn6 * attn6 * extrapolate(xsb + 1, ysb + 0, zsb + 1, wsb + 0, dx6, dy6, dz6, dw6);\n    //         }\n\n    //         //Contribution (1,0,0,1)\n    //         double dx7 = dx0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //         double dy7 = dy0 - 0 - 2 * SQUISH_CONSTANT_4D;\n    //         double dz7 = dz0 - 0 - 2 * SQUISH_CONSTANT_4D;\n    //         double dw7 = dw0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //         double attn7 = 2 - dx7 * dx7 - dy7 * dy7 - dz7 * dz7 - dw7 * dw7;\n    //         if (attn7 > 0) {\n    //             attn7 *= attn7;\n    //             value += attn7 * attn7 * extrapolate(xsb + 1, ysb + 0, zsb + 0, wsb + 1, dx7, dy7, dz7, dw7);\n    //         }\n\n    //         //Contribution (0,1,1,0)\n    //         double dx8 = dx0 - 0 - 2 * SQUISH_CONSTANT_4D;\n    //         double dy8 = dy0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //         double dz8 = dz0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //         double dw8 = dw0 - 0 - 2 * SQUISH_CONSTANT_4D;\n    //         double attn8 = 2 - dx8 * dx8 - dy8 * dy8 - dz8 * dz8 - dw8 * dw8;\n    //         if (attn8 > 0) {\n    //             attn8 *= attn8;\n    //             value += attn8 * attn8 * extrapolate(xsb + 0, ysb + 1, zsb + 1, wsb + 0, dx8, dy8, dz8, dw8);\n    //         }\n\n    //         //Contribution (0,1,0,1)\n    //         double dx9 = dx0 - 0 - 2 * SQUISH_CONSTANT_4D;\n    //         double dy9 = dy0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //         double dz9 = dz0 - 0 - 2 * SQUISH_CONSTANT_4D;\n    //         double dw9 = dw0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //         double attn9 = 2 - dx9 * dx9 - dy9 * dy9 - dz9 * dz9 - dw9 * dw9;\n    //         if (attn9 > 0) {\n    //             attn9 *= attn9;\n    //             value += attn9 * attn9 * extrapolate(xsb + 0, ysb + 1, zsb + 0, wsb + 1, dx9, dy9, dz9, dw9);\n    //         }\n\n    //         //Contribution (0,0,1,1)\n    //         double dx10 = dx0 - 0 - 2 * SQUISH_CONSTANT_4D;\n    //         double dy10 = dy0 - 0 - 2 * SQUISH_CONSTANT_4D;\n    //         double dz10 = dz0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //         double dw10 = dw0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //         double attn10 = 2 - dx10 * dx10 - dy10 * dy10 - dz10 * dz10 - dw10 * dw10;\n    //         if (attn10 > 0) {\n    //             attn10 *= attn10;\n    //             value += attn10 * attn10 * extrapolate(xsb + 0, ysb + 0, zsb + 1, wsb + 1, dx10, dy10, dz10, dw10);\n    //         }\n    //     } else { //We're inside the second dispentachoron (Rectified 4-Simplex)\n    //         double aScore;\n    //         byte aPoint;\n    //         boolean aIsBiggerSide = true;\n    //         double bScore;\n    //         byte bPoint;\n    //         boolean bIsBiggerSide = true;\n\n    //         //Decide between (0,0,1,1) and (1,1,0,0)\n    //         if (xins + yins < zins + wins) {\n    //             aScore = xins + yins;\n    //             aPoint = 0x0C;\n    //         } else {\n    //             aScore = zins + wins;\n    //             aPoint = 0x03;\n    //         }\n\n    //         //Decide between (0,1,0,1) and (1,0,1,0)\n    //         if (xins + zins < yins + wins) {\n    //             bScore = xins + zins;\n    //             bPoint = 0x0A;\n    //         } else {\n    //             bScore = yins + wins;\n    //             bPoint = 0x05;\n    //         }\n\n    //         //Closer between (0,1,1,0) and (1,0,0,1) will replace the further of a and b, if closer.\n    //         if (xins + wins < yins + zins) {\n    //             double score = xins + wins;\n    //             if (aScore <= bScore && score < bScore) {\n    //                 bScore = score;\n    //                 bPoint = 0x06;\n    //             } else if (aScore > bScore && score < aScore) {\n    //                 aScore = score;\n    //                 aPoint = 0x06;\n    //             }\n    //         } else {\n    //             double score = yins + zins;\n    //             if (aScore <= bScore && score < bScore) {\n    //                 bScore = score;\n    //                 bPoint = 0x09;\n    //             } else if (aScore > bScore && score < aScore) {\n    //                 aScore = score;\n    //                 aPoint = 0x09;\n    //             }\n    //         }\n\n    //         //Decide if (0,1,1,1) is closer.\n    //         double p1 = 3 - inSum + xins;\n    //         if (aScore <= bScore && p1 < bScore) {\n    //             bScore = p1;\n    //             bPoint = 0x0E;\n    //             bIsBiggerSide = false;\n    //         } else if (aScore > bScore && p1 < aScore) {\n    //             aScore = p1;\n    //             aPoint = 0x0E;\n    //             aIsBiggerSide = false;\n    //         }\n\n    //         //Decide if (1,0,1,1) is closer.\n    //         double p2 = 3 - inSum + yins;\n    //         if (aScore <= bScore && p2 < bScore) {\n    //             bScore = p2;\n    //             bPoint = 0x0D;\n    //             bIsBiggerSide = false;\n    //         } else if (aScore > bScore && p2 < aScore) {\n    //             aScore = p2;\n    //             aPoint = 0x0D;\n    //             aIsBiggerSide = false;\n    //         }\n\n    //         //Decide if (1,1,0,1) is closer.\n    //         double p3 = 3 - inSum + zins;\n    //         if (aScore <= bScore && p3 < bScore) {\n    //             bScore = p3;\n    //             bPoint = 0x0B;\n    //             bIsBiggerSide = false;\n    //         } else if (aScore > bScore && p3 < aScore) {\n    //             aScore = p3;\n    //             aPoint = 0x0B;\n    //             aIsBiggerSide = false;\n    //         }\n\n    //         //Decide if (1,1,1,0) is closer.\n    //         double p4 = 3 - inSum + wins;\n    //         if (aScore <= bScore && p4 < bScore) {\n    //             bScore = p4;\n    //             bPoint = 0x07;\n    //             bIsBiggerSide = false;\n    //         } else if (aScore > bScore && p4 < aScore) {\n    //             aScore = p4;\n    //             aPoint = 0x07;\n    //             aIsBiggerSide = false;\n    //         }\n\n    //         //Where each of the two closest points are determines how the extra three vertices are calculated.\n    //         if (aIsBiggerSide == bIsBiggerSide) {\n    //             if (aIsBiggerSide) { //Both closest points on the bigger side\n    //                 byte c1 = (byte)(aPoint & bPoint);\n    //                 byte c2 = (byte)(aPoint | bPoint);\n\n    //                 //Two contributions are permutations of (0,0,0,1) and (0,0,0,2) based on c1\n    //                 xsv_ext0 = xsv_ext1 = xsb;\n    //                 ysv_ext0 = ysv_ext1 = ysb;\n    //                 zsv_ext0 = zsv_ext1 = zsb;\n    //                 wsv_ext0 = wsv_ext1 = wsb;\n    //                 dx_ext0 = dx0 - SQUISH_CONSTANT_4D;\n    //                 dy_ext0 = dy0 - SQUISH_CONSTANT_4D;\n    //                 dz_ext0 = dz0 - SQUISH_CONSTANT_4D;\n    //                 dw_ext0 = dw0 - SQUISH_CONSTANT_4D;\n    //                 dx_ext1 = dx0 - 2 * SQUISH_CONSTANT_4D;\n    //                 dy_ext1 = dy0 - 2 * SQUISH_CONSTANT_4D;\n    //                 dz_ext1 = dz0 - 2 * SQUISH_CONSTANT_4D;\n    //                 dw_ext1 = dw0 - 2 * SQUISH_CONSTANT_4D;\n    //                 if ((c1 & 0x01) != 0) {\n    //                     xsv_ext0 += 1;\n    //                     dx_ext0 -= 1;\n    //                     xsv_ext1 += 2;\n    //                     dx_ext1 -= 2;\n    //                 } else if ((c1 & 0x02) != 0) {\n    //                     ysv_ext0 += 1;\n    //                     dy_ext0 -= 1;\n    //                     ysv_ext1 += 2;\n    //                     dy_ext1 -= 2;\n    //                 } else if ((c1 & 0x04) != 0) {\n    //                     zsv_ext0 += 1;\n    //                     dz_ext0 -= 1;\n    //                     zsv_ext1 += 2;\n    //                     dz_ext1 -= 2;\n    //                 } else {\n    //                     wsv_ext0 += 1;\n    //                     dw_ext0 -= 1;\n    //                     wsv_ext1 += 2;\n    //                     dw_ext1 -= 2;\n    //                 }\n\n    //                 //One contribution is a permutation of (1,1,1,-1) based on c2\n    //                 xsv_ext2 = xsb + 1;\n    //                 ysv_ext2 = ysb + 1;\n    //                 zsv_ext2 = zsb + 1;\n    //                 wsv_ext2 = wsb + 1;\n    //                 dx_ext2 = dx0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //                 dy_ext2 = dy0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //                 dz_ext2 = dz0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //                 dw_ext2 = dw0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //                 if ((c2 & 0x01) == 0) {\n    //                     xsv_ext2 -= 2;\n    //                     dx_ext2 += 2;\n    //                 } else if ((c2 & 0x02) == 0) {\n    //                     ysv_ext2 -= 2;\n    //                     dy_ext2 += 2;\n    //                 } else if ((c2 & 0x04) == 0) {\n    //                     zsv_ext2 -= 2;\n    //                     dz_ext2 += 2;\n    //                 } else {\n    //                     wsv_ext2 -= 2;\n    //                     dw_ext2 += 2;\n    //                 }\n    //             } else { //Both closest points on the smaller side\n    //                 //One of the two extra points is (1,1,1,1)\n    //                 xsv_ext2 = xsb + 1;\n    //                 ysv_ext2 = ysb + 1;\n    //                 zsv_ext2 = zsb + 1;\n    //                 wsv_ext2 = wsb + 1;\n    //                 dx_ext2 = dx0 - 1 - 4 * SQUISH_CONSTANT_4D;\n    //                 dy_ext2 = dy0 - 1 - 4 * SQUISH_CONSTANT_4D;\n    //                 dz_ext2 = dz0 - 1 - 4 * SQUISH_CONSTANT_4D;\n    //                 dw_ext2 = dw0 - 1 - 4 * SQUISH_CONSTANT_4D;\n\n    //                 //Other two points are based on the shared axes.\n    //                 byte c = (byte)(aPoint & bPoint);\n\n    //                 if ((c & 0x01) != 0) {\n    //                     xsv_ext0 = xsb + 2;\n    //                     xsv_ext1 = xsb + 1;\n    //                     dx_ext0 = dx0 - 2 - 3 * SQUISH_CONSTANT_4D;\n    //                     dx_ext1 = dx0 - 1 - 3 * SQUISH_CONSTANT_4D;\n    //                 } else {\n    //                     xsv_ext0 = xsv_ext1 = xsb;\n    //                     dx_ext0 = dx_ext1 = dx0 - 3 * SQUISH_CONSTANT_4D;\n    //                 }\n\n    //                 if ((c & 0x02) != 0) {\n    //                     ysv_ext0 = ysv_ext1 = ysb + 1;\n    //                     dy_ext0 = dy_ext1 = dy0 - 1 - 3 * SQUISH_CONSTANT_4D;\n    //                     if ((c & 0x01) == 0)\n    //                     {\n    //                         ysv_ext0 += 1;\n    //                         dy_ext0 -= 1;\n    //                     } else {\n    //                         ysv_ext1 += 1;\n    //                         dy_ext1 -= 1;\n    //                     }\n    //                 } else {\n    //                     ysv_ext0 = ysv_ext1 = ysb;\n    //                     dy_ext0 = dy_ext1 = dy0 - 3 * SQUISH_CONSTANT_4D;\n    //                 }\n\n    //                 if ((c & 0x04) != 0) {\n    //                     zsv_ext0 = zsv_ext1 = zsb + 1;\n    //                     dz_ext0 = dz_ext1 = dz0 - 1 - 3 * SQUISH_CONSTANT_4D;\n    //                     if ((c & 0x03) == 0)\n    //                     {\n    //                         zsv_ext0 += 1;\n    //                         dz_ext0 -= 1;\n    //                     } else {\n    //                         zsv_ext1 += 1;\n    //                         dz_ext1 -= 1;\n    //                     }\n    //                 } else {\n    //                     zsv_ext0 = zsv_ext1 = zsb;\n    //                     dz_ext0 = dz_ext1 = dz0 - 3 * SQUISH_CONSTANT_4D;\n    //                 }\n\n    //                 if ((c & 0x08) != 0)\n    //                 {\n    //                     wsv_ext0 = wsb + 1;\n    //                     wsv_ext1 = wsb + 2;\n    //                     dw_ext0 = dw0 - 1 - 3 * SQUISH_CONSTANT_4D;\n    //                     dw_ext1 = dw0 - 2 - 3 * SQUISH_CONSTANT_4D;\n    //                 } else {\n    //                     wsv_ext0 = wsv_ext1 = wsb;\n    //                     dw_ext0 = dw_ext1 = dw0 - 3 * SQUISH_CONSTANT_4D;\n    //                 }\n    //             }\n    //         } else { //One point on each \"side\"\n    //             byte c1, c2;\n    //             if (aIsBiggerSide) {\n    //                 c1 = aPoint;\n    //                 c2 = bPoint;\n    //             } else {\n    //                 c1 = bPoint;\n    //                 c2 = aPoint;\n    //             }\n\n    //             //Two contributions are the bigger-sided point with each 1 replaced with 2.\n    //             if ((c1 & 0x01) != 0) {\n    //                 xsv_ext0 = xsb + 2;\n    //                 xsv_ext1 = xsb + 1;\n    //                 dx_ext0 = dx0 - 2 - 3 * SQUISH_CONSTANT_4D;\n    //                 dx_ext1 = dx0 - 1 - 3 * SQUISH_CONSTANT_4D;\n    //             } else {\n    //                 xsv_ext0 = xsv_ext1 = xsb;\n    //                 dx_ext0 = dx_ext1 = dx0 - 3 * SQUISH_CONSTANT_4D;\n    //             }\n\n    //             if ((c1 & 0x02) != 0) {\n    //                 ysv_ext0 = ysv_ext1 = ysb + 1;\n    //                 dy_ext0 = dy_ext1 = dy0 - 1 - 3 * SQUISH_CONSTANT_4D;\n    //                 if ((c1 & 0x01) == 0) {\n    //                     ysv_ext0 += 1;\n    //                     dy_ext0 -= 1;\n    //                 } else {\n    //                     ysv_ext1 += 1;\n    //                     dy_ext1 -= 1;\n    //                 }\n    //             } else {\n    //                 ysv_ext0 = ysv_ext1 = ysb;\n    //                 dy_ext0 = dy_ext1 = dy0 - 3 * SQUISH_CONSTANT_4D;\n    //             }\n\n    //             if ((c1 & 0x04) != 0) {\n    //                 zsv_ext0 = zsv_ext1 = zsb + 1;\n    //                 dz_ext0 = dz_ext1 = dz0 - 1 - 3 * SQUISH_CONSTANT_4D;\n    //                 if ((c1 & 0x03) == 0) {\n    //                     zsv_ext0 += 1;\n    //                     dz_ext0 -= 1;\n    //                 } else {\n    //                     zsv_ext1 += 1;\n    //                     dz_ext1 -= 1;\n    //                 }\n    //             } else {\n    //                 zsv_ext0 = zsv_ext1 = zsb;\n    //                 dz_ext0 = dz_ext1 = dz0 - 3 * SQUISH_CONSTANT_4D;\n    //             }\n\n    //             if ((c1 & 0x08) != 0) {\n    //                 wsv_ext0 = wsb + 1;\n    //                 wsv_ext1 = wsb + 2;\n    //                 dw_ext0 = dw0 - 1 - 3 * SQUISH_CONSTANT_4D;\n    //                 dw_ext1 = dw0 - 2 - 3 * SQUISH_CONSTANT_4D;\n    //             } else {\n    //                 wsv_ext0 = wsv_ext1 = wsb;\n    //                 dw_ext0 = dw_ext1 = dw0 - 3 * SQUISH_CONSTANT_4D;\n    //             }\n\n    //             //One contribution is a permutation of (1,1,1,-1) based on the smaller-sided point\n    //             xsv_ext2 = xsb + 1;\n    //             ysv_ext2 = ysb + 1;\n    //             zsv_ext2 = zsb + 1;\n    //             wsv_ext2 = wsb + 1;\n    //             dx_ext2 = dx0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //             dy_ext2 = dy0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //             dz_ext2 = dz0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //             dw_ext2 = dw0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //             if ((c2 & 0x01) == 0) {\n    //                 xsv_ext2 -= 2;\n    //                 dx_ext2 += 2;\n    //             } else if ((c2 & 0x02) == 0) {\n    //                 ysv_ext2 -= 2;\n    //                 dy_ext2 += 2;\n    //             } else if ((c2 & 0x04) == 0) {\n    //                 zsv_ext2 -= 2;\n    //                 dz_ext2 += 2;\n    //             } else {\n    //                 wsv_ext2 -= 2;\n    //                 dw_ext2 += 2;\n    //             }\n    //         }\n\n    //         //Contribution (1,1,1,0)\n    //         double dx4 = dx0 - 1 - 3 * SQUISH_CONSTANT_4D;\n    //         double dy4 = dy0 - 1 - 3 * SQUISH_CONSTANT_4D;\n    //         double dz4 = dz0 - 1 - 3 * SQUISH_CONSTANT_4D;\n    //         double dw4 = dw0 - 3 * SQUISH_CONSTANT_4D;\n    //         double attn4 = 2 - dx4 * dx4 - dy4 * dy4 - dz4 * dz4 - dw4 * dw4;\n    //         if (attn4 > 0) {\n    //             attn4 *= attn4;\n    //             value += attn4 * attn4 * extrapolate(xsb + 1, ysb + 1, zsb + 1, wsb + 0, dx4, dy4, dz4, dw4);\n    //         }\n\n    //         //Contribution (1,1,0,1)\n    //         double dx3 = dx4;\n    //         double dy3 = dy4;\n    //         double dz3 = dz0 - 3 * SQUISH_CONSTANT_4D;\n    //         double dw3 = dw0 - 1 - 3 * SQUISH_CONSTANT_4D;\n    //         double attn3 = 2 - dx3 * dx3 - dy3 * dy3 - dz3 * dz3 - dw3 * dw3;\n    //         if (attn3 > 0) {\n    //             attn3 *= attn3;\n    //             value += attn3 * attn3 * extrapolate(xsb + 1, ysb + 1, zsb + 0, wsb + 1, dx3, dy3, dz3, dw3);\n    //         }\n\n    //         //Contribution (1,0,1,1)\n    //         double dx2 = dx4;\n    //         double dy2 = dy0 - 3 * SQUISH_CONSTANT_4D;\n    //         double dz2 = dz4;\n    //         double dw2 = dw3;\n    //         double attn2 = 2 - dx2 * dx2 - dy2 * dy2 - dz2 * dz2 - dw2 * dw2;\n    //         if (attn2 > 0) {\n    //             attn2 *= attn2;\n    //             value += attn2 * attn2 * extrapolate(xsb + 1, ysb + 0, zsb + 1, wsb + 1, dx2, dy2, dz2, dw2);\n    //         }\n\n    //         //Contribution (0,1,1,1)\n    //         double dx1 = dx0 - 3 * SQUISH_CONSTANT_4D;\n    //         double dz1 = dz4;\n    //         double dy1 = dy4;\n    //         double dw1 = dw3;\n    //         double attn1 = 2 - dx1 * dx1 - dy1 * dy1 - dz1 * dz1 - dw1 * dw1;\n    //         if (attn1 > 0) {\n    //             attn1 *= attn1;\n    //             value += attn1 * attn1 * extrapolate(xsb + 0, ysb + 1, zsb + 1, wsb + 1, dx1, dy1, dz1, dw1);\n    //         }\n\n    //         //Contribution (1,1,0,0)\n    //         double dx5 = dx0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //         double dy5 = dy0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //         double dz5 = dz0 - 0 - 2 * SQUISH_CONSTANT_4D;\n    //         double dw5 = dw0 - 0 - 2 * SQUISH_CONSTANT_4D;\n    //         double attn5 = 2 - dx5 * dx5 - dy5 * dy5 - dz5 * dz5 - dw5 * dw5;\n    //         if (attn5 > 0) {\n    //             attn5 *= attn5;\n    //             value += attn5 * attn5 * extrapolate(xsb + 1, ysb + 1, zsb + 0, wsb + 0, dx5, dy5, dz5, dw5);\n    //         }\n\n    //         //Contribution (1,0,1,0)\n    //         double dx6 = dx0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //         double dy6 = dy0 - 0 - 2 * SQUISH_CONSTANT_4D;\n    //         double dz6 = dz0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //         double dw6 = dw0 - 0 - 2 * SQUISH_CONSTANT_4D;\n    //         double attn6 = 2 - dx6 * dx6 - dy6 * dy6 - dz6 * dz6 - dw6 * dw6;\n    //         if (attn6 > 0) {\n    //             attn6 *= attn6;\n    //             value += attn6 * attn6 * extrapolate(xsb + 1, ysb + 0, zsb + 1, wsb + 0, dx6, dy6, dz6, dw6);\n    //         }\n\n    //         //Contribution (1,0,0,1)\n    //         double dx7 = dx0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //         double dy7 = dy0 - 0 - 2 * SQUISH_CONSTANT_4D;\n    //         double dz7 = dz0 - 0 - 2 * SQUISH_CONSTANT_4D;\n    //         double dw7 = dw0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //         double attn7 = 2 - dx7 * dx7 - dy7 * dy7 - dz7 * dz7 - dw7 * dw7;\n    //         if (attn7 > 0) {\n    //             attn7 *= attn7;\n    //             value += attn7 * attn7 * extrapolate(xsb + 1, ysb + 0, zsb + 0, wsb + 1, dx7, dy7, dz7, dw7);\n    //         }\n\n    //         //Contribution (0,1,1,0)\n    //         double dx8 = dx0 - 0 - 2 * SQUISH_CONSTANT_4D;\n    //         double dy8 = dy0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //         double dz8 = dz0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //         double dw8 = dw0 - 0 - 2 * SQUISH_CONSTANT_4D;\n    //         double attn8 = 2 - dx8 * dx8 - dy8 * dy8 - dz8 * dz8 - dw8 * dw8;\n    //         if (attn8 > 0) {\n    //             attn8 *= attn8;\n    //             value += attn8 * attn8 * extrapolate(xsb + 0, ysb + 1, zsb + 1, wsb + 0, dx8, dy8, dz8, dw8);\n    //         }\n\n    //         //Contribution (0,1,0,1)\n    //         double dx9 = dx0 - 0 - 2 * SQUISH_CONSTANT_4D;\n    //         double dy9 = dy0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //         double dz9 = dz0 - 0 - 2 * SQUISH_CONSTANT_4D;\n    //         double dw9 = dw0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //         double attn9 = 2 - dx9 * dx9 - dy9 * dy9 - dz9 * dz9 - dw9 * dw9;\n    //         if (attn9 > 0) {\n    //             attn9 *= attn9;\n    //             value += attn9 * attn9 * extrapolate(xsb + 0, ysb + 1, zsb + 0, wsb + 1, dx9, dy9, dz9, dw9);\n    //         }\n\n    //         //Contribution (0,0,1,1)\n    //         double dx10 = dx0 - 0 - 2 * SQUISH_CONSTANT_4D;\n    //         double dy10 = dy0 - 0 - 2 * SQUISH_CONSTANT_4D;\n    //         double dz10 = dz0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //         double dw10 = dw0 - 1 - 2 * SQUISH_CONSTANT_4D;\n    //         double attn10 = 2 - dx10 * dx10 - dy10 * dy10 - dz10 * dz10 - dw10 * dw10;\n    //         if (attn10 > 0) {\n    //             attn10 *= attn10;\n    //             value += attn10 * attn10 * extrapolate(xsb + 0, ysb + 0, zsb + 1, wsb + 1, dx10, dy10, dz10, dw10);\n    //         }\n    //     }\n\n    //     //First extra vertex\n    //     double attn_ext0 = 2 - dx_ext0 * dx_ext0 - dy_ext0 * dy_ext0 - dz_ext0 * dz_ext0 - dw_ext0 * dw_ext0;\n    //     if (attn_ext0 > 0)\n    //     {\n    //         attn_ext0 *= attn_ext0;\n    //         value += attn_ext0 * attn_ext0 * extrapolate(xsv_ext0, ysv_ext0, zsv_ext0, wsv_ext0, dx_ext0, dy_ext0, dz_ext0, dw_ext0);\n    //     }\n\n    //     //Second extra vertex\n    //     double attn_ext1 = 2 - dx_ext1 * dx_ext1 - dy_ext1 * dy_ext1 - dz_ext1 * dz_ext1 - dw_ext1 * dw_ext1;\n    //     if (attn_ext1 > 0)\n    //     {\n    //         attn_ext1 *= attn_ext1;\n    //         value += attn_ext1 * attn_ext1 * extrapolate(xsv_ext1, ysv_ext1, zsv_ext1, wsv_ext1, dx_ext1, dy_ext1, dz_ext1, dw_ext1);\n    //     }\n\n    //     //Third extra vertex\n    //     double attn_ext2 = 2 - dx_ext2 * dx_ext2 - dy_ext2 * dy_ext2 - dz_ext2 * dz_ext2 - dw_ext2 * dw_ext2;\n    //     if (attn_ext2 > 0)\n    //     {\n    //         attn_ext2 *= attn_ext2;\n    //         value += attn_ext2 * attn_ext2 * extrapolate(xsv_ext2, ysv_ext2, zsv_ext2, wsv_ext2, dx_ext2, dy_ext2, dz_ext2, dw_ext2);\n    //     }\n\n    //     return value / NORM_CONSTANT_4D;\n    // }\n\n    private function extrapolate(xsb:Int, ysb:Int, dx:Float, dy:Float):Float\n    {\n        var index:Int = perm[(perm[xsb & 0xFF] + ysb) & 0xFF] & 0x0E;\n        return gradients2D[index] * dx\n            + gradients2D[index + 1] * dy;\n    }\n\n    // private function extrapolate(xsb:Int, ysb:Int, zsb:Int, dx:Float, dy:Float, dz:Float):Float\n    // {\n    //     var index:Int = permGradIndex3D[(perm[(perm[xsb & 0xFF] + ysb) & 0xFF] + zsb) & 0xFF];\n    //     return gradients3D[index] * dx\n    //         + gradients3D[index + 1] * dy\n    //         + gradients3D[index + 2] * dz;\n    // }\n\n    // private function extrapolate(xsb:Int, ysb:Int, zsb:Int, wsb:Int, dx:Float, dy:Float, dz:Float, dw:Float):Float\n    // {\n    //     var index:Int = perm[(perm[(perm[(perm[xsb & 0xFF] + ysb) & 0xFF] + zsb) & 0xFF] + wsb) & 0xFF] & 0xFC;\n    //     return gradients4D[index] * dx\n    //         + gradients4D[index + 1] * dy\n    //         + gradients4D[index + 2] * dz\n    //         + gradients4D[index + 3] * dw;\n    // }\n\n    private static function fastFloor(x:Float):Int\n    {\n        return Math.floor(x);\n        // int xi = (int)x;\n        // return x < xi ? xi - 1 : xi;\n    }\n\n    //Gradients for 2D. They approximate the directions to the\n    //vertices of an octagon from the center.\n    private static var gradients2D:Array<Int> = [\n         5,  2,    2,  5,\n        -5,  2,   -2,  5,\n         5, -2,    2, -5,\n        -5, -2,   -2, -5,\n    ];\n\n    //Gradients for 3D. They approximate the directions to the\n    //vertices of a rhombicuboctahedron from the center, skewed so\n    //that the triangular and square facets can be inscribed inside\n    //circles of the same radius.\n    private static var gradients3D:Array<Int> = [\n        -11,  4,  4,     -4,  11,  4,    -4,  4,  11,\n         11,  4,  4,      4,  11,  4,     4,  4,  11,\n        -11, -4,  4,     -4, -11,  4,    -4, -4,  11,\n         11, -4,  4,      4, -11,  4,     4, -4,  11,\n        -11,  4, -4,     -4,  11, -4,    -4,  4, -11,\n         11,  4, -4,      4,  11, -4,     4,  4, -11,\n        -11, -4, -4,     -4, -11, -4,    -4, -4, -11,\n         11, -4, -4,      4, -11, -4,     4, -4, -11,\n    ];\n\n    //Gradients for 4D. They approximate the directions to the\n    //vertices of a disprismatotesseractihexadecachoron from the center,\n    //skewed so that the tetrahedral and cubic facets can be inscribed inside\n    //spheres of the same radius.\n    private static var gradients4D:Array<Int> = [\n         3,  1,  1,  1,      1,  3,  1,  1,      1,  1,  3,  1,      1,  1,  1,  3,\n        -3,  1,  1,  1,     -1,  3,  1,  1,     -1,  1,  3,  1,     -1,  1,  1,  3,\n         3, -1,  1,  1,      1, -3,  1,  1,      1, -1,  3,  1,      1, -1,  1,  3,\n        -3, -1,  1,  1,     -1, -3,  1,  1,     -1, -1,  3,  1,     -1, -1,  1,  3,\n         3,  1, -1,  1,      1,  3, -1,  1,      1,  1, -3,  1,      1,  1, -1,  3,\n        -3,  1, -1,  1,     -1,  3, -1,  1,     -1,  1, -3,  1,     -1,  1, -1,  3,\n         3, -1, -1,  1,      1, -3, -1,  1,      1, -1, -3,  1,      1, -1, -1,  3,\n        -3, -1, -1,  1,     -1, -3, -1,  1,     -1, -1, -3,  1,     -1, -1, -1,  3,\n         3,  1,  1, -1,      1,  3,  1, -1,      1,  1,  3, -1,      1,  1,  1, -3,\n        -3,  1,  1, -1,     -1,  3,  1, -1,     -1,  1,  3, -1,     -1,  1,  1, -3,\n         3, -1,  1, -1,      1, -3,  1, -1,      1, -1,  3, -1,      1, -1,  1, -3,\n        -3, -1,  1, -1,     -1, -3,  1, -1,     -1, -1,  3, -1,     -1, -1,  1, -3,\n         3,  1, -1, -1,      1,  3, -1, -1,      1,  1, -3, -1,      1,  1, -1, -3,\n        -3,  1, -1, -1,     -1,  3, -1, -1,     -1,  1, -3, -1,     -1,  1, -1, -3,\n         3, -1, -1, -1,      1, -3, -1, -1,      1, -1, -3, -1,      1, -1, -1, -3,\n        -3, -1, -1, -1,     -1, -3, -1, -1,     -1, -1, -3, -1,     -1, -1, -1, -3,\n    ];\n}","package cc.noise;\n\n/**\n * A speed-improved perlin and simplex noise algorithms for 2D.\n *\n * Based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n * Converted to Javascript by Joseph Gentle.\n * Converted to Haxe by Malody Hoe (madhoe).\n *\n * Version 2012-03-09\n *\n * This code was placed in the public domain by its original author,\n * Stefan Gustavson. You may use it as you see fit, but\n * attribution is appreciated.\n */\n\n/**\n * // If no seed passed into constructor, a random one is used.\nvar perlin:Perlin = new Perlin();\n\nfor (x in 0...100)\n{\n\tfor (y in 0...100)\n\t{\n\t\tvar value:Float = perlin.noise2d(x / 10.0, y / 10.0);\n\t\t// Do stuff with it...\n\t}\n}\n\n\n---\n\n\nnoise.seed(Math.random());\n\nfor (var x = 0; x < canvas.width; x++) {\n  for (var y = 0; y < canvas.height; y++) {\n    // All noise functions return values in the range of -1 to 1.\n\n    // noise.simplex2 and noise.perlin2 for 2d noise\n    var value = noise.simplex2(x / 100, y / 100);\n    // ... or noise.simplex3 and noise.perlin3:\n    var value = noise.simplex3(x / 100, y / 100, time);\n\n    image[x][y].r = Math.abs(value) * 256; // Or whatever. Open demo.html to see it used with canvas.\n  }\n}\n */\nclass Perlin\n{\n\n\tprivate static var GRAD3:Array<Gradient> = [\n\t\tnew Gradient(1,1,0),new Gradient(-1,1,0),new Gradient(1,-1,0),new Gradient(-1,-1,0),\n\t\tnew Gradient(1,0,1),new Gradient(-1,0,1),new Gradient(1,0,-1),new Gradient(-1,0,-1),\n\t\tnew Gradient(0,1,1),new Gradient(0,-1,1),new Gradient(0,1,-1),new Gradient(0,-1,-1)\n\t];\n\n\tprivate static var P:Array<Int> = [151,160,137,91,90,15,\n\t131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,\n\t190, 6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,\n\t88,237,149,56,87,174,20,125,136,171,168, 68,175,74,165,71,134,139,48,27,166,\n\t77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,\n\t102,143,54, 65,25,63,161, 1,216,80,73,209,76,132,187,208, 89,18,169,200,196,\n\t135,130,116,188,159,86,164,100,109,198,173,186, 3,64,52,217,226,250,124,123,\n\t5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,\n\t223,183,170,213,119,248,152, 2,44,154,163, 70,221,153,101,155,167, 43,172,9,\n\t129,22,39,253, 19,98,108,110,79,113,224,232,178,185, 112,104,218,246,97,228,\n\t251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107,\n\t49,192,214, 31,181,199,106,157,184, 84,204,176,115,121,50,45,127, 4,150,254,\n\t138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180];\n\n\n\n\tprivate var perm:Array<Int>;\n\tprivate var gradP:Array<Gradient>;\n\n\tprivate function fade(t:Float):Float {\n\t\treturn t * t * t * (t * (t * 6 - 15) + 10);\n\t}\n\n\tprivate function lerp(a:Float, b:Float, t:Float):Float {\n\t\treturn (1 - t) * a + t * b;\n\t}\n\n\t/**\n\t * If no seed is passed in, a random seed is used. Only accepts 65536 seeds (0 - 65535).\n\t */\n\tpublic function new(?seed:Int)\n\t{\n\t\t// To remove the need for index wrapping, double the permutation table length\n\t\tperm = new Array<Int>();\n\t\tgradP = new Array<Gradient>();\n\t\tfor (i in 0...512)\n\t\t{\n\t\t\tperm.push(0);\n\t\t\tgradP.push(null);\n\t\t}\n\n\t\tif (seed == null)\n\t\t\tseed = Std.int(Math.random() * 65536);\n\n\t\tseed %= 65536;\n\t\tif (seed < 256)\n\t\t\tseed |= seed << 8;\n\n\t\tvar v;\n\t\tfor (i in 0...256)\n\t\t{\n\t\t\tif (i & 1 == 1)\n\t\t\t\tv = P[i] ^ (seed & 255);\n\t\t\telse\n\t\t\t\tv = P[i] ^ ((seed >> 8) & 255);\n\n\t\t\tperm[i] = perm[i + 256] = v;\n\t\t\tgradP[i] = gradP[i + 256] = GRAD3[v % 12];\n\t\t}\n\t}\n\n\tprivate function n2d(x:Float, y:Float):Float\n\t{\n\t\t// Find unit grid cell containing point\n\t\tvar X:Int = Math.floor(x);\n\t\tvar Y:Int = Math.floor(y);\n\t\t// Get relative xy coordinates of point within that cell\n\t\tx = x - X;\n\t\ty = y - Y;\n\t\t// Wrap the integer cells at 255 (smaller integer period can be introduced here)\n\t\tX = X & 255;\n\t\tY = Y & 255;\n\n\t\t// Calculate noise contributions from each of the four corners\n\t\tvar n00:Float = gradP[X + perm[Y]].dot2(x, y);\n\t\tvar n01:Float = gradP[X + perm[Y + 1]].dot2(x, y - 1);\n\t\tvar n10:Float = gradP[X + 1 + perm[Y]].dot2(x - 1, y);\n\t\tvar n11:Float = gradP[X + 1 + perm[Y + 1]].dot2(x - 1, y - 1);\n\n\t\t// Compute the fade curve value for x\n\t\tvar u = fade(x);\n\n\t\t// Interpolate the four results\n\t\tvar result = lerp(lerp(n00, n10, u), lerp(n01, n11, u), fade(y));\n\n\t\t// return result / (Math.sqrt(2) * 0.5); // divide by ~0.707 to get [-1,1] range\n\t\treturn result; // divide by ~0.707 to get [-1,1] range\n\t}\n\n\tprivate function n3d(x:Float, y:Float, z:Float):Float\n\t{\n\t\t// Find unit grid cell containing point\n\t\tvar X:Int = Math.floor(x);\n\t\tvar Y:Int = Math.floor(y);\n\t\tvar Z:Int = Math.floor(z);\n\t\t// Get relative xyz coordinates of point within that cell\n\t\tx = x - X;\n\t\ty = y - Y;\n\t\tz = z - Z;\n\t\t// Wrap the integer cells at 255 (smaller integer period can be introduced here)\n\t\tX = X & 255;\n\t\tY = Y & 255;\n\t\tZ = Z & 255;\n\n\t\t// Calculate noise contributions from each of the eight corners\n\t\tvar n000:Float = gradP[X+  perm[Y+  perm[Z  ]]].dot3(x,   y,     z);\n\t\tvar n001:Float = gradP[X+  perm[Y+  perm[Z+1]]].dot3(x,   y,   z-1);\n\t\tvar n010:Float = gradP[X+  perm[Y+1+perm[Z  ]]].dot3(x,   y-1,   z);\n\t\tvar n011:Float = gradP[X+  perm[Y+1+perm[Z+1]]].dot3(x,   y-1, z-1);\n\t\tvar n100:Float = gradP[X+1+perm[Y+  perm[Z  ]]].dot3(x-1,   y,   z);\n\t\tvar n101:Float = gradP[X+1+perm[Y+  perm[Z+1]]].dot3(x-1,   y, z-1);\n\t\tvar n110:Float = gradP[X+1+perm[Y+1+perm[Z  ]]].dot3(x-1, y-1,   z);\n\t\tvar n111:Float = gradP[X+1+perm[Y+1+perm[Z+1]]].dot3(x-1, y-1, z-1);\n\n\t\t// Compute the fade curve value for x, y, z\n\t\tvar u:Float = fade(x);\n\t\tvar v:Float = fade(y);\n\t\tvar w:Float = fade(z);\n\n\t\t// Interpolate\n\t\tvar result = lerp(\n\t\t\tlerp(lerp(n000, n100, u), lerp(n001, n101, u), w),\n\t\t\tlerp(lerp(n010, n110, u), lerp(n011, n111, u), w),\n\t\t\tv);\n\n\t\t// return result / (Math.sqrt(3) * 0.5); // divide by ~0.87 to get [-1,1] range\n\t\treturn result; // divide by ~0.87 to get [-1,1] range\n\t}\n\n\t/**\n\t * 2d Perlin noise.\n\t * @return Value in the range [-1, 1].\n\t */\n\tpublic function noise2d(x:Float, y:Float, octaves:Int = 1, amplitude:Float = 1, persistence:Float = 0.9, lacunarity:Float = 2):Float\n\t{\n\t\tif (octaves == 1)\n\t\t\treturn amplitude * n2d(x, y);\n\n\t\tvar sum:Float = 0;\n\n\t\tfor (i in 0...octaves)\n\t\t{\n\t\t\tsum += amplitude * n2d(x, y);\n\t\t\tamplitude *= persistence;\n\n\t\t\tx *= lacunarity;\n\t\t\ty *= lacunarity;\n\t\t}\n\n\t\treturn sum;\n\t}\n\n\t/**\n\t * 3d Perlin noise.\n\t * @return Value in the range [-1, 1].\n\t */\n\tpublic function noise3d(x:Float, y:Float, z:Float, octaves:Int = 1, amplitude:Float = 1, persistence:Float = 0.9, lacunarity:Float = 2):Float\n\t{\n\t\tif (octaves == 1)\n\t\t\treturn amplitude * n3d(x, y, z);\n\n\t\tvar sum:Float = 0;\n\n\t\tfor (i in 0...octaves)\n\t\t{\n\t\t\tsum += amplitude * n3d(x, y, z);\n\t\t\tamplitude *= persistence;\n\n\t\t\tx *= lacunarity;\n\t\t\ty *= lacunarity;\n\t\t}\n\n\t\treturn sum;\n\t}\n\n}\n\nclass Gradient\n{\n\tpublic var x:Float;\n\tpublic var y:Float;\n\tpublic var z:Float;\n\n\tpublic function new(x:Float, y:Float, z:Float) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t}\n\n\tpublic function dot2(x:Float, y:Float):Float {\n\t\treturn this.x * x + this.y * y;\n\t}\n\n\tpublic function dot3(x:Float, y:Float, z:Float):Float {\n\t\treturn this.x * x + this.y * y + this.z * z;\n\t}\n}","package cc.tool;\n\nimport js.Browser.document;\n\nclass Embed {\n\tpublic function new() {\n\t\t// your code\n\t}\n\n\t/**\n\t * [Description]\n\t * @param id\n\t * @param src\n\t * @param callback\n\t * @param callbackArray\n\t */\n\tpublic static function script(id:String, src:String, ?callback:Dynamic, ?callbackArray:Array<Dynamic>) {\n\t\t// trace('${toString()} embedSocketScript');\n\t\tvar el:js.html.ScriptElement = document.createScriptElement();\n\t\tel.id = id;\n\t\tel.src = src;\n\t\tel.crossOrigin = 'anonymous';\n\t\tel.onload = function() {\n\t\t\t// Zip.isZipLoaded = true; // embedding is done\n\t\t\tif (callback != null) {\n\t\t\t\tif (callbackArray == null) {\n\t\t\t\t\tReflect.callMethod(callback, callback, [id]);\n\t\t\t\t} else {\n\t\t\t\t\tReflect.callMethod(callback, callback, callbackArray);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdocument.body.appendChild(el);\n\t}\n}\n","package cc.tool;\n\nimport js.html.CanvasRenderingContext2D;\nimport js.Browser.*;\nimport js.Browser.window;\nimport cc.util.MathUtil;\n\nusing StringTools;\n\nclass ExportFile {\n\t/**\n\t * [Description]\n\t * @param ctx\n\t * @param isJpg\n\t * @param fileName\n\t */\n\tpublic static function downloadImage(ctx:CanvasRenderingContext2D, ?isJpg:Bool = false, ?fileName:String) {\n\t\tif (fileName == null) {\n\t\t\tvar hash = js.Browser.location.hash;\n\t\t\thash = hash.replace('#', '').toLowerCase();\n\t\t\tif (hash == '')\n\t\t\t\thash = 'image';\n\t\t\tfileName = '${hash}-${Date.now().getTime()}';\n\t\t\t// fileName = 'cc-art-${Date.now().getTime()}';\n\t\t}\n\t\tvar link = document.createAnchorElement();\n\t\tlink.href = ctx.canvas.toDataURL((isJpg) ? 'image/jpeg' : '', 1);\n\t\tlink.download = fileName;\n\t\tlink.click();\n\t}\n\n\t/**\n\t * [Description]\n\t * @param ctx\n\t * @param isJpg\n\t */\n\tpublic static function onBase64Handler(ctx:CanvasRenderingContext2D, ?isJpg:Bool = false) {\n\t\tvar base64 = ctx.canvas.toDataURL((isJpg) ? 'image/jpeg' : '', 1);\n\t\t// var base64 = ctx.toDataURL(); // default png\n\t\tclipboard(base64);\n\t}\n\n\t/**\n\t * Start file download.\n\t * ExportUtil.downloadTextFile(\"This is the content of my file :)\", \"hello.txt\");\n\t *\n\t * @param text\n\t * @param fileName\n\t */\n\tpublic static function downloadTextFile(text:String, ?fileName:String) {\n\t\tif (fileName == null)\n\t\t\tfileName = 'CC-txt-${Date.now().getTime()}.txt';\n\n\t\tvar element = document.createElement('a');\n\t\telement.setAttribute('href', 'data:text/plain;charset=utf-8,' + untyped encodeURIComponent(text));\n\t\telement.setAttribute('download', fileName);\n\n\t\telement.style.display = 'none';\n\t\tdocument.body.appendChild(element);\n\n\t\telement.click();\n\n\t\tdocument.body.removeChild(element);\n\t}\n\n\t/**\n\t * [Description]\n\t * @example\n\t * \t\t\tutils.Clipboard.copy('hello');\n\t * @param text \tvalue you want to export (probably base64)\n\t */\n\tpublic static function clipboard(text:String) {\n\t\tvar win = 'Ctrl+C';\n\t\tvar mac = 'Cmd+C';\n\t\tvar copyCombo = win;\n\t\tvar userAgent = js.Browser.navigator.userAgent;\n\t\tvar ereg = new EReg(\"iPhone|iPod|iPad|Android|BlackBerry\", \"i\");\n\t\tvar ismac = ereg.match(userAgent);\n\t\tif (ismac)\n\t\t\tcopyCombo = mac;\n\t\twindow.prompt('Copy to clipboard: $copyCombo, Enter', text);\n\t}\n\n\t/**\n\t * Returns contents of a canvas as a png based data url, with the specified background color\n\t *\n\t * just change the background to white... it really doesn't matter, when exporting a jpg\n\t *\n\t * @param ctx\n\t * @param isJpg\n\t * @param fileName\n\t */\n\tpublic static function downloadImageBg(ctx:CanvasRenderingContext2D, ?isJpg:Bool = false, ?fileName:String) {\n\t\tvar canvas = ctx.canvas;\n\n\t\tif (fileName == null) {\n\t\t\tvar hash = js.Browser.location.hash;\n\t\t\thash = hash.replace('#', '').toLowerCase();\n\t\t\tif (hash == '')\n\t\t\t\thash = 'image';\n\t\t\tfileName = '${hash}-${Date.now().getTime()}';\n\t\t\t// fileName = 'cc-art-${Date.now().getTime()}';\n\t\t}\n\n\t\t// cache height and width\n\t\tvar w = canvas.width;\n\t\tvar h = canvas.height;\n\n\t\t// var ctx = canvas.getctx2d();\n\n\t\tvar data;\n\t\tvar compositeOperation:String;\n\n\t\t// get the current ImageData for the canvas.\n\t\tdata = ctx.getImageData(0, 0, w, h);\n\n\t\t// store the current globalCompositeOperation\n\t\tcompositeOperation = ctx.globalCompositeOperation;\n\n\t\t// set to draw behind current content\n\t\tctx.globalCompositeOperation = \"destination-over\";\n\n\t\t// set background color\n\t\tctx.fillStyle = '#ffffff';\n\n\t\t// draw background / rect on entire canvas\n\t\tctx.fillRect(0, 0, w, h);\n\n\t\t// get the image data from the canvas\n\t\t// var imageData = canvas.toDataURL(\"image/png\");\n\n\t\t// // clear the canvas\n\t\t// ctx.clearRect(0, 0, w, h);\n\n\t\t// // restore it with original / cached ImageData\n\t\t// ctx.putImageData(data, 0, 0);\n\n\t\t// // reset the globalCompositeOperation to what it was\n\t\t// ctx.globalCompositeOperation = compositeOperation;\n\n\t\tvar link = document.createAnchorElement();\n\t\tlink.href = ctx.canvas.toDataURL((isJpg) ? 'image/jpeg' : '', 1);\n\t\tlink.download = fileName;\n\t\tlink.click();\n\t}\n\n\t// ____________________________________ toString() ____________________________________\n\n\tfunction toString():String {\n\t\treturn '[ExportFile]';\n\t}\n}\n","package cc.tool;\n\nimport js.html.Image;\n\nclass Loader {\n\t@:isVar public var _id(get, set):String;\n\t@:isVar public var _loadingArray(get, set):Array<LoaderObj> = [];\n\tpublic var completeArray:Array<LoaderObj> = [];\n\t@:isVar public var _isDebug(get, set):Bool = false;\n\n\tvar _onComplete:Dynamic;\n\tvar _onCompleteParams:Array<Dynamic>;\n\tvar _onUpdate:Dynamic;\n\tvar _onUpdateParams:Array<Dynamic>;\n\tvar _onProgress:Dynamic;\n\tvar _onProgressParams:Array<Dynamic>;\n\tvar _onError:Dynamic;\n\tvar _onErrorParams:Array<Dynamic>;\n\tvar _loadCounter = 0;\n\n\t/**\n\t * create a file loader\n\t *\n\t * @example\n\t * \t\timport cc.tool.Loader;\n\t * \t\tvar load = Loader.create().add(filename).load();\n\t *\n\t * @param id  (optional) id of the loader, otherwise an id is created\n\t */\n\tpublic function new(?id:String) {\n\t\tif (id == null) {\n\t\t\tthis._id = '${toString()}_${Date.now().getTime()}';\n\t\t} else {\n\t\t\tthis._id = id;\n\t\t}\n\t}\n\n\t/**\n\t * create a file loader\n\t *\n\t * @example\n\t * \t\timport cc.tool.Loader;\n\t * \t\tvar load = Loader.create().add(filename).load();\n\t *\n\t * @param id  (optional) id of the loader, otherwise an id is created\n\t * @return Loader\n\t */\n\tstatic inline public function create(?id:String):Loader {\n\t\tvar loader = new Loader(id);\n\t\treturn loader;\n\t}\n\n\t// ____________________________________ properties ____________________________________\n\n\tinline public function isDebug(?isDebug:Bool = true):Loader {\n\t\tthis._isDebug = isDebug;\n\t\treturn this;\n\t}\n\n\tinline public function add(path:String, ?type:FileType):Loader {\n\t\tvar _type = (type == null) ? fileType(path) : type;\n\t\tvar _obj:LoaderObj = {\n\t\t\tpath: path,\n\t\t\ttype: _type\n\t\t};\n\t\tif (_isDebug)\n\t\t\ttrace(_obj);\n\t\tthis._loadingArray.push(_obj);\n\t\treturn this;\n\t}\n\n\tinline public function onComplete(func:Array<LoaderObj>->Void, ?arr:Array<Dynamic>):Loader {\n\t\tthis._onComplete = func;\n\t\tthis._onCompleteParams = arr;\n\t\treturn this;\n\t}\n\n\tinline public function onUpdate(func:Dynamic, ?arr:Array<Dynamic>):Loader {\n\t\tthis._onUpdate = func;\n\t\tthis._onUpdateParams = arr;\n\t\treturn this;\n\t}\n\n\tinline public function onProgress(func:Dynamic, ?arr:Array<Dynamic>):Loader {\n\t\tthis._onProgress = func;\n\t\tthis._onProgressParams = arr;\n\t\treturn this;\n\t}\n\n\tinline public function onError(func:Dynamic, ?arr:Array<Dynamic>):Loader {\n\t\tthis._onError = func;\n\t\tthis._onErrorParams = arr;\n\t\treturn this;\n\t}\n\n\tinline public function load():Loader {\n\t\tif (_isDebug)\n\t\t\ttrace('start loading');\n\n\t\tloadingHandler();\n\t\treturn this;\n\t}\n\n\t// ____________________________________ needs to load everthing ____________________________________\n\n\t/**\n\t * lets start simple\n\t * \t\texpect : 'foo/bar/file.json'\n\t *\n\t * @param path\n\t * @return FileType\n\t */\n\tfunction fileType(path:String):FileType {\n\t\tvar type:FileType = Unknown;\n\t\tvar ext = path.split('.')[1];\n\n\t\tswitch (ext.toLowerCase()) {\n\t\t\tcase 'jpg', 'jpeg':\n\t\t\t\ttype = JPG;\n\t\t\tcase 'gif':\n\t\t\t\ttype = Gif;\n\t\t\tcase 'png':\n\t\t\t\ttype = Png;\n\t\t\tcase 'json':\n\t\t\t\ttype = Json;\n\t\t\tcase 'xml':\n\t\t\t\ttype = Xml;\n\t\t\tcase 'txt':\n\t\t\t\ttype = Txt;\n\t\t\tcase _:\n\t\t\t\ttype = Unknown;\n\t\t}\n\n\t\treturn type;\n\t}\n\n\tfunction loadingHandler() {\n\t\tif (_loadCounter >= _loadingArray.length) {\n\t\t\tif (_isDebug)\n\t\t\t\ttrace('${toString()} :: Loading queue is done');\n\t\t\tif (_isDebug)\n\t\t\t\ttrace('show completed array: ' + completeArray);\n\t\t\tif (_isDebug)\n\t\t\t\ttrace('length of complete files: ' + completeArray.length);\n\t\t\tif (Reflect.isFunction(_onComplete))\n\t\t\t\tReflect.callMethod(_onComplete, _onComplete, [completeArray]);\n\t\t\treturn;\n\t\t}\n\n\t\t// create the image used\n\t\tvar _l:LoaderObj = _loadingArray[_loadCounter];\n\n\t\tswitch (_l.type) {\n\t\t\tcase JPEG, JPG, Png, Gif, Img:\n\t\t\t\timageLoader(_l);\n\t\t\tcase Json, Txt, Xml, Svg:\n\t\t\t\ttextLoader(_l);\n\t\t\tcase _:\n\t\t\t\ttrace('?????????');\n\t\t}\n\t}\n\n\tfunction imageLoader(_l:LoaderObj) {\n\t\tvar _img = new Image();\n\t\t_img.crossOrigin = \"Anonymous\";\n\t\t_img.src = _l.path;\n\t\t_img.onload = function() {\n\t\t\tif (_isDebug)\n\t\t\t\ttrace('w: ' + _img.width);\n\t\t\tif (_isDebug)\n\t\t\t\ttrace('h: ' + _img.height);\n\t\t\tif (_isDebug)\n\t\t\t\ttrace(completeArray.length);\n\t\t\t_l.image = _img;\n\t\t\tcompleteArray.push(_l);\n\t\t\tif (_isDebug)\n\t\t\t\ttrace(completeArray);\n\t\t\tif (_isDebug)\n\t\t\t\ttrace(completeArray.length);\n\n\t\t\tif (Reflect.isFunction(_onUpdate))\n\t\t\t\tReflect.callMethod(_onUpdate, _onUpdate, [_img]);\n\t\t\t_loadCounter++;\n\t\t\tloadingHandler();\n\t\t}\n\n\t\t_img.onerror = function() {\n\t\t\tif (Reflect.isFunction(_onError))\n\t\t\t\tReflect.callMethod(_onError, _onError, [_img]);\n\t\t\t_loadCounter++;\n\t\t\tloadingHandler();\n\t\t}\n\n\t\t_img.onprogress = function() {\n\t\t\tif (Reflect.isFunction(_onProgress))\n\t\t\t\tReflect.callMethod(_onProgress, _onProgress, [_img]);\n\t\t}\n\t}\n\n\tfunction textLoader(_l:LoaderObj) {\n\t\tvar url = _l.path;\n\t\tvar req = new haxe.Http(url);\n\t\t// req.setHeader('Content-Type', 'application/json');\n\t\t// req.setHeader('auth', '${App.TOKEN}');\n\t\treq.onData = function(data:String) {\n\t\t\ttry {\n\t\t\t\t_l.str = data;\n\t\t\t\t_l.json = haxe.Json.parse(data);\n\t\t\t\tcompleteArray.push(_l);\n\n\t\t\t\tif (Reflect.isFunction(_onUpdate))\n\t\t\t\t\tReflect.callMethod(_onUpdate, _onUpdate, ['_img']);\n\t\t\t\t_loadCounter++;\n\n\t\t\t\tloadingHandler();\n\t\t\t} catch (e:Dynamic) {\n\t\t\t\tif (_isDebug)\n\t\t\t\t\ttrace(e);\n\n\t\t\t\t_loadCounter++;\n\t\t\t\tloadingHandler();\n\t\t\t}\n\t\t}\n\t\treq.onError = function(error:String) {\n\t\t\tif (_isDebug)\n\t\t\t\ttrace('error: $error');\n\t\t\t_loadCounter++;\n\t\t\tloadingHandler();\n\t\t}\n\t\treq.onStatus = function(status:Int) {\n\t\t\tif (_isDebug)\n\t\t\t\ttrace('status: $status');\n\t\t}\n\t\treq.request(true); // false=GET, true=POST\n\t}\n\n\t// ____________________________________ getter/setter ____________________________________\n\n\tfunction get__id():String {\n\t\treturn _id;\n\t}\n\n\tfunction set__id(value:String):String {\n\t\treturn _id = value;\n\t}\n\n\tfunction get__loadingArray():Array<LoaderObj> {\n\t\treturn _loadingArray;\n\t}\n\n\tfunction set__loadingArray(value:Array<LoaderObj>):Array<LoaderObj> {\n\t\treturn _loadingArray = value;\n\t}\n\n\tfunction get__isDebug():Bool {\n\t\treturn _isDebug;\n\t}\n\n\tfunction set__isDebug(value:Bool):Bool {\n\t\treturn _isDebug = value;\n\t}\n\n\t// ____________________________________ misc ____________________________________\n\n\tfunction toString() {\n\t\treturn '[Loader]';\n\t}\n}\n\nenum FileType {\n\tUnknown;\n\tImg;\n\tTxt;\n\tJson;\n\tGif;\n\tPng;\n\tJPEG;\n\tJPG;\n\tXml;\n\tSvg;\n}\n\ntypedef LoaderObj = {\n\tvar path:String;\n\tvar type:FileType;\n\t@:optional var _id:Int;\n\t@:optional var image:js.html.Image;\n\t@:optional var str:String;\n\t@:optional var json:Dynamic;\n};\n","package cc.tool.convert;\n\nimport js.html.Image;\nimport js.Browser.window;\n\nclass SvgToImage {\n\tpublic function new():Void {}\n\n\t/**\n\t * convert a svg string into a Image\n\t *\n\t * @param svg\t\tstring (svg)\n\t * @param callback\twhen complete call this function\n\t */\n\tstatic public function convert(svg:String, callback:Image->Void) {\n\t\t// create the image used\n\t\tvar svgImage = new Image();\n\t\tsvgImage.onload = function() {\n\t\t\t// trace('base64 square');\n\t\t\t// trace('w: ' + svgImage.width);\n\t\t\t// trace('h: ' + svgImage.height);\n\t\t\tReflect.callMethod(callback, callback, [svgImage]);\n\t\t}\n\n\t\t// get svg data (from the dom)\n\t\t// var xml = new XMLSerializer().serializeToString(svg);\n\n\t\t// make it base64\n\t\tvar svg64 = window.btoa(svg);\n\t\tvar b64Start = 'data:image/svg+xml;base64,';\n\n\t\t// prepend a \"header\"\n\t\tvar image64 = b64Start + svg64;\n\n\t\t// set it as the source of the img element\n\t\tsvgImage.src = image64;\n\n\t\t// draw the image onto the canvas\n\t\t// ctx.drawImage(img, 10, 10);\n\t}\n}\n","package cc.tool.export;\n\nclass ExportNames {\n\tpublic static var SEND:String = \"send\";\n\tpublic static var MESSAGE:String = \"message\";\n\tpublic static var IMAGE:String = \"image\";\n\tpublic static var SEQUENCE:String = \"sequence\";\n\tpublic static var SEQUENCE_NEXT:String = \"sequence_next\";\n\tpublic static var COMBINE:String = \"combine\";\n\tpublic static var MARKDOWN:String = \"md\";\n\tpublic static var CHECKIN:String = \"checkin\";\n\tpublic static var SERVER_CHECKIN:String = \"server-checkin\";\n\tpublic static var RENDER_CLEAR:String = \"render-clear\";\n\tpublic static var RENDER_CLEAR_DONE:String = \"render-clear-done\";\n\tpublic static var RENDER_FRAME:String = \"render-frame\";\n\tpublic static var RENDER_DONE:String = \"render-done\";\n\tpublic static var TEST:String = \"test\";\n\n\tpublic function new() {\n\t\t// your code\n\t}\n}\n","package cc.tool.export;\n\nusing StringTools;\n\nclass ExportWrapperBase {\n\t// public var imageStringArray:Array<String> = [];\n\tvar _onProgressHandler:Float->Void;\n\tvar _onExportComplete:Dynamic;\n\tvar _isDebug:Bool = false;\n\n\tpublic function new() {\n\t\t// trace(toString());\n\t}\n\n\t// ____________________________________ public functions ____________________________________\n\n\tpublic function progress(func:Float->Void) {\n\t\t_onProgressHandler = func;\n\t}\n\n\tpublic function complete(func:Dynamic) {\n\t\t_onExportComplete = func;\n\t}\n\n\t// ____________________________________ get export files ____________________________________\n\n\tpublic function getMarkdown(obj:ExportWrapper.ExportWrapperObj):String {\n\t\tvar md = '# ${toString()}\n\n- Generated on: ${Date.now()}\n- total images: ${obj.imageStringArray.length}\n- calculated time: ${obj.imageStringArray.length / 60} sec\n- file name: `_${obj.filename}_${obj.timestamp}.zip`\n- delay: ${obj.delay} frames (${obj.delay / 60} sec)\n- record: ${obj.record} frames (${obj.record / 60} sec)\n\n## Instagram\n\n```\nsketch.${obj.filename} :: ${obj.description}\n\n#codeart #coding #creativecode #generative #generativeArt\n#minimalism #minimalist #minimal\n#haxe #javascript #js #nodejs\n#animation #illustration #graphicdesign\n```\n\n## convert\n\nopen terminal\n\n```\nsh convert.sh\n```\n\n## Folder structure\n\n```\n+ _${obj.filename}_${obj.timestamp}.zip\n+ _${obj.filename}\n\t- convert.sh\n\t- README.MD\n\t+ sequence\n\t\t- image_${Std.string(0).lpad('0', 4)}.png\n\t\t- image_${Std.string(1).lpad('0', 4)}.png\n\t\t- ...\n```\n';\n\n\t\treturn md;\n\t}\n\n\tpublic function getBashConvert(obj:ExportWrapper.ExportWrapperObj):String {\n\t\tvar bash = '#!/bin/bash\n\necho \\'Start convertions png sequence to mp4\\'\n\nffmpeg -y -r 30 -i sequence/image_%04d.png -c:v libx264 -strict -2 -pix_fmt yuv420p -shortest -filter:v \"setpts=0.5*PTS\"  ${obj.filename}_output_30fps.mp4\n# ffmpeg -y -r 30 -i sequence/image_%04d.png -c:v libx264 -strict -2 -pix_fmt yuv420p -shortest -filter:v \"setpts=0.5*PTS\"  sequence/_output_30fps.mp4\n\necho \\'End convertions png sequence to mp4\\'\n\n';\n\n\t\treturn bash;\n\t}\n\n\tpublic function getBashConvertPng(obj:ExportWrapper.ExportWrapperObj):String {\n\t\tvar bash2 = '\n#!/bin/bash\n\necho \\'Start remove transparancy from images sequence\\'\n\ncd sequence\nmkdir output\nfor i in *.png; do\n   convert \"$$i\" -background white -alpha remove output/\"$$i\"\n   echo \"$$i\"\ndone\n\necho \\'End remove transparancy from images sequence\\'\necho \\'Start convertions png sequence to mp4\\'\n\nffmpeg -y -r 30 -i output/image_%04d.png -c:v libx264 -strict -2 -pix_fmt yuv420p -shortest -filter:v \"setpts=0.5*PTS\"  ../${obj.filename}_white_output_30fps.mp4\n\necho \\'End convertions png sequence to mp4\\'\n\n';\n\n\t\treturn bash2;\n\t}\n\n\t/**\n\t * ctivate logs\n\t * @param isDebug (default is `false`)\n\t */\n\tpublic function debug(isDebug:Bool):Void {\n\t\tthis._isDebug = isDebug;\n\t}\n\n\tpublic function toString():String {\n\t\treturn '[ExportTypeBase]';\n\t}\n}\n","package cc.tool.export;\n\nimport js.Browser.*;\nimport cc.tool.export.ExportNames.*;\n\nusing StringTools;\n\nclass ExportNodeServer extends ExportWrapperBase implements IExport {\n\tvar _port:String;\n\tvar _host:String;\n\tvar _socket:Dynamic;\n\t//\n\tvar _isExportServerReady:Bool = false;\n\tvar _isSocketReady:Bool = false;\n\tvar _isTimer:Bool = false;\n\tvar _isClear:Bool = false;\n\tvar _isRecording:Bool = false;\n\t//\n\t// var _frameCounter = 0;\n\t// var _currentFrame = 0;\n\t// var _durationFrames = 0;\n\tvar _exportCounter = 0;\n\tvar _exportArray:Array<String>;\n\t// default export settings\n\tvar _name:String = 'frame'; // default file name\n\tvar _folder:String = 'sequence'; // default folder name in the export folder\n\n\tpublic function new() {\n\t\tsuper();\n\t\t// might not be bullit proof!!!\n\t\tembedScripts(onEmbedComplete);\n\t}\n\n\t// ____________________________________ public functions ____________________________________\n\n\tpublic function export(obj:ExportWrapper.ExportWrapperObj):Void {\n\t\tif (_isDebug)\n\t\t\ttrace('${toString()} - export');\n\t\t_exportArray = obj.imageStringArray;\n\t\t_exportCounter = 0;\n\t\tdeleteFolder(); // first delete then, via socket start export\n\t\t// startExport();\n\t}\n\n\t// ____________________________________ private functions ____________________________________\n\n\tfunction startExport() {\n\t\tif (_isDebug)\n\t\t\ttrace('startExport: ${_exportCounter} / ${_exportArray.length}');\n\n\t\tif (Reflect.isFunction(_onProgressHandler)) {\n\t\t\tReflect.callMethod(_onProgressHandler, _onProgressHandler, [(_exportCounter / _exportArray.length) * 100]);\n\t\t}\n\t\tif (_exportCounter >= _exportArray.length) {\n\t\t\t_isRecording = false;\n\t\t\tif (Reflect.isFunction(_onExportComplete)) {\n\t\t\t\tReflect.callMethod(_onExportComplete, _onExportComplete, []);\n\t\t\t}\n\t\t\tif (_isDebug)\n\t\t\t\ttrace('${toString()} STOP recording base on total frames');\n\t\t\tconvertExport();\n\t\t\treturn;\n\t\t}\n\t\tvar id = Std.string(Date.now().getTime());\n\t\tvar data:AST.EXPORT_IMAGE = {\n\t\t\t_id: id,\n\t\t\tfile: _exportArray[_exportCounter],\n\t\t\tname: '${_name}-${Std.string(_exportCounter).lpad('0', 4)}',\n\t\t\tfolder: '${_folder}',\n\t\t}\n\n\t\tif (_isDebug)\n\t\t\ttrace('${toString()} renderSequence : ${data._id}');\n\n\t\t_socket.emit(SEQUENCE, data);\n\n\t\t// per 60 frames a mention in the browser\n\t\tif (_exportCounter % 60 == 1) {\n\t\t\tif (_isDebug)\n\t\t\t\ttrace('current frame render: $_exportCounter/${_exportArray.length}');\n\t\t}\n\t}\n\n\t// ____________________________________ convert to video ____________________________________\n\n\tfunction convertExport() {\n\t\tvar data:AST.EXPORT_CONVERT_VIDEO = {\n\t\t\tname: '${_name}',\n\t\t\tclear: _isClear,\n\t\t\tfolder: '${_folder}',\n\t\t\tdescription: 'export this file '\n\t\t};\n\t\t_socket.emit(COMBINE, data);\n\t}\n\n\tfunction deleteFolder() {\n\t\tvar data:AST.EXPORT_CONVERT_VIDEO = {\n\t\t\tname: '${_name}',\n\t\t\tclear: _isClear,\n\t\t\tfolder: '${_folder}',\n\t\t};\n\t\t_socket.emit(RENDER_CLEAR, data);\n\t}\n\n\t// ____________________________________ init socket (script is embedded) ____________________________________\n\n\tfunction initSocket() {\n\t\tif (_isDebug)\n\t\t\ttrace('${toString()} Init Socket');\n\t\t_socket = untyped io();\n\t\t// _socket = untyped __js__('io.connect({0},{upgradeTimeout: 30000});', '${_host}:${_port}');\n\t\t// check possible ways to make sure the server is acitve\n\t\t_socket.on('connect_error', function(err) {\n\t\t\t// handle server error here\n\t\t\tconsole.group('Connection error export server');\n\t\t\tconsole.warn('${toString()} Error connecting to server \"${err}\", closing connection');\n\t\t\tconsole.info('this probably means that cc-export project isn\\'t running');\n\t\t\tconsole.groupEnd();\n\t\t\t_socket.close();\n\t\t\t_isRecording = false;\n\t\t\t_isExportServerReady = false;\n\t\t});\n\t\t_socket.on(\"connect\", function(err) {\n\t\t\tif (err == 'undefined') {\n\t\t\t\ttrace('${toString()} connect: $err');\n\t\t\t} else {\n\t\t\t\ttrace('${toString()} connect');\n\t\t\t}\n\t\t\tif (err == null) {\n\t\t\t\t_isSocketReady = true;\n\t\t\t}\n\t\t});\n\t\t_socket.on(\"disconnect\", function(err) {\n\t\t\ttrace('${toString()} disconnect: $err');\n\t\t\t// _currentFrame = _frameCounter;\n\t\t\t// trace('_currentFrame : $_currentFrame');\n\t\t});\n\t\t_socket.on(\"connect_failed\", function(err) {\n\t\t\ttrace('${toString()} connect_failed: $err');\n\t\t});\n\t\t_socket.on(\"error\", function(err) {\n\t\t\ttrace('${toString()} error: $err');\n\t\t});\n\t\t// messages from the server back\n\t\t// _socket.emit('message', 'checkin');\n\t\t_socket.on('message', function(data) {\n\t\t\tif (data.message != null) {\n\t\t\t\ttrace('${toString()} message: ' + data.message);\n\t\t\t} else {\n\t\t\t\ttrace('${toString()} There is a problem: ' + data);\n\t\t\t}\n\t\t});\n\t\t_socket.emit(CHECKIN);\n\t\t_socket.on(SERVER_CHECKIN, function(data) {\n\t\t\tif (data.checkin != null && data.checkin == true) {\n\t\t\t\t_isExportServerReady = true;\n\t\t\t\ttrace('${toString()} data:  + $data, & _isExportServerReady: $_isExportServerReady');\n\t\t\t} else {\n\t\t\t\ttrace('${toString()} There is a problem: ' + data);\n\t\t\t}\n\t\t});\n\t\t_socket.on(RENDER_DONE, function(data) {\n\t\t\ttrace(data);\n\t\t});\n\t\t_socket.on(RENDER_CLEAR_DONE, function(data) {\n\t\t\tif (_isDebug)\n\t\t\t\ttrace(data.message);\n\t\t\tstartExport();\n\t\t});\n\t\t_socket.on(SEQUENCE_NEXT, function(data) {\n\t\t\tif (_isDebug)\n\t\t\t\ttrace('SEQUENCE_NEXT: ' + data.message);\n\t\t\t_exportCounter++;\n\t\t\tstartExport();\n\t\t});\n\t}\n\n\t// ____________________________________ inject script into page ____________________________________\n\n\tfunction onEmbedComplete(?value:String) {\n\t\tif (_isDebug)\n\t\t\tconsole.log('${toString()} ${value}');\n\t\tinitSocket();\n\t}\n\n\t/**\n\t * embedScripts(onEmbedComplete);\n\t *\n\t * @param callback\n\t * @param callbackArray\n\t */\n\tpublic function embedScripts(?callback:Dynamic, ?callbackArray:String->Void) {\n\t\tEmbed.script('embedSocketIO', 'https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js', onEmbedComplete,\n\t\t\t['socket.io is embedded and loaded']);\n\t}\n\n\t// ____________________________________ toString() ____________________________________\n\n\toverride public function toString():String {\n\t\treturn '[Export via Node]';\n\t}\n}\n","package cc.tool.export;\n\nclass ExportNone extends ExportWrapperBase implements IExport {\n\t// var _onProgressHandler:Float->Void;\n\t// var _onExportComplete:Dynamic;\n\tpublic function new() {\n\t\tsuper();\n\t\ttrace(toString());\n\t}\n\n\t// ____________________________________ public functions ____________________________________\n\tpublic function export(obj:ExportWrapper.ExportWrapperObj):Void {\n\t\thaxe.Timer.delay(function() {\n\t\t\t_progress(25);\n\t\t}, 250);\n\t\thaxe.Timer.delay(function() {\n\t\t\t_progress(50);\n\t\t}, 500);\n\t\thaxe.Timer.delay(function() {\n\t\t\t_progress(75);\n\t\t}, 750);\n\t\thaxe.Timer.delay(function() {\n\t\t\t_progress(100);\n\t\t}, 1000);\n\t\thaxe.Timer.delay(function() {\n\t\t\t_complete(100);\n\t\t}, 1000);\n\t}\n\n\t// ____________________________________ calls ____________________________________\n\n\tfunction _progress(value:Float) {\n\t\tif (Reflect.isFunction(_onProgressHandler)) {\n\t\t\ttrace('onProgressHandler ($value)');\n\t\t\tReflect.callMethod(_onProgressHandler, _onProgressHandler, [value]);\n\t\t}\n\t}\n\n\tfunction _complete(value:Float) {\n\t\tif (Reflect.isFunction(_onExportComplete)) {\n\t\t\ttrace('onExportComplete ($value)');\n\t\t\tReflect.callMethod(_onExportComplete, _onExportComplete, []);\n\t\t}\n\t}\n\n\toverride public function toString():String {\n\t\treturn '[Export via TEST/NONE]';\n\t}\n}\n","package cc.tool.export;\n\nimport js.JSZip;\n// settings\nimport quicksettings.QuickSettings;\n//\nimport js.Browser.*;\nimport cc.tool.Embed;\n// quick and dirty import for Haxe JavaScript\nimport js.Browser.*;\nimport js.html.*;\n\nusing StringTools;\n\nclass ExportWrapper //  implements IExportWrapper\n{\n\tvar fps:Int = 60;\n\tvar panel1:QuickSettings;\n\tvar isExportActive:Bool = false;\n\t// counters\n\tvar _delayCounter:Int = 0;\n\tvar _recordCounter:Int = 0;\n\t// progress bar\n\tvar _progressBar:DivElement;\n\tvar _progressBarHeight = 3;\n\n\t@:isVar public var description(get, set):String = '';\n\t@:isVar public var _delay(get, set):Int = 120; // (60*3) 60fps * 3sec\n\t@:isVar public var _record(get, set):Int = 600; // (60*10) 60fps * 5sec\n\t@:isVar public var _ctx(get, set):js.html.CanvasRenderingContext2D;\n\t@:isVar public var _isMenu(get, set):Bool = true;\n\t@:isVar public var _isDebug(get, set):Bool;\n\t@:isVar public var _type(get, set):ExportType = ExportType.NONE;\n\n\tvar _filename:String;\n\t// timer\n\tvar _startT:Float;\n\tvar _endT:Float;\n\t// var imageArray:Array<js.html.ImageData> = [];\n\tvar imageStringArray:Array<String> = [];\n\t// callback functions\n\tvar _onComplete:Dynamic;\n\tvar _onCompleteParams:Array<Dynamic>;\n\tvar _onRecordComplete:Dynamic;\n\tvar _onRecordCompleteParams:Array<Dynamic>;\n\tvar _onRecordStart:Dynamic;\n\tvar _onRecordStartParams:Array<Dynamic>;\n\tvar _onExportComplete:Dynamic;\n\tvar _onExportCompleteParams:Array<Dynamic>;\n\t// export types\n\tvar exportZip:ExportZip;\n\tvar exportNode:ExportNodeServer;\n\tvar exportType:IExport;\n\n\t/**\n\t * [Description]\n\t * @param ctx\n\t * @param fileName\n\t */\n\tpublic function new(ctx:CanvasRenderingContext2D, ?fileName:String) {\n\t\tcreateQuickSettings();\n\t\tcreate_ProgressBar();\n\n\t\tif (ctx == null) {\n\t\t\tconsole.warn('This is not acceptable, I need a context!');\n\t\t\treturn;\n\t\t}\n\n\t\tthis._filename = (fileName == null) ? toString() : fileName;\n\t\tthis._ctx = ctx;\n\t\tout('ExportWrapper ready');\n\t}\n\n\t// ____________________________________ start and stop export ____________________________________\n\n\tfunction startExport() {\n\t\t_startT = Date.now().getTime();\n\t\tisExportActive = true;\n\t\timageStringArray = [];\n\t\t_delayCounter = 0;\n\t\t_recordCounter = 0;\n\t\tout('${toString()} - start export - 0ms');\n\t\tif (_isDebug) {\n\t\t\ttrace(toString() + ' - start export - 0ms');\n\t\t\ttrace(settings());\n\t\t}\n\t}\n\n\tfunction stopExport() {\n\t\t_endT = Date.now().getTime();\n\t\tisExportActive = false;\n\t\tout(toString() + ' - stop export - ${(_endT - _startT) / 1000}sec');\n\t\tif (_isDebug) {\n\t\t\ttrace(toString() + ' - stop export - ${(_endT - _startT) / 1000}sec');\n\t\t\ttrace(settings());\n\t\t}\n\n\t\tif (Reflect.isFunction(_onComplete)) {\n\t\t\tvar arr = (_onCompleteParams != null) ? _onCompleteParams : [];\n\t\t\tReflect.callMethod(_onComplete, _onComplete, arr);\n\t\t}\n\t\tif (Reflect.isFunction(_onRecordComplete)) {\n\t\t\tvar arr = (_onRecordCompleteParams != null) ? _onRecordCompleteParams : [];\n\t\t\tReflect.callMethod(_onRecordComplete, _onRecordComplete, arr);\n\t\t}\n\n\t\tvar timeStamp = _endT;\n\n\t\t// zips case I am going to assum it already is loaded... is this not the case,\n\t\t// set a boolean to help with that\n\t\ttrace(exportType.toString());\n\t\texportType.progress(progressGeneration);\n\t\texportType.complete(_onExportComplete);\n\t\texportType.debug(_isDebug);\n\t\texportType.export(settings());\n\t}\n\n\t// ____________________________________ properties ____________________________________\n\n\t/**\n\t * init project,\n\t * use delay in frames\n\t * use recording frames\n\t */\n\tpublic function init() {\n\t\tif (pulse == null) {\n\t\t\tconsole.warn('no pulse detected, hook into the animation');\n\t\t\treturn;\n\t\t}\n\t\tstartExport();\n\t}\n\n\t/**\n\t * Start recording now\n\t * reset _delay\n\t */\n\tpublic function start() {\n\t\t_delay = 0; // start now, so reset everthing\n\t\tinit();\n\t}\n\n\t/**\n\t * Stop recording now\n\t */\n\tpublic function stop() {\n\t\tstopExport();\n\t}\n\n\tpublic function debug(?isDebug:Bool = true) {\n\t\tthis._isDebug = isDebug;\n\t}\n\n\t/**\n\t * on completion of the animation call a function with param(s)\n\t *\n\t * @param  func         \tfunction to call when animition is complete\n\t * @param  arr<Dynamic> \tparams send to function\n\t */\n\tpublic function onComplete(func:Dynamic, ?arr:Array<Dynamic>) {\n\t\t_onComplete = func;\n\t\t_onCompleteParams = arr;\n\t}\n\n\t/**\n\t * start of the recording, might be at once, or after a deplay\n\t *\n\t * @param  func         \tfunction to call when animition is complete\n\t * @param  arr<Dynamic> \tparams send to function\n\t */\n\tpublic function onRecordStart(func:Dynamic, ?arr:Array<Dynamic>) {\n\t\t_onRecordStart = func;\n\t\t_onRecordStartParams = arr;\n\t}\n\n\t/**\n\t * when recording is done, completed\n\t *\n\t * @param  func         \tfunction to call when animition is complete\n\t * @param  arr<Dynamic> \tparams send to function\n\t */\n\tpublic function onRecordComplete(func:Dynamic, ?arr:Array<Dynamic>) {\n\t\t_onRecordComplete = func;\n\t\t_onRecordCompleteParams = arr;\n\t}\n\n\t/**\n\t * when the export is ready\n\t * usefull when using zip\n\t *\n\t * @param  func         \tfunction to call when animition is complete\n\t * @param  arr<Dynamic> \tparams send to functionr\n\t */\n\tpublic function onExportComplete(func:Dynamic, ?arr:Array<Dynamic>) {\n\t\t_onExportComplete = func;\n\t\t_onExportCompleteParams = arr;\n\t}\n\n\t/**\n\t * show quick settings menu\n\t * @param isVisible\n\t */\n\tpublic function menu(isVisible:Bool = false) {\n\t\tthis._isMenu = isVisible;\n\t\tif (!_isMenu) {\n\t\t\tpanel1.hide();\n\t\t}\n\t}\n\n\tpublic function type(type:ExportType) {\n\t\tthis._type = type;\n\t\tswitch (this._type) {\n\t\t\tcase ZIP:\n\t\t\t\texportType = new ExportZip();\n\t\t\tcase NODE:\n\t\t\t\texportType = new ExportNodeServer();\n\t\t\tcase NONE, TEST:\n\t\t\t\texportType = new ExportNone();\n\t\t\tcase _:\n\t\t\t\texportType = new ExportNone();\n\t\t}\n\t}\n\n\t/**\n\t * other version of type, lets see which one I will remember\n\t * @param type\n\t */\n\tpublic function exporttype(type:ExportType) {\n\t\tthis.type(type);\n\t}\n\n\t/**\n\t * Create a delay for your recording in frames\n\t *\n\t * @param frames  (most likely 60fps * x.seconds)\n\t */\n\tpublic function delay(frames:Int) {\n\t\tthis._delay = frames;\n\t}\n\n\t/**\n\t * Create a delay for your recording in seconds,\n\t * will be converted to frames\n\t *\n\t * @param sec \t seconds\n\t */\n\tpublic function delayInSeconds(sec:Float) {\n\t\tthis._delay = Math.round(sec * fps);\n\t\tpanel1.setValue('delay in seconds', sec);\n\t}\n\n\t/**\n\t * Record the animation for x number of frames ()\n\t * @param frames  (most likely 60fps * x.seconds)\n\t */\n\tpublic function record(frames:Int) {\n\t\tthis._record = frames;\n\t}\n\n\t/**\n\t * Record the animation for x seconds\n\t * will be converted to frames\n\t * @param sec \t seconds\n\t */\n\tpublic function recordInSeconds(sec:Float) {\n\t\tthis._record = Math.round(sec * fps);\n\t\tpanel1.setValue('record in seconds', sec);\n\t}\n\n\t/**\n\t * get some basic feedback on the settings used with this wrapper\n\t */\n\tpublic function settings() {\n\t\tvar obj:ExportWrapperObj = {\n\t\t\tfilename: _filename,\n\t\t\texport_type: _type,\n\t\t\tdelay: _delay,\n\t\t\trecord: _record,\n\t\t\tdelay_in_seconds: (_delay / 60),\n\t\t\trecord_in_seconds: (_record / 60),\n\t\t\timageStringArray: imageStringArray,\n\t\t\ttimestamp: Date.now().getTime(),\n\t\t\tdescription: '',\n\t\t};\n\t\treturn obj;\n\t}\n\n\tpublic function isDebug(?isDebug:Bool = true) {\n\t\tthis._isDebug = isDebug;\n\t}\n\n\t/**\n\t * the pulse should be hooked into the window framerate\n\t */\n\tpublic function pulse() {\n\t\t// console.log('${toString()} pulse -> delayCounter: $_delayCounter, $_delay, $isExportActive');\n\t\tif (isExportActive) {\n\t\t\t// trace('$isExportActive');\n\t\t\tif (_delayCounter < _delay) {\n\t\t\t\t// trace('>= ${_delay} (delay)');\n\t\t\t\tif (_isDebug)\n\t\t\t\t\tconsole.log('${toString()} delay: ${_delayCounter} < ${_delay}');\n\t\t\t}\n\n\t\t\tif (_delayCounter == _delay) {\n\t\t\t\t// should only be called once\n\t\t\t\tif (_isDebug)\n\t\t\t\t\tconsole.log('${toString()} onRecordStart: ${_delayCounter} == ${_delay}');\n\t\t\t\tif (Reflect.isFunction(_onRecordStart)) {\n\t\t\t\t\tvar arr = (_onRecordStartParams != null) ? _onRecordStartParams : [];\n\t\t\t\t\tReflect.callMethod(_onRecordStart, _onRecordStart, arr);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_delayCounter >= _delay) {\n\t\t\t\tif (_recordCounter < _record) {\n\t\t\t\t\t// trace('< ${_record} (recording)');\n\t\t\t\t\tif (_isDebug)\n\t\t\t\t\t\tconsole.log('${toString()} recording: ${_recordCounter} < ${_record}');\n\t\t\t\t\timageStringArray.push(_ctx.canvas.toDataURL('image/png').split('base64,')[1]);\n\t\t\t\t\tprogressRecording((_recordCounter / _record) * 100);\n\t\t\t\t\t_recordCounter++;\n\t\t\t\t} else {\n\t\t\t\t\tstopExport();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_delayCounter++;\n\t}\n\n\t// ____________________________________ settings stuff ____________________________________\n\n\tfunction createQuickSettings() {\n\t\tpanel1 = QuickSettings.create(10, 10, \"ExportWrapper settings\")\n\t\t\t.addRange('delay in seconds', 0.0, 5.0, 2.0, 0.5, function(e) setDelay(e))\n\t\t\t.addRange('record in seconds', 0.0, 60.0, 2.0, 0.5, function(e) setRecord(e))\n\n\t\t\t.addButton('recording', function(e) onClickHandler(e))\n\t\t\t.addText('feedback', 'x', function(e) {});\n\t\t// .addButton('start recording', function(e) onClickHandler(e))\n\t\t// .addButton('stop recording', function(e) onClickHandler(e))\n\n\t\t// .saveInLocalStorage('store-data-${toString()}');\n\t}\n\n\tfunction out(str:String) {\n\t\tif (panel1 == null)\n\t\t\treturn;\n\t\tpanel1.setValue('feedback', str);\n\t}\n\n\tfunction setDelay(e:Float) {\n\t\tout('delay in seconds: ' + Std.string(e));\n\t\t_delay = Math.round(fps * e);\n\t}\n\n\tfunction setRecord(e:Float) {\n\t\tout('recording in seconds: ' + Std.string(e));\n\t\t_record = Math.round(fps * e);\n\t}\n\n\tfunction onClickHandler(e:js.html.MouseEvent) {\n\t\tvar input:js.html.InputElement = cast(e);\n\n\t\tswitch (input.value) {\n\t\t\tcase 'recording':\n\t\t\tcase 'start recording':\n\t\t\tcase 'init recording':\n\t\t\t\ttrace('init recording');\n\t\t\t\tsetDelay(panel1.getValue('delay in seconds'));\n\t\t\t\tsetRecord(panel1.getValue('record in seconds'));\n\t\t\t\tstart();\n\t\t\t\ttrace(haxe.Json.parse(haxe.Json.stringify(this)));\n\t\t\tcase 'stop recording':\n\t\t\t\ttrace('stop recording');\n\t\t\t\tstop();\n\t\t\tdefault:\n\t\t\t\ttrace(\"case '\" + input.value + \"': trace ('\" + input.value + \"');\");\n\t\t}\n\t}\n\n\t// ____________________________________ html progress ____________________________________\n\n\tfunction create_ProgressBar(?percentage:Int = 10) {\n\t\tvar body = document.querySelector('body');\n\t\tvar div:DivElement = document.createDivElement();\n\t\tdiv.setAttribute(\"id\", 'zip-progress');\n\t\tdiv.innerHTML = '<span style=\"display:none\">$percentage%</span>';\n\t\tdiv.style.position = \"absolute\";\n\t\tdiv.style.left = \"0px\";\n\t\tdiv.style.top = \"0px\";\n\t\tdiv.style.width = '100%';\n\t\tdiv.style.height = '${_progressBarHeight}px';\n\t\tdiv.style.backgroundColor = 'silver';\n\t\tbody.appendChild(div);\n\n\t\t_progressBar = div;\n\t}\n\n\tfunction progressGeneration(percent:Float) {\n\t\t_progressBar.style.width = '$percent%';\n\t\t_progressBar.style.backgroundColor = 'navy';\n\t}\n\n\tfunction progressRecording(percent:Float) {\n\t\t_progressBar.style.width = '$percent%';\n\t\t_progressBar.style.backgroundColor = 'red';\n\t}\n\n\t// ____________________________________ getter/setter ____________________________________\n\n\tfunction get__isDebug():Bool {\n\t\treturn _isDebug;\n\t}\n\n\tfunction set__isDebug(value:Bool):Bool {\n\t\treturn _isDebug = value;\n\t}\n\n\tfunction get__ctx():js.html.CanvasRenderingContext2D {\n\t\treturn _ctx;\n\t}\n\n\tfunction set__ctx(value:js.html.CanvasRenderingContext2D):js.html.CanvasRenderingContext2D {\n\t\treturn _ctx = value;\n\t}\n\n\tfunction get__delay():Int {\n\t\treturn _delay;\n\t}\n\n\tfunction set__delay(value:Int):Int {\n\t\treturn _delay = value;\n\t}\n\n\tfunction get__record():Int {\n\t\treturn _record;\n\t}\n\n\tfunction set__record(value:Int):Int {\n\t\treturn _record = value;\n\t}\n\n\tfunction get_description():String {\n\t\treturn description;\n\t}\n\n\tfunction set_description(value:String):String {\n\t\treturn description = value;\n\t}\n\n\tfunction get__isMenu():Bool {\n\t\treturn _isMenu;\n\t}\n\n\tfunction set__isMenu(value:Bool):Bool {\n\t\treturn _isMenu = value;\n\t}\n\n\tfunction get__type():ExportType {\n\t\treturn _type;\n\t}\n\n\tfunction set__type(value:ExportType):ExportType {\n\t\treturn _type = value;\n\t}\n\n\t// ____________________________________ toString ____________________________________\n\n\tfunction toString() {\n\t\treturn '[ExportWrapper]';\n\t}\n}\n\nenum ExportType {\n\tZIP;\n\tNODE;\n\tNONE;\n\tTEST;\n}\n\ntypedef ExportWrapperObj = {\n\t// @:optional var _id : Int;\n\tvar filename:String;\n\tvar export_type:ExportType;\n\tvar delay:Int;\n\tvar record:Int;\n\tvar delay_in_seconds:Float;\n\tvar record_in_seconds:Float;\n\tvar imageStringArray:Array<String>;\n\tvar timestamp:Float;\n\t@:optional var description:String;\n};\n","package cc.tool.export;\n\nimport js.Browser.*;\nimport js.JSZip;\n\nusing StringTools;\n\nclass ExportZip extends ExportWrapperBase implements IExport {\n\tpublic static var isZipLoaded:Bool = false;\n\tpublic static var isFileLoaded:Bool = false;\n\n\tpublic function new() {\n\t\tsuper();\n\t\t// might not be bullit proof!!!\n\t\tembedScripts(onEmbedComplete);\n\t}\n\n\t// ____________________________________ public funcitions ____________________________________\n\n\tpublic function export(obj:ExportWrapper.ExportWrapperObj):Void {\n\t\t// trace(getMarkdown(obj));\n\t\t// trace(getBashConvert(obj));\n\t\t// trace(getBashConvertPng(obj));\n\t\tvar startT = Date.now().getTime();\n\t\ttrace('Start creation zip file - ${(Date.now().getTime() - startT) / 1000}sec');\n\t\tvar zip = new JSZip();\n\t\tzip.file('_${obj.filename}/README.MD', getMarkdown(obj));\n\t\tzip.file('_${obj.filename}/convert.sh', getBashConvert(obj));\n\t\tzip.file('_${obj.filename}/png.sh', getBashConvertPng(obj));\n\t\tfor (i in 0...obj.imageStringArray.length) {\n\t\t\tif (_isDebug)\n\t\t\t\ttrace('/${obj.imageStringArray.length}. add image to file');\n\t\t\tvar img = obj.imageStringArray[i];\n\t\t\tzip.file('_${obj.filename}/sequence/image_${Std.string(i).lpad('0', 4)}.png', img, {base64: true});\n\t\t}\n\t\ttrace('Generate zip file - ${(Date.now().getTime() - startT) / 1000}sec');\n\n\t\t// createProgressBar(); // create another progress over the old\n\t\t// out('generate zip');\n\t\tzip.generateAsync({type: \"blob\"}, function updateCallback(metadata) {\n\t\t\tif (_isDebug)\n\t\t\t\tconsole.log(\"progression: \" + metadata.percent.toFixed(2) + \" %\");\n\t\t\t// progressGeneration(Std.parseFloat(metadata.percent.toFixed(2)));\n\t\t\t// if (metadata.currentFile) {\n\t\t\t// \tconsole.log(\"current file = \" + metadata.currentFile);\n\t\t\t// }\n\t\t\tif (Reflect.isFunction(_onProgressHandler)) {\n\t\t\t\tReflect.callMethod(_onProgressHandler, _onProgressHandler, [Std.parseFloat(metadata.percent.toFixed(2))]);\n\t\t\t}\n\t\t}).then(function(blob) { // 1) generate the zip file\n\t\t\tconsole.log('Save zip file complete - ${(Date.now().getTime() - startT) / 1000}sec');\n\t\t\t// out('zip is downloaded');\n\t\t\tuntyped saveAs(blob, '_${obj.filename}_${obj.timestamp}.zip'); // 2) trigger the download\n\n\t\t\tif (Reflect.isFunction(_onExportComplete)) {\n\t\t\t\t// trace('xxxx');\n\t\t\t\tReflect.callMethod(_onExportComplete, _onExportComplete, []);\n\t\t\t}\n\n\t\t\t// trace(settings());\n\t\t}, function(err) {\n\t\t\tconsole.log(err);\n\t\t});\n\t}\n\n\t// ____________________________________ inject script into page ____________________________________\n\n\t/**\n\t * embedScripts(onEmbedComplete);\n\t *\n\t * @param callback\n\t * @param callbackArray\n\t */\n\tpublic function embedScripts(?callback:Dynamic, ?callbackArray:String->Void) {\n\t\tEmbed.script('jszip', 'https://cdnjs.cloudflare.com/ajax/libs/jszip/3.2.0/jszip.min.js', onLoadComplete, ['jszip', callback, callbackArray]);\n\t\tEmbed.script('jsfilesaver', 'https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/1.3.8/FileSaver.min.js', onLoadComplete,\n\t\t\t['jsfilesaver', callback, callbackArray]);\n\t}\n\n\tfunction onLoadComplete(str:String, ?callback:Dynamic, ?callbackArray:Array<Dynamic>) {\n\t\t// trace(str, callback, callbackArray);\n\t\tswitch (str) {\n\t\t\tcase 'jsfilesaver':\n\t\t\t\t// trace('jsfilesaver');\n\t\t\t\tisFileLoaded = true;\n\t\t\tcase 'jszip':\n\t\t\t\t// trace('jszip');\n\t\t\t\tisZipLoaded = true;\n\t\t\tdefault:\n\t\t\t\ttrace(\"case '\" + str + \"': trace ('\" + str + \"');\");\n\t\t}\n\t\tif (isFileLoaded && isZipLoaded) {\n\t\t\t// trace(isFileLoaded, isZipLoaded);\n\t\t\tReflect.callMethod(callback, callback, ['JsZip and jsFilesaver are embedded and loaded']);\n\t\t}\n\t}\n\n\tfunction onEmbedComplete(?value:String) {\n\t\tconsole.log('${toString()} - ${value}');\n\t}\n\n\t// ____________________________________ toString() ____________________________________\n\n\toverride public function toString():String {\n\t\treturn '[Export via Zip]';\n\t}\n}\n","package cc.util;\n\nclass AnimateUtil {\n\tpublic function new() {}\n\n\tpublic static function tween(pos:Float, target, ?speed) {\n\t\tif (speed == null)\n\t\t\tspeed = 20;\n\t\tpos += (target - pos) / speed;\n\t\treturn pos;\n\t}\n\n\t/**\n\t * check if this `num` is still inbetween `min` and `max` return a true, otherwise a false\n\t *\n\t * primarily used for bouncing balls\n\t *\n\t * @param num\tvalue to check\n\t * @param min\tminimum value\n\t * @param max\tmaximum value\n\t * @param sz\t(optional) works with centered shapes, is the width of this shape\n\t * @return Bool\n\t */\n\tpublic static function bounce(num:Float, min:Float, max:Float, ?sz:Float = 0):Bool {\n\t\tif (num >= max - sz / 2 || num - sz / 2 <= min) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n","package cc.util;\n\nusing StringTools;\n\ntypedef RGBObject = {\n\tvar r:Int;\n\tvar g:Int;\n\tvar b:Int;\n};\n\ntypedef RGB = {\n\tvar r:Int;\n\tvar g:Int;\n\tvar b:Int;\n};\n\ntypedef RGBA = {\n\tvar r:Int;\n\tvar g:Int;\n\tvar b:Int;\n\tvar a:Float;\n};\n\nclass ColorUtil {\n\tpublic function new() {}\n\n\tstatic public function getColour(r:Int, ?g:Int, ?b:Int, ?a:Float):String {\n\t\tvar c;\n\t\tif (g == null) {\n\t\t\tc = rgb(r, r, r);\n\t\t} else if (b == null && a == null) {\n\t\t\tc = rgba(r, r, r, g);\n\t\t} else if (a == null) {\n\t\t\tc = rgb(r, g, b);\n\t\t} else {\n\t\t\tc = rgba(r, g, b, a);\n\t\t}\n\t\treturn (c);\n\t};\n\n\tstatic public function getColourObj(rgb:RGB, ?a:Float):String {\n\t\treturn getColour(rgb.r, rgb.g, rgb.b, a);\n\t}\n\n\t/**\n\t * use RGB values to create color\n\t * @param r red (max:255, min:0)\n\t * @param g green (max:255, min:0)\n\t * @param b blue (max:255, min:0)\n\t */\n\tstatic public function rgb(r:Int, ?g:Int, ?b:Int):String {\n\t\tif (g == null)\n\t\t\tg = r;\n\t\tif (b == null)\n\t\t\tb = r;\n\t\treturn 'rgb(' + MathUtil.clamp(Math.round(r), 0, 255) + ', ' + MathUtil.clamp(Math.round(g), 0, 255) + ', ' + MathUtil.clamp(Math.round(b), 0, 255) +\n\t\t\t')';\n\t};\n\n\tstatic public function rgba(r, ?g, ?b, ?a):String {\n\t\tif (g == null) {\n\t\t\treturn 'rgb(' + MathUtil.clamp(Math.round(r), 0, 255) + ', ' + MathUtil.clamp(Math.round(r), 0, 255) + ', ' + MathUtil.clamp(Math\n\t\t\t\t.round(r), 0, 255) + ')';\n\t\t} else if (b == null) {\n\t\t\treturn 'rgba(' + MathUtil.clamp(Math.round(r), 0, 255) + ', ' + MathUtil.clamp(Math.round(r), 0, 255) + ', ' + MathUtil.clamp(Math\n\t\t\t\t.round(r), 0, 255) + ', ' + MathUtil.clamp(g, 0, 1) + ')';\n\t\t} else if (a == null) {\n\t\t\treturn 'rgba(' + MathUtil.clamp(Math.round(r), 0, 255) + ', ' + MathUtil.clamp(Math.round(g), 0, 255) + ', ' + MathUtil.clamp(Math\n\t\t\t\t.round(b), 0, 255) + ', 1)';\n\t\t} else {\n\t\t\treturn 'rgba(' + MathUtil.clamp(Math.round(r), 0, 255) + ', ' + MathUtil.clamp(Math.round(g), 0, 255) + ', ' + MathUtil.clamp(Math\n\t\t\t\t.round(b), 0, 255) + ', ' + MathUtil.clamp(a, 0, 1) + ')';\n\t\t}\n\t};\n\n\t/**\n\t * [Description]\n\t * @param r\n\t * @param g\n\t * @param b\n\t * @return String\n\t */\n\tpublic static function rgbToHex(r:Int, g:Int, b:Int):String{\n\t\t// r = MathUtil.clamp(Math.round(r), 0, 255);\n\t\t// g = MathUtil.clamp(Math.round(g), 0, 255);\n\t\t// b = MathUtil.clamp(Math.round(b), 0, 255);\n\t\t// var hex = StringTools.hex(r,2)\n\t\treturn StringTools.hex(r,2) + StringTools.hex(g,2) + StringTools.hex(b,2);\n\t}\n\n\tpublic static function rgb2hex(r:Int, g:Int, b:Int, ?a:Int = 255):Int {\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * get a random rgb color\n\t * @return String\n\t */\n\tstatic public function randomColour():String {\n\t\tvar r = MathUtil.randomInt(255);\n\t\tvar g = MathUtil.randomInt(255);\n\t\tvar b = MathUtil.randomInt(255);\n\t\treturn ColorUtil.rgb(r, g, b);\n\t}\n\n\tstatic public function randomColourObject():RGB {\n\t\tvar r = MathUtil.randomInt(255);\n\t\tvar g = MathUtil.randomInt(255);\n\t\tvar b = MathUtil.randomInt(255);\n\t\treturn {\n\t\t\tr: r,\n\t\t\tg: g,\n\t\t\tb: b\n\t\t};\n\t}\n\n\t// public static function hex2css( color : Int ) : String {\n\t// \treturn \"#\" + color.toString(16);\n\t// }\n\n\t/**\n\t *\t@example\t\tvar _color = ColorUtil.hex2rgb(0xff3333);\n\t *\t\t\t\t\ttrace(\"_color.r: \" + _color.r);\n\t *\n\t */\n\t// static function hexToRgb(hex:Int):RGBObject {\n\t// \tvar bigint = parseInt(hex, 16);\n\t// \tvar _r = (bigint >> 16) & 255;\n\t// \tvar _g = (bigint >> 8) & 255;\n\t// \tvar _b = bigint & 255;\n\t// \treturn {r:_r, g:_g, b:_b};\n\t// \t// return r + \",\" + g + \",\" + b;\n\t// }\n\t// http://old.haxe.org/doc/snip/colorconverter\n\tpublic static inline function toRGB(int:Int):RGBObject {\n\t\treturn {\n\t\t\tr: Math.round(((int >> 16) & 255)),\n\t\t\tg: Math.round(((int >> 8) & 255)),\n\t\t\tb: Math.round((int & 255)),\n\t\t}\n\t}\n\n\tpublic static inline function ttoRGB(int:Int):RGB {\n\t\treturn {\n\t\t\tr: ((int >> 16) & 255),\n\t\t\tg: ((int >> 8) & 255),\n\t\t\tb: (int & 255),\n\t\t}\n\t}\n\n\tpublic static inline function hex2RGB(hex:String):RGB {\n\t\tvar int = Std.parseInt(hex.replace('#', '0x'));\n\t\treturn {\n\t\t\tr: ((int >> 16) & 255),\n\t\t\tg: ((int >> 8) & 255),\n\t\t\tb: (int & 255),\n\t\t}\n\t}\n\n\t// public static var BLACK : RGBObject = {r:0, g:0, b:0};\n\t// public static var WHITE : RGBObject = {r:255, g:255, b:255};\n\t// public static var RED : RGBObject = {r:255, g:0, b:0};\n\t// https://clrs.cc/\n\tpublic static var NAVY:RGBObject = toRGB(0x001f3f);\n\tpublic static var BLUE:RGBObject = toRGB(0x0074D9);\n\tpublic static var AQUA:RGBObject = toRGB(0x7FDBFF);\n\tpublic static var TEAL:RGBObject = toRGB(0x39CCCC);\n\tpublic static var OLIVE:RGBObject = toRGB(0x3D9970);\n\tpublic static var GREEN:RGBObject = toRGB(0x2ECC40);\n\tpublic static var LIME:RGBObject = toRGB(0x01FF70);\n\tpublic static var YELLOW:RGBObject = toRGB(0xFFDC00);\n\tpublic static var ORANGE:RGBObject = toRGB(0xFF851B);\n\tpublic static var RED:RGBObject = toRGB(0xFF4136);\n\tpublic static var MAROON:RGBObject = toRGB(0x85144b);\n\tpublic static var FUCHSIA:RGBObject = toRGB(0xF012BE);\n\tpublic static var PURPLE:RGBObject = toRGB(0xB10DC9);\n\tpublic static var BLACK:RGBObject = toRGB(0x111111);\n\tpublic static var GRAY:RGBObject = toRGB(0xAAAAAA);\n\tpublic static var SILVER:RGBObject = toRGB(0xDDDDDD);\n\tpublic static var WHITE:RGBObject = toRGB(0xFFFFFF);\n\t// [mck] my favourite debug color\n\tpublic static var PINK:RGBObject = toRGB(0xFF1493); // deeppink\n\tpublic static var PINK_DEEP:RGBObject = toRGB(0xFF1493); // deeppink\n\tpublic static var PINK_HOT:RGBObject = toRGB(0xff69B4); // hotpink\n\t// 500 and 1000 are to big for most ide... but do you really need that much color combinations?\n\tpublic static var niceColor100:Array<Array<String>> = [\n\t\t[\"#69d2e7\", \"#a7dbd8\", \"#e0e4cc\", \"#f38630\", \"#fa6900\"], [\"#fe4365\", \"#fc9d9a\", \"#f9cdad\", \"#c8c8a9\", \"#83af9b\"],\n\t\t[\"#ecd078\", \"#d95b43\", \"#c02942\", \"#542437\", \"#53777a\"], [\"#556270\", \"#4ecdc4\", \"#c7f464\", \"#ff6b6b\", \"#c44d58\"],\n\t\t[\"#774f38\", \"#e08e79\", \"#f1d4af\", \"#ece5ce\", \"#c5e0dc\"], [\"#e8ddcb\", \"#cdb380\", \"#036564\", \"#033649\", \"#031634\"],\n\t\t[\"#490a3d\", \"#bd1550\", \"#e97f02\", \"#f8ca00\", \"#8a9b0f\"], [\"#594f4f\", \"#547980\", \"#45ada8\", \"#9de0ad\", \"#e5fcc2\"],\n\t\t[\"#00a0b0\", \"#6a4a3c\", \"#cc333f\", \"#eb6841\", \"#edc951\"], [\"#e94e77\", \"#d68189\", \"#c6a49a\", \"#c6e5d9\", \"#f4ead5\"],\n\t\t[\"#3fb8af\", \"#7fc7af\", \"#dad8a7\", \"#ff9e9d\", \"#ff3d7f\"], [\"#d9ceb2\", \"#948c75\", \"#d5ded9\", \"#7a6a53\", \"#99b2b7\"],\n\t\t[\"#ffffff\", \"#cbe86b\", \"#f2e9e1\", \"#1c140d\", \"#cbe86b\"], [\"#efffcd\", \"#dce9be\", \"#555152\", \"#2e2633\", \"#99173c\"],\n\t\t[\"#343838\", \"#005f6b\", \"#008c9e\", \"#00b4cc\", \"#00dffc\"], [\"#413e4a\", \"#73626e\", \"#b38184\", \"#f0b49e\", \"#f7e4be\"],\n\t\t[\"#ff4e50\", \"#fc913a\", \"#f9d423\", \"#ede574\", \"#e1f5c4\"], [\"#99b898\", \"#fecea8\", \"#ff847c\", \"#e84a5f\", \"#2a363b\"],\n\t\t[\"#655643\", \"#80bca3\", \"#f6f7bd\", \"#e6ac27\", \"#bf4d28\"], [\"#00a8c6\", \"#40c0cb\", \"#f9f2e7\", \"#aee239\", \"#8fbe00\"],\n\t\t[\"#351330\", \"#424254\", \"#64908a\", \"#e8caa4\", \"#cc2a41\"], [\"#554236\", \"#f77825\", \"#d3ce3d\", \"#f1efa5\", \"#60b99a\"],\n\t\t[\"#ff9900\", \"#424242\", \"#e9e9e9\", \"#bcbcbc\", \"#3299bb\"], [\"#5d4157\", \"#838689\", \"#a8caba\", \"#cad7b2\", \"#ebe3aa\"],\n\t\t[\"#8c2318\", \"#5e8c6a\", \"#88a65e\", \"#bfb35a\", \"#f2c45a\"], [\"#fad089\", \"#ff9c5b\", \"#f5634a\", \"#ed303c\", \"#3b8183\"],\n\t\t[\"#ff4242\", \"#f4fad2\", \"#d4ee5e\", \"#e1edb9\", \"#f0f2eb\"], [\"#d1e751\", \"#ffffff\", \"#000000\", \"#4dbce9\", \"#26ade4\"],\n\t\t[\"#f8b195\", \"#f67280\", \"#c06c84\", \"#6c5b7b\", \"#355c7d\"], [\"#1b676b\", \"#519548\", \"#88c425\", \"#bef202\", \"#eafde6\"],\n\t\t[\"#bcbdac\", \"#cfbe27\", \"#f27435\", \"#f02475\", \"#3b2d38\"], [\"#5e412f\", \"#fcebb6\", \"#78c0a8\", \"#f07818\", \"#f0a830\"],\n\t\t[\"#452632\", \"#91204d\", \"#e4844a\", \"#e8bf56\", \"#e2f7ce\"], [\"#eee6ab\", \"#c5bc8e\", \"#696758\", \"#45484b\", \"#36393b\"],\n\t\t[\"#f0d8a8\", \"#3d1c00\", \"#86b8b1\", \"#f2d694\", \"#fa2a00\"], [\"#f04155\", \"#ff823a\", \"#f2f26f\", \"#fff7bd\", \"#95cfb7\"],\n\t\t[\"#2a044a\", \"#0b2e59\", \"#0d6759\", \"#7ab317\", \"#a0c55f\"], [\"#bbbb88\", \"#ccc68d\", \"#eedd99\", \"#eec290\", \"#eeaa88\"],\n\t\t[\"#b9d7d9\", \"#668284\", \"#2a2829\", \"#493736\", \"#7b3b3b\"], [\"#b3cc57\", \"#ecf081\", \"#ffbe40\", \"#ef746f\", \"#ab3e5b\"],\n\t\t[\"#a3a948\", \"#edb92e\", \"#f85931\", \"#ce1836\", \"#009989\"], [\"#67917a\", \"#170409\", \"#b8af03\", \"#ccbf82\", \"#e33258\"],\n\t\t[\"#e8d5b7\", \"#0e2430\", \"#fc3a51\", \"#f5b349\", \"#e8d5b9\"], [\"#aab3ab\", \"#c4cbb7\", \"#ebefc9\", \"#eee0b7\", \"#e8caaf\"],\n\t\t[\"#300030\", \"#480048\", \"#601848\", \"#c04848\", \"#f07241\"], [\"#ab526b\", \"#bca297\", \"#c5ceae\", \"#f0e2a4\", \"#f4ebc3\"],\n\t\t[\"#607848\", \"#789048\", \"#c0d860\", \"#f0f0d8\", \"#604848\"], [\"#a8e6ce\", \"#dcedc2\", \"#ffd3b5\", \"#ffaaa6\", \"#ff8c94\"],\n\t\t[\"#3e4147\", \"#fffedf\", \"#dfba69\", \"#5a2e2e\", \"#2a2c31\"], [\"#b6d8c0\", \"#c8d9bf\", \"#dadabd\", \"#ecdbbc\", \"#fedcba\"],\n\t\t[\"#fc354c\", \"#29221f\", \"#13747d\", \"#0abfbc\", \"#fcf7c5\"], [\"#1c2130\", \"#028f76\", \"#b3e099\", \"#ffeaad\", \"#d14334\"],\n\t\t[\"#edebe6\", \"#d6e1c7\", \"#94c7b6\", \"#403b33\", \"#d3643b\"], [\"#cc0c39\", \"#e6781e\", \"#c8cf02\", \"#f8fcc1\", \"#1693a7\"],\n\t\t[\"#dad6ca\", \"#1bb0ce\", \"#4f8699\", \"#6a5e72\", \"#563444\"], [\"#a7c5bd\", \"#e5ddcb\", \"#eb7b59\", \"#cf4647\", \"#524656\"],\n\t\t[\"#fdf1cc\", \"#c6d6b8\", \"#987f69\", \"#e3ad40\", \"#fcd036\"], [\"#5c323e\", \"#a82743\", \"#e15e32\", \"#c0d23e\", \"#e5f04c\"],\n\t\t[\"#230f2b\", \"#f21d41\", \"#ebebbc\", \"#bce3c5\", \"#82b3ae\"], [\"#b9d3b0\", \"#81bda4\", \"#b28774\", \"#f88f79\", \"#f6aa93\"],\n\t\t[\"#3a111c\", \"#574951\", \"#83988e\", \"#bcdea5\", \"#e6f9bc\"], [\"#5e3929\", \"#cd8c52\", \"#b7d1a3\", \"#dee8be\", \"#fcf7d3\"],\n\t\t[\"#1c0113\", \"#6b0103\", \"#a30006\", \"#c21a01\", \"#f03c02\"], [\"#382f32\", \"#ffeaf2\", \"#fcd9e5\", \"#fbc5d8\", \"#f1396d\"],\n\t\t[\"#e3dfba\", \"#c8d6bf\", \"#93ccc6\", \"#6cbdb5\", \"#1a1f1e\"], [\"#000000\", \"#9f111b\", \"#b11623\", \"#292c37\", \"#cccccc\"],\n\t\t[\"#c1b398\", \"#605951\", \"#fbeec2\", \"#61a6ab\", \"#accec0\"], [\"#8dccad\", \"#988864\", \"#fea6a2\", \"#f9d6ac\", \"#ffe9af\"],\n\t\t[\"#f6f6f6\", \"#e8e8e8\", \"#333333\", \"#990100\", \"#b90504\"], [\"#1b325f\", \"#9cc4e4\", \"#e9f2f9\", \"#3a89c9\", \"#f26c4f\"],\n\t\t[\"#5e9fa3\", \"#dcd1b4\", \"#fab87f\", \"#f87e7b\", \"#b05574\"], [\"#951f2b\", \"#f5f4d7\", \"#e0dfb1\", \"#a5a36c\", \"#535233\"],\n\t\t[\"#413d3d\", \"#040004\", \"#c8ff00\", \"#fa023c\", \"#4b000f\"], [\"#eff3cd\", \"#b2d5ba\", \"#61ada0\", \"#248f8d\", \"#605063\"],\n\t\t[\"#2d2d29\", \"#215a6d\", \"#3ca2a2\", \"#92c7a3\", \"#dfece6\"], [\"#cfffdd\", \"#b4dec1\", \"#5c5863\", \"#a85163\", \"#ff1f4c\"],\n\t\t[\"#4e395d\", \"#827085\", \"#8ebe94\", \"#ccfc8e\", \"#dc5b3e\"], [\"#9dc9ac\", \"#fffec7\", \"#f56218\", \"#ff9d2e\", \"#919167\"],\n\t\t[\"#a1dbb2\", \"#fee5ad\", \"#faca66\", \"#f7a541\", \"#f45d4c\"], [\"#ffefd3\", \"#fffee4\", \"#d0ecea\", \"#9fd6d2\", \"#8b7a5e\"],\n\t\t[\"#a8a7a7\", \"#cc527a\", \"#e8175d\", \"#474747\", \"#363636\"], [\"#ffedbf\", \"#f7803c\", \"#f54828\", \"#2e0d23\", \"#f8e4c1\"],\n\t\t[\"#f8edd1\", \"#d88a8a\", \"#474843\", \"#9d9d93\", \"#c5cfc6\"], [\"#f38a8a\", \"#55443d\", \"#a0cab5\", \"#cde9ca\", \"#f1edd0\"],\n\t\t[\"#4e4d4a\", \"#353432\", \"#94ba65\", \"#2790b0\", \"#2b4e72\"], [\"#0ca5b0\", \"#4e3f30\", \"#fefeeb\", \"#f8f4e4\", \"#a5b3aa\"],\n\t\t[\"#a70267\", \"#f10c49\", \"#fb6b41\", \"#f6d86b\", \"#339194\"], [\"#9d7e79\", \"#ccac95\", \"#9a947c\", \"#748b83\", \"#5b756c\"],\n\t\t[\"#edf6ee\", \"#d1c089\", \"#b3204d\", \"#412e28\", \"#151101\"], [\"#046d8b\", \"#309292\", \"#2fb8ac\", \"#93a42a\", \"#ecbe13\"],\n\t\t[\"#4d3b3b\", \"#de6262\", \"#ffb88c\", \"#ffd0b3\", \"#f5e0d3\"], [\"#fffbb7\", \"#a6f6af\", \"#66b6ab\", \"#5b7c8d\", \"#4f2958\"],\n\t\t[\"#ff003c\", \"#ff8a00\", \"#fabe28\", \"#88c100\", \"#00c176\"], [\"#fcfef5\", \"#e9ffe1\", \"#cdcfb7\", \"#d6e6c3\", \"#fafbe3\"],\n\t\t[\"#9cddc8\", \"#bfd8ad\", \"#ddd9ab\", \"#f7af63\", \"#633d2e\"], [\"#30261c\", \"#403831\", \"#36544f\", \"#1f5f61\", \"#0b8185\"],\n\t\t[\"#d1313d\", \"#e5625c\", \"#f9bf76\", \"#8eb2c5\", \"#615375\"], [\"#ffe181\", \"#eee9e5\", \"#fad3b2\", \"#ffba7f\", \"#ff9c97\"],\n\t\t[\"#aaff00\", \"#ffaa00\", \"#ff00aa\", \"#aa00ff\", \"#00aaff\"], [\"#c2412d\", \"#d1aa34\", \"#a7a844\", \"#a46583\", \"#5a1e4a\"]\n\t];\n\tpublic static var niceColor100SortedString:Array<Array<String>> = [\n\t\t[\"#E0E4CC\", \"#A7DBD8\", \"#69D2E7\", \"#F38630\", \"#FA6900\"], [\"#F9CDAD\", \"#C8C8A9\", \"#FC9D9A\", \"#83AF9B\", \"#FE4365\"],\n\t\t[\"#ECD078\", \"#D95B43\", \"#53777A\", \"#C02942\", \"#542437\"], [\"#C7F464\", \"#4ECDC4\", \"#FF6B6B\", \"#C44D58\", \"#556270\"],\n\t\t[\"#ECE5CE\", \"#F1D4AF\", \"#C5E0DC\", \"#E08E79\", \"#774F38\"], [\"#E8DDCB\", \"#CDB380\", \"#036564\", \"#033649\", \"#031634\"],\n\t\t[\"#F8CA00\", \"#E97F02\", \"#8A9B0F\", \"#BD1550\", \"#490A3D\"], [\"#E5FCC2\", \"#9DE0AD\", \"#45ADA8\", \"#547980\", \"#594F4F\"],\n\t\t[\"#EDC951\", \"#EB6841\", \"#00A0B0\", \"#CC333F\", \"#6A4A3C\"], [\"#F4EAD5\", \"#C6E5D9\", \"#C6A49A\", \"#D68189\", \"#E94E77\"],\n\t\t[\"#DAD8A7\", \"#FF9E9D\", \"#7FC7AF\", \"#3FB8AF\", \"#FF3D7F\"], [\"#D5DED9\", \"#D9CEB2\", \"#99B2B7\", \"#948C75\", \"#7A6A53\"],\n\t\t[\"#FFFFFF\", \"#F2E9E1\", \"#CBE86B\", \"#CBE86B\", \"#1C140D\"], [\"#EFFFCD\", \"#DCE9BE\", \"#555152\", \"#99173C\", \"#2E2633\"],\n\t\t[\"#00DFFC\", \"#00B4CC\", \"#008C9E\", \"#005F6B\", \"#343838\"], [\"#F7E4BE\", \"#F0B49E\", \"#B38184\", \"#73626E\", \"#413E4A\"],\n\t\t[\"#E1F5C4\", \"#EDE574\", \"#F9D423\", \"#FC913A\", \"#FF4E50\"], [\"#FECEA8\", \"#99B898\", \"#FF847C\", \"#E84A5F\", \"#2A363B\"],\n\t\t[\"#F6F7BD\", \"#E6AC27\", \"#80BCA3\", \"#BF4D28\", \"#655643\"], [\"#F9F2E7\", \"#AEE239\", \"#40C0CB\", \"#8FBE00\", \"#00A8C6\"],\n\t\t[\"#E8CAA4\", \"#64908A\", \"#CC2A41\", \"#424254\", \"#351330\"], [\"#F1EFA5\", \"#D3CE3D\", \"#60B99A\", \"#F77825\", \"#554236\"],\n\t\t[\"#E9E9E9\", \"#BCBCBC\", \"#FF9900\", \"#3299BB\", \"#424242\"], [\"#EBE3AA\", \"#CAD7B2\", \"#A8CABA\", \"#838689\", \"#5D4157\"],\n\t\t[\"#F2C45A\", \"#BFB35A\", \"#88A65E\", \"#5E8C6A\", \"#8C2318\"], [\"#FAD089\", \"#FF9C5B\", \"#F5634A\", \"#3B8183\", \"#ED303C\"],\n\t\t[\"#F4FAD2\", \"#F0F2EB\", \"#E1EDB9\", \"#D4EE5E\", \"#FF4242\"], [\"#FFFFFF\", \"#D1E751\", \"#4DBCE9\", \"#26ADE4\", \"#000000\"],\n\t\t[\"#F8B195\", \"#F67280\", \"#C06C84\", \"#6C5B7B\", \"#355C7D\"], [\"#EAFDE6\", \"#BEF202\", \"#88C425\", \"#519548\", \"#1B676B\"],\n\t\t[\"#BCBDAC\", \"#CFBE27\", \"#F27435\", \"#F02475\", \"#3B2D38\"], [\"#FCEBB6\", \"#F0A830\", \"#78C0A8\", \"#F07818\", \"#5E412F\"],\n\t\t[\"#E2F7CE\", \"#E8BF56\", \"#E4844A\", \"#91204D\", \"#452632\"], [\"#EEE6AB\", \"#C5BC8E\", \"#696758\", \"#45484B\", \"#36393B\"],\n\t\t[\"#F0D8A8\", \"#F2D694\", \"#86B8B1\", \"#FA2A00\", \"#3D1C00\"], [\"#FFF7BD\", \"#F2F26F\", \"#95CFB7\", \"#FF823A\", \"#F04155\"],\n\t\t[\"#A0C55F\", \"#7AB317\", \"#0D6759\", \"#0B2E59\", \"#2A044A\"], [\"#EEDD99\", \"#EEC290\", \"#CCC68D\", \"#EEAA88\", \"#BBBB88\"],\n\t\t[\"#B9D7D9\", \"#668284\", \"#7B3B3B\", \"#493736\", \"#2A2829\"], [\"#ECF081\", \"#FFBE40\", \"#B3CC57\", \"#EF746F\", \"#AB3E5B\"],\n\t\t[\"#EDB92E\", \"#A3A948\", \"#F85931\", \"#009989\", \"#CE1836\"], [\"#CCBF82\", \"#B8AF03\", \"#67917A\", \"#E33258\", \"#170409\"],\n\t\t[\"#E8D5B9\", \"#E8D5B7\", \"#F5B349\", \"#FC3A51\", \"#0E2430\"], [\"#EBEFC9\", \"#EEE0B7\", \"#E8CAAF\", \"#C4CBB7\", \"#AAB3AB\"],\n\t\t[\"#F07241\", \"#C04848\", \"#601848\", \"#480048\", \"#300030\"], [\"#F4EBC3\", \"#F0E2A4\", \"#C5CEAE\", \"#BCA297\", \"#AB526B\"],\n\t\t[\"#F0F0D8\", \"#C0D860\", \"#789048\", \"#607848\", \"#604848\"], [\"#DCEDC2\", \"#FFD3B5\", \"#A8E6CE\", \"#FFAAA6\", \"#FF8C94\"],\n\t\t[\"#FFFEDF\", \"#DFBA69\", \"#3E4147\", \"#5A2E2E\", \"#2A2C31\"], [\"#FEDCBA\", \"#ECDBBC\", \"#DADABD\", \"#C8D9BF\", \"#B6D8C0\"],\n\t\t[\"#FCF7C5\", \"#0ABFBC\", \"#FC354C\", \"#13747D\", \"#29221F\"], [\"#FFEAAD\", \"#B3E099\", \"#D14334\", \"#028F76\", \"#1C2130\"],\n\t\t[\"#EDEBE6\", \"#D6E1C7\", \"#94C7B6\", \"#D3643B\", \"#403B33\"], [\"#F8FCC1\", \"#C8CF02\", \"#E6781E\", \"#1693A7\", \"#CC0C39\"],\n\t\t[\"#DAD6CA\", \"#1BB0CE\", \"#4F8699\", \"#6A5E72\", \"#563444\"], [\"#E5DDCB\", \"#A7C5BD\", \"#EB7B59\", \"#CF4647\", \"#524656\"],\n\t\t[\"#FDF1CC\", \"#C6D6B8\", \"#FCD036\", \"#E3AD40\", \"#987F69\"], [\"#E5F04C\", \"#C0D23E\", \"#E15E32\", \"#A82743\", \"#5C323E\"],\n\t\t[\"#EBEBBC\", \"#BCE3C5\", \"#82B3AE\", \"#F21D41\", \"#230F2B\"], [\"#B9D3B0\", \"#F6AA93\", \"#F88F79\", \"#81BDA4\", \"#B28774\"],\n\t\t[\"#E6F9BC\", \"#BCDEA5\", \"#83988E\", \"#574951\", \"#3A111C\"], [\"#FCF7D3\", \"#DEE8BE\", \"#B7D1A3\", \"#CD8C52\", \"#5E3929\"],\n\t\t[\"#F03C02\", \"#C21A01\", \"#A30006\", \"#6B0103\", \"#1C0113\"], [\"#FFEAF2\", \"#FCD9E5\", \"#FBC5D8\", \"#F1396D\", \"#382F32\"],\n\t\t[\"#E3DFBA\", \"#C8D6BF\", \"#93CCC6\", \"#6CBDB5\", \"#1A1F1E\"], [\"#CCCCCC\", \"#B11623\", \"#9F111B\", \"#292C37\", \"#000000\"],\n\t\t[\"#FBEEC2\", \"#ACCEC0\", \"#C1B398\", \"#61A6AB\", \"#605951\"], [\"#FFE9AF\", \"#F9D6AC\", \"#FEA6A2\", \"#8DCCAD\", \"#988864\"],\n\t\t[\"#F6F6F6\", \"#E8E8E8\", \"#B90504\", \"#333333\", \"#990100\"], [\"#E9F2F9\", \"#9CC4E4\", \"#F26C4F\", \"#3A89C9\", \"#1B325F\"],\n\t\t[\"#DCD1B4\", \"#FAB87F\", \"#F87E7B\", \"#5E9FA3\", \"#B05574\"], [\"#F5F4D7\", \"#E0DFB1\", \"#A5A36C\", \"#535233\", \"#951F2B\"],\n\t\t[\"#C8FF00\", \"#FA023C\", \"#413D3D\", \"#4B000F\", \"#040004\"], [\"#EFF3CD\", \"#B2D5BA\", \"#61ADA0\", \"#248F8D\", \"#605063\"],\n\t\t[\"#DFECE6\", \"#92C7A3\", \"#3CA2A2\", \"#215A6D\", \"#2D2D29\"], [\"#CFFFDD\", \"#B4DEC1\", \"#A85163\", \"#FF1F4C\", \"#5C5863\"],\n\t\t[\"#CCFC8E\", \"#8EBE94\", \"#DC5B3E\", \"#827085\", \"#4E395D\"], [\"#FFFEC7\", \"#9DC9AC\", \"#FF9D2E\", \"#919167\", \"#F56218\"],\n\t\t[\"#FEE5AD\", \"#FACA66\", \"#A1DBB2\", \"#F7A541\", \"#F45D4C\"], [\"#FFFEE4\", \"#FFEFD3\", \"#D0ECEA\", \"#9FD6D2\", \"#8B7A5E\"],\n\t\t[\"#A8A7A7\", \"#CC527A\", \"#E8175D\", \"#474747\", \"#363636\"], [\"#FFEDBF\", \"#F8E4C1\", \"#F7803C\", \"#F54828\", \"#2E0D23\"],\n\t\t[\"#F8EDD1\", \"#C5CFC6\", \"#D88A8A\", \"#9D9D93\", \"#474843\"], [\"#F1EDD0\", \"#CDE9CA\", \"#A0CAB5\", \"#F38A8A\", \"#55443D\"],\n\t\t[\"#94BA65\", \"#2790B0\", \"#4E4D4A\", \"#2B4E72\", \"#353432\"], [\"#FEFEEB\", \"#F8F4E4\", \"#A5B3AA\", \"#0CA5B0\", \"#4E3F30\"],\n\t\t[\"#F6D86B\", \"#FB6B41\", \"#339194\", \"#F10C49\", \"#A70267\"], [\"#CCAC95\", \"#9A947C\", \"#9D7E79\", \"#748B83\", \"#5B756C\"],\n\t\t[\"#EDF6EE\", \"#D1C089\", \"#B3204D\", \"#412E28\", \"#151101\"], [\"#ECBE13\", \"#93A42A\", \"#2FB8AC\", \"#309292\", \"#046D8B\"],\n\t\t[\"#F5E0D3\", \"#FFD0B3\", \"#FFB88C\", \"#DE6262\", \"#4D3B3B\"], [\"#FFFBB7\", \"#A6F6AF\", \"#66B6AB\", \"#5B7C8D\", \"#4F2958\"],\n\t\t[\"#FABE28\", \"#FF8A00\", \"#88C100\", \"#00C176\", \"#FF003C\"], [\"#FCFEF5\", \"#FAFBE3\", \"#E9FFE1\", \"#D6E6C3\", \"#CDCFB7\"],\n\t\t[\"#DDD9AB\", \"#BFD8AD\", \"#9CDDC8\", \"#F7AF63\", \"#633D2E\"], [\"#0B8185\", \"#1F5F61\", \"#36544F\", \"#403831\", \"#30261C\"],\n\t\t[\"#F9BF76\", \"#8EB2C5\", \"#E5625C\", \"#D1313D\", \"#615375\"], [\"#EEE9E5\", \"#FFE181\", \"#FAD3B2\", \"#FFBA7F\", \"#FF9C97\"],\n\t\t[\"#AAFF00\", \"#FFAA00\", \"#00AAFF\", \"#FF00AA\", \"#AA00FF\"], [\"#D1AA34\", \"#A7A844\", \"#A46583\", \"#C2412D\", \"#5A1E4A\"],\n\t\t[\"#F8F3BF\", \"#DCE4F7\", \"#BFCFF7\", \"#75616B\", \"#D34017\"]\n\t];\n\tpublic static var niceColor100SortedInt:Array<Array<Int>> = [\n\t\t[14738636, 11000792, 6935271, 15959600, 16410880], [16371117, 13158569, 16555418, 8630171, 16663397], [15519864, 14244675, 5470074, 12593474, 5514295],\n\t\t[13104228, 5164484, 16739179, 12864856, 5595760], [15525326, 15848623, 12968156, 14716537, 7819064], [15261131, 13480832, 222564, 210505, 202292],\n\t\t[16304640, 15302402, 9083663, 12391760, 4786749], [15072450, 10346669, 4566440, 5536128, 5853007], [15583569, 15427649, 41136, 13382463, 6965820],\n\t\t[16050901, 13034969, 13018266, 14057865, 15289975], [14342311, 16752285, 8374191, 4176047, 16727423], [14016217, 14274226, 10072759, 9735285, 8022611],\n\t\t[16777215, 15919585, 13363307, 13363307, 1840141], [15728589, 14477758, 5591378, 10032956, 3024435], [57340, 46284, 35998, 24427, 3422264],\n\t\t[16245950, 15774878, 11764100, 7561838, 4275786], [14808516, 15590772, 16372771, 16552250, 16731728],\n\t\t[16699048, 10074264, 16745596, 15223391, 2766395], [16185277, 15117351, 8436899, 12537128, 6641219], [16380647, 11461177, 4243659, 9420288, 43206],\n\t\t[15256228, 6590602, 13380161, 4342356, 3478320], [15855525, 13880893, 6338970, 16218149, 5587510], [15329769, 12369084, 16750848, 3316155, 4342338],\n\t\t[15459242, 13293490, 11061946, 8619657, 6111575], [15909978, 12563290, 8955486, 6196330, 9184024], [16437385, 16751707, 16081738, 3899779, 15544380],\n\t\t[16054994, 15790827, 14806457, 13954654, 16728642], [16777215, 13756241, 5094633, 2534884, 0], [16298389, 16151168, 12610692, 7101307, 3497085],\n\t\t[15400422, 12513794, 8963109, 5346632, 1795947], [12369324, 13614631, 15889461, 15737973, 3878200], [16575414, 15771696, 7913640, 15759384, 6177071],\n\t\t[14874574, 15253334, 14976074, 9510989, 4531762], [15656619, 12958862, 6907736, 4540491, 3553595], [15784104, 15914644, 8829105, 16394752, 4004864],\n\t\t[16775101, 15921775, 9818039, 16745018, 15745365], [10536287, 8041239, 878425, 732761, 2753610], [15654297, 15647376, 13420173, 15641224, 12303240],\n\t\t[12179417, 6718084, 8076091, 4798262, 2762793], [15528065, 16760384, 11783255, 15692911, 11222619], [15579438, 10725704, 16275761, 39305, 13506614],\n\t\t[13418370, 12103427, 6787450, 14889560, 1508361], [15259065, 15259063, 16102217, 16530001, 926768], [15462345, 15655095, 15256239, 12897207, 11187115],\n\t\t[15757889, 12601416, 6297672, 4718664, 3145776], [16051139, 15786660, 12963502, 12362391, 11227755], [15790296, 12638304, 7901256, 6322248, 6309960],\n\t\t[14478786, 16765877, 11069134, 16755366, 16747668], [16776927, 14662249, 4079943, 5910062, 2763825],\n\t\t[16702650, 15522748, 14342845, 13162943, 11983040], [16578501, 704444, 16528716, 1275005, 2695711], [16771757, 11788441, 13714228, 167798, 1843504],\n\t\t[15592422, 14082503, 9750454, 13853755, 4209459], [16317633, 13160194, 15104030, 1479591, 13372473], [14341834, 1814734, 5211801, 6970994, 5649476],\n\t\t[15064523, 10995133, 15432537, 13583943, 5391958], [16642508, 13031096, 16568374, 14921024, 9994089],\n\t\t[15069260, 12636734, 14769714, 11020099, 6042174], [15461308, 12379077, 8565678, 15867201, 2297643], [12178352, 16165523, 16289657, 8502692, 11700084],\n\t\t[15137212, 12377765, 8624270, 5720401, 3805468], [16578515, 14608574, 12046755, 13470802, 6175017], [15744002, 12720641, 10682374, 7012611, 1835283],\n\t\t[16771826, 16570853, 16500184, 15808877, 3682098], [14933946, 13162175, 9686214, 7126453, 1711902], [13421772, 11605539, 10424603, 2698295, 0],\n\t\t[16510658, 11325120, 12694424, 6399659, 6314321], [16771503, 16373420, 16688802, 9292973, 9996388], [16185078, 15263976, 12125444, 3355443, 10027264],\n\t\t[15332089, 10274020, 15887439, 3836361, 1782367], [14471604, 16431231, 16285307, 6201251, 11556212], [16118999, 14737329, 10855276, 5460531, 9772843],\n\t\t[13172480, 16384572, 4275517, 4915215, 262148], [15725517, 11720122, 6401440, 2396045, 6312035], [14675174, 9619363, 3973794, 2185837, 2960681],\n\t\t[13631453, 11853505, 11030883, 16719692, 6051939], [13433998, 9354900, 14441278, 8548485, 5126493], [16776903, 10340780, 16751918, 9539943, 16081432],\n\t\t[16704941, 16435814, 10607538, 16229697, 16014668], [16776932, 16773075, 13692138, 10475218, 9140830],\n\t\t[11052967, 13390458, 15210333, 4671303, 3552822], [16772543, 16311489, 16220220, 16074792, 3018019], [16313809, 12963782, 14191242, 10329491, 4671555],\n\t\t[15855056, 13494730, 10537653, 15960714, 5588029], [9747045, 2592944, 5131594, 2838130, 3486770], [16711403, 16315620, 10859434, 828848, 5127984],\n\t\t[16177259, 16476993, 3379604, 15797321, 10945127], [13413525, 10130556, 10321529, 7637891, 5993836], [15595246, 13746313, 11739213, 4271656, 1380609],\n\t\t[15515155, 9675818, 3127468, 3183250, 290187], [16113875, 16765107, 16758924, 14574178, 5061435], [16776119, 10942127, 6731435, 5995661, 5187928],\n\t\t[16432680, 16747008, 8962304, 49526, 16711740], [16580341, 16448483, 15335393, 14083779, 13488055], [14539179, 12572845, 10280392, 16232291, 6503726],\n\t\t[754053, 2056033, 3560527, 4208689, 3155484], [16367478, 9351877, 15032924, 13709629, 6378357], [15657445, 16769409, 16438194, 16759423, 16751767],\n\t\t[11206400, 16755200, 43775, 16711850, 11141375], [13740596, 10987588, 10773891, 12730669, 5905994], [16315327, 14476535, 12570615, 7692651, 13844503]\n\t];\n}\n","package cc.util;\n\nimport js.html.CanvasRenderingContext2D;\n\n// https://github.com/GeorgeGally/creative_coding/blob/master/js/creative_coding.js#L761\nclass EffectUtil {\n\tpublic function new() {}\n\n\tpublic static function flip(ctx:CanvasRenderingContext2D, isHorizontal:Bool = true) {\n\t\tif (ctx == null) return;\n\n\t\tvar w = ctx.canvas.width;\n\t\tvar h = ctx.canvas.height;\n\n\t\tctx.save();\n\t\t// translate to a point from where we want to redraw the new image\n\t\tif(isHorizontal){\n\t\t\tctx.translate(w, 0);\n\t\t\tctx.scale(-1, 1);\n\t\t} else {\n\t\t\tctx.translate(0, h);\n\t\t\tctx.scale(1, -1);\n\t\t}\n\t\t// ctx.globalAlpha = 0.5;\n\t\t// redraw\n\t\tctx.drawImage(ctx.canvas, 0, 0, w, h);\n\t\t// Revert transform and scale\n\t\tctx.restore();\n\n\t}\n\n\n\tpublic static function mirror(ctx:CanvasRenderingContext2D, isHorizontal:Bool = false) {\n\t\tif (ctx == null) return;\n\n\t\tvar w = ctx.canvas.width;\n\t\tvar h = ctx.canvas.height;\n\n\t\tctx.save();\n\t\t// translate to a point from where we want to redraw the new image\n\t\t// ctx.globalAlpha = 0.5;\n\t\tif(isHorizontal){\n\t\t\tctx.translate(w, 0);\n\t\t\tctx.scale(-1, 1);\n\t\t\t// redraw\n\t\t\tctx.drawImage(ctx.canvas, 0, 0, w/2, h, 0, 0, w/2, h);\n\t\t} else {\n\t\t\tctx.translate(0, h);\n\t\t\tctx.scale(1, -1);\n\t\t\t// redraw\n\t\t\tctx.drawImage(ctx.canvas, 0, 0, w, h/2, 0, 0, w, h/2);\n\t\t}\n\t\t// Revert transform and scale\n\t\tctx.restore();\n\t}\n\n\t// function mirror(){\n\t// var input = ctx.getImageData(0, 0, w, h);\n\t// var output = ctx.createImageData(w, h);\n\t// var inputData = input.data;\n\t// var outputData = output.data\n\t// // loop\n\t// for (var y = 1; y < h-1; y += 1) {\n\t//\tfor (var x = 0; x < w/2; x += 1) {\n\t//\t// RGB\n\t//\tvar i = (y*w + x)*4;\n\t//\tvar flip = (y*w + (w/2 - x))*4;\n\t//\tfor (var c = 0; c < 4; c += 1) {\n\t//\toutputData[i+c] = inputData[flip+c];\n\t//       }\n\t//     }\n\t// }\n\t// ctx.putImageData(output, w/2, 0);\n\t// }\n\t/**\n\n\t\tp.pixelate = function (blocksize,blockshape) {\n\t\t  if (blockshape == undefined) blockshape = 0;\n\t\t  if (blocksize == undefined) blocksize = 20;\n\t\t  var imgData=ctx.getImageData(0,0,w,h);\n\n\t\t  ctx.clearRect(0,0,w,h);\n\t\t  //console.log(blockshape)\n\t\t  if (blockshape == 3) {\n\t\tctx.background(0);\n\t\t  }\n\n\t\tvar buffer = new Uint8Array(imgData.data.buffer);\n\t\tfor(var x = 0; x < w; x += blocksize)\n\t\t{\n\t\t\tfor(var y = 0; y < h; y += blocksize)\n\t\t\t{\n\n\t\tvar pos = (x + y * w);\n\t\tvar b = (buffer[pos] >> 16) & 0xff;\n\t\tvar g = (buffer[pos] >> 8) & 0xff;\n\t\tvar r = (buffer[pos] >> 0) & 0xff;\n\t\tthis.fillStyle = rgb(r,g,b);\n\t\tif (blockshape == 0) {\n\t\tthis.fillRect(x, y, blocksize, blocksize);\n\t\t\t  } else if (blockshape == 1) {\n\t\t\t  \tthis.fillEllipse(x, y, blocksize, blocksize);\n\t\t\t  } else if (blockshape == 2) {\n\t\t\t  \tvar bb = brightness(r,g,b);\n\t\t\t  \tthis.fillStyle = (bb < 40 ? rgb(0) : rgb(255));\n\t\tthis.fillEllipse(x, y, blocksize-1, blocksize-1);\n\t\t\t   } else if (blockshape == 3) {\n\t\tthis.fillStyle = rgb(r,g,b);\n\t\tthis.fillEllipse(x, y, blocksize-3, blocksize-3);\n\t\t\t  } else {\n\t\t\t  \tvar bb = brightness(r,g,b);\n\t\t\t  \tif (bb< 40) {\n\t\t\t  \t\tthis.fillStyle = rgb(0);\n\t\t\t  \t\tthis.fillEllipse(x, y, blocksize-1, blocksize-1);\n\t\t\t  \t} else {\n\t\t\t  \t\tthis.fillStyle = rgb(255);\n\t\t\t  \t\tthis.fillEllipse(x, y, blocksize-1, blocksize-1);\n\t\t\tthis.strokeEllipse(x, y, blocksize, blocksize);\n\t\t\t  \t}\n\t\t\t  };\n\n\t\t\t}\n\t\t}\n\n\t\t}\n\n\n\t\tfunction pixelate(blocksize,blockshape) {\n\t\t  if (blockshape == undefined) blockshape = 0;\n\t\t  if (blocksize == undefined) blocksize = 20;\n\t\t  var imgData=ctx.getImageData(0,0,w,h);\n\n\t\t  ctx.clearRect(0,0,w,h);\n\t\t  //console.log(blockshape)\n\t\t  if (blockshape == 3) {\n\t\tctx.background(0);\n\t\t  }\n\n\t\tvar buffer = new Uint8Array(imgData.data.buffer);\n\t\tfor(var x = 0; x < w; x += blocksize)\n\t\t{\n\t\t\tfor(var y = 0; y < h; y += blocksize)\n\t\t\t{\n\n\t\t\t  var pos = (x + y * w);\n\t\t\t  var b = (buffer[pos] >> 16) & 0xff;\n\t\t\t  var g = (buffer[pos] >> 8) & 0xff;\n\t\t\t  var r = (buffer[pos] >> 0) & 0xff;\n\t\t\t  ctx.fillStyle = rgb(r,g,b);\n\t\t\t  if (blockshape == 0) {\n\t\tctx.fillRect(x, y, blocksize, blocksize);\n\t\t\t  } else if (blockshape == 1) {\n\t\t\t  \tctx.fillEllipse(x, y, blocksize, blocksize);\n\t\t\t  } else if (blockshape == 2) {\n\t\t\t  \tvar bb = brightness(r,g,b);\n\t\t\t  \tctx.fillStyle = (bb < 40 ? rgb(0) : rgb(255));\n\t\tctx.fillEllipse(x, y, blocksize-1, blocksize-1);\n\t\t\t   } else if (blockshape == 3) {\n\t\tctx.fillStyle = rgb(r,g,b);\n\t\tctx.fillEllipse(x, y, blocksize-3, blocksize-3);\n\t\t\t  } else {\n\t\t\t  \tvar bb = brightness(r,g,b);\n\t\t\t  \tif (bb< 40) {\n\t\t\t  \t\tctx.fillStyle = rgb(0);\n\t\t\t  \t\tctx.fillEllipse(x, y, blocksize-1, blocksize-1);\n\t\t\t  \t} else {\n\t\t\t  \t\tctx.fillStyle = rgb(255);\n\t\t\t  \t\tctx.fillEllipse(x, y, blocksize-1, blocksize-1);\n\t\t\tctx.strokeEllipse(x, y, blocksize, blocksize);\n\t\t\t  \t}\n\t\t\t  };\n\n\t\t\t}\n\t\t}\n\n\t\t}\n\n\n\n\t\tfunction pixelShuffle(blockwidth, blockheight, freq, x1, y1, x2, y2) {\n\n\t\t  if (x1 == undefined) {\n\t\tx1 = 0; y1 = 0; x2 = w; y2 = h;\n\t\t  }\n\t\tif (freq == undefined) freq = 20;\n\t\tif (blockwidth == undefined) blockwidth = 20;\n\t\tif (blockheight == undefined) blockheight = blockwidth;\n\t\tvar imgData=ctx.getImageData(x1,y1,x2,y2);\n\t\t//var sourceBuffer8 = new Uint8Array(imgData.data.buffer);\n\t\t//var sourceBuffer8 = new Uint8ClampedArray(imgData.data.buffer);\n\t\t//shuffle(sourceBuffer8, 1);\n\t\tvar sourceBuffer32 = new Uint32Array(imgData.data.buffer);\n\n\t\tfor(var x = x1; x < x2; x += blockwidth) {\n\n\t\t\tfor(var y = y1; y < y2; y += blockheight) {\n\n\t\t\t  var pos = (x + y * x2);\n\t\t\t  if (chance(freq)) {\n\t\tpos = (pos + randomInt(-100,100)*4) % (x2*y2*4);\n\t\tvar b = (sourceBuffer32[pos] >> 16) & 0xff;\n\t\tvar g = (sourceBuffer32[pos] >> 8) & 0xff;\n\t\tvar r = (sourceBuffer32[pos] >> 0) & 0xff;\n\t\tctx.fillStyle = rgba(r,g,b, 0.9);\n\t\t\t  ctx.fillRect(x, y, blockwidth, blockheight);\n\t\t\t  }\n\t\t\t};\n\n\t\t}\n\n\t\t}\n\n\n\t\t// function pixelShuffle(blockwidth, blockheight, freq, x1, y1, x2, y2) {\n\n\t\t//   if (x1 === undefined) {\n\t\t//     x1 = 0; y1 = 0; x2 = w; y2 = h;\n\t\t//   }\n\n\n\n\t\t//   if (freq == undefined) freq = 20;\n\t\t//   if (blockwidth == undefined) blockwidth = 20;\n\t\t//   if (blockheight == undefined) blockheight = blockwidth;\n\n\t\t//     var imgData=ctx.getImageData(0,0,x2,y2);\n\t\t//     //ctx.clearRect(0,0,w,h);\n\t\t//     //var sourceBuffer8 = new Uint8Array(imgData.data.buffer);\n\t\t//     //var sourceBuffer8 = new Uint8ClampedArray(imgData.data.buffer);\n\t\t//     //shuffle(sourceBuffer8, 1);\n\t\t//     var sourceBuffer32 = new Uint32Array(imgData.data.buffer);\n\n\t\t//     for(var x = x1; x < x2; x += blockwidth) {\n\t\t//         for(var y = y2; y < y2; y += blockheight) {\n\n\t\t//           var pos = (x + y * x2);\n\n\t\t//           if (chance(freq)) {\n\t\t//\tpos = (pos + randomInt(-100,100)*4) % (x2*y2*4);\n\t\t//\t//pos = (pos + randomInt(-100,100)*4) % ((x1+x2)*(y1+y2)*4);\n\t\t//\tvar b = (sourceBuffer32[pos] >> 16) & 0xff;\n\t\t//\tvar g = (sourceBuffer32[pos] >> 8) & 0xff;\n\t\t//\tvar r = (sourceBuffer32[pos] >> 0) & 0xff;\n\t\t//\tctx.fillStyle = rgba(r,g,b, 0.9);\n\t\t//\tctx.fillRect(x, y, blockwidth, blockheight);\n\n\t\t//           }\n\t\t//         };\n\n\t\t//     }\n\n\t\t// }\n\n\n\n\n\t\tfunction shuffle(a, ammt) {\n\t\t if (ammt = undefined) ammt = a.length;\n\t\tvar j, x, i;\n\t\tfor (i = ammt; i; i--) {\n\t\t\tj = Math.floor(Math.random() * i);\n\t\t\tx = a[i - 1];\n\t\t\ta[i - 1] = a[j];\n\t\t\ta[j] = x;\n\t\t}\n\t\t}\n\n\n\n\t\tfunction halftone(blocksize, reverse) {\n\t\t  if (reverse == undefined) reverse = 1;\n\t\t  if (reverse == true) reverse = -1;\n\t\t  if (blocksize == undefined) blocksize = 20;\n\t\t  var imgData=ctx.getImageData(0,0,w,h);\n\n\t\t  ctx.clearRect(0,0,w,h);\n\t\t  var sourceBuffer32 = new Uint32Array(imgData.data.buffer);\n\t\t  ctx.fillStyle = rgb(0,0,0);\n\n\t\t  for(var x = 0; x < w; x += blocksize) {\n\n\t\t\tfor(var y = 0; y < h; y += blocksize) {\n\n\t\t\t\tvar pos = (x + y * w);\n\t\t\t\tvar b = (sourceBuffer32[pos] >> 16) & 0xff;\n\t\t\t\tvar g = (sourceBuffer32[pos] >> 8) & 0xff;\n\t\t\t\tvar r = (sourceBuffer32[pos] >> 0) & 0xff;\n\t\t\t  \tif (reverse == -1) {\n\t\t\t  \t\tvar bb = 100 - brightness(r,g,b);\n\t\t\t  \t} else {\n\t\t\t  \t\tvar bb = brightness(r,g,b);\n\t\t\t  \t}\n\n\t\t\t  \tctx.fillEllipse(x, y, blocksize*bb/100, blocksize*bb/100);\n\n\t\t\t  };\n\n\t\t\t}\n\t\t}\n\n\n\n\n\t\tfunction triangulate(grid_w, grid_h, alpha) {\n\n\t\tif (grid_h == undefined) {\n\t\t\tgrid_h = grid_w;\n\t\t}\n\n\t\tif (alpha == undefined) {\n\t\t\talpha = 0.8;\n\t\t}\n\n\t\tvar ww = Math.ceil(w/grid_w);\n\t\tvar\thh = Math.ceil(h/grid_h);\n\t\tvar imgData=ctx.getImageData(0,0,w,h);\n\t\tctx.clearRect(0,0,w,h);\n\t\t//var sourceBuffer8 = new Uint8Array(imgData.data.buffer);\n\t\t//var sourceBuffer8 = new Uint8ClampedArray(imgData.data.buffer);\n\n\t\tvar sourceBuffer32 = new Uint32Array(imgData.data.buffer);\n\t\tvar i =0;\n\t\tfor(var x = 0; x < w; x += grid_w)\n\t\t{\n\t\t\tfor(var y = 0; y < h; y += grid_h)\n\t\t\t{\n\n\t\t\t  var pos = (x + y * w);\n\t\t\t  var b = (sourceBuffer32[pos] >> 16) & 0xff;\n\t\t\t  var g = (sourceBuffer32[pos] >> 8) & 0xff;\n\t\t\t  var r = (sourceBuffer32[pos] >> 0) & 0xff;\n\t\t\t  ctx.fillStyle = rgba(r,g,b, alpha);\n\n\t\t  if (i%2) {\n\t\t ctx.fillTriangle(x, y - grid_h, x, y + grid_h, x - grid_w, y );\n\t\t} else {\n\t\t\tctx.fillTriangle(x - grid_w, y - grid_h, x, y, x - grid_w , y + grid_h);\n\t\t}\n\n\t\ti++;\n\t\t  }\n\t\t}\n\n\t\t}\n\n\n\n\t\t// MIRROR THE CANVAS\n\n\t\tfunction mirror(){\n\n\t\t  var input = ctx.getImageData(0, 0, w, h);\n\t\t  var output = ctx.createImageData(w, h);\n\t\t  var inputData = input.data;\n\t\t  var outputData = output.data\n\t\t   // loop\n\t\t   for (var y = 1; y < h-1; y += 1) {\n\t\t   for (var x = 0; x < w/2; x += 1) {\n\t\t\t // RGB\n\t\t\t var i = (y*w + x)*4;\n\t\t\t var flip = (y*w + (w/2 - x))*4;\n\t\t\t for (var c = 0; c < 4; c += 1) {\n\t\t\t\toutputData[i+c] = inputData[flip+c];\n\t\t\t }\n\t\t   }\n\t\t   }\n\t\t   ctx.putImageData(output, w/2, 0);\n\n\t\t}\n\n\n\n\t\tfunction ScaleImage(srcwidth, srcheight, targetwidth, targetheight, fLetterBox) {\n\n\t\tvar result = { width: 0, height: 0, fScaleToTargetWidth: true };\n\n\t\tif ((srcwidth <= 0) || (srcheight <= 0) || (targetwidth <= 0) || (targetheight <= 0)) {\n\t\t\treturn result;\n\t\t}\n\n\t\t// scale to the target width\n\t\tvar scaleX1 = targetwidth;\n\t\tvar scaleY1 = (srcheight * targetwidth) / srcwidth;\n\n\t\t// scale to the target height\n\t\tvar scaleX2 = (srcwidth * targetheight) / srcheight;\n\t\tvar scaleY2 = targetheight;\n\n\t\t// now figure out which one we should use\n\t\tvar fScaleOnWidth = (scaleX2 > targetwidth);\n\t\tif (fScaleOnWidth) {\n\t\t\tfScaleOnWidth = fLetterBox;\n\t\t}\n\t\telse {\n\t\t   fScaleOnWidth = !fLetterBox;\n\t\t}\n\n\t\tif (fScaleOnWidth) {\n\t\t\tresult.width = Math.floor(scaleX1);\n\t\t\tresult.height = Math.floor(scaleY1);\n\t\t\tresult.fScaleToTargetWidth = true;\n\t\t}\n\t\telse {\n\t\t\tresult.width = Math.floor(scaleX2);\n\t\t\tresult.height = Math.floor(scaleY2);\n\t\t\tresult.fScaleToTargetWidth = false;\n\t\t}\n\t\tresult.targetleft = Math.floor((targetwidth - result.width) / 2);\n\t\tresult.targettop = Math.floor((targetheight - result.height) / 2);\n\n\t\treturn result;\n\t\t}\n\n\n\n\t */\n}\n","package cc.util;\n\nimport js.html.CanvasRenderingContext2D;\n\n/**\n * probably only work on Firefox and Chrome\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/filter#Browser_compatibility\n *\n */\nclass FilterUtil {\n\tpublic function new() {}\n\n\t// ____________________________________ tools ____________________________________\n\tpublic static function convertCSSPercentage(value:Float):String {\n\t\tif (value > 1) {\n\t\t\treturn '${value}%';\n\t\t} else {\n\t\t\treturn '${value}';\n\t\t}\n\t}\n\n\t// ____________________________________ filters ____________________________________\n\n\t/**\n\t * grayscale()\n\t * A CSS <percentage>. Converts the drawing to grayscale.\n\t * A value of 100% is completely grayscale.\n\t * A value of 0% leaves the drawing unchanged.\n\t *\n\t * @param ctx\n\t * @param value\n\t */\n\tpublic static function grayscale(ctx:CanvasRenderingContext2D, value:Float = 100) {\n\t\tctx.filter = 'grayscale( ${convertCSSPercentage(value)} )';\n\t}\n\n\t/**\n\t * brightness()\n\t * A CSS <percentage>. Applies a linear multiplier to the drawing, making it appear brighter or darker.\n\t * A value under 100% darkens the image, while a value over 100% brightens it.\n\t * A value of 0% will create an image that is completely black, while a value of 100% leaves the input unchanged.\n\t *\n\t * @param ctx\n\t * @param value\n\t */\n\tpublic static function brightness(ctx:CanvasRenderingContext2D, value:Float = 100) {\n\t\tctx.filter = 'brightness( ${convertCSSPercentage(value)} )';\n\t}\n\n\t/**\n\t * contrast()\n\t * A CSS <percentage>. Adjusts the contrast of the drawing.\n\t * A value of 0% will create a drawing that is completely black.\n\t * A value of 100% leaves the drawing unchanged.\n\t *\n\t * @param ctx\n\t * @param value\n\t */\n\tpublic static function contrast(ctx:CanvasRenderingContext2D, value:Float = 100) {\n\t\tctx.filter = 'contrast( ${convertCSSPercentage(value)} )';\n\t}\n\n\t/**\n\t * invert()\n\t * A CSS <percentage>. Inverts the drawing.\n\t * A value of 100% means complete inversion.\n\t * A value of 0% leaves the drawing unchanged.\n\t *\n\t * @param ctx\n\t * @param value\n\t */\n\tpublic static function invert(ctx:CanvasRenderingContext2D, value:Float = 100) {\n\t\tctx.filter = 'invert( ${convertCSSPercentage(value)} )';\n\t}\n\n\t/**\n\t * opacity()\n\t * A CSS <percentage>. Applies transparency to the drawing.\n\t * A value of 0% means completely transparent.\n\t * A value of 100% leaves the drawing unchanged.\n\t *\n\t * @param ctx\n\t * @param value\n\t */\n\tpublic static function opacity(ctx:CanvasRenderingContext2D, value:Float = 100) {\n\t\tctx.filter = 'opacity( ${convertCSSPercentage(value)} )';\n\t}\n\n\t/**\n\t * saturate()\n\t * A CSS <percentage>. Saturates the drawing.\n\t * A value of 0% means completely un-saturated.\n\t * A value of 100% leaves the drawing unchanged.\n\t *\n\t * @param ctx\n\t * @param value\n\t */\n\tpublic static function saturate(ctx:CanvasRenderingContext2D, value:Float = 100) {\n\t\tctx.filter = 'saturate( ${convertCSSPercentage(value)} )';\n\t}\n\n\t/**\n\t * sepia()\n\t * A CSS <percentage>. Converts the drawing to sepia.\n\t * A value of 100% means completely sepia.\n\t * A value of 0% leaves the drawing unchanged.\n\t *\n\t * @param ctx\n\t * @param value\n\t */\n\tpublic static function sepia(ctx:CanvasRenderingContext2D, value:Float = 100) {\n\t\tctx.filter = 'sepia( ${convertCSSPercentage(value)} )';\n\t}\n\n\t/**\n\t * hue-rotate()\n\t * A CSS <angle>. Applies a hue rotation on the drawing. A value of 0deg leaves the input unchanged.\n\t *\n\t * @param ctx\n\t * @param value\n\t */\n\tpublic static function huerotate(ctx:CanvasRenderingContext2D, angle:Float = 360) {\n\t\tctx.filter = 'hue-rotate( ${angle} )';\n\t}\n\n\t/**\n\t * none\n\t * No filter is applied. Initial value.\n\t *\n\t * @param ctx\n\t * @param value\n\t */\n\tpublic static function none(ctx:CanvasRenderingContext2D) {\n\t\tctx.filter = null;\n\t}\n\n\n\n\t/**\n\t\tblur()\n\t\tA CSS <length>. Applies a Gaussian blur to the drawing. It defines the value of the standard deviation to the Gaussian function, i.e., how many pixels on the screen blend into each other; thus, a larger value will create more blur. A value of 0 leaves the input unchanged.\n\t\tdrop-shadow()\n\t\tApplies a drop shadow effect to the drawing. A drop shadow is effectively a blurred, offset version of the drawing's alpha mask drawn in a particular color, composited below the drawing. This function takes up to five arguments:\n\t\t<offset-x>: See <length> for possible units. Specifies the horizontal distance of the shadow.\n\t\t<offset-y>: See <length> for possible units. Specifies the vertical distance of the shadow.\n\t\t<blur-radius>: The larger this value, the bigger the blur, so the shadow becomes bigger and lighter. Negative values are not allowed.\n\t\t<color>: See <color> values for possible keywords and notations.\n\t */\n}\n","package cc.util;\n\nimport Sketch.Global.*;\nimport cc.AST;\nimport js.Browser.*;\nimport js.html.CanvasRenderingContext2D;\nimport cc.util.ColorUtil.RGB;\n\nclass GridUtil {\n\tpublic var array:Array<Point> = [];\n\tpublic var total:Int = null;\n\n\t/**\n\t * starting point x\n\t */\n\tpublic var x:Float = null;\n\n\t/**\n\t * starting point y\n\t */\n\tpublic var y:Float = null;\n\n\t/**\n\t * the width of the grid\n\t */\n\tpublic var width:Float = null;\n\n\t/**\n\t * the height of the grid\n\t */\n\tpublic var height:Float = null;\n\tpublic var gridX:Float = 0;\n\tpublic var gridY:Float = 0;\n\n\t/**\n\t * create grid with center point as (gridw gridheight center)\n\t */\n\tpublic var isCentered:Bool = false;\n\n\t/**\n\t * use fullscreen or bigger to use a grid\n\t */\n\tpublic var isFullscreen:Bool = false;\n\n\t/**\n\t * how width is the grid\n\t */\n\tpublic var cellWidth:Float = null;\n\n\t/**\n\t * how height is the grid\n\t */\n\tpublic var cellHeight:Float = null;\n\tpublic var numHor:Float = null;\n\tpublic var numVer:Float = null;\n\n\tvar _isCellSize:Bool = false;\n\tvar _isNumbered:Bool = false;\n\tvar _isDimension:Bool = false;\n\tvar _isPosition:Bool = false;\n\tvar _isDebug:Bool = false; // fix ugly grid bugs\n\n\t// ____________________________________ chaining ____________________________________\n\t// are always set\n\tprivate var _ctx:CanvasRenderingContext2D;\n\t// new private vars\n\n\n\tprivate var _x:Dynamic; //\n\tprivate var _y:Dynamic; //\n\tprivate var _w:Dynamic; //\n\tprivate var _h:Dynamic; //\n\tprivate var _hor:Dynamic; //\n\tprivate var _ver:Dynamic; //\n\tprivate var _cellw:Dynamic; //\n\tprivate var _cellh:Dynamic; //\n\tprivate var _center:Dynamic; //\n\tprivate var _debug:Dynamic; // (Suggestion: debug)\n\tprivate var _fullscreen:Dynamic; // (Suggestions: fullscreen, isFullscreen)\n\tprivate var _color:Dynamic; // (Suggestion: color)\n\n\n\n\n\n\tpublic function new(?ctx:CanvasRenderingContext2D) {\n\t\tif(ctx != null) this._ctx = ctx;\n\t}\n\n\n\t/**\n\t * var grid = GridUtil.create (ctx).draw();\n\t *\n\t * @param ctx\n\t * @param text\n\t * @return GridUtil\n\t */\n\tstatic inline public function create(ctx:CanvasRenderingContext2D):GridUtil {\n\t\tvar GridUtil = new GridUtil(ctx);\n\t\treturn GridUtil;\n\t}\n\n\n\n\t// ____________________________________ properties ____________________________________\n\n\t/**\n\t * [mck] prefer to have this x, and y\n\t */\n\tinline public function xpos(x:Float):GridUtil {\n\t\tthis._x = x;\n\t\treturn this;\n\t}\n\tinline public function ypos(y:Float):GridUtil {\n\t\tthis._y = y;\n\t\treturn this;\n\t}\n\tinline public function pos(x:Float,y:Float):GridUtil {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\treturn this;\n\t}\n\tinline public function dimension(w:Float,h:Float):GridUtil {\n\t\tthis._w = w;\n\t\tthis._h = h;\n\t\treturn this;\n\t}\n\tinline public function grid(hor:Int,ver:Int):GridUtil {\n\t\tthis._hor = hor;\n\t\tthis._ver = ver;\n\t\treturn this;\n\t}\n\tinline public function size(w:Float,h:Float):GridUtil {\n\t\tthis._cellw = w;\n\t\tthis._cellh = h;\n\t\treturn this;\n\t}\n\tinline public function centered():GridUtil {\n\t\tthis._center = true;\n\t\treturn this;\n\t}\n\tinline public function debug():GridUtil {\n\t\tthis._debug = true;\n\t\treturn this;\n\t}\n\tinline public function fullscreen():GridUtil {\n\t\tthis._fullscreen = true;\n\t\treturn this;\n\t}\n\tinline public function color(value:RGB):GridUtil {\n\t\tthis._color = value;\n\t\treturn this;\n\t}\n\tinline public function calc():GridUtil {\n\t\ttrace('WIP');\n\t\treturn this;\n\t}\n\tinline public function draw(?isDebug:Bool = false):GridUtil {\n\t\t// draw on canvas\n\t\tif(isDebug){\n\t\t\t// _ctx\n\t\t}\n\t\treturn this;\n\t}\n\n\n\n\n\t/**\n\t * [Description]\n\t * @param x\t\t\tstart position x\n\t * @param y\t\t\tstart postion y\n\t */\n\tpublic function setPosition(x, y) {\n\t\tif (_isDebug)\n\t\t\tconsole.log('${toString ()} setPostion');\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis._isPosition = true;\n\t\tcalculate();\n\t}\n\n\t/**\n\t * use centered point for grid\n\t *\n\t * @param isCentered  (default: true)\n\t */\n\tpublic function setIsCenterPoint(isCentered:Bool = true) {\n\t\tif (_isDebug)\n\t\t\tconsole.log('${toString ()} setCenterPoint');\n\t\tthis.isCentered = isCentered;\n\t\tcalculate();\n\t}\n\n\t/**\n\t * use when want to debug the grid\n\t *\n\t * @param isDebug  (default = true)\n\t */\n\tpublic function setDebug(isDebug:Bool = true){\n\t\tthis._isDebug = isDebug;\n\t\tif (_isDebug)\n\t\t\tconsole.log('${toString ()} setDebug');\n\t}\n\n\t/**\n\t * create a grid that is fullscreen, or bigger\n\t *\n\t * works with \t- cellsize (width/height)\n\t * \t\t\t\t- numVer/numHer\n\t *\n\t * @param isFullscreen\t(optional) default : true\n\t */\n\tpublic function setIsFullscreen(isFullscreen:Bool = true) {\n\t\tif (_isDebug)\n\t\t\tconsole.log('${toString ()} setIsFullscreen');\n\t\tthis.isFullscreen = isFullscreen;\n\t\tcalculate();\n\t}\n\n\t/**\n\t * create a grid based upon width/height\n\t * \t\tx, y, cellWidth, cellHeight is calculated\n\t * @param width\t\ttotal width of grid\n\t * @param height\ttotal height of grid\n\t */\n\tpublic function setDimension(width:Float, height:Float) {\n\t\tif (_isDebug)\n\t\t\tconsole.log('${toString ()} setDimension (width: ${width}, height: ${height})');\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis._isDimension = true;\n\t\tcalculate();\n\t}\n\n\t/**\n\t * create\n\t * @param numHor\tnumber of items horizontal\n\t * @param numVer\tnumber of itmes vertical\n\t */\n\tpublic function setNumbered(numHor:Float, numVer:Float) {\n\t\tif (_isDebug)\n\t\t\tconsole.log('${toString ()} setNumbers (numHor: ${numHor}, numVer: ${numVer})');\n\t\tthis.numHor = numHor;\n\t\tthis.numVer = numVer;\n\t\tthis._isNumbered = true;\n\t\tcalculate();\n\t}\n\n\t/**\n\t * use these values to calculate the grid\n\t * if this is only set, it will x, y, width, height of the grid\n\t *\n\t * center point is LEFT,TOP\n\t *\n\t * @param cellWidth \tfixed grid width\n\t * @param cellHeight \t(optional) fixed grid height (default is equal to cellWidth)\n\t */\n\tpublic function setCellSize(cellWidth:Float, ?cellHeight:Float) {\n\t\tif (cellHeight == null)\n\t\t\tcellHeight = cellWidth;\n\t\tif (_isDebug)\n\t\t\tconsole.log('${toString ()} setCellSize (cellWidth: ${cellWidth}, cellHeight: ${cellHeight})');\n\t\tthis.cellWidth = cellWidth;\n\t\tthis.cellHeight = cellHeight;\n\t\tthis._isCellSize = true;\n\t\tcalculate();\n\t}\n\n\tpublic function reset(){\n\t\tarray = []; // reset array\n\t}\n\n\tfunction calculate() {\n\t\tif (_isDebug)\n\t\t\tconsole.log('${toString ()} calculate()');\n\t\t/**\n\t\t * solution #1:\n\t\t * grid is fixed via `cellWidth` and `cellHeight`\n\t\t * calculate: `x`, `y`, `width`, `height`, `numHor`, `numVer`\n\t\t *\n\t\t * TOP/LEFT centerpoint?\n\t\t */\n\t\tif (_isCellSize && !_isDimension) {\n\t\t\tif (_isDebug)\n\t\t\t\tconsole.info('${toString ()} solution #1: cellSize is set');\n\t\t\tnumHor = Math.floor(w / cellWidth);\n\t\t\tnumVer = Math.floor(h / cellHeight);\n\t\t\twidth = numHor * cellWidth;\n\t\t\theight = numVer * cellHeight;\n\t\t\tx = (w - width) / 2;\n\t\t\ty = (h - height) / 2;\n\t\t}\n\n\t\t/**\n\t\t * solution #2:\n\t\t * use numbered cells (in x-dir and y-dir),\n\t\t * calculate: `x`, `y`, `width`, `height`, `cellWidth`, `cellHeight`\n\t\t */\n\t\tif (_isNumbered && !_isDimension) {\n\t\t\tif (_isDebug)\n\t\t\t\tconsole.info('${toString ()} solution #2: numbered cells set');\n\t\t\tvar _w = (width != null) ? width : w;\n\t\t\tvar _h = (height != null) ? height : h;\n\t\t\t// numHor = Math.floor(_w / cellWidth);\n\t\t\t// numVer = Math.floor(_h / cellHeight);\n\t\t\tcellWidth = _w / numHor;\n\t\t\tcellHeight = _h / numVer;\n\t\t\twidth = numHor * cellWidth;\n\t\t\theight = numVer * cellHeight;\n\t\t\tx = (w - width) / 2;\n\t\t\ty = (h - height) / 2;\n\n\t\t\tconsole.info('cellWidth: $cellWidth, cellHeight: $cellHeight, width: $width, height: $height, x: $x, y: $y');\n\t\t}\n\n\t\t/**\n\t\t * solution #3:\n\t\t * use a grid with set `width` and `height`\n\t\t * calculate: `x`, `y`, `numHor`, `numVer`, `cellWidth`, `cellHeight`\n\t\t */\n\t\tif (_isDimension && !_isNumbered && !_isCellSize) {\n\t\t\tif (_isDebug)\n\t\t\t\tconsole.info('${toString ()} solution #3: width/height set ($width, $height)');\n\n\t\t\t// is not set\n\t\t\tvar _cellWidth = (cellWidth != null) ? cellWidth : 50;\n\t\t\tvar _cellHeight = (cellHeight != null) ? cellHeight : 50;\n\t\t\t// now we can calculate the number of rows/cols\n\t\t\tnumHor = Math.floor(width / _cellWidth);\n\t\t\tnumVer = Math.floor(height / _cellHeight);\n\t\t\t// because we can't have half a row, we need to recalculate the width/heigth\n\t\t\twidth = numHor * _cellWidth;\n\t\t\theight = numVer * _cellHeight;\n\t\t\t// and now the width and height might have changed, so does the cells\n\t\t\tcellWidth = width / numHor;\n\t\t\tcellHeight = height / numVer;\n\t\t\t// centered everything\n\t\t\tx = (w - width) / 2;\n\t\t\ty = (h - height) / 2;\n\t\t}\n\n\t\t/**\n\t\t * solution #3a:\n\t\t * use a grid with set `width`, `height` AND `numHor`, `numVer`\n\t\t * calculate: `x`, `y`, `cellWidth`, `cellHeight`\n\t\t */\n\t\tif (_isDimension && !_isCellSize) {\n\t\t\tif (_isDebug)\n\t\t\t\tconsole.info('${toString ()} solution #3a: width/height set ($width, $height) AND number row/cols ($numHor, $numVer)');\n\n\t\t\t// is not set, calculate\n\t\t\tcellWidth = Math.floor(width / numHor); // make it round numbers\n\t\t\tcellHeight = Math.floor(height / numVer); // make it round numbers\n\t\t\t// because we can't have half a row, we need to recalculate the width/heigth\n\t\t\twidth = numHor * cellWidth;\n\t\t\theight = numVer * cellHeight;\n\t\t\tif(\t!this._isPosition) {\n\t\t\t\t// centered everything\n\t\t\t\tx = (w - width) / 2;\n\t\t\t\ty = (h - height) / 2;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * solution #3b:\n\t\t * use a grid with set `width`, `height` AND `numHor`, `numVer`\n\t\t * calculate: `x`, `y`, `cellWidth`, `cellHeight`\n\t\t */\n\t\tif (_isDimension && _isNumbered && !_isCellSize) {\n\t\t\tif (_isDebug){\n\n\t\t\t\tconsole.info('${toString ()} solution #3b: w/h set ($width, $height) AND number row/cols ($numHor, $numVer)');\n\t\t\t\tconsole.info('${toString ()}  ($w, $h)');\n\t\t\t}\n\n\t\t\t// is not set, calculate\n\t\t\tcellWidth = Math.floor(width / numHor); // make it round numbers\n\t\t\tcellHeight = Math.floor(height / numVer); // make it round numbers\n\t\t\t// because we can't have half a row, we need to recalculate the width/heigth\n\t\t\twidth = numHor * cellWidth;\n\t\t\theight = numVer * cellHeight;\n\t\t\t// if(\t!this._isPosition) {\n\t\t\t// \t// centered everything\n\t\t\t// \tx = (w - width) / 2;\n\t\t\t// \ty = (h - height) / 2;\n\t\t\t// }\n\t\t}\n\n\t\t/**\n\t\t * solution #4:\n\t\t * size of the cell is known, and width and height\n\t\t * calculate: `x`, `y`, `width`, `height`, `cellWidth`, `cellHeight`\n\t\t */\n\t\tif (_isCellSize && _isDimension) {\n\t\t\tif (_isDebug)\n\t\t\t\tconsole.info('${toString ()} solution #4: cellSize is set and width/height');\n\t\t\tnumHor = Math.floor(width / cellWidth);\n\t\t\tnumVer = Math.floor(height / cellHeight);\n\n\t\t\twidth = numHor * cellWidth;\n\t\t\theight = numVer * cellHeight;\n\n\t\t\t// [mck] cellwidth will be leading, so the width and height will be fixed accordingly\n\t\t\tif (!_isPosition) {\n\t\t\t\tx = (w - width) / 2;\n\t\t\t\ty = (h - height) / 2;\n\t\t\t}\n\t\t}\n\n\t\tif(isFullscreen && _isCellSize){\n\t\t\tif (_isDebug)\n\t\t\t\tconsole.info('${toString ()} solution #5: fullscreen and cellSize is set');\n\n\t\t\twidth = w;\n\t\t\theight = h;\n\n\t\t\t// round up\n\t\t\tnumHor = Math.ceil(width / cellWidth);\n\t\t\tnumVer = Math.ceil(height / cellHeight);\n\n\t\t\t// calculate again, based upon numHor/numVer\n\t\t\twidth = numHor * cellWidth;\n\t\t\theight = numVer * cellHeight;\n\n\t\t\tx = (w - width) / 2;\n\t\t\ty = (h - height) / 2;\n\t\t}\n\n\n\t\tvar cx = 0.0;\n\t\tvar cy = 0.0;\n\t\tif (isCentered) {\n\t\t\tcx = cellWidth / 2;\n\t\t\tcy = cellHeight / 2;\n\t\t}\n\n\t\tarray = []; // reset array\n\t\tvar total = Math.round(numHor * numVer);\n\t\tvar xpos = 0;\n\t\tvar ypos = 0;\n\t\tfor (i in 0...total) {\n\t\t\tvar point:Point = {\n\t\t\t\tx: Math.round(x + (xpos * cellWidth) + cx),\n\t\t\t\ty: Math.round(y + (ypos * cellHeight) + cy),\n\t\t\t}\n\t\t\tarray.push(point);\n\t\t\txpos++;\n\t\t\tif (xpos >= numHor) {\n\t\t\t\txpos = 0;\n\t\t\t\typos++;\n\t\t\t}\n\t\t}\n\n\t\ttotal = array.length; // just to have easy access to the array lentth\n\t\tif (_isDebug){\n\t\t\tconsole.groupCollapsed('${toString()} Sata');\n\t\t\tconsole.log('x: $x, y: $y, width: $width, height: $height, cellWidth: $cellWidth, cellHeight: $cellHeight, numHor: $numHor, numVer: $numVer, array: ${array.length}');\n\t\t\tconsole.table(array);\n\t\t\tconsole.groupEnd();\n\t\t}\n\t}\n\n\t/**\n\t * old gridtools, renamed it from GridUtil.create to GridUtil.createGrid\n\t *\n\t * @param x\t\t\tstart position x\n\t * @param y\t\t\tstart postion y\n\t * @param width\t\twidth of grid\n\t * @param height\theight of grid\n\t * @param numHor\tnumber of items horizontal\n\t * @param numVer\tnumber of itmes vertical\n\t */\n\tstatic public function createGrid(x:Float, y:Float, width:Float, height:Float, numHor:Int = 1, numVer:Int = 1):Array<Point> {\n\t\t// trace( x, y, width, height, numHor, numVer);\n\t\tvar gridW = width / (numHor - 1);\n\t\tvar gridH = height / (numVer - 1);\n\t\tvar total = numHor * numVer;\n\t\tvar xpos = 0;\n\t\tvar ypos = 0;\n\t\tvar arr:Array<Point> = [];\n\t\tfor (i in 0...total) {\n\t\t\tvar point:Point = {\n\t\t\t\tx: x + (xpos * gridW),\n\t\t\t\ty: y + (ypos * gridH),\n\t\t\t}\n\t\t\tarr.push(point);\n\t\t\txpos++;\n\t\t\tif (xpos >= numHor) {\n\t\t\t\txpos = 0;\n\t\t\t\typos++;\n\t\t\t}\n\t\t}\n\t\treturn arr;\n\t}\n\n\t/**\n\t *\n\t * @param x\n\t * @param y\n\t * @param width\n\t * @param height\n\t * @param gridX\n\t * @param gridY\n\t * @param numHor\n\t * @param numVer\n\t * @return GridUtil\n\t */\n\tstatic public function calcGrid(?x:Float = -1, ?y:Float = -1, ?width:Float = -1, ?height:Float = -1, ?gridX:Float = 1, ?gridY:Float = 1, ?numHor:Int = 1,\n\t\t\t?numVer:Int = 1):GridUtil {\n\t\tvar grid = new GridUtil();\n\t\tgrid.array = [];\n\t\tgrid.x = 0;\n\t\tgrid.y = 0;\n\t\tgrid.width = 0;\n\t\tgrid.height = 0;\n\t\tgrid.gridX = 0;\n\t\tgrid.gridY = 0;\n\t\treturn grid;\n\t}\n\n\tfunction toString ():String{\n\t\treturn '[GridUtil]';\n\t}\n}\n","package cc.util;\n\nimport js.Browser.*;\n\nclass HelperUtil {\n\tpublic function new() {}\n\n\t/**\n\t * @url \thttps://github.com/mrdoob/stats.js/\n\t *\n\t * @example\t\tli.util..HelperUtil.stats();\n\t */\n\tstatic public function stats() {\n\t\tuntyped __js__(\"var script = document.createElement('script');script.onload = function() {var stats = new Stats();document.body.appendChild(stats.dom);requestAnimationFrame(function loop() {stats.update();requestAnimationFrame(loop)});};script.src = '//mrdoob.github.io/stats.js/build/stats.min.js';document.head.appendChild(script);\");\n\n\t\t/*\n\t\t\tvar script = document.createElement('script');\n\t\t\tscript.onload = function() {\n\t\t\t\tvar stats = new Stats();\n\t\t\t\tdocument.body.appendChild(stats.dom);\n\t\t\t\trequestAnimationFrame(function loop() {\n\t\t\t\t\tstats.update();\n\t\t\t\t\trequestAnimationFrame(loop)\n\t\t\t\t});\n\t\t\t};\n\t\t\tscript.src = '//mrdoob.github.io/stats.js/build/stats.min.js';\n\t\t\tdocument.head.appendChild(script);\n\t\t */\n\t}\n}\n","package cc.util;\n\n/**\n * Math related stuff is found here\n * \t\t- radians & convertions\n * \t\t- degree & convertions\n * \t\t- etc\n *\n * @example\n * ```\n * import cc.util.MathUtil;\n * Mathcc.util.random (10);\n *\n * // or\n *\n * import cc.util.MathUtil.*;\n * random(10); // make it easier to read\n * ```\n *\n */\nclass MathUtil {\n\tstatic public function radians(deg:Float):Float {\n\t\treturn deg * Math.PI / 180;\n\t};\n\n\tstatic public function degrees(rad:Float):Float {\n\t\treturn rad * 180 / Math.PI;\n\t};\n\n\t// public function rotateDegrees(deg) {\n\t// \tthis.rotate(radians(deg));\n\t// }\n\t// public function rotateDeg(deg) {\n\t// \tthis.rotate(radians(deg));\n\t// }\n\tstatic public function degreesToPoint(deg, diameter) {\n\t\tvar rad = Math.PI * deg / 180;\n\t\tvar r = diameter / 2;\n\t\treturn {x: r * Math.cos(rad), y: r * Math.sin(rad)};\n\t}\n\n\tstatic public function distributeAngles(me, total) {\n\t\treturn me / total * 360;\n\t}\n\n\t/**\n\t * calculate distance between two point (x,y)\n\t * @param x1\n\t * @param y1\n\t * @param x2\n\t * @param y2\n\t */\n\tstatic public function distance(x1:Float, y1:Float, x2:Float, y2:Float):Float {\n\t\treturn dist(x1, y1, x2, y2);\n\t}\n\n\tstatic public function dist(x1:Float, y1:Float, x2:Float, y2:Float) {\n\t\tx2 -= x1;\n\t\ty2 -= y1;\n\t\treturn Math.sqrt((x2 * x2) + (y2 * y2));\n\t}\n\n\t/**\n\t * [pythagoreanTheorem description]\n\t *\n\t * @example\n\t * \t\t\ttrace (MathUtil.pythagoreanTheorem(0, 5, 10)); // 8.66025403784439\n\t *\t\t\ttrace (MathUtil.pythagoreanTheorem(8.66025403784439, 5, 0)); // 10\n\t *\t\t\ttrace (MathUtil.pythagoreanTheorem(8.66025403784439, 0, 10)); // 5\n\t *\n\t * @param  a \tside A\n\t * @param  b \tside B\n\t * @param  c \thypotenuse C\n\t */\n\tpublic static function pythagoreanTheorem(a:Float = null, b:Float = null, c:Float = null):Float {\n\t\tif (a == null && b == null && c == null) {\n\t\t\ttrace(\"Really? Perhaps you should use some data\");\n\t\t\treturn 0;\n\t\t}\n\t\tvar value = 0.0;\n\n\t\tif (c == null || c == 0)\n\t\t\tvalue = Math.sqrt(a * a + b * b);\n\t\tif (a == null || a == 0)\n\t\t\tvalue = Math.sqrt(c * c - b * b);\n\t\tif (b == null || b == 0)\n\t\t\tvalue = Math.sqrt(c * c - a * a);\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * calculate the circumference of a circle (omtrek)\n\t * \tOmtrek = pi * diameter = 2 * pi * straal\n\t *\n\t * \t@example\n\t * \t\tMathUtil.circumferenceCircle(10); // 62.83185307179586\n\t *\n\t * @param radius \tradius of circel\n\t * @return Float\tcircumference\n\t */\n\tstatic public function circumferenceCircle(radius:Float):Float {\n\t\treturn Math.PI * radius * 2;\n\t}\n\n\t/**\n\t\tOppervlakte = 1/4 * pi * diameter2 = pi * straal2\n\t\t\t * \t@example\n\t\t\t * \t\tMathUtil.areaCircle(10); // 62.83185307179586\n\t\t\t * @param radius\n\t\t\t * @return Float\n\t */\n\tstatic public function areaCircle(radius:Float):Float {\n\t\treturn Math.PI * Math.sqrt(radius);\n\t}\n\n\t/**\n\t * Get a random number between `min` and `max`\n\t *\n\t * @example\t\tcc.util.MathUtil.randomInteger(10,100); // producess an number between 10 and 100\n\t *\n\t * @param min \tminimum value\n\t * @param max \tmaximum value (optional: if not `max == min` and `min == 0` )\n\t * @return Int\tnumber between `min` and `max`\n\t */\n\tstatic public function randomInteger(min:Int, ?max:Int):Int {\n\t\tif (max == null) {\n\t\t\tmax = min;\n\t\t\tmin = 0;\n\t\t}\n\t\treturn Math.floor(Math.random() * (max + 1 - min)) + min;\n\t}\n\n\tstatic public function randomInt(min, ?max):Int {\n\t\treturn randomInteger(min, max);\n\t}\n\n\t/**\n\t * Get a random number between `min` and `max`\n\t *\n\t * @example\t\tcc.util.MathUtil.random(10,100); // producess an number between 10 and 100\n\t *\n\t * @param min \tminimum value\n\t * @param max \tmaximum value\n\t * @return Float\tnumber between `min` and `max`\n\t */\n\tstatic public function random(?min:Float, ?max:Float):Float {\n\t\tif (min == null) {\n\t\t\tmin = 0;\n\t\t\tmax = 1;\n\t\t} else if (max == null) {\n\t\t\tmax = min;\n\t\t\tmin = 0;\n\t\t}\n\t\treturn (Math.random() * (max - min)) + min;\n\t};\n\n\tstatic public function randomP(?min:Float, ?max:Float) {\n\t\tif (min == null) {\n\t\t\tmin = 0.1;\n\t\t\tmax = 1;\n\t\t} else if (max == null) {\n\t\t\tmax = min;\n\t\t\tmin = 0.1;\n\t\t}\n\t\treturn (Math.random() * (max - min)) + min;\n\t};\n\n\tstatic public function chance(value) {\n\t\treturn (random(value) > value - 1);\n\t}\n\n\t/**\n\t * get value 1 or -1\n\t */\n\tstatic public function posNeg() {\n\t\treturn randomInt(0, 1) * 2 - 1;\n\t}\n\n\t/**\n\t * calculate the angle between two point\n\t * @param cx\t\tcenter point x\n\t * @param cy\t\tcenter point y\n\t * @param ex\t\tend point x\n\t * @param ey\t\tend point y\n\t * @return Float\n\t */\n\tstatic public function angle(cx:Float, cy:Float, ex:Float, ey:Float):Float {\n\t\tvar dy = ey - cy;\n\t\tvar dx = ex - cx;\n\t\tvar theta = Math.atan2(dy, dx); // range (-PI, PI]\n\t\ttheta *= 180 / Math.PI; // rads to degs, range (-180, 180]\n\t\tif (theta < 0)\n\t\t\ttheta = 360 + theta; // range [0, 360);\n\t\tif (theta == 360)\n\t\t\ttheta = 0;\n\t\treturn theta;\n\t}\n\n\tstatic public function map(value, min1, max1, min2, max2, clampResult) {\n\t\tvar returnvalue = ((value - min1) / (max1 - min1) * (max2 - min2)) + min2;\n\t\tif (clampResult)\n\t\t\treturn clamp(returnvalue, min2, max2);\n\t\telse\n\t\t\treturn returnvalue;\n\t};\n\n\t/**\n\t * get an orbit value\n\t * @param xpos center point x\n\t * @param ypos center point y\n\t * @param angle in degree (360)\n\t * @param radius radous of circle\n\t * @return AST.Point\n\t */\n\tstatic public function orbit(xpos:Float, ypos:Float, angle:Float, radius:Float):AST.Point {\n\t\t// plot the balls x to cos and y to sin\n\t\tvar _xpos = xpos + Math.cos(radians(angle)) * radius;\n\t\tvar _ypos = ypos + Math.sin(radians(angle)) * radius;\n\t\treturn {x: _xpos, y: _ypos};\n\t}\n\n\t/**\n\t * Randomly shuffle an array\n\t * https://stackoverflow.com/a/2450976/1293256\n\t * @param  {Array} array The array to shuffle\n\t * @return {String}      The first item in the shuffled array\n\t */\n\tstatic public function shuffle(array:Array<Dynamic>):Array<Dynamic> {\n\t\tvar currentIndex = array.length;\n\t\tvar temporaryValue, randomIndex;\n\n\t\t// While there remain elements to shuffle...\n\t\twhile (0 != currentIndex) {\n\t\t\t// Pick a remaining element...\n\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\t\tcurrentIndex -= 1;\n\n\t\t\t// And swap it with the current element.\n\t\t\ttemporaryValue = array[currentIndex];\n\t\t\tarray[currentIndex] = array[randomIndex];\n\t\t\tarray[randomIndex] = temporaryValue;\n\t\t}\n\n\t\treturn array;\n\t};\n\n\t/**\n\t * sent a value, and check if it is in the correct range\n\t *\n\t * @example\n\t * \t MathUtil.clamp(Math.round(r), 0, 255) // a value r should be between 0 and 255\n\t *\n\t * @param value\t\tvalue to check\n\t * @param min\t\tminimum value\n\t * @param max\t\tmaximum value\n\t */\n\tstatic public function clamp(value, min, max) {\n\t\treturn Math.min(Math.max(value, Math.min(min, max)), Math.max(min, max));\n\t}\n\t/**\n\t\tfunction xyz(px, py, pz, pitch, roll, yaw) {\n\n\t\tvar cosa = Math.cos(yaw);\n\t\tvar sina = Math.sin(yaw);\n\n\t\tvar cosb = Math.cos(pitch);\n\t\tvar sinb = Math.sin(pitch);\n\n\t\tvar cosc = Math.cos(roll);\n\t\tvar sinc = Math.sin(roll);\n\n\t\tvar Axx = cosa*cosb;\n\t\tvar Axy = cosa*sinb*sinc - sina*cosc;\n\t\tvar Axz = cosa*sinb*cosc + sina*sinc;\n\n\t\tvar Ayx = sina*cosb;\n\t\tvar Ayy = sina*sinb*sinc + cosa*cosc;\n\t\tvar Ayz = sina*sinb*cosc - cosa*sinc;\n\n\t\tvar Azx = -sinb;\n\t\tvar Azy = cosb*sinc;\n\t\tvar Azz = cosb*cosc;\n\n\t\tx = Axx*px + Axy*py + Axz*pz;\n\t\ty = Ayx*px + Ayy*py + Ayz*pz;\n\t\tz = Azx*px + Azy*py + Azz*pz;\n\n\t\treturn {x:x, y:y, z:z};\n\t\t}\n\t */\n}\n","package cc.util;\n\nimport js.html.CanvasRenderingContext2D;\n// import cc.Global.*;\nimport cc.util.ColorUtil.*;\nimport cc.AST;\n\n// syntactic sugar to extend CanvasRenderingContext2D\nusing cc.CanvasTools;\n\n/**\n * predefined shapes that are every useful\n * @example:\n * \t\tusing cc.CanvasTools;\n */\nclass ShapeUtil {\n\t/**\n\t * [Description]\n\t * @param ctx\n\t * @param x\n\t * @param y\n\t * @param width\n\t * @param height\n\t */\n\tstatic public function cross(ctx:CanvasRenderingContext2D, x:Float, y:Float, ?width:Float = 20, ?height:Float = 60) {\n\t\tctx.colour(PINK.r, PINK.g, PINK.b, 1);\n\t\tctx.fillRect(x - width / 2, y - height / 2, width, height);\n\t\tctx.fillRect(x - height / 2, y - width / 2, height, width);\n\t}\n\n\tstatic public function registerPoint(ctx:CanvasRenderingContext2D, x:Float, y:Float) {\n\t\tvar _w = 10;\n\t\tvar _h = 10;\n\t\tvar _d = 2;\n\t\tctx.colour(PINK.r, PINK.g, PINK.b, 1);\n\t\tctx.fillRect(x - _w / 2, y - (_d / 2), _w, _d);\n\t\tctx.fillRect(x - (_d / 2), y - _h / 2, _d, _h);\n\t\t// ctx.fillCircle(x,y,10);\n\n\t\t// trace('xxx');\n\t}\n\n\t/**\n\t * centered x-shape\n\t *\n\t * @example\n\t * \t\tctx.xcross(w/2, h/2, 100, 20);\n\t *\n\t * @param ctx\n\t * @param x\t\t\tx pos, center of x-shape\n\t * @param y\t\t\ty pos, center of x-shape\n\t * @param size\t\t(optional) size shape, default:200\n\t * @param weight\t(optional) stroke weight, default:100\n\t */\n\tpublic static function xcross(ctx:CanvasRenderingContext2D, x:Float, y:Float, ?size:Float = 200, ?weight:Int = 100) {\n\t\tctx.strokeWeight(weight);\n\t\tctx.line(x - size / 2, y - size / 2, x - size / 2 + size, y - size / 2 + size);\n\t\tctx.line(x + size - size / 2, y - size / 2, x - size / 2, y + size - size / 2);\n\t}\n\n\t/**\n\t * use with de data of GridUtil\n\t * @example\n\t * \t\t\tvar arr:Array<Point> = GridUtil.create(0, 0, w, h, 3, 4);\n\t * \t\t\tcc.util.ShapeUtil.gridRegister(ctx, arr);\n\t */\n\tpublic static function gridRegister(ctx:CanvasRenderingContext2D, arr:Array<Point>) {\n\t\tfor (i in 0...arr.length) {\n\t\t\tvar point:Point = arr[i];\n\t\t\tregisterPoint(ctx, point.x, point.y);\n\t\t}\n\t}\n\tpublic static function gridRegisters(ctx:CanvasRenderingContext2D, grid:GridUtil) {\n\t\tfor (i in 0...grid.array.length) {\n\t\t\tvar point:Point = grid.array[i];\n\t\t\tcross(ctx, point.x, point.y, 5, 20);\n\t\t}\n\t}\n\n\t/**\n\t * use with de data of GridUtil\n\t * create registration point with a border of grid\n\t * @example\n\t * \t\t\tvar grid = ...\n\t * \t\t\tcc.util.ShapeUtil.gridField(ctx, grid);\n\t */\n\tpublic static function gridField(ctx:CanvasRenderingContext2D, grid:GridUtil) {\n\t\tfor (i in 0...grid.array.length) {\n\t\t\tvar point:Point = grid.array[i];\n\t\t\tregisterPoint(ctx, point.x, point.y);\n\t\t}\n\t\tctx.lineWidth = 1;\n\t\tctx.lineColour(GRAY.r, GRAY.g, GRAY.b, 0.5);\n\t\tctx.strokeRect(grid.x, grid.y, grid.width, grid.height);\n\t}\n\n\t/**\n\t * use with de data of GridUtil\n\t * create dot point with a border of grid\n\t * @example\n\t * \t\t\tvar grid = ...\n\t * \t\t\tcc.util.ShapeUtil.gridDots(ctx, grid);\n\t */\n\tpublic static function gridDots(ctx:CanvasRenderingContext2D, grid:GridUtil) {\n\t\tfor (i in 0...grid.array.length) {\n\t\t\tvar point:Point = grid.array[i];\n\t\t\tctx.colour(PINK.r, PINK.g, PINK.b, 1);\n\t\t\tctx.circle(point.x, point.y, 1);\n\t\t}\n\t\tctx.lineWidth = 1;\n\t\tctx.lineColour(GRAY.r, GRAY.g, GRAY.b, 0.5);\n\t\tctx.strokeRect(grid.x, grid.y, grid.width, grid.height);\n\t}\n}\n","package cc.util;\n\nimport js.html.CanvasRenderingContext2D;\nimport cc.util.MathUtil;\nimport cc.util.MathUtil.*;\n\nclass TextUtil {\n\tpublic function new() {\n\t\t// your code\n\t}\n\n\t/**\n\t *\n\t * calculate the with of the characters, and create an array of words\n\t *\n\t * Note:\n\t * \t- important to have a example text in the canvas, otherwise the measurement don't work\n\t * \t- important to have the font loaded\n\t *\n\t * @source\t https://stackoverflow.com/questions/2936112/text-wrap-in-a-canvas-element\n\t *\n\t * @param ctx\n\t * @param text\n\t * @param maxWidth\n\t */\n\tpublic static function getLines(ctx:CanvasRenderingContext2D, text:String, maxWidth:Float):Array<String> {\n\t\t// trace('$text, $maxWidth');\n\t\tvar words:Array<String> = text.split(\" \");\n\t\tvar lines:Array<String> = [];\n\t\tvar currentLine = words[0];\n\n\t\tfor (i in 1...words.length) {\n\t\t\t// for (var i = 1; i < words.length; i++) {\n\t\t\tvar word = words[i];\n\t\t\tvar width = ctx.measureText(currentLine + \" \" + word).width;\n\t\t\tif (width < maxWidth) {\n\t\t\t\tcurrentLine += \" \" + word;\n\t\t\t} else {\n\t\t\t\tlines.push(currentLine);\n\t\t\t\tcurrentLine = word;\n\t\t\t}\n\t\t}\n\t\tlines.push(currentLine);\n\t\treturn lines;\n\t}\n\n\t/**\n\t\t*\n\t\t* ctx.textAlign = \"center\";\n\t\t* ctx.textBaseline = \"bottom\";\n\t\t* ctx.font = '20px Source Code Pro';\n\t\t* TextUtil.drawTextAlongArc(ctx, \"Hier moet iets staan dat de moeite waard is\", centerX, centerY, radius, angle);\n\n\t\t* @param ctx\n\t\t* @param str\n\t\t* @param centerX\n\t\t* @param centerY\n\t\t* @param radius\n\t\t* @param angle\n\t */\n\tstatic public function drawTextAlongArc(ctx:CanvasRenderingContext2D, str:String, centerX:Float, centerY:Float, radius:Int, angle:Float) {\n\t\tvar charArr = str.split('');\n\n\t\tctx.save();\n\t\tctx.translate(centerX, centerY);\n\t\tctx.rotate(-1 * angle / 2);\n\t\tctx.rotate(-1 * (angle / charArr.length) / 2);\n\n\t\t// for (var n = 0; n < str.length; n++) {\n\t\tfor (i in 0...charArr.length) {\n\t\t\tvar _char = charArr[i];\n\t\t\tctx.rotate(angle / charArr.length);\n\t\t\tctx.save();\n\t\t\tctx.translate(0, -1 * radius);\n\t\t\tctx.fillText(_char, 0, 0);\n\t\t\tctx.restore();\n\t\t}\n\t\tctx.restore();\n\t}\n\n\tstatic public function drawTextAlongArc4(ctx:CanvasRenderingContext2D, str:String, centerX:Float, centerY:Float, radius:Float, ?startDegree:Int = -90) {\n\t\t// monotype\n\t\tvar monoW = ctx.measureText(\" \").width;\n\t\t// chars\n\t\tvar charArr = str.split('');\n\t\tctx.save();\n\t\tvar angle = 0.0;\n\t\tfor (i in 0...charArr.length) {\n\t\t\tradius -= (0.15 + (i * 0.0005));\n\t\t\tvar a = monoW;\n\t\t\tvar b = radius;\n\t\t\tvar c = radius;\n\t\t\tvar cosa = (Math.pow(b, 2) + Math.pow(c, 2) - Math.pow(a, 2)) / (2 * b * c);\n\t\t\tvar pAngle = degrees(Math.acos(cosa));\n\t\t\tvar _char = charArr[i];\n\t\t\tangle = startDegree + (i * (pAngle));\n\t\t\tvar xpos = centerX + Math.cos(radians(angle)) * radius;\n\t\t\tvar ypos = centerY + Math.sin(radians(angle)) * radius;\n\n\t\t\t// radius: 200 / angle: 3.95\n\t\t\t// radius: 300 / angle: 2.45\n\t\t\t// trace('char: $_char, xpos: $xpos, ypos: $ypos, angle: $angle, ${radians(angle)}');\n\n\t\t\tctx.save();\n\t\t\tctx.translate(xpos, ypos);\n\t\t\tctx.rotate(radians(angle + 90));\n\t\t\t// ctx.translate(0, -1 * radius);\n\t\t\tctx.fillText(_char, 0, 0);\n\t\t\tctx.restore();\n\t\t}\n\t\tctx.restore();\n\t}\n\n\tstatic public function drawTextAlongArc3(ctx:CanvasRenderingContext2D, str:String, centerX:Float, centerY:Float, radius:Int) {\n\t\tvar charArr = str.split('');\n\n\t\tctx.save();\n\t\t// ctx.translate(centerX, centerY);\n\t\t// ctx.rotate(-1 * angle / 2);\n\t\t// ctx.rotate(-1 * (angle / charArr.length) / 2);\n\n\t\t// sh.angle += sh.speed;\n\n\t\tvar angle = 0;\n\t\t// for (var n = 0; n < str.length; n++) {\n\t\tfor (i in 0...charArr.length) {\n\t\t\tvar _char = charArr[i];\n\t\t\tangle = i;\n\n\t\t\t// plot the balls x to cos and y to sin\n\t\t\tvar xpos = centerX + Math.cos(radians(angle)) * radius;\n\t\t\tvar ypos = centerY + Math.sin(radians(angle)) * radius;\n\t\t\ttrace(_char, i, xpos, ypos);\n\t\t\tctx.translate(xpos, ypos);\n\t\t\tctx.rotate(angle / charArr.length);\n\t\t\t// ctx.save();\n\t\t\t// ctx.translate(0, -1 * radius);\n\t\t\tctx.fillText(_char, 0, 0);\n\t\t\tctx.restore();\n\t\t}\n\t\tctx.restore();\n\t}\n\n\tstatic public function drawTextAlongArc2(ctx:CanvasRenderingContext2D, str:String, centerX:Float, centerY:Float, radius:Int) {\n\t\tvar charArr = str.split('');\n\n\t\t// monotype\n\t\tvar width = ctx.measureText(\" \").width;\n\t\t// trace(width); // 12px\n\n\t\t// trace(ctx.measureText(\"1\").width);\n\t\t// trace(ctx.measureText(\"x\").width);\n\t\t// trace(ctx.measureText(\"w\").width);\n\t\t// trace(ctx.measureText(\" \").width);\n\t\t// calculate some characters size to have an idea what the spacing is.§\n\n\t\tctx.save();\n\t\tctx.translate(centerX, centerY);\n\n\t\t// var _angle = 0.1;\n\n\t\tvar _angle = 1.0;\n\n\t\t// for (var n = 0; n < str.length; n++) {\n\t\tfor (i in 0...charArr.length) {\n\t\t\tvar _char = charArr[i];\n\n\t\t\t// trace(i);\n\t\t\tvar _rotation = MathUtil.radians(_angle);\n\t\t\tctx.rotate(_angle * Math.PI / 360);\n\t\t\t// ctx.rotate(_rotation);\n\n\t\t\ttrace('$i // _char = ${_char} : _angle: ${_angle} - _rotation: ${_rotation}');\n\t\t\t// ctx.rotate(MathUtil.radians(_angle * i));\n\t\t\t// ctx.rotate(MathUtil.radians(i + 1));\n\t\t\tctx.save();\n\t\t\tctx.translate(0, -1 * radius);\n\t\t\tctx.fillText(_char, 0, 0);\n\t\t\tctx.restore();\n\n\t\t\t_angle += 0.5;\n\t\t}\n\t\tctx.restore();\n\t}\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n#if sys\n\nimport sys.net.Host;\nimport sys.net.Socket;\n\n#end\n\n/**\n\tThis class can be used to handle Http requests consistently across\n\tplatforms. There are two intended usages:\n\n\t- call `haxe.Http.requestUrl(url)` and receive the result as a `String`\n\t(not available on flash)\n\t- create a `new haxe.Http(url)`, register your callbacks for `onData`, \n\t`onError` and `onStatus`, then call `request()`.\n**/\nclass Http {\n\n\t/**\n\t\tThe url of `this` request. It is used only by the `request()` method and\n\t\tcan be changed in order to send the same request to different target\n\t\tUrls.\n\t**/\n\tpublic var url : String;\n\tpublic var responseData(default, null) : Null<String>;\n#if sys\n\tpublic var noShutdown : Bool;\n\tpublic var cnxTimeout : Float;\n\tpublic var responseHeaders : Map<String,String>;\n\tvar chunk_size : Null<Int>;\n\tvar chunk_buf : haxe.io.Bytes;\n\tvar file : { param : String, filename : String, io : haxe.io.Input, size : Int, mimeType : String };\n#elseif (js && !nodejs)\n\tpublic var async : Bool;\n\tpublic var withCredentials : Bool;\n#end\n\tvar postData : String;\n\tvar headers : List<{ header:String, value:String }>;\n\tvar params : List<{ param:String, value:String }>;\n\n\t#if sys\n\tpublic static var PROXY : { host : String, port : Int, auth : { user : String, pass : String } } = null;\n\t#end\n\n\t/**\n\t\tCreates a new Http instance with `url` as parameter.\n\n\t\tThis does not do a request until `request()` is called.\n\n\t\tIf `url` is null, the field url must be set to a value before making the\n\t\tcall to `request()`, or the result is unspecified.\n\n\t\t(Php) Https (SSL) connections are allowed only if the OpenSSL extension\n\t\tis enabled.\n\t**/\n\tpublic function new( url : String ) {\n\t\tthis.url = url;\n\t\theaders = new List<{ header:String, value:String }>();\n\t\tparams = new List<{ param:String, value:String }>();\n\n\t\t#if (js && !nodejs)\n\t\tasync = true;\n\t\twithCredentials = false;\n\t\t#elseif sys\n\t\tcnxTimeout = 10;\n\t\t#end\n\t\t#if php\n\t\tnoShutdown = ! untyped __call__('function_exists', 'stream_socket_shutdown');\n\t\t#end\n\t}\n\n\t/**\n\t\tSets the header identified as `header` to value `value`.\n\n\t\tIf `header` or `value` are null, the result is unspecified.\n\n\t\tThis method provides a fluent interface.\n\t**/\n\tpublic function setHeader( header : String, value : String ):Http {\n\t\theaders = Lambda.filter(headers, function(h) return h.header != header);\n\t\theaders.push({ header:header, value:value });\n\t\treturn this;\n\t}\n\n\tpublic function addHeader( header : String, value : String ):Http {\n\t\theaders.push({ header:header, value:value });\n\t\treturn this;\n\t}\n\n\t/**\n\t\tSets the parameter identified as `param` to value `value`.\n\n\t\tIf `header` or `value` are null, the result is unspecified.\n\n\t\tThis method provides a fluent interface.\n\t**/\n\tpublic function setParameter( param : String, value : String ):Http {\n\t\tparams = Lambda.filter(params, function(p) return p.param != param);\n\t\tparams.push({ param:param, value:value });\n\t\treturn this;\n\t}\n\n\tpublic function addParameter( param : String, value : String ):Http {\n\t\tparams.push({ param:param, value:value });\n\t\treturn this;\n\t}\n\n\t/**\n\t\tSets the post data of `this` Http request to `data`.\n\n\t\tThere can only be one post data per request. Subsequent calls overwrite\n\t\tthe previously set value.\n\n\t\tIf `data` is null, the post data is considered to be absent.\n\n\t\tThis method provides a fluent interface.\n\t**/\n\tpublic function setPostData( data : String ):Http {\n\t\tpostData = data;\n\t\treturn this;\n\t}\n\n\t#if (js || flash)\n\n\t#if nodejs\n\tvar req:js.node.http.ClientRequest;\n\t#elseif js\n\tvar req:js.html.XMLHttpRequest;\n\t#elseif flash\n\tvar req:flash.net.URLLoader;\n\t#end\n\n\t/**\n\t\tCancels `this` Http request if `request` has been called and a response\n\t\thas not yet been received.\n\t**/\n\tpublic function cancel()\n\t{\n\t\tif (req == null) return;\n\t\t#if js\n\t\treq.abort();\n\t\t#elseif flash\n\t\treq.close();\n\t\t#end\n\t\treq = null;\n\t}\n\t#end\n\n\t/**\n\t\tSends `this` Http request to the Url specified by `this.url`.\n\n\t\tIf `post` is true, the request is sent as POST request, otherwise it is\n\t\tsent as GET request.\n\n\t\tDepending on the outcome of the request, this method calls the\n\t\t`onStatus()`, `onError()` or `onData()` callback functions.\n\n\t\tIf `this.url` is null, the result is unspecified.\n\n\t\tIf `this.url` is an invalid or inaccessible Url, the `onError()` callback\n\t\tfunction is called.\n\n\t\t[js] If `this.async` is false, the callback functions are called before\n\t\tthis method returns.\n\t**/\n\tpublic function request( ?post : Bool ) : Void {\n\t\tvar me = this;\n\t#if nodejs\n\t\tme.responseData = null;\n\t\tvar parsedUrl = js.node.Url.parse(url);\n\t\tvar secure = (parsedUrl.protocol == \"https:\");\n\t\tvar host = parsedUrl.hostname;\n\t\tvar path = parsedUrl.path;\n\t\tvar port = if (parsedUrl.port != null) Std.parseInt(parsedUrl.port) else (secure ? 443 : 80);\n\t\tvar h:Dynamic = {};\n\t\tfor (i in headers) {\n\t\t\tvar arr = Reflect.field(h, i.header);\n\t\t\tif (arr == null) {\n\t\t\t\tarr = new Array<String>();\n\t\t\t\tReflect.setField(h, i.header, arr);\n\t\t\t}\n\t\t\t\n\t\t\tarr.push(i.value);\n\t\t}\n\t\tvar uri = postData;\n\t\tif( uri != null )\n\t\t\tpost = true;\n\t\telse for( p in params ) {\n\t\t\tif( uri == null )\n\t\t\t\turi = \"\";\n\t\t\telse\n\t\t\t\turi += \"&\";\n\t\t\turi += StringTools.urlEncode(p.param)+\"=\"+StringTools.urlEncode(p.value);\n\t\t}\n\t\tvar question = path.split(\"?\").length <= 1;\n\t\tif (!post && uri != null) path += (if( question ) \"?\" else \"&\") + uri;\n\t\t\n\t\tvar opts = {\n\t\t\tprotocol: parsedUrl.protocol,\n\t\t\thostname: host,\n\t\t\tport: port,\n\t\t\tmethod: post ? 'POST' : 'GET',\n\t\t\tpath: path,\n\t\t\theaders: h\n\t\t};\n\t\tfunction httpResponse (res) {\n\t\t\tvar s = res.statusCode;\n\t\t\tif (s != null)\n\t\t\t\tme.onStatus(s);\n\t\t\tvar body = '';\n\t\t\tres.on('data', function (d) {\n\t\t\t\tbody += d;\n\t\t\t});\n\t\t\tres.on('end', function (_) {\n\t\t\t\tme.responseData = body;\n\t\t\t\tme.req = null;\n\t\t\t\tif (s != null && s >= 200 && s < 400) {\n\t\t\t\t\tme.onData(body);\n\t\t\t\t} else {\n\t\t\t\t\tme.onError(\"Http Error #\"+s);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treq = secure ? js.node.Https.request(untyped opts, httpResponse) : js.node.Http.request(untyped opts, httpResponse);\n\t\tif (post) req.write(uri);\n\t\treq.end();\n\t#elseif js\n\t\tme.responseData = null;\n\t\tvar r = req = js.Browser.createXMLHttpRequest();\n\t\tvar onreadystatechange = function(_) {\n\t\t\tif( r.readyState != 4 )\n\t\t\t\treturn;\n\t\t\tvar s = try r.status catch( e : Dynamic ) null;\n\t\t\tif ( s != null && untyped __js__('\"undefined\" !== typeof window') ) {\n\t\t\t\t// If the request is local and we have data: assume a success (jQuery approach):\n\t\t\t\tvar protocol = js.Browser.location.protocol.toLowerCase();\n\t\t\t\tvar rlocalProtocol = ~/^(?:about|app|app-storage|.+-extension|file|res|widget):$/;\n\t\t\t\tvar isLocal = rlocalProtocol.match( protocol );\n\t\t\t\tif ( isLocal ) {\n\t\t\t\t\ts = r.responseText != null ? 200 : 404;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( s == untyped __js__(\"undefined\") )\n\t\t\t\ts = null;\n\t\t\tif( s != null )\n\t\t\t\tme.onStatus(s);\n\t\t\tif( s != null && s >= 200 && s < 400 ) {\n\t\t\t\tme.req = null;\n\t\t\t\tme.onData(me.responseData = r.responseText);\n\t\t\t}\n\t\t\telse if ( s == null ) {\n\t\t\t\tme.req = null;\n\t\t\t\tme.onError(\"Failed to connect or resolve host\");\n\t\t\t}\n\t\t\telse switch( s ) {\n\t\t\tcase 12029:\n\t\t\t\tme.req = null;\n\t\t\t\tme.onError(\"Failed to connect to host\");\n\t\t\tcase 12007:\n\t\t\t\tme.req = null;\n\t\t\t\tme.onError(\"Unknown host\");\n\t\t\tdefault:\n\t\t\t\tme.req = null;\n\t\t\t\tme.responseData = r.responseText;\n\t\t\t\tme.onError(\"Http Error #\"+r.status);\n\t\t\t}\n\t\t};\n\t\tif( async )\n\t\t\tr.onreadystatechange = onreadystatechange;\n\t\tvar uri = postData;\n\t\tif( uri != null )\n\t\t\tpost = true;\n\t\telse for( p in params ) {\n\t\t\tif( uri == null )\n\t\t\t\turi = \"\";\n\t\t\telse\n\t\t\t\turi += \"&\";\n\t\t\turi += StringTools.urlEncode(p.param)+\"=\"+StringTools.urlEncode(p.value);\n\t\t}\n\t\ttry {\n\t\t\tif( post )\n\t\t\t\tr.open(\"POST\",url,async);\n\t\t\telse if( uri != null ) {\n\t\t\t\tvar question = url.split(\"?\").length <= 1;\n\t\t\t\tr.open(\"GET\",url+(if( question ) \"?\" else \"&\")+uri,async);\n\t\t\t\turi = null;\n\t\t\t} else\n\t\t\t\tr.open(\"GET\",url,async);\n\t\t} catch( e : Dynamic ) {\n\t\t\tme.req = null;\n\t\t\tonError(e.toString());\n\t\t\treturn;\n\t\t}\n\t\tr.withCredentials = withCredentials;\n\t\tif( !Lambda.exists(headers, function(h) return h.header == \"Content-Type\") && post && postData == null )\n\t\t\tr.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded\");\n\n\t\tfor( h in headers )\n\t\t\tr.setRequestHeader(h.header,h.value);\n\t\tr.send(uri);\n\t\tif( !async )\n\t\t\tonreadystatechange(null);\n\t#elseif flash\n\t\tme.responseData = null;\n\t\tvar loader = req = new flash.net.URLLoader();\n\t\tloader.addEventListener( \"complete\", function(e) {\n\t\t\tme.req = null;\n\t\t\tme.responseData = loader.data;\n\t\t\tme.onData( loader.data );\n\t\t});\n\t\tloader.addEventListener( \"httpStatus\", function(e:flash.events.HTTPStatusEvent){\n\t\t\t// on Firefox 1.5, Flash calls onHTTPStatus with 0 (!??)\n\t\t\tif( e.status != 0 )\n\t\t\t\tme.onStatus( e.status );\n\t\t});\n\t\tloader.addEventListener( \"ioError\", function(e:flash.events.IOErrorEvent){\n\t\t\tme.req = null;\n\t\t\tme.responseData = loader.data;\n\t\t\tme.onError(e.text);\n\t\t});\n\t\tloader.addEventListener( \"securityError\", function(e:flash.events.SecurityErrorEvent){\n\t\t\tme.req = null;\n\t\t\tme.onError(e.text);\n\t\t});\n\n\t\t// headers\n\t\tvar param = false;\n\t\tvar vars = new flash.net.URLVariables();\n\t\tfor( p in params ){\n\t\t\tparam = true;\n\t\t\tReflect.setField(vars,p.param,p.value);\n\t\t}\n\t\tvar small_url = url;\n\t\tif( param && !post ){\n\t\t\tvar k = url.split(\"?\");\n\t\t\tif( k.length > 1 ) {\n\t\t\t\tsmall_url = k.shift();\n\t\t\t\tvars.decode(k.join(\"?\"));\n\t\t\t}\n\t\t}\n\t\t// Bug in flash player 9 ???\n\t\tvar bug = small_url.split(\"xxx\");\n\n\t\tvar request = new flash.net.URLRequest( small_url );\n\t\tfor( h in headers )\n\t\t\trequest.requestHeaders.push( new flash.net.URLRequestHeader(h.header,h.value) );\n\n\t\tif( postData != null ) {\n\t\t\trequest.data = postData;\n\t\t\trequest.method = \"POST\";\n\t\t} else {\n\t\t\trequest.data = vars;\n\t\t\trequest.method = if( post ) \"POST\" else \"GET\";\n\t\t}\n\n\t\ttry {\n\t\t\tloader.load( request );\n\t\t}catch( e : Dynamic ){\n\t\t\tme.req = null;\n\t\t\tonError(\"Exception: \"+Std.string(e));\n\t\t}\n\t#elseif sys\n\t\tvar me = this;\n\t\tvar output = new haxe.io.BytesOutput();\n\t\tvar old = onError;\n\t\tvar err = false;\n\t\tonError = function(e) {\n\t\t\t#if neko\n\t\t\tme.responseData = neko.Lib.stringReference(output.getBytes());\n\t\t\t#else\n\t\t\tme.responseData = output.getBytes().toString();\n\t\t\t#end\n\t\t\terr = true;\n\t\t\t// Resetting back onError before calling it allows for a second \"retry\" request to be sent without onError being wrapped twice\n\t\t\tonError = old;\n\t\t\tonError(e);\n\t\t}\n\t\tcustomRequest(post,output);\n\t\tif( !err )\n\t\t#if neko\n\t\t\tme.onData(me.responseData = neko.Lib.stringReference(output.getBytes()));\n\t\t#else\n\t\t\tme.onData(me.responseData = output.getBytes().toString());\n\t\t#end\n\t#end\n\t}\n\n#if sys\n\n\t/**\n      Note: Deprecated in 4.0\n\t **/\n\t@:noCompletion\n\tinline public function fileTransfert( argname : String, filename : String, file : haxe.io.Input, size : Int, mimeType = \"application/octet-stream\" ) {\n\t    fileTransfer(argname, filename, file, size, mimeType);\n    }\n\n\tpublic function fileTransfer( argname : String, filename : String, file : haxe.io.Input, size : Int, mimeType = \"application/octet-stream\" ) {\n\t\tthis.file = { param : argname, filename : filename, io : file, size : size, mimeType : mimeType };\n\t}\n\n\tpublic function customRequest( post : Bool, api : haxe.io.Output, ?sock : sys.net.Socket, ?method : String  ) {\n\t\tthis.responseData = null;\n\t\tvar url_regexp = ~/^(https?:\\/\\/)?([a-zA-Z\\.0-9_-]+)(:[0-9]+)?(.*)$/;\n\t\tif( !url_regexp.match(url) ) {\n\t\t\tonError(\"Invalid URL\");\n\t\t\treturn;\n\t\t}\n\t\tvar secure = (url_regexp.matched(1) == \"https://\");\n\t\tif( sock == null ) {\n\t\t\tif( secure ) {\n\t\t\t\t#if php\n\t\t\t\tsock = new php.net.SslSocket();\n\t\t\t\t#elseif java\n\t\t\t\tsock = new java.net.SslSocket();\n\t\t\t\t#elseif (!no_ssl && (hxssl || hl || cpp || (neko && !(macro || interp))))\n\t\t\t\tsock = new sys.ssl.Socket();\n\t\t\t\t#else\n\t\t\t\tthrow \"Https is only supported with -lib hxssl\";\n\t\t\t\t#end\n\t\t\t} else\n\t\t\t\tsock = new Socket();\n\t\t}\n\t\tvar host = url_regexp.matched(2);\n\t\tvar portString = url_regexp.matched(3);\n\t\tvar request = url_regexp.matched(4);\n\t\tif( request == \"\" )\n\t\t\trequest = \"/\";\n\t\tvar port = if ( portString == null || portString == \"\" ) secure ? 443 : 80 else Std.parseInt(portString.substr(1, portString.length - 1));\n\t\tvar data;\n\n\t\tvar multipart = (file != null);\n\t\tvar boundary = null;\n\t\tvar uri = null;\n\t\tif( multipart ) {\n\t\t\tpost = true;\n\t\t\tboundary = Std.string(Std.random(1000))+Std.string(Std.random(1000))+Std.string(Std.random(1000))+Std.string(Std.random(1000));\n\t\t\twhile( boundary.length < 38 )\n\t\t\t\tboundary = \"-\" + boundary;\n\t\t\tvar b = new StringBuf();\n\t\t\tfor( p in params ) {\n\t\t\t\tb.add(\"--\");\n\t\t\t\tb.add(boundary);\n\t\t\t\tb.add(\"\\r\\n\");\n\t\t\t\tb.add('Content-Disposition: form-data; name=\"');\n\t\t\t\tb.add(p.param);\n\t\t\t\tb.add('\"');\n\t\t\t\tb.add(\"\\r\\n\");\n\t\t\t\tb.add(\"\\r\\n\");\n\t\t\t\tb.add(p.value);\n\t\t\t\tb.add(\"\\r\\n\");\n\t\t\t}\n\t\t\tb.add(\"--\");\n\t\t\tb.add(boundary);\n\t\t\tb.add(\"\\r\\n\");\n\t\t\tb.add('Content-Disposition: form-data; name=\"');\n\t\t\tb.add(file.param);\n\t\t\tb.add('\"; filename=\"');\n\t\t\tb.add(file.filename);\n\t\t\tb.add('\"');\n\t\t\tb.add(\"\\r\\n\");\n\t\t\tb.add(\"Content-Type: \"+file.mimeType+\"\\r\\n\"+\"\\r\\n\");\n\t\t\turi = b.toString();\n\t\t} else {\n\t\t\tfor( p in params ) {\n\t\t\t\tif( uri == null )\n\t\t\t\t\turi = \"\";\n\t\t\t\telse\n\t\t\t\t\turi += \"&\";\n\t\t\t\turi += StringTools.urlEncode(p.param)+\"=\"+StringTools.urlEncode(p.value);\n\t\t\t}\n\t\t}\n\n\t\tvar b = new StringBuf();\n\t\tif( method != null ) {\n\t\t\tb.add(method);\n\t\t\tb.add(\" \");\n\t\t} else if( post )\n\t\t\tb.add(\"POST \");\n\t\telse\n\t\t\tb.add(\"GET \");\n\n\t\tif( Http.PROXY != null ) {\n\t\t\tb.add(\"http://\");\n\t\t\tb.add(host);\n\t\t\tif( port != 80 ) {\n\t\t\t\tb.add(\":\");\n\t\t\t\tb.add(port);\n\t\t\t}\n\t\t}\n\t\tb.add(request);\n\n\t\tif( !post && uri != null ) {\n\t\t\tif( request.indexOf(\"?\",0) >= 0 )\n\t\t\t\tb.add(\"&\");\n\t\t\telse\n\t\t\t\tb.add(\"?\");\n\t\t\tb.add(uri);\n\t\t}\n\t\tb.add(\" HTTP/1.1\\r\\nHost: \"+host+\"\\r\\n\");\n\t\tif( postData != null )\n\t\t\tb.add(\"Content-Length: \"+postData.length+\"\\r\\n\");\n\t\telse if( post && uri != null ) {\n\t\t\tif( multipart || !Lambda.exists(headers, function(h) return h.header == \"Content-Type\") ) {\n\t\t\t\tb.add(\"Content-Type: \");\n\t\t\t\tif( multipart ) {\n\t\t\t\t\tb.add(\"multipart/form-data\");\n\t\t\t\t\tb.add(\"; boundary=\");\n\t\t\t\t\tb.add(boundary);\n\t\t\t\t} else\n\t\t\t\t\tb.add(\"application/x-www-form-urlencoded\");\n\t\t\t\tb.add(\"\\r\\n\");\n\t\t\t}\n\t\t\tif( multipart )\n\t\t\t\tb.add(\"Content-Length: \"+(uri.length+file.size+boundary.length+6)+\"\\r\\n\");\n\t\t\telse\n\t\t\t\tb.add(\"Content-Length: \"+uri.length+\"\\r\\n\");\n\t\t}\n\t\tb.add(\"Connection: close\\r\\n\");\n\t\tfor( h in headers ) {\n\t\t\tb.add(h.header);\n\t\t\tb.add(\": \");\n\t\t\tb.add(h.value);\n\t\t\tb.add(\"\\r\\n\");\n\t\t}\n\t\tb.add(\"\\r\\n\");\n\t\tif( postData != null)\n\t\t\tb.add(postData);\n\t\telse if( post && uri != null )\n\t\t\tb.add(uri);\n\t\ttry {\n\t\t\tif( Http.PROXY != null )\n\t\t\t\tsock.connect(new Host(Http.PROXY.host),Http.PROXY.port);\n\t\t\telse\n\t\t\t\tsock.connect(new Host(host),port);\n\t\t\tsock.write(b.toString());\n\t\t\tif( multipart ) {\n\t\t\t\tvar bufsize = 4096;\n\t\t\t\tvar buf = haxe.io.Bytes.alloc(bufsize);\n\t\t\t\twhile( file.size > 0 ) {\n\t\t\t\t\tvar size = if( file.size > bufsize ) bufsize else file.size;\n\t\t\t\t\tvar len = 0;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlen = file.io.readBytes(buf,0,size);\n\t\t\t\t\t} catch( e : haxe.io.Eof ) break;\n\t\t\t\t\tsock.output.writeFullBytes(buf,0,len);\n\t\t\t\t\tfile.size -= len;\n\t\t\t\t}\n\t\t\t\tsock.write(\"\\r\\n\");\n\t\t\t\tsock.write(\"--\");\n\t\t\t\tsock.write(boundary);\n\t\t\t\tsock.write(\"--\");\n\t\t\t}\n\t\t\treadHttpResponse(api,sock);\n\t\t\tsock.close();\n\t\t} catch( e : Dynamic ) {\n\t\t\ttry sock.close() catch( e : Dynamic ) { };\n\t\t\tonError(Std.string(e));\n\t\t}\n\t}\n\n\tfunction readHttpResponse( api : haxe.io.Output, sock : sys.net.Socket ) {\n\t\t// READ the HTTP header (until \\r\\n\\r\\n)\n\t\tvar b = new haxe.io.BytesBuffer();\n\t\tvar k = 4;\n\t\tvar s = haxe.io.Bytes.alloc(4);\n\t\tsock.setTimeout(cnxTimeout);\n\t\twhile( true ) {\n\t\t\tvar p = sock.input.readBytes(s,0,k);\n\t\t\twhile( p != k )\n\t\t\t\tp += sock.input.readBytes(s,p,k - p);\n\t\t\tb.addBytes(s,0,k);\n\t\t\tswitch( k ) {\n\t\t\tcase 1:\n\t\t\t\tvar c = s.get(0);\n\t\t\t\tif( c == 10 )\n\t\t\t\t\tbreak;\n\t\t\t\tif( c == 13 )\n\t\t\t\t\tk = 3;\n\t\t\t\telse\n\t\t\t\t\tk = 4;\n\t\t\tcase 2:\n\t\t\t\tvar c = s.get(1);\n\t\t\t\tif( c == 10 ) {\n\t\t\t\t\tif( s.get(0) == 13 )\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tk = 4;\n\t\t\t\t} else if( c == 13 )\n\t\t\t\t\tk = 3;\n\t\t\t\telse\n\t\t\t\t\tk = 4;\n\t\t\tcase 3:\n\t\t\t\tvar c = s.get(2);\n\t\t\t\tif( c == 10 ) {\n\t\t\t\t\tif( s.get(1) != 13 )\n\t\t\t\t\t\tk = 4;\n\t\t\t\t\telse if( s.get(0) != 10 )\n\t\t\t\t\t\tk = 2;\n\t\t\t\t\telse\n\t\t\t\t\t\tbreak;\n\t\t\t\t} else if( c == 13 ) {\n\t\t\t\t\tif( s.get(1) != 10 || s.get(0) != 13 )\n\t\t\t\t\t\tk = 1;\n\t\t\t\t\telse\n\t\t\t\t\t\tk = 3;\n\t\t\t\t} else\n\t\t\t\t\tk = 4;\n\t\t\tcase 4:\n\t\t\t\tvar c = s.get(3);\n\t\t\t\tif( c == 10 ) {\n\t\t\t\t\tif( s.get(2) != 13 )\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\telse if( s.get(1) != 10 || s.get(0) != 13 )\n\t\t\t\t\t\tk = 2;\n\t\t\t\t\telse\n\t\t\t\t\t\tbreak;\n\t\t\t\t} else if( c == 13 ) {\n\t\t\t\t\tif( s.get(2) != 10 || s.get(1) != 13 )\n\t\t\t\t\t\tk = 3;\n\t\t\t\t\telse\n\t\t\t\t\t\tk = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t#if neko\n\t\tvar headers = neko.Lib.stringReference(b.getBytes()).split(\"\\r\\n\");\n\t\t#else\n\t\tvar headers = b.getBytes().toString().split(\"\\r\\n\");\n\t\t#end\n\t\tvar response = headers.shift();\n\t\tvar rp = response.split(\" \");\n\t\tvar status = Std.parseInt(rp[1]);\n\t\tif( status == 0 || status == null )\n\t\t\tthrow \"Response status error\";\n\n\t\t// remove the two lasts \\r\\n\\r\\n\n\t\theaders.pop();\n\t\theaders.pop();\n\t\tresponseHeaders = new haxe.ds.StringMap();\n\t\tvar size = null;\n\t\tvar chunked = false;\n\t\tfor( hline in headers ) {\n\t\t\tvar a = hline.split(\": \");\n\t\t\tvar hname = a.shift();\n\t\t\tvar hval = if( a.length == 1 ) a[0] else a.join(\": \");\n\t\t\thval = StringTools.ltrim( StringTools.rtrim( hval ) );\n\t\t\tresponseHeaders.set(hname, hval);\n\t\t\tswitch(hname.toLowerCase())\n\t\t\t{\n\t\t\t\tcase \"content-length\":\n\t\t\t\t\tsize = Std.parseInt(hval);\n\t\t\t\tcase \"transfer-encoding\":\n\t\t\t\t\tchunked = (hval.toLowerCase() == \"chunked\");\n\t\t\t}\n\t\t}\n\n\t\tonStatus(status);\n\n\t\tvar chunk_re = ~/^([0-9A-Fa-f]+)[ ]*\\r\\n/m;\n\t\tchunk_size = null;\n\t\tchunk_buf = null;\n\n\t\tvar bufsize = 1024;\n\t\tvar buf = haxe.io.Bytes.alloc(bufsize);\n\t\tif( chunked ) {\n\t\t\ttry {\n\t\t\t\twhile( true ) {\n\t\t\t\t\tvar len = sock.input.readBytes(buf,0,bufsize);\n\t\t\t\t\tif( !readChunk(chunk_re,api,buf,len) )\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} catch ( e : haxe.io.Eof ) {\n\t\t\t\tthrow \"Transfer aborted\";\n\t\t\t}\n\t\t} else if( size == null ) {\n\t\t\tif( !noShutdown )\n\t\t\t\tsock.shutdown(false,true);\n\t\t\ttry {\n\t\t\t\twhile( true ) {\n\t\t\t\t\tvar len = sock.input.readBytes(buf,0,bufsize);\n\t\t\t\t\tapi.writeBytes(buf,0,len);\n\t\t\t\t}\n\t\t\t} catch( e : haxe.io.Eof ) {\n\t\t\t}\n\t\t} else {\n\t\t\tapi.prepare(size);\n\t\t\ttry {\n\t\t\t\twhile( size > 0 ) {\n\t\t\t\t\tvar len = sock.input.readBytes(buf,0,if( size > bufsize ) bufsize else size);\n\t\t\t\t\tapi.writeBytes(buf,0,len);\n\t\t\t\t\tsize -= len;\n\t\t\t\t}\n\t\t\t} catch( e : haxe.io.Eof ) {\n\t\t\t\tthrow \"Transfer aborted\";\n\t\t\t}\n\t\t}\n\t\tif( chunked && (chunk_size != null || chunk_buf != null) )\n\t\t\tthrow \"Invalid chunk\";\n\t\tif( status < 200 || status >= 400 )\n\t\t\tthrow \"Http Error #\"+status;\n\t\tapi.close();\n\t}\n\n\tfunction readChunk(chunk_re : EReg, api : haxe.io.Output, buf : haxe.io.Bytes, len ) {\n\t\tif( chunk_size == null ) {\n\t\t\tif( chunk_buf != null ) {\n\t\t\t\tvar b = new haxe.io.BytesBuffer();\n\t\t\t\tb.add(chunk_buf);\n\t\t\t\tb.addBytes(buf,0,len);\n\t\t\t\tbuf = b.getBytes();\n\t\t\t\tlen += chunk_buf.length;\n\t\t\t\tchunk_buf = null;\n\t\t\t}\n\t\t\t#if neko\n\t\t\tif( chunk_re.match(neko.Lib.stringReference(buf)) ) {\n\t\t\t#else\n\t\t\tif( chunk_re.match(buf.toString()) ) {\n\t\t\t#end\n\t\t\t\tvar p = chunk_re.matchedPos();\n\t\t\t\tif( p.len <= len ) {\n\t\t\t\t\tvar cstr = chunk_re.matched(1);\n\t\t\t\t\tchunk_size = Std.parseInt(\"0x\"+cstr);\n\t\t\t\t\tif( cstr == \"0\" ) {\n\t\t\t\t\t\tchunk_size = null;\n\t\t\t\t\t\tchunk_buf = null;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tlen -= p.len;\n\t\t\t\t\treturn readChunk(chunk_re,api,buf.sub(p.len,len),len);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// prevent buffer accumulation\n\t\t\tif( len > 10 ) {\n\t\t\t\tonError(\"Invalid chunk\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tchunk_buf = buf.sub(0,len);\n\t\t\treturn true;\n\t\t}\n\t\tif( chunk_size > len ) {\n\t\t\tchunk_size -= len;\n\t\t\tapi.writeBytes(buf,0,len);\n\t\t\treturn true;\n\t\t}\n\t\tvar end = chunk_size + 2;\n\t\tif( len >= end ) {\n\t\t\tif( chunk_size > 0 )\n\t\t\t\tapi.writeBytes(buf,0,chunk_size);\n\t\t\tlen -= end;\n\t\t\tchunk_size = null;\n\t\t\tif( len == 0 )\n\t\t\t\treturn true;\n\t\t\treturn readChunk(chunk_re,api,buf.sub(end,len),len);\n\t\t}\n\t\tif( chunk_size > 0 )\n\t\t\tapi.writeBytes(buf,0,chunk_size);\n\t\tchunk_size -= len;\n\t\treturn true;\n\t}\n\n#end\n\n\t/**\n\t\tThis method is called upon a successful request, with `data` containing\n\t\tthe result String.\n\n\t\tThe intended usage is to bind it to a custom function:  \n\t\t`httpInstance.onData = function(data) { // handle result }`\n\t**/\n\tpublic dynamic function onData( data : String ) {\n\t}\n\n\t/**\n\t\tThis method is called upon a request error, with `msg` containing the\n\t\terror description.\n\n\t\tThe intended usage is to bind it to a custom function:  \n\t\t`httpInstance.onError = function(msg) { // handle error }`\n\t**/\n\tpublic dynamic function onError( msg : String ) {\n\t}\n\n\t/**\n\t\tThis method is called upon a Http status change, with `status` being the\n\t\tnew status.\n\n\t\tThe intended usage is to bind it to a custom function:  \n\t\t`httpInstance.onStatus = function(status) { // handle status }`\n\t**/\n\tpublic dynamic function onStatus( status : Int ) {\n\t}\n\n#if (!flash && !nodejs)\n\t/**\n\t\tMakes a synchronous request to `url`.\n\n\t\tThis creates a new Http instance and makes a GET request by calling its\n\t\t`request(false)` method.\n\n\t\tIf `url` is null, the result is unspecified.\n\t**/\n\tpublic static function requestUrl( url : String ) : String {\n\t\tvar h = new Http(url);\n\t#if js\n\t\th.async = false;\n\t#end\n\t\tvar r = null;\n\t\th.onData = function(d){\n\t\t\tr = d;\n\t\t}\n\t\th.onError = function(e){\n\t\t\tthrow e;\n\t\t}\n\t\th.request(false);\n\t\treturn r;\n\t}\n#end\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tLog primarily provides the `trace()` method, which is invoked upon a call to\n\t`trace()` in Haxe code.\n**/\nclass Log {\n\n\t/**\n\t\tOutputs `v` in a platform-dependent way.\n\n\t\tThe second parameter `infos` is injected by the compiler and contains\n\t\tinformation about the position where the `trace()` call was made.\n\n\t\tThis method can be rebound to a custom function:\n\t\t\tvar oldTrace = haxe.Log.trace; // store old function\n\t\t\thaxe.Log.trace = function(v, ?infos) {\n\t\t\t  // handle trace\n\t\t\t}\n\t\t\t...\n\t\t\thaxe.Log.trace = oldTrace;\n\n\t\tIf it is bound to null, subsequent calls to `trace()` will cause an\n\t\texception.\n\t**/\n\tpublic static dynamic function trace( v : Dynamic, ?infos : PosInfos ) : Void {\n\t\t#if flash\n\t\t\t#if (fdb || native_trace)\n\t\t\t\tvar pstr = infos == null ? \"(null)\" : infos.fileName + \":\" + infos.lineNumber;\n\t\t\t\tvar str = flash.Boot.__string_rec(v, \"\");\n\t\t\t\tif( infos != null && infos.customParams != null ) for( v in infos.customParams ) str += \",\" + flash.Boot.__string_rec(v, \"\");\n\t\t\t\tuntyped __global__[\"trace\"](pstr+\": \"+str);\n\t\t\t#else\n\t\t\t\tuntyped flash.Boot.__trace(v,infos);\n\t\t\t#end\n\t\t#elseif neko\n\t\t\tuntyped {\n\t\t\t\t$print(infos.fileName + \":\" + infos.lineNumber + \": \", v);\n\t\t\t\tif( infos.customParams != null ) for( v in infos.customParams ) $print(\",\", v);\n\t\t\t\t$print(\"\\n\");\n\t\t\t}\n\t\t#elseif js\n\t\t\tuntyped js.Boot.__trace(v,infos);\n\t\t#elseif (php && php7)\n\t\t\tphp.Boot.trace(v, infos);\n\t\t#elseif php\n\t\t\tif (infos!=null && infos.customParams!=null) {\n\t\t\t\tvar extra:String = \"\";\n\t\t\t\tfor( v in infos.customParams )\n\t\t\t\t\textra += \",\" + v;\n\t\t\t\tuntyped __call__('_hx_trace', v + extra, infos);\n\t\t\t}\n\t\t\telse\n\t\t\t\tuntyped __call__('_hx_trace', v, infos);\n\t\t#elseif cpp\n\t\t\tif (infos!=null && infos.customParams!=null) {\n\t\t\t\tvar extra:String = \"\";\n\t\t\t\tfor( v in infos.customParams )\n\t\t\t\t\textra += \",\" + v;\n\t\t\t\tuntyped __trace(v + extra,infos);\n\t\t\t}\n\t\t\telse\n\t\t\t\tuntyped __trace(v,infos);\n\t\t#elseif (cs || java || lua)\n\t\t\tvar str:String = null;\n\t\t\tif (infos != null) {\n\t\t\t\tstr = infos.fileName + \":\" + infos.lineNumber + \": \" + v;\n\t\t\t\tif (infos.customParams != null)\n\t\t\t\t{\n\t\t\t\t\tstr += \",\" + infos.customParams.join(\",\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstr = v;\n\t\t\t}\n\t\t\t#if cs\n\t\t\tcs.system.Console.WriteLine(str);\n\t\t\t#elseif java\n\t\t\tuntyped __java__(\"java.lang.System.out.println(str)\");\n\t\t\t#elseif lua\n\t\t\tif (str == null) str = \"null\";\n\t\t\tuntyped __define_feature__(\"use._hx_print\",_hx_print(str));\n\t\t\t#end\n\t\t#elseif (python)\n\t\t\tvar str:String = null;\n\t\t\tif (infos != null) {\n\t\t\t\tstr = infos.fileName + \":\" + Std.string(infos.lineNumber) + \": \" + v;\n\t\t\t\tif (infos.customParams != null) {\n\t\t\t\t\tstr += \",\" + infos.customParams.join(\",\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstr = v;\n\t\t\t}\n\t\t\tpython.Lib.println(str);\n\t\t#elseif hl\n\t\t\tvar pstr = infos == null ? \"(null)\" : infos.fileName + \":\" + infos.lineNumber;\n\t\t\tvar str = Std.string(v);\n\t\t\tif( infos != null && infos.customParams != null ) for( v in infos.customParams ) str += \",\" + Std.string(v);\n\t\t\tSys.println(pstr+\": \"+str);\n\t\t#end\n\t}\n\n\t#if (flash || js)\n\t/**\n\t\tClears the trace output.\n\t**/\n\tpublic static dynamic function clear() : Void {\n\t\t#if flash\n\t\tuntyped flash.Boot.__clear_trace();\n\t\t#elseif js\n\t\tuntyped js.Boot.__clear_trace();\n\t\t#end\n\t}\n\t#end\n\n\t#if flash\n\t/**\n\t\tSets the color of the trace output to `rgb`.\n\t**/\n\tpublic static dynamic function setColor( rgb : Int ) {\n\t\tuntyped flash.Boot.__set_trace_color(rgb);\n\t}\n\t#end\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tThe Timer class allows you to create asynchronous timers on platforms that\n\tsupport events.\n\n\tThe intended usage is to create an instance of the Timer class with a given\n\tinterval, set its run() method to a custom function to be invoked and\n\teventually call stop() to stop the Timer.\n\n\tNote that a running Timer may or may not prevent the program to exit\n\tautomatically when main() returns.\n\n\tIt is also possible to extend this class and override its run() method in\n\tthe child class.\n**/\nclass Timer {\n\n\t#if (flash || js)\n\t\tprivate var id : Null<Int>;\n\t#elseif java\n\t\tprivate var timer : java.util.Timer;\n\t\tprivate var task : java.util.TimerTask;\n\t#else\n\t\tprivate var event : MainLoop.MainEvent;\n\t#end\n\n\t/**\n\t\tCreates a new timer that will run every `time_ms` milliseconds.\n\n\t\tAfter creating the Timer instance, it calls `this.run` repeatedly,\n\t\twith delays of `time_ms` milliseconds, until `this.stop` is called.\n\n\t\tThe first invocation occurs after `time_ms` milliseconds, not\n\t\timmediately.\n\n\t\tThe accuracy of this may be platform-dependent.\n\t**/\n\tpublic function new( time_ms : Int ){\n\t\t#if flash\n\t\t\tvar me = this;\n\t\t\tid = untyped __global__[\"flash.utils.setInterval\"](function() { me.run(); },time_ms);\n\t\t#elseif js\n\t\t\tvar me = this;\n\t\t\tid = untyped setInterval(function() me.run(),time_ms);\n\t\t#elseif java\n\t\t\ttimer = new java.util.Timer();\n\t\t\ttimer.scheduleAtFixedRate(task = new TimerTask(this), haxe.Int64.ofInt(time_ms), haxe.Int64.ofInt(time_ms));\n\t\t#else\n\t\t\tvar dt = time_ms / 1000;\n\t\t\tevent = MainLoop.add(function() {\n\t\t\t\t@:privateAccess event.nextRun += dt;\n\t\t\t\trun();\n\t\t\t});\n\t\t\tevent.delay(dt);\n\t\t#end\n\t}\n\n\t/**\n\t\tStops `this` Timer.\n\n\t\tAfter calling this method, no additional invocations of `this.run`\n\t\twill occur.\n\n\t\tIt is not possible to restart `this` Timer once stopped.\n\t**/\n\tpublic function stop() {\n\t\t#if (flash || js)\n\t\t\tif( id == null )\n\t\t\t\treturn;\n\t\t\t#if flash\n\t\t\t\tuntyped __global__[\"flash.utils.clearInterval\"](id);\n\t\t\t#elseif js\n\t\t\t\tuntyped clearInterval(id);\n\t\t\t#end\n\t\t\tid = null;\n\t\t#elseif java\n\t\t\tif(timer != null) {\n\t\t\t\ttimer.cancel();\n\t\t\t\ttimer = null;\n\t\t\t}\n\t\t\ttask = null;\n\t\t#else\n\t\t\tif( event != null ) {\n\t\t\t\tevent.stop();\n\t\t\t\tevent = null;\n\t\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tThis method is invoked repeatedly on `this` Timer.\n\n\t\tIt can be overridden in a subclass, or rebound directly to a custom\n\t\tfunction:\n\t\t\tvar timer = new haxe.Timer(1000); // 1000ms delay\n\t\t\ttimer.run = function() { ... }\n\n\t\tOnce bound, it can still be rebound to different functions until `this`\n\t\tTimer is stopped through a call to `this.stop`.\n\t**/\n\tpublic dynamic function run() {\n\n\t}\n\n\t/**\n\t\tInvokes `f` after `time_ms` milliseconds.\n\n\t\tThis is a convenience function for creating a new Timer instance with\n\t\t`time_ms` as argument, binding its run() method to `f` and then stopping\n\t\t`this` Timer upon the first invocation.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function delay( f : Void -> Void, time_ms : Int ) {\n\t\tvar t = new haxe.Timer(time_ms);\n\t\tt.run = function() {\n\t\t\tt.stop();\n\t\t\tf();\n\t\t};\n\t\treturn t;\n\t}\n\n\t/**\n\t\tMeasures the time it takes to execute `f`, in seconds with fractions.\n\n\t\tThis is a convenience function for calculating the difference between\n\t\tTimer.stamp() before and after the invocation of `f`.\n\n\t\tThe difference is passed as argument to Log.trace(), with \"s\" appended\n\t\tto denote the unit. The optional `pos` argument is passed through.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function measure<T>( f : Void -> T, ?pos : PosInfos ) : T {\n\t\tvar t0 = stamp();\n\t\tvar r = f();\n\t\tLog.trace((stamp() - t0) + \"s\", pos);\n\t\treturn r;\n\t}\n\n\t/**\n\t\tReturns a timestamp, in seconds with fractions.\n\n\t\tThe value itself might differ depending on platforms, only differences\n\t\tbetween two values make sense.\n\t**/\n\tpublic static inline function stamp() : Float {\n\t\t#if flash\n\t\t\treturn flash.Lib.getTimer() / 1000;\n\t\t#elseif (neko || php)\n\t\t\treturn Sys.time();\n\t\t#elseif js\n\t\t\treturn Date.now().getTime() / 1000;\n\t\t#elseif cpp\n\t\t\treturn untyped __global__.__time_stamp();\n\t\t#elseif python\n\t\t\treturn Sys.cpuTime();\n\t\t#elseif sys\n\t\t\treturn Sys.time();\n\n\t\t#else\n\t\t\treturn 0;\n\t\t#end\n\t}\n\n}\n\n#if java\n@:nativeGen\nprivate class TimerTask extends java.util.TimerTask {\n\tvar timer:Timer;\n\tpublic function new(timer:Timer):Void {\n\t\tsuper();\n\t\tthis.timer = timer;\n\t}\n\n\t@:overload override public function run():Void {\n\t\ttimer.run();\n\t}\n}\n#end\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n/**\n\tArraySort provides a stable implementation of merge sort through its `sort`\n\tmethod. It should be used instead of `Array.sort` in cases where the order\n\tof equal elements has to be retained on all targets.\n**/\nclass ArraySort {\n\n\t/**\n\t\tSorts Array `a` according to the comparison function `cmp`, where\n\t\t`cmp(x,y)` returns 0 if `x == y`, a positive Int if `x > y` and a\n\t\tnegative Int if `x < y`.\n\n\t\tThis operation modifies Array `a` in place.\n\n\t\tThis operation is stable: The order of equal elements is preserved.\n\n\t\tIf `a` or `cmp` are null, the result is unspecified.\n\t**/\n\tstatic public function sort<T>(a:Array<T>, cmp:T -> T -> Int) {\n\t\trec(a, cmp, 0, a.length);\n\t}\n\n\tstatic function rec<T>(a:Array<T>, cmp, from, to) {\n\t\tvar middle = (from + to) >> 1;\n\t\tif (to - from < 12) {\n\t\t\tif (to <= from) return;\n\t\t\tfor (i in (from + 1)...to) {\n\t\t\t\tvar j = i;\n\t\t\t\twhile (j > from) {\n\t\t\t\t\tif (compare(a, cmp, j, j - 1) < 0)\n\t\t\t\t\t\tswap(a, j - 1, j);\n\t\t\t\t\telse\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\trec(a, cmp, from, middle);\n\t\trec(a, cmp, middle, to);\n\t\tdoMerge(a, cmp, from, middle, to, middle - from, to - middle);\n\t}\n\n\tstatic function doMerge<T>(a:Array<T>, cmp, from, pivot, to, len1, len2) {\n\t\tvar first_cut, second_cut, len11, len22, new_mid;\n\t\tif (len1 == 0 || len2 == 0)\n\t\t\treturn;\n\t\tif (len1 + len2 == 2) {\n\t\t\tif (compare(a, cmp, pivot, from) < 0)\n\t\t\t\tswap(a, pivot, from);\n\t\t\treturn;\n\t\t}\n\t\tif (len1 > len2) {\n\t\t\tlen11 = len1 >> 1;\n\t\t\tfirst_cut = from + len11;\n\t\t\tsecond_cut = lower(a, cmp, pivot, to, first_cut);\n\t\t\tlen22 = second_cut - pivot;\n\t\t} else {\n\t\t\tlen22 = len2 >> 1;\n\t\t\tsecond_cut = pivot + len22;\n\t\t\tfirst_cut = upper(a, cmp, from, pivot, second_cut);\n\t\t\tlen11 = first_cut - from;\n\t\t}\n\t\trotate(a, cmp, first_cut, pivot, second_cut);\n\t\tnew_mid = first_cut + len22;\n\t\tdoMerge(a, cmp, from, first_cut, new_mid, len11, len22);\n\t\tdoMerge(a, cmp, new_mid, second_cut, to, len1 - len11, len2 - len22);\n\t}\n\n\tstatic function rotate<T>(a:Array<T>, cmp, from, mid, to) {\n\t\tvar n;\n\t\tif (from == mid || mid == to) return;\n\t\tn = gcd(to - from, mid - from);\n\t\twhile (n-- != 0) {\n\t\t\tvar val = a[from + n];\n\t\t\tvar shift = mid - from;\n\t\t\tvar p1 = from + n, p2 = from + n + shift;\n\t\t\twhile (p2 != from + n) {\n\t\t\t\ta[p1] = a[p2];\n\t\t\t\tp1 = p2;\n\t\t\t\tif (to - p2 > shift) p2 += shift;\n\t\t\t\telse p2 = from + (shift - (to - p2));\n\t\t\t}\n\t\t\ta[p1] = val;\n\t\t}\n\t}\n\n\tstatic function gcd(m, n) {\n\t\twhile (n != 0) {\n\t\t\tvar t = m % n;\n\t\t\tm = n;\n\t\t\tn = t;\n\t\t}\n\t\treturn m;\n\t}\n\n\tstatic function upper<T>(a:Array<T>, cmp, from, to, val) {\n\t\tvar len = to - from, half, mid;\n\t\twhile (len > 0) {\n\t\t\thalf = len >> 1;\n\t\t\tmid = from + half;\n\t\t\tif (compare(a, cmp, val, mid) < 0)\n\t\t\t\tlen = half;\n\t\t\telse {\n\t\t\t\tfrom = mid + 1;\n\t\t\t\tlen = len - half - 1;\n\t\t\t}\n\t\t}\n\t\treturn from;\n\t}\n\n\tstatic function lower<T>(a:Array<T>, cmp, from, to, val) {\n\t\tvar len = to - from, half, mid;\n\t\twhile (len > 0) {\n\t\t\thalf = len >> 1;\n\t\t\tmid = from + half;\n\t\t\tif (compare(a, cmp, mid, val) < 0) {\n\t\t\t\tfrom = mid + 1;\n\t\t\t\tlen = len - half - 1;\n\t\t\t} else\n\t\t\t\tlen = half;\n\t\t}\n\t\treturn from;\n\t}\n\n\tstatic function swap<T>(a:Array<T>, i, j) {\n\t\tvar tmp = a[i];\n\t\ta[i] = a[j];\n\t\ta[j] = tmp;\n\t}\n\n\tstatic inline function compare<T>(a:Array<T>, cmp, i, j) {\n\t\treturn cmp(a[i], a[j]);\n\t}\n}","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\nprivate class StringMapIterator<T> {\n\tvar map : StringMap<T>;\n\tvar keys : Array<String>;\n\tvar index : Int;\n\tvar count : Int;\n\tpublic inline function new(map:StringMap<T>, keys:Array<String>) {\n\t\tthis.map = map;\n\t\tthis.keys = keys;\n\t\tthis.index = 0;\n\t\tthis.count = keys.length;\n\t}\n\tpublic inline function hasNext() {\n\t\treturn index < count;\n\t}\n\tpublic inline function next() {\n\t\treturn map.get(keys[index++]);\n\t}\n}\n\n@:coreApi class StringMap<T> implements haxe.Constraints.IMap<String,T> {\n\n\tprivate var h : Dynamic;\n\tprivate var rh : Dynamic;\n\n\tpublic inline function new() : Void {\n\t\th = {};\n\t}\n\n\tinline function isReserved(key:String) : Bool {\n\t\treturn untyped __js__(\"__map_reserved\")[key] != null;\n\t}\n\n\tpublic inline function set( key : String, value : T ) : Void {\n\t\tif( isReserved(key) )\n\t\t\tsetReserved(key, value);\n\t\telse\n\t\t\th[cast key] = value;\n\t}\n\n\tpublic inline function get( key : String ) : Null<T> {\n\t\tif( isReserved(key) )\n\t\t\treturn getReserved(key);\n\t\treturn h[cast key];\n\t}\n\n\tpublic inline function exists( key : String ) : Bool {\n\t\tif( isReserved(key) )\n\t\t\treturn existsReserved(key);\n\t\treturn h.hasOwnProperty(key);\n\t}\n\n\tfunction setReserved( key : String, value : T ) : Void {\n\t\tif( rh == null ) rh = {};\n\t\trh[cast \"$\"+key] = value;\n\t}\n\n\tfunction getReserved( key : String ) : Null<T> {\n\t\treturn rh == null ? null : rh[cast \"$\"+key];\n\t}\n\n\tfunction existsReserved( key : String ) : Bool {\n\t\tif( rh == null ) return false;\n\t\treturn untyped rh.hasOwnProperty(\"$\"+key);\n\t}\n\n\tpublic function remove( key : String ) : Bool {\n\t\tif( isReserved(key) ) {\n\t\t\tkey = \"$\" + key;\n\t\t\tif( rh == null || !rh.hasOwnProperty(key) ) return false;\n\t\t\tuntyped __js__(\"delete\")(rh[key]);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tif( !h.hasOwnProperty(key) )\n\t\t\t\treturn false;\n\t\t\tuntyped __js__(\"delete\")(h[key]);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic function keys() : Iterator<String> {\n\t\treturn arrayKeys().iterator();\n\t}\n\t\n\tfunction arrayKeys() : Array<String> {\n\t\tvar out = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\tout.push(key);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\tif( rh != null ) untyped {\n\t\t\t__js__(\"for( var key in this.rh ) {\");\n\t\t\t\tif( key.charCodeAt(0) == \"$\".code )\n\t\t\t\t\tout.push(key.substr(1));\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn out;\n\t}\n\n\tpublic inline function iterator() : Iterator<T> {\n\t\treturn new StringMapIterator(this, arrayKeys());\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar keys = arrayKeys();\n\t\tfor( i in 0...keys.length ) {\n\t\t\tvar k = keys[i];\n\t\t\ts.add(k);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(k)));\n\t\t\tif( i < keys.length-1 )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\tstatic function __init__() : Void {\n\t\tuntyped __js__(\"var __map_reserved = {};\");\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.xml;\n\nusing StringTools;\n\n/* poor'man enum : reduce code size + a bit faster since inlined */\nextern private class S {\n\tpublic static inline var IGNORE_SPACES \t= 0;\n\tpublic static inline var BEGIN\t\t\t= 1;\n\tpublic static inline var BEGIN_NODE\t\t= 2;\n\tpublic static inline var TAG_NAME\t\t= 3;\n\tpublic static inline var BODY\t\t\t= 4;\n\tpublic static inline var ATTRIB_NAME\t= 5;\n\tpublic static inline var EQUALS\t\t\t= 6;\n\tpublic static inline var ATTVAL_BEGIN\t= 7;\n\tpublic static inline var ATTRIB_VAL\t\t= 8;\n\tpublic static inline var CHILDS\t\t\t= 9;\n\tpublic static inline var CLOSE\t\t\t= 10;\n\tpublic static inline var WAIT_END\t\t= 11;\n\tpublic static inline var WAIT_END_RET\t= 12;\n\tpublic static inline var PCDATA\t\t\t= 13;\n\tpublic static inline var HEADER\t\t\t= 14;\n\tpublic static inline var COMMENT\t\t= 15;\n\tpublic static inline var DOCTYPE\t\t= 16;\n\tpublic static inline var CDATA\t\t\t= 17;\n\tpublic static inline var ESCAPE\t\t\t= 18;\n}\n\nclass XmlParserException\n{\n\t/**\n\t * the XML parsing error message\n\t */\n\tpublic var message:String;\n\n\t/**\n\t * the line number at which the XML parsing error occurred\n\t */\n\tpublic var lineNumber:Int;\n\n\t/**\n\t * the character position in the reported line at which the parsing error occurred\n\t */\n\tpublic var positionAtLine:Int;\n\n\t/**\n\t * the character position in the XML string at which the parsing error occurred\n\t */\n\tpublic var position:Int;\n\n\t/**\n\t * the invalid XML string\n\t */\n\tpublic var xml:String;\n\n\tpublic function new(message:String, xml:String, position:Int)\n\t{\n\t\tthis.xml = xml;\n\t\tthis.message = message;\n\t\tthis.position = position;\n\t\tlineNumber = 1;\n\t\tpositionAtLine = 0;\n\n\t\tfor( i in 0...position)\n\t\t{\n\t\t\tvar c = xml.fastCodeAt(i);\n\t\t\tif (c == '\\n'.code) {\n\t\t\t\tlineNumber++;\n\t\t\t\tpositionAtLine = 0;\n\t\t\t} else {\n\t\t\t\tif (c != '\\r'.code) positionAtLine++;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function toString():String\n\t{\n\t\treturn Type.getClassName(Type.getClass(this)) + \": \" + message + \" at line \" + lineNumber + \" char \" + positionAtLine;\n\t}\n}\n\nclass Parser\n{\n\tstatic var escapes = {\n\t\tvar h = new haxe.ds.StringMap();\n\t\th.set(\"lt\", \"<\");\n\t\th.set(\"gt\", \">\");\n\t\th.set(\"amp\", \"&\");\n\t\th.set(\"quot\", '\"');\n\t\th.set(\"apos\", \"'\");\n\t\th;\n\t}\n\n\t/**\n\t * Parses the String into an XML Document. Set strict parsing to true in order to enable a strict check of XML attributes and entities.\n\t *\n\t * @throws haxe.xml.XmlParserException\n\t */\n\tstatic public function parse(str:String, strict = false)\n\t{\n\t\tvar doc = Xml.createDocument();\n\t\tdoParse(str, strict, 0, doc);\n\t\treturn doc;\n\t}\n\n\tstatic function doParse(str:String, strict:Bool, p:Int = 0, ?parent:Xml):Int\n\t{\n\t\tvar xml:Xml = null;\n\t\tvar state = S.BEGIN;\n\t\tvar next = S.BEGIN;\n\t\tvar aname = null;\n\t\tvar start = 0;\n\t\tvar nsubs = 0;\n\t\tvar nbrackets = 0;\n\t\tvar c = str.fastCodeAt(p);\n\t\tvar buf = new StringBuf();\n\t\t// need extra state because next is in use\n\t\tvar escapeNext = S.BEGIN;\n\t\tvar attrValQuote = -1;\n\t\tinline function addChild(xml:Xml) {\n\t\t\tparent.addChild(xml);\n\t\t\tnsubs++;\n\t\t}\n\t\twhile (!StringTools.isEof(c))\n\t\t{\n\t\t\tswitch(state)\n\t\t\t{\n\t\t\t\tcase S.IGNORE_SPACES:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase\n\t\t\t\t\t\t\t'\\n'.code,\n\t\t\t\t\t\t\t'\\r'.code,\n\t\t\t\t\t\t\t'\\t'.code,\n\t\t\t\t\t\t\t' '.code:\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tstate = next;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.BEGIN:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '<'.code:\n\t\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\t\tnext = S.BEGIN_NODE;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\t\tstate = S.PCDATA;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.PCDATA:\n\t\t\t\t\tif (c == '<'.code)\n\t\t\t\t\t{\n\t\t\t\t\t\tbuf.addSub(str, start, p - start);\n\t\t\t\t\t\tvar child = Xml.createPCData(buf.toString());\n\t\t\t\t\t\tbuf = new StringBuf();\n\t\t\t\t\t\taddChild(child);\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\tnext = S.BEGIN_NODE;\n\t\t\t\t\t} else if (c == '&'.code) {\n\t\t\t\t\t\tbuf.addSub(str, start, p - start);\n\t\t\t\t\t\tstate = S.ESCAPE;\n\t\t\t\t\t\tescapeNext = S.PCDATA;\n\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t}\n\t\t\t\tcase S.CDATA:\n\t\t\t\t\tif (c == ']'.code && str.fastCodeAt(p + 1) == ']'.code && str.fastCodeAt(p + 2) == '>'.code)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar child = Xml.createCData(str.substr(start, p - start));\n\t\t\t\t\t\taddChild(child);\n\t\t\t\t\t\tp += 2;\n\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t}\n\t\t\t\tcase S.BEGIN_NODE:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '!'.code:\n\t\t\t\t\t\t\tif (str.fastCodeAt(p + 1) == '['.code)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tp += 2;\n\t\t\t\t\t\t\t\tif (str.substr(p, 6).toUpperCase() != \"CDATA[\")\n\t\t\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected <![CDATA[\", str, p);\n\t\t\t\t\t\t\t\tp += 5;\n\t\t\t\t\t\t\t\tstate = S.CDATA;\n\t\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (str.fastCodeAt(p + 1) == 'D'.code || str.fastCodeAt(p + 1) == 'd'.code)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(str.substr(p + 2, 6).toUpperCase() != \"OCTYPE\")\n\t\t\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected <!DOCTYPE\", str, p);\n\t\t\t\t\t\t\t\tp += 8;\n\t\t\t\t\t\t\t\tstate = S.DOCTYPE;\n\t\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if( str.fastCodeAt(p + 1) != '-'.code || str.fastCodeAt(p + 2) != '-'.code )\n\t\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected <!--\", str, p);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tp += 2;\n\t\t\t\t\t\t\t\tstate = S.COMMENT;\n\t\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase '?'.code:\n\t\t\t\t\t\t\tstate = S.HEADER;\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\tcase '/'.code:\n\t\t\t\t\t\t\tif( parent == null )\n\t\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected node name\", str, p);\n\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\t\tnext = S.CLOSE;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tstate = S.TAG_NAME;\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.TAG_NAME:\n\t\t\t\t\tif (!isValidChar(c))\n\t\t\t\t\t{\n\t\t\t\t\t\tif( p == start )\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected node name\", str, p);\n\t\t\t\t\t\txml = Xml.createElement(str.substr(start, p - start));\n\t\t\t\t\t\taddChild(xml);\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\tnext = S.BODY;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.BODY:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '/'.code:\n\t\t\t\t\t\t\tstate = S.WAIT_END;\n\t\t\t\t\t\tcase '>'.code:\n\t\t\t\t\t\t\tstate = S.CHILDS;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tstate = S.ATTRIB_NAME;\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.ATTRIB_NAME:\n\t\t\t\t\tif (!isValidChar(c))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tmp;\n\t\t\t\t\t\tif( start == p )\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected attribute name\", str, p);\n\t\t\t\t\t\ttmp = str.substr(start,p-start);\n\t\t\t\t\t\taname = tmp;\n\t\t\t\t\t\tif( xml.exists(aname) )\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Duplicate attribute [\" + aname + \"]\", str, p);\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\tnext = S.EQUALS;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.EQUALS:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '='.code:\n\t\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\t\tnext = S.ATTVAL_BEGIN;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected =\", str, p);\n\t\t\t\t\t}\n\t\t\t\tcase S.ATTVAL_BEGIN:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '\"'.code | '\\''.code:\n\t\t\t\t\t\t\tbuf = new StringBuf();\n\t\t\t\t\t\t\tstate = S.ATTRIB_VAL;\n\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\tattrValQuote = c;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected \\\"\", str, p);\n\t\t\t\t\t}\n\t\t\t\tcase S.ATTRIB_VAL:\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\t\tcase '&'.code:\n\t\t\t\t\t\t\tbuf.addSub(str, start, p - start);\n\t\t\t\t\t\t\tstate = S.ESCAPE;\n\t\t\t\t\t\t\tescapeNext = S.ATTRIB_VAL;\n\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\tcase '>'.code | '<'.code if( strict ):\n\t\t\t\t\t\t\t// HTML allows these in attributes values\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Invalid unescaped \" + String.fromCharCode(c) + \" in attribute value\", str, p);\n\t\t\t\t\t\tcase _ if (c == attrValQuote):\n\t\t\t\t\t\t\tbuf.addSub(str, start, p - start);\n\t\t\t\t\t\t\tvar val = buf.toString();\n\t\t\t\t\t\t\tbuf = new StringBuf();\n\t\t\t\t\t\t\txml.set(aname, val);\n\t\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\t\tnext = S.BODY;\n\t\t\t\t\t}\n\t\t\t\tcase S.CHILDS:\n\t\t\t\t\tp = doParse(str, strict, p, xml);\n\t\t\t\t\tstart = p;\n\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\tcase S.WAIT_END:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '>'.code:\n\t\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t\tdefault :\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected >\", str, p);\n\t\t\t\t\t}\n\t\t\t\tcase S.WAIT_END_RET:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '>'.code:\n\t\t\t\t\t\t\tif( nsubs == 0 )\n\t\t\t\t\t\t\t\tparent.addChild(Xml.createPCData(\"\"));\n\t\t\t\t\t\t\treturn p;\n\t\t\t\t\t\tdefault :\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected >\", str, p);\n\t\t\t\t\t}\n\t\t\t\tcase S.CLOSE:\n\t\t\t\t\tif (!isValidChar(c))\n\t\t\t\t\t{\n\t\t\t\t\t\tif( start == p )\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected node name\", str, p);\n\n\t\t\t\t\t\tvar v = str.substr(start,p - start);\n\t\t\t\t\t\tif (v != parent.nodeName)\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected </\" +parent.nodeName + \">\", str, p);\n\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\tnext = S.WAIT_END_RET;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.COMMENT:\n\t\t\t\t\tif (c == '-'.code && str.fastCodeAt(p +1) == '-'.code && str.fastCodeAt(p + 2) == '>'.code)\n\t\t\t\t\t{\n\t\t\t\t\t\taddChild(Xml.createComment(str.substr(start, p - start)));\n\t\t\t\t\t\tp += 2;\n\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t}\n\t\t\t\tcase S.DOCTYPE:\n\t\t\t\t\tif(c == '['.code)\n\t\t\t\t\t\tnbrackets++;\n\t\t\t\t\telse if(c == ']'.code)\n\t\t\t\t\t\tnbrackets--;\n\t\t\t\t\telse if (c == '>'.code && nbrackets == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\taddChild(Xml.createDocType(str.substr(start, p - start)));\n\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t}\n\t\t\t\tcase S.HEADER:\n\t\t\t\t\tif (c == '?'.code && str.fastCodeAt(p + 1) == '>'.code)\n\t\t\t\t\t{\n\t\t\t\t\t\tp++;\n\t\t\t\t\t\tvar str = str.substr(start + 1, p - start - 2);\n\t\t\t\t\t\taddChild(Xml.createProcessingInstruction(str));\n\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t}\n\t\t\t\tcase S.ESCAPE:\n\t\t\t\t\tif (c == ';'.code)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar s = str.substr(start, p - start);\n\t\t\t\t\t\tif (s.fastCodeAt(0) == '#'.code) {\n\t\t\t\t\t\t\tvar c = s.fastCodeAt(1) == 'x'.code\n\t\t\t\t\t\t\t\t? Std.parseInt(\"0\" +s.substr(1, s.length - 1))\n\t\t\t\t\t\t\t\t: Std.parseInt(s.substr(1, s.length - 1));\n\t\t\t\t\t\t\t#if (neko || cpp || php || lua)\n\t\t\t\t\t\t\tif( c >= 128 ) {\n\t\t\t\t\t\t\t\t// UTF8-encode it\n\t\t\t\t\t\t\t\tif( c <= 0x7FF ) {\n\t\t\t\t\t\t\t\t\tbuf.addChar(0xC0 | (c >> 6));\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | (c & 63));\n\t\t\t\t\t\t\t\t} else if( c <= 0xFFFF ) {\n\t\t\t\t\t\t\t\t\tbuf.addChar(0xE0 | (c >> 12));\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | ((c >> 6) & 63));\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | (c & 63));\n\t\t\t\t\t\t\t\t} else if( c <= 0x10FFFF ) {\n\t\t\t\t\t\t\t\t\tbuf.addChar(0xF0 | (c >> 18));\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | ((c >> 12) & 63));\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | ((c >> 6) & 63));\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | (c & 63));\n\t\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\t\tthrow new XmlParserException(\"Cannot encode UTF8-char \" + c, str, p);\n\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t#end\n\t\t\t\t\t\t\tbuf.addChar(c);\n\t\t\t\t\t\t} else if (!escapes.exists(s)) {\n\t\t\t\t\t\t\tif( strict )\n\t\t\t\t\t\t\t\tthrow new XmlParserException(\"Undefined entity: \" + s, str, p);\n\t\t\t\t\t\t\tbuf.add('&$s;');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbuf.add(escapes.get(s));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\tstate = escapeNext;\n\t\t\t\t\t} else if (!isValidChar(c) && c != \"#\".code) {\n\t\t\t\t\t\tif( strict )\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Invalid character in entity: \" + String.fromCharCode(c), str, p);\n\t\t\t\t\t\tbuf.addChar(\"&\".code);\n\t\t\t\t\t\tbuf.addSub(str, start, p - start);\n\t\t\t\t\t\tp--;\n\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\tstate = escapeNext;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tc = str.fastCodeAt(++p);\n\t\t}\n\n\t\tif (state == S.BEGIN)\n\t\t{\n\t\t\tstart = p;\n\t\t\tstate = S.PCDATA;\n\t\t}\n\n\t\tif (state == S.PCDATA)\n\t\t{\n\t\t\tif (p != start || nsubs == 0) {\n\t\t\t\tbuf.addSub(str, start, p-start);\n\t\t\t\taddChild(Xml.createPCData(buf.toString()));\n\t\t\t}\n\t\t\treturn p;\n\t\t}\n\n\t\tif( !strict && state == S.ESCAPE && escapeNext == S.PCDATA ) {\n\t\t\tbuf.addChar(\"&\".code);\n\t\t\tbuf.addSub(str, start, p - start);\n\t\t\taddChild(Xml.createPCData(buf.toString()));\n\t\t\treturn p;\n\t\t}\n\n\t\tthrow new XmlParserException(\"Unexpected end\", str, p);\n\t}\n\n\tstatic inline function isValidChar(c) {\n\t\treturn (c >= 'a'.code && c <= 'z'.code) || (c >= 'A'.code && c <= 'Z'.code) || (c >= '0'.code && c <= '9'.code) || c == ':'.code || c == '.'.code || c == '_'.code || c == '-'.code;\n\t}\n}\n","/*\nAuthor: Andy Li (andy@onthewings.net)\nBased on colortoolkit (http://code.google.com/p/colortoolkit/)\n*/\n\npackage hxColorToolkit;\n\nimport hxColorToolkit.schemes.*;\nimport hxColorToolkit.spaces.*;\n\n#if macro\nimport haxe.macro.Expr;\nimport haxe.macro.Context;\n#end\n\nclass ColorToolkit {\t\n\tstatic private var rybWheel: Array<Array<Int>> = [[0, 0], [15, 8], [30, 17], [45, 26], [60, 34], [75, 41], [90, 48], [105, 54], [120, 60], [135, 81], [150, 103], [165, 123], [180, 138], [195, 155], [210, 171], [225, 187], [240, 204], [255, 219], [270, 234], [285, 251], [300, 267], [315, 282], [330, 298], [345, 329], [360, 0]];\n\t\n\tinline public static function setColorOpaque(color:Int, ?opaqueValue:Int = 0xff):Int { return (opaqueValue << 24) | (color & 0xffffff); }\n\t\n\tinline public static function desaturate(color:Int):Int { return new Gray().setColor(color).getColor(); }\n\n\tinline public static function getComplement(color:Int):Int { return rybRotate(color, 180); }\n\t\n\tpublic static function shiftBrighteness(color:Int, degree:Float):Int \n\t{\n\t\tvar col:HSB = new HSB().setColor(color);\n\t\t\n\t\tcol.brightness+=degree;\n\t\t\n\t\treturn col.getColor();\n\t}\n\t\n\tpublic static function shiftSaturation(color:Int, degree:Float):Int\n\t{\n\t\tvar col:HSB = new HSB().setColor(color);\n\t\t\n\t\tcol.saturation+=degree;\n\t\t\n\t\treturn col.getColor();\n\t}\n\t\n\tpublic static function shiftHue(color:Int, degree:Float):Int\n\t{\n\t\tvar col:HSB = new HSB().setColor(color);\n\t\t\n\t\tcol.hue+=degree;\n\t\t\n\t\treturn col.getColor();\n\t}\n\t\n\tinline static public function toLab(color:Int):Lab\n\t{\n\t\treturn new Lab().setColor(color);\n\t}\n\t\n\tinline static public function toGray(color:Int):Gray\n\t{\n\t\treturn new Gray().setColor(color);\n\t}\n\t\n\tinline static public function toRGB(color:Int):RGB\n\t{\n\t\treturn new RGB(color >> 16 & 0xFF, color >> 8 & 0xFF, color & 0xFF);\n\t}\n\t\n\tinline static public function toARGB(color:Int):RGB\n\t{\n\t\treturn new ARGB(color >> 24 & 0xFF, color >> 16 & 0xFF, color >> 8 & 0xFF, color & 0xFF);\n\t}\n\t\n\tinline static public function toHSB(color:Int):HSB\n\t{\n\t\treturn new HSB().setColor(color);\n\t}\n\t\n\tinline static public function toHSL(color:Int):HSL\n\t{\n\t\treturn new HSL().setColor(color);\n\t}\n\t\n\tinline static public function toCMYK(color:Int):CMYK\n\t{\n\t\treturn new CMYK().setColor(color);\n\t}\n\t\n\tinline static public function toXYZ(color:Int):XYZ\n\t{\n\t\treturn new XYZ().setColor(color);\n\t}\n\t\n\tinline static public function toYUV(color:Int):YUV\n\t{\n\t\treturn new YUV().setColor(color);\n\t}\n\t\n\tinline static public function toHex(color:Int):Hex\n\t{\n\t\treturn new Hex(color);\n\t}\n\n\tinline static public function getAnalogousScheme(color:Int, ?angle:Float=10, ?contrast:Float=25):Analogous<Hex> {\n\t\treturn new Analogous<Hex>(new Hex(color),angle,contrast);\n\t}\n\n\tinline static public function getComplementaryScheme(color:Int):Complementary<Hex> {\n\t\treturn new Complementary<Hex>(new Hex(color));\n\t}\n\n\tinline static public function getCompoundScheme(color:Int):Compound<Hex> {\n\t\treturn new Compound<Hex>(new Hex(color));\n\t}\n\n\tinline static public function getFlippedCompoundScheme(color:Int):FlippedCompound<Hex> {\n\t\treturn new FlippedCompound<Hex>(new Hex(color));\n\t}\n\n\tinline static public function getMonochromeScheme(color:Int):Monochrome<Hex> {\n\t\treturn new Monochrome<Hex>(new Hex(color));\n\t}\n\n\tinline static public function getSplitComplementaryScheme(color:Int):SplitComplementary<Hex> {\n\t\treturn new SplitComplementary<Hex>(new Hex(color));\n\t}\n\n\tinline static public function getTetradScheme(color:Int, ?angle:Float=90, ?alt:Bool = false):Tetrad<Hex> {\n\t\treturn new Tetrad<Hex>(new Hex(color),angle,alt);\n\t}\n\n\tinline static public function getTriadScheme(color:Int, ?angle:Float=120):Triad<Hex> {\n\t\treturn new Triad<Hex>(new Hex(color),angle);\n\t}\n\t\n\t\n\tpublic static function rybRotate(color:Int, angle:Float):Int \n\t{\t\t\t\n\t\tvar hsb:HSB = new HSB().setColor(color);\n\t\t\n\t\tvar a: Float = 0;\n\t\tfor (i in 0...rybWheel.length) {\n\t\t\tvar x0: Int = rybWheel[i][0];\n\t\t\tvar y0: Int = rybWheel[i][1];\n       \n\t\t\tvar x1: Int = rybWheel[i + 1][0];\n\t\t\tvar y1: Int = rybWheel[i + 1][1];\n\t\t\tif(y1 < y0)  y1 += 360;\n\t\t\tif(y0 <= hsb.hue && hsb.hue <= y1) {\n\t\t\t\ta = 1.0 * x0 + (x1 - x0) * (hsb.hue - y0) / (y1 - y0);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\ta = (a + (angle % 360));\n\t\tif (a < 0)  a = 360 + a;\n\t\tif (a > 360)  a = a - 360;\n\t\ta = a % 360;\n\t\t\n\t\tvar newHue:Float = 0;\n\t\tfor (k in 0...rybWheel.length) {\n\t\t\tvar xx0: Int = rybWheel[k][0];\n\t\t\tvar yy0: Int = rybWheel[k][1];\n       \n\t\t\tvar xx1: Int = rybWheel[k + 1][0];\n\t\t\tvar yy1: Int = rybWheel[k + 1][1];\n\t\t\tif (yy1 < yy0) yy1 += 360;\n\t\t\tif (xx0 <= a && a <= xx1) {\n\t\t\t\tnewHue = yy0 + (yy1 - yy0) * (a - xx0) / (xx1 - xx0);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\thsb.hue = newHue;\n\t\t\n\t\treturn hsb.getColor();\n\t}\n\n\tstatic public function intArray(colors:ColorScheme<Dynamic>):Array<Int> {\n\t\tvar a = [];\n\t\tfor (c in colors) {\n\t\t\ta.push(c.getColor());\n\t\t}\n\t\treturn a;\n\t}\n}\n\nclass ColorSpaceToolkit {\n\tinline static public function toLab(color:Color):Lab\n\t{\n\t\treturn new Lab().fromRGB(color.toRGB());\n\t}\n\t\n\tinline static public function toGray(color:Color):Gray\n\t{\n\t\treturn new Gray().fromRGB(color.toRGB());\n\t}\n\t\n\tinline static public function toHSB(color:Color):HSB\n\t{\n\t\treturn new HSB().fromRGB(color.toRGB());\n\t}\n\t\n\tinline static public function toHSL(color:Color):HSL\n\t{\n\t\treturn new HSL().fromRGB(color.toRGB());\n\t}\n\t\n\tinline static public function toCMYK(color:Color):CMYK\n\t{\n\t\treturn new CMYK().fromRGB(color.toRGB());\n\t}\n\t\n\tinline static public function toXYZ(color:Color):XYZ\n\t{\n\t\treturn new XYZ().fromRGB(color.toRGB());\n\t}\n\t\n\tinline static public function toYUV(color:Color):YUV\n\t{\n\t\treturn new YUV().fromRGB(color.toRGB());\n\t}\n\t\n\tinline static public function toARGB(color:Color):ARGB\n\t{\n\t\treturn new ARGB().fromRGB(color.toRGB());\n\t}\n\t\n\tinline static public function toHex(color:Color):Hex\n\t{\n\t\treturn new Hex(color.getColor());\n\t}\n\t\n\tmacro static public function getAnalogousScheme(color:ExprOf<Color>, ?angle:ExprOf<Float>, ?contrast:ExprOf<Float>) {\n\t\tvar colorType = switch (Context.typeof(color)){\n\t\t\tcase TInst(t,_): t.get();\n\t\t\tdefault: throw color + \"should be a Color class\";\n\t\t}\n\t\t\n\t\treturn { expr:ENew({ sub:null, name:\"Analogous\", pack:[\"hxColorToolkit\",\"schemes\"], params:[TPType(TPath({ sub:null, name:colorType.name, pack:colorType.pack, params:[] }))] },[color,angle,contrast]), pos:Context.currentPos() };\n\t}\n\t\n\tmacro static public function getComplementaryScheme(color:ExprOf<Color>) {\n\t\tvar colorType = switch (Context.typeof(color)){\n\t\t\tcase TInst(t,_): t.get();\n\t\t\tdefault: throw color + \"should be a Color class\";\n\t\t}\n\t\t\n\t\treturn { expr:ENew({ sub:null, name:\"Complementary\", pack:[\"hxColorToolkit\",\"schemes\"], params:[TPType(TPath({ sub:null, name:colorType.name, pack:colorType.pack, params:[] }))] },[color]), pos:Context.currentPos() };\n\t}\n\t\n\tmacro static public function getCompoundScheme(color:ExprOf<Color>) {\n\t\tvar colorType = switch (Context.typeof(color)){\n\t\t\tcase TInst(t,_): t.get();\n\t\t\tdefault: throw color + \"should be a Color class\";\n\t\t}\n\t\t\n\t\treturn { expr:ENew({ sub:null, name:\"Compound\", pack:[\"hxColorToolkit\",\"schemes\"], params:[TPType(TPath({ sub:null, name:colorType.name, pack:colorType.pack, params:[] }))] },[color]), pos:Context.currentPos() };\n\t}\n\t\n\tmacro static public function getFlippedCompoundScheme(color:ExprOf<Color>) {\n\t\tvar colorType = switch (Context.typeof(color)){\n\t\t\tcase TInst(t,_): t.get();\n\t\t\tdefault: throw color + \"should be a Color class\";\n\t\t}\n\t\t\n\t\treturn { expr:ENew({ sub:null, name:\"FlippedCompound\", pack:[\"hxColorToolkit\",\"schemes\"], params:[TPType(TPath({ sub:null, name:colorType.name, pack:colorType.pack, params:[] }))] },[color]), pos:Context.currentPos() };\n\t}\n\t\n\tmacro static public function getMonochromeScheme(color:ExprOf<Color>) {\n\t\tvar colorType = switch (Context.typeof(color)){\n\t\t\tcase TInst(t,_): t.get();\n\t\t\tdefault: throw color + \"should be a Color class\";\n\t\t}\n\t\t\n\t\treturn { expr:ENew({ sub:null, name:\"Monochrome\", pack:[\"hxColorToolkit\",\"schemes\"], params:[TPType(TPath({ sub:null, name:colorType.name, pack:colorType.pack, params:[] }))] },[color]), pos:Context.currentPos() };\n\t}\n\t\n\tmacro static public function getSplitComplementaryScheme(color:ExprOf<Color>) {\n\t\tvar colorType = switch (Context.typeof(color)){\n\t\t\tcase TInst(t,_): t.get();\n\t\t\tdefault: throw color + \"should be a Color class\";\n\t\t}\n\t\t\n\t\treturn { expr:ENew({ sub:null, name:\"SplitComplementary\", pack:[\"hxColorToolkit\",\"schemes\"], params:[TPType(TPath({ sub:null, name:colorType.name, pack:colorType.pack, params:[] }))] },[color]), pos:Context.currentPos() };\n\t}\n\t\n\tmacro static public function getTetradScheme(color:ExprOf<Color>, ?angle:ExprOf<Float>, ?alt:ExprOf<Bool>) {\n\t\tvar colorType = switch (Context.typeof(color)){\n\t\t\tcase TInst(t,_): t.get();\n\t\t\tdefault: throw color + \"should be a Color class\";\n\t\t}\n\t\t\n\t\treturn { expr:ENew({ sub:null, name:\"Tetrad\", pack:[\"hxColorToolkit\",\"schemes\"], params:[TPType(TPath({ sub:null, name:colorType.name, pack:colorType.pack, params:[] }))] },[color,angle,alt]), pos:Context.currentPos() };\n\t}\n\t\n\tmacro static public function getTriadScheme(color:ExprOf<Color>, ?angle:ExprOf<Float>) {\n\t\tvar colorType = switch (Context.typeof(color)){\n\t\t\tcase TInst(t,_): t.get();\n\t\t\tdefault: throw color + \"should be a Color class\";\n\t\t}\n\t\t\n\t\treturn { expr:ENew({ sub:null, name:\"Triad\", pack:[\"hxColorToolkit\",\"schemes\"], params:[TPType(TPath({ sub:null, name:colorType.name, pack:colorType.pack, params:[] }))] },[color,angle]), pos:Context.currentPos() };\n\t}\n}\n"," /*\nAuthor: Andy Li (andy@onthewings.net)\nBased on colortoolkit (http://code.google.com/p/colortoolkit/)\n \nThe MIT License\n\nCopyright (c) 2009 P.J. Onori (pj@somerandomdude.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\npackage hxColorToolkit.schemes;\n\nimport hxColorToolkit.spaces.Color;\n\nclass ColorWheelScheme<C:Color> implements ColorScheme<C> {\n\tpublic function clone():ColorWheelScheme<C> {\n\t\treturn throw \"need to be overrided\";\n\t}\n\n\tpublic var numOfColors(default,null):Int;\n\t\n\tpublic function getColor(index:Int):C {\n\t\treturn _colors[index];\n\t}\n\t\n\tpublic function iterator():Iterator<C> {\n\t\treturn _colors.iterator();\n\t}\n\n\tpublic var primaryColor(get_primaryColor,set_primaryColor):C;\n\n\tprivate var _primaryColor:C;\n\tprivate function get_primaryColor():C {\n\t\treturn _primaryColor;\n\t}\n\tprivate function set_primaryColor(val:C):C {\n\t\t_primaryColor = val;\n\t\tgenerate();\n\t\treturn primaryColor;\n\t}\n\t\n\tprivate function new(primaryColor:C) {\n\t\t_colors = [];\n\t\t_primaryColor = primaryColor;\n\t\tnumOfColors = 1;\n\t}\n\n\tprivate var _colors:Array<C>;\n\tprivate var _class:Class<C>;\n\t\n\tprivate function generate():Void {\n\t\tthrow 'Method must be called by child class';\n\t}\n\t\n\tinline private function wrap(x : Float, min : Float,threshold : Float, plus : Float) : Float {\n\t\treturn ( x - min < threshold) ? x + plus : x - min;\n\t}\n\n\tprivate function mutateFromPrimary(newColor:Color):C {\n\t\tif (Std.is(newColor,_class)) {\n\t\t\treturn cast newColor.clone();\n\t\t} else {\n\t\t\treturn cast primaryColor.clone().fromRGB(newColor.toRGB());\n\t\t}\n\t}\n\n}\n"," /*\nAuthor: Andy Li (andy@onthewings.net)\nBased on colortoolkit (http://code.google.com/p/colortoolkit/)\n \nThe MIT License\n\nCopyright (c) 2009 P.J. Onori (pj@somerandomdude.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\npackage hxColorToolkit.schemes;\n\nimport hxColorToolkit.ColorToolkit;\nimport hxColorToolkit.spaces.HSB;\n\nclass Analogous<C:hxColorToolkit.spaces.Color> extends ColorWheelScheme<C> {\n\n\toverride public function clone():Analogous<C> {\n\t\treturn new Analogous<C>(primaryColor, angle, contrast);\n\t}\n\n\tpublic var angle(get_angle,set_angle): Float;\t\n\tpublic var contrast(get_contrast,set_contrast): Float;\n\n\tprivate var _angle:Float;\n\tprivate function get_angle():Float {\n\t\treturn _angle;\n\t}\n\tprivate function set_angle(val:Float):Float {\n\t\t_angle = val;\n\t\tgenerate();\n\t\treturn angle;\n\t}\n\n\tprivate var _contrast:Float;\n\tprivate function get_contrast():Float {\n\t\treturn _contrast;\n\t}\n\tprivate function set_contrast(val:Float):Float {\n\t\t_contrast = val;\n\t\tgenerate();\n\t\treturn _contrast;\n\t}\n\t\n\tpublic function new(primaryColor:C, ?angle:Float=10, ?contrast:Float=25)\n\t{\n\t\tsuper(primaryColor);\n\t\t_angle=angle;\n\t\t_contrast=contrast;\n\t\tgenerate();\n\t}\n\t\n\toverride function generate():Void\n\t{\n\t\t_colors = [primaryColor];\n\t\tvar _primaryHSB:HSB;\n\t\tif (Std.is(primaryColor,HSB)){\n\t\t\t_primaryHSB = untyped primaryColor;\n\t\t} else {\n\t\t\t_primaryHSB = new HSB().fromRGB(primaryColor.toRGB());\n\t\t}\n\t\tvar newHSB:HSB = new HSB();\n\t\tvar array: Array<Array<Float>> = [[1.0, 2.2], [2.0, 1.0], [-1.0, -0.5], [-2.0, 1.0]];\n\t\tfor (i in 0...array.length) {\n\t\t\tvar one = array[i][0];\n\t\t\tvar two = array[i][1];\n\t\t\t\n\t\t\tnewHSB.setColor(ColorToolkit.rybRotate(_primaryHSB.getColor(), angle * one));\n\t\t\tvar t: Float = 0.44 - two * 0.1;\n\t\t\tif(_primaryHSB.brightness - contrast * two < t) {\n\t\t\t\tnewHSB.brightness=t * 100;\n\t\t\t} else {\n\t\t\t\tnewHSB.brightness=_primaryHSB.brightness - contrast * two;\n\t\t\t}\n\t\t\tnewHSB.saturation= newHSB.saturation - 5;\n\t\t\t_colors.push(mutateFromPrimary(newHSB));\n\t\t}\n\t\tnumOfColors = _colors.length;\n\t}\n}\n"," /*\nAuthor: Andy Li (andy@onthewings.net)\nBased on colortoolkit (http://code.google.com/p/colortoolkit/)\n \nThe MIT License\n\nCopyright (c) 2009 P.J. Onori (pj@somerandomdude.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\npackage hxColorToolkit.schemes;\n\nimport hxColorToolkit.ColorToolkit;\nimport hxColorToolkit.spaces.HSB;\nimport hxColorToolkit.spaces.Color;\n\nclass Complementary<C:Color> extends ColorWheelScheme<C> {\n\n\toverride public function clone():Complementary<C> {\n\t\treturn new Complementary<C>(primaryColor);\n\t}\n\t\n\tpublic function new(primaryColor:C)\n\t{\n\t\tsuper(primaryColor);\n\t\tgenerate();\n\t}\n\t\n\toverride function generate():Void\n\t{\n\t\t_colors = [primaryColor];\n\t\tvar _primaryHSB:HSB;\n\t\tif (Std.is(primaryColor,HSB)){\n\t\t\t_primaryHSB = untyped primaryColor;\n\t\t} else {\n\t\t\t_primaryHSB = new HSB().fromRGB(primaryColor.toRGB());\n\t\t}\n\t\t\n\t\tvar contrasting: HSB = _primaryHSB.clone();\n\t\t\n\t\tif(_primaryHSB.brightness > 40) {\n\t\t\tcontrasting.brightness=10 + _primaryHSB.brightness * 0.25;\n\t\t} else {\n\t\t\tcontrasting.brightness=100 - _primaryHSB.brightness * 0.25;\n\t\t}\n\t\t_colors.push(mutateFromPrimary(contrasting));\n\t\t\n\t\tvar supporting: HSB = _primaryHSB.clone();\n\t\t\n\t\tsupporting.brightness=30 + _primaryHSB.brightness;\n\t\tsupporting.saturation=10 + _primaryHSB.saturation * 0.3;\n\t\t_colors.push(mutateFromPrimary(supporting));\n\t\t\n\t\t//complement\n\t\tvar complement:HSB = new HSB().setColor(ColorToolkit.rybRotate(_primaryColor.getColor(), 180));\n\t\t_colors.push(mutateFromPrimary(complement));\n\t\t\n\t\tvar contrastingComplement:HSB = complement.clone();\n\t\t\t\t\n\t\tif(complement.brightness > 30) {\n\t\t\tcontrastingComplement.brightness=10 + complement.brightness * 0.25;\n\t\t} else {\n\t\t\tcontrastingComplement.brightness=100 - complement.brightness * 0.25;\n\t\t}\n\t\t_colors.push(mutateFromPrimary(contrastingComplement));\n\t\t\n\t\tvar supportingComplement:HSB = complement.clone();\n\t\t\n\t\tsupportingComplement.brightness=30 + complement.brightness;\n\t\tsupportingComplement.saturation=10 + complement.saturation * 0.3;\n\t\t_colors.push(mutateFromPrimary(supportingComplement));\n\t\t\n\t\tnumOfColors = _colors.length;\n\t}\n\n}\n"," /*\nAuthor: Andy Li (andy@onthewings.net)\nBased on colortoolkit (http://code.google.com/p/colortoolkit/)\n \nThe MIT License\n\nCopyright (c) 2009 P.J. Onori (pj@somerandomdude.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\npackage hxColorToolkit.schemes;\n\nimport hxColorToolkit.ColorToolkit;\nimport hxColorToolkit.spaces.HSB;\nimport hxColorToolkit.spaces.Color;\n\nclass Compound<C:Color> extends ColorWheelScheme<C> {\n\n\toverride public function clone():Compound<C> {\n\t\treturn new Compound<C>(primaryColor);\n\t}\n\t\n\tpublic function new(primaryColor:C)\n\t{\n\t\tsuper(primaryColor);\n\t\tgenerate();\n\t}\n\t\n\toverride function generate():Void\n\t{\n\t\t_colors = [primaryColor];\n\t\tvar _primaryHSB:HSB;\n\t\tif (Std.is(primaryColor,HSB)){\n\t\t\t_primaryHSB = untyped primaryColor;\n\t\t} else {\n\t\t\t_primaryHSB = new HSB().fromRGB(primaryColor.toRGB());\n\t\t}\n\t\tvar _primary = _primaryColor.getColor();\n\t\t\n\t\tvar c1: HSB = new HSB().setColor(ColorToolkit.rybRotate(_primary, 30));\n\t\tc1.brightness=wrap(_primaryHSB.brightness, 25, 60, 25);\n\t\t_colors.push(mutateFromPrimary(c1));\n\n\t\tvar c2: HSB = new HSB().setColor(ColorToolkit.rybRotate(_primary, 30));\n\t\tc2.brightness=wrap(_primaryHSB.brightness, 40, 10, 40);\n\t\tc2.saturation=wrap(_primaryHSB.saturation, 40, 20, 40);\n\t\t_colors.push(mutateFromPrimary(c2));\n\t\t\n\t\tvar c3: HSB = new HSB().setColor(ColorToolkit.rybRotate(_primary, 160));\n\t\tc3.brightness=Math.max(20, _primaryHSB.brightness);\n\t\tc3.saturation=wrap(_primaryHSB.saturation, 25, 10, 25);\n\t\t_colors.push(mutateFromPrimary(c3));\n\t\n\t\tvar c4: HSB = new HSB().setColor(ColorToolkit.rybRotate(_primary, 150));\n\t\tc4.brightness=wrap(_primaryHSB.brightness, 30, 60, 30);\n\t\tc4.saturation=wrap(_primaryHSB.saturation, 10, 80, 10);\n\t\t_colors.push(mutateFromPrimary(c4));\n\n\t\tvar c5: HSB = new HSB().setColor(ColorToolkit.rybRotate(_primary, 150));\n\t\tc5.brightness=wrap(_primaryHSB.brightness, 40, 20, 40);\n\t\tc5.saturation=wrap(_primaryHSB.saturation, 10, 80, 10);\n\t\t_colors.push(mutateFromPrimary(c5));\n\n\t\tnumOfColors = _colors.length;\n\t}\n\n}\n"," /*\nAuthor: Andy Li (andy@onthewings.net)\nBased on colortoolkit (http://code.google.com/p/colortoolkit/)\n \nThe MIT License\n\nCopyright (c) 2009 P.J. Onori (pj@somerandomdude.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\npackage hxColorToolkit.schemes;\n\nimport hxColorToolkit.ColorToolkit;\nimport hxColorToolkit.spaces.HSB;\nimport hxColorToolkit.spaces.Color;\n\nclass FlippedCompound<C:Color> extends ColorWheelScheme<C> {\n\n\toverride public function clone():FlippedCompound<C> {\n\t\treturn new FlippedCompound<C>(primaryColor);\n\t}\n\t\n\tpublic function new(primaryColor:C)\n\t{\n\t\tsuper(primaryColor);\n\t\tgenerate();\n\t}\n\t\n\toverride function generate():Void\n\t{\n\t\t_colors = [primaryColor];\n\t\tvar _primaryHSB:HSB;\n\t\tif (Std.is(primaryColor,HSB)){\n\t\t\t_primaryHSB = untyped primaryColor;\n\t\t} else {\n\t\t\t_primaryHSB = new HSB().fromRGB(primaryColor.toRGB());\n\t\t}\n\t\tvar _primary = _primaryColor.getColor();\n\t\tvar d: Int = 1;\n\t\t\n\t\tvar c1: HSB = new HSB().setColor(ColorToolkit.rybRotate(_primary, 30 * -1));\n\t\tc1.brightness=wrap(_primaryHSB.brightness, 25, 60, 25);\n\t\t_colors.push(mutateFromPrimary(c1));\n\n\t\tvar c2: HSB = new HSB().setColor(ColorToolkit.rybRotate(_primary, 30 * -1));\n\t\tc2.brightness=wrap(_primaryHSB.brightness, 40, 10, 40);\n\t\tc2.saturation=wrap(_primaryHSB.saturation, 40, 20, 40);\n\t\t_colors.push(mutateFromPrimary(c2));\n\t\t\n\t\tvar c3: HSB = new HSB().setColor(ColorToolkit.rybRotate(_primary, 160 * -1));\n\t\tc3.brightness=Math.max(20, _primaryHSB.brightness);\n\t\tc3.saturation=wrap(_primaryHSB.saturation, 25, 10, 25);\n\t\t_colors.push(mutateFromPrimary(c3));\n\t\n\t\tvar c4: HSB = new HSB().setColor(ColorToolkit.rybRotate(_primary, 150 * -1));\n\t\tc4.brightness=wrap(_primaryHSB.brightness, 30, 60, 30);\n\t\tc4.saturation=wrap(_primaryHSB.saturation, 10, 80, 10);\n\t\t_colors.push(mutateFromPrimary(c4));\n\n\t\tvar c5: HSB = new HSB().setColor(ColorToolkit.rybRotate(_primary, 150 * -1));\n\t\tc5.brightness=wrap(_primaryHSB.brightness, 40, 20, 40);\n\t\tc5.saturation=wrap(_primaryHSB.saturation, 10, 80, 10);\n\t\t_colors.push(mutateFromPrimary(c5));\n\n\t\tnumOfColors = _colors.length;\n\t}\n\n}\n"," /*\nAuthor: Andy Li (andy@onthewings.net)\nBased on colortoolkit (http://code.google.com/p/colortoolkit/)\n \nThe MIT License\n\nCopyright (c) 2009 P.J. Onori (pj@somerandomdude.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\npackage hxColorToolkit.schemes;\n\nimport hxColorToolkit.spaces.HSB;\nimport hxColorToolkit.spaces.Color;\n\nclass Monochrome<C:Color> extends ColorWheelScheme<C> {\n\n\toverride public function clone():Monochrome<C> {\n\t\treturn new Monochrome<C>(primaryColor);\n\t}\n\t\n\tpublic function new(primaryColor:C)\n\t{\n\t\tsuper(primaryColor);\n\t\tgenerate();\n\t}\n\t\n\toverride function generate():Void\n\t{\n\t\t_colors = [primaryColor];\n\t\tvar _primaryHSB:HSB;\n\t\tif (Std.is(primaryColor,HSB)){\n\t\t\t_primaryHSB = untyped primaryColor;\n\t\t} else {\n\t\t\t_primaryHSB = new HSB().fromRGB(primaryColor.toRGB());\n\t\t}\n\t\t\n\t\tvar c1:HSB = _primaryHSB.clone();\n\t\tc1.brightness=wrap(_primaryHSB.brightness, 50, 20, 30);\n\t\tc1.saturation=wrap(_primaryHSB.saturation, 30, 10, 20);\n\t\t_colors.push(mutateFromPrimary(c1));\n\t\t\n\t\tvar c2:HSB = _primaryHSB.clone();\n\t\tc2.brightness=wrap(_primaryHSB.brightness, 20, 20, 60);\n\t\t_colors.push(mutateFromPrimary(c2));\n\n\t\tvar c3:HSB = _primaryHSB.clone();\n\t\tc3.brightness=Math.max(20, _primaryHSB.brightness + (100 - _primaryHSB.brightness ) * 0.2);\n\t\tc3.saturation=wrap(_primaryHSB.saturation, 30, 10, 30);\n\t\t_colors.push(mutateFromPrimary(c3));\n\n\t\tvar c4:HSB = _primaryHSB.clone();\n\t\tc4.brightness=wrap(_primaryHSB.brightness, 50, 20, 30);\n\t\t_colors.push(mutateFromPrimary(c4));\n\n\t\tnumOfColors = _colors.length;\n\t}\n\n}\n"," /*\nAuthor: Andy Li (andy@onthewings.net)\nBased on colortoolkit (http://code.google.com/p/colortoolkit/)\n \nThe MIT License\n\nCopyright (c) 2009 P.J. Onori (pj@somerandomdude.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\npackage hxColorToolkit.schemes;\n\nimport hxColorToolkit.ColorToolkit;\nimport hxColorToolkit.spaces.HSB;\nimport hxColorToolkit.spaces.Color;\n\nclass SplitComplementary<C:Color> extends ColorWheelScheme<C> {\n\n\toverride public function clone():SplitComplementary<C> {\n\t\treturn new SplitComplementary<C>(primaryColor);\n\t}\n\t\n\tpublic function new(primaryColor:C)\n\t{\n\t\tsuper(primaryColor);\n\t\tgenerate();\n\t}\n\t\n\toverride function generate():Void\n\t{\n\t\t_colors = [primaryColor];\n\t\tvar _primary = _primaryColor.getColor();\n\t\tvar c1:HSB = new HSB().setColor(ColorToolkit.rybRotate(_primary, 150));\n\t\tvar c2:HSB = new HSB().setColor(ColorToolkit.rybRotate(_primary, 210));\n\t\t\n\t\tc1.brightness+=10;\n\t\tc2.brightness+=10;\n\t\t\n\t\t_colors.push(mutateFromPrimary(c1));\n\t\t_colors.push(mutateFromPrimary(c2));\n\n\t\tnumOfColors = _colors.length;\n\t}\n\n}\n"," /*\nAuthor: Andy Li (andy@onthewings.net)\nBased on colortoolkit (http://code.google.com/p/colortoolkit/)\n \nThe MIT License\n\nCopyright (c) 2009 P.J. Onori (pj@somerandomdude.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\npackage hxColorToolkit.schemes;\n\nimport hxColorToolkit.ColorToolkit;\nimport hxColorToolkit.spaces.HSB;\nimport hxColorToolkit.spaces.Color;\n\nclass Tetrad<C:Color> extends ColorWheelScheme<C> {\n\n\toverride public function clone():Tetrad<C> {\n\t\treturn new Tetrad<C>(primaryColor,angle,alt);\n\t}\n\t\n\tpublic var angle(get_angle, set_angle) : Float;\n\tprivate var _angle:Float;\n\tprivate function get_angle():Float{\n\t\treturn _angle;\n\t}\n\tprivate function set_angle(value:Float):Float{\n\t\t_angle=value;\n\t\tgenerate();\t\n\t\treturn value;\n\t}\n\t\n\tpublic var alt(get_alt,set_alt):Bool;\n\tprivate var _alt:Bool;\n\tprivate function get_alt():Bool {\n\t\treturn _alt;\n\t}\n\tprivate function set_alt(val:Bool):Bool {\n\t\t_alt = val;\n\t\tgenerate();\n\t\treturn alt;\n\t}\n\t\n\tpublic function new(primaryColor:C, ?angle:Float = 90, ?alt:Bool = false)\n\t{\n\t\tsuper(primaryColor);\n\t\t_angle = angle;\n\t\t_alt = alt;\n\t\tgenerate();\n\t}\n\t\n\toverride function generate():Void\n\t{\n\t\t_colors = [primaryColor];\n\t\tvar _primaryHSB:HSB;\n\t\tif (Std.is(primaryColor,HSB)){\n\t\t\t_primaryHSB = untyped primaryColor;\n\t\t} else {\n\t\t\t_primaryHSB = new HSB().fromRGB(primaryColor.toRGB());\n\t\t}\n\t\tvar _primary = _primaryColor.getColor();\n\t\t\n\t\tvar c1:HSB = new HSB().setColor(ColorToolkit.rybRotate(_primary, _angle));\n\t\tvar multiplier;\n\t\tif(!alt)\n\t\t{\n\t\t\tif(_primaryHSB.brightness < 50) {\n\t\t\tc1.brightness+=20;\n\t\t\t} else {\n\t\t\t\tc1.brightness-=20;\n\t\t\t}\n\t\t} else {\n\t\t\tmultiplier = (50-_primaryHSB.brightness)/50;\n\t\t\tc1.brightness=c1.brightness+Math.min(20, Math.max(-20,20*multiplier));\n\t\t}\n\t\t\t\t\t\t   \n\t\t_colors.push(mutateFromPrimary(c1));\n\t\t\n\t\tvar c2:HSB = new HSB().setColor(ColorToolkit.rybRotate(_primary, _angle * 2));\n\t\tif(!alt)\n\t\t{\n\t\t\tif(_primaryHSB.brightness > 50) {\n\t\t\tc2.brightness+=10;\n\t\t\t} else {\n\t\t\t\tc2.brightness-=10;\n\t\t\t}\n\t\t} else {\n\t\t\tmultiplier = (50-_primaryHSB.brightness)/50;\n\t\t\tc2.brightness=c2.brightness+Math.min(10, Math.max(-10,10*multiplier));\n\t\t}\n\t\t\n\t\t_colors.push(mutateFromPrimary(c2));\n\t\t\n\t\tvar c3:HSB = new HSB().setColor(ColorToolkit.rybRotate(_primary, _angle * 3));\n\t\tc3.brightness+=10;\n\t\t_colors.push(mutateFromPrimary(c3));\n\n\t\tnumOfColors = _colors.length;\n\t}\n\n}\n"," /*\nAuthor: Andy Li (andy@onthewings.net)\nBased on colortoolkit (http://code.google.com/p/colortoolkit/)\n \nThe MIT License\n\nCopyright (c) 2009 P.J. Onori (pj@somerandomdude.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\npackage hxColorToolkit.schemes;\n\nimport hxColorToolkit.ColorToolkit;\nimport hxColorToolkit.spaces.HSB;\nimport hxColorToolkit.spaces.Color;\n\nclass Triad<C:Color> extends ColorWheelScheme<C> {\n\n\toverride public function clone() {\n\t\treturn new Triad<C>(primaryColor,angle);\n\t}\n\t\n\tpublic var angle(get_angle, set_angle) : Float;\n\tvar _angle:Float;\n\t\n\tpublic function get_angle():Float{\n\t\treturn _angle;\n\t}\n\tpublic function set_angle(value:Float):Float{\n\t\t_angle=value;\n\t\tgenerate();\t\n\t\treturn angle;\n\t}\n\t\n\tpublic function new(primaryColor:C, ?angle:Float=120)\n\t{\n\t\tsuper(primaryColor);\n\t\t_angle=angle;\n\t\tgenerate();\n\t}\n\t\n\toverride function generate():Void\n\t{\n\t\t_colors = [primaryColor];\n\t\tvar _primary = _primaryColor.getColor();\n\t\t\n\t\tvar c1:HSB = new HSB().setColor(ColorToolkit.rybRotate(_primary, _angle));\n\n\t\tc1.brightness+=10;\n\t\t_colors.push(mutateFromPrimary(c1));\t\n\n\t\tvar c2:HSB = new HSB().setColor(ColorToolkit.rybRotate(_primary, -_angle));\n\t\t\n\t\tc2.brightness+=10;\n\t\t_colors.push(mutateFromPrimary(c2));\t\n\n\t\tnumOfColors = _colors.length;\n\t}\n\n}\n"," /*\nAuthor: Andy Li (andy@onthewings.net)\nBased on colortoolkit (http://code.google.com/p/colortoolkit/)\n \nThe MIT License\n\nCopyright (c) 2009 P.J. Onori (pj@somerandomdude.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\npackage hxColorToolkit.spaces;\n\nclass RGB implements Color {\n\n\tpublic var numOfChannels(default,null):Int;\n\n\tpublic function getValue(channel:Int):Float {\n\t\treturn data[channel];\n\t}\n\tpublic function setValue(channel:Int,val:Float):Float {\n\t\tdata[channel] = Math.min(maxValue(channel), Math.max(val, minValue(channel)));\n\t\treturn val;\n\t}\n\n\tinline public function minValue(channel:Int):Float {\n\t\treturn 0;\n\t}\n\tinline public function maxValue(channel:Int):Float {\n\t\treturn 255;\n\t}\n\n\t/**\n\t * Red color channel\n\t * @return Number (between 0 and 255)\n\t */\t\n\tpublic var red(get_red, set_red) : Float;\n\t\n\t/**\n\t * Green color channel\n\t * @return Number (between 0 and 255)\n\t */\t\n\tpublic var green(get_green, set_green) : Float;\n\n\t/**\n\t * Blue color channel\n\t * @return Number (between 0 and 255)\n\t */\t\n\tpublic var blue(get_blue, set_blue) : Float;\n\n\tprivate function get_red():Float{\n\t\treturn getValue(0);\n\t}\n\n\tprivate function set_red(value:Float):Float{\n\t\treturn setValue(0,value);\n\t}\n\t\n\tprivate function get_green():Float{\n\t\treturn getValue(1);\n\t}\n\t\n\tprivate function set_green(value:Float):Float{\n\t\treturn setValue(1,value);\n\t}\n\t\n\tprivate function get_blue():Float{\n\t\treturn getValue(2);\n\t}\n\t\n\tprivate function set_blue(value:Float):Float{\n\t\treturn setValue(2,value);\n\t}\n\t\n\tpublic function toRGB():RGB {\n\t\treturn clone();\n\t}\n\t\n\t/**\n\t * Hexidecimal RGB translation of color\n\t * @return Hexidecimal color value\n\t * \n\t */\n\tpublic function getColor():Int{\n\t\treturn (Math.round(red) << 16) | (Math.round(green) << 8) | Math.round(blue);\n\t}\n\t\n\tpublic function fromRGB(rgb:RGB):RGB {\n\t\tthis.red = rgb.red;\n\t\tthis.green = rgb.green;\n\t\tthis.blue = rgb.blue;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Hexidecimal RGB translation of color\n\t * @param value Hexidecimal color value\n\t * \n\t */\t\n\tpublic function setColor(color:Int):RGB{\n\t\tthis.red = color >> 16 & 0xFF;\n\t\tthis.green = color >> 8 & 0xFF;\n\t\tthis.blue = color & 0xFF;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * \n\t * @param r Number (between 0 and 255)\n\t * @param g Number (between 0 and 255)\n\t * @param b Number (between 0 and 255)\n\t * \n\t */\t\t\n\tpublic function new(?r:Float=0, ?g:Float=0, ?b:Float=0)\n\t{\n\t\tnumOfChannels = 3;\n\t\tdata = [];\n\t\tthis.red = r;\n\t\tthis.green = g;\n\t\tthis.blue = b;\n\t}\n\t\n\tpublic function clone() { return new RGB(red, green, blue); }\n\t\n\tpublic function interpolate(target:Color, ratio:Float = 0.5):RGB {\n\t\tvar target:RGB = Std.is(target,RGB) ? cast target : new RGB().fromRGB(target.toRGB());\n\t\treturn new RGB\n\t\t\t(\n\t\t\t\tred + (target.red - red) * ratio, \n\t\t\t\tgreen + (target.green - green) * ratio, \n\t\t\t\tblue + (target.blue - blue) * ratio\n\t\t\t);\n\t}\n\n\tprivate var data:Array<Float>;\n}\n"," /*\nAuthor: Andy Li (andy@onthewings.net)\nBased on colortoolkit (http://code.google.com/p/colortoolkit/)\n \nThe MIT License\n\nCopyright (c) 2009 P.J. Onori (pj@somerandomdude.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\npackage hxColorToolkit.spaces;\n\nclass ARGB extends RGB {\n\t/**\n\t * Alpha color channel\n\t * @return Number (between 0 and 255)\n\t */\t\n\tpublic var alpha(get_alpha, set_alpha) : Float;\n\n\tprivate function get_alpha():Float{\n\t\treturn getValue(0);\n\t}\n\n\tprivate function set_alpha(value:Float):Float{\n\t\treturn setValue(0,value);\n\t}\n\n\toverride private function get_red():Float{\n\t\treturn getValue(1);\n\t}\n\n\toverride private function set_red(value:Float):Float{\n\t\treturn setValue(1,value);\n\t}\n\t\n\toverride private function get_green():Float{\n\t\treturn getValue(2);\n\t}\n\t\n\toverride private function set_green(value:Float):Float{\n\t\treturn setValue(2,value);\n\t}\n\t\n\toverride private function get_blue():Float{\n\t\treturn getValue(3);\n\t}\n\t\n\toverride private function set_blue(value:Float):Float{\n\t\treturn setValue(3,value);\n\t}\n\t\n\toverride public function toRGB():RGB {\n\t\treturn new RGB(red, green, blue);\n\t}\n\t\n\tinline public function toARGB():ARGB {\n\t\treturn clone();\n\t}\n\t\n\t/**\n\t * Hexidecimal RGB translation of color\n\t * @return Hexidecimal color value\n\t * \n\t */\n\toverride public function getColor():Int{\n\t\treturn (Math.round(alpha) << 24) | (Math.round(red) << 16) | (Math.round(green) << 8) | Math.round(blue);\n\t}\n\t\n\toverride public function fromRGB(rgb:RGB):ARGB {\n\t\tthis.alpha = 0xFF;\n\t\tthis.red = rgb.red;\n\t\tthis.green = rgb.green;\n\t\tthis.blue = rgb.blue;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Hexidecimal RGB translation of color\n\t * @param value Hexidecimal color value\n\t * \n\t */\t\n\toverride public function setColor(color:Int):ARGB{\n\t\tthis.alpha = color >> 24 & 0xFF;\n\t\tthis.red = color >> 16 & 0xFF;\n\t\tthis.green = color >> 8 & 0xFF;\n\t\tthis.blue = color & 0xFF;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * \n\t * @param a Number (between 0 and 255)\n\t * @param r Number (between 0 and 255)\n\t * @param g Number (between 0 and 255)\n\t * @param b Number (between 0 and 255)\n\t * \n\t */\t\t\n\tpublic function new(?a:Float=0xFF, ?r:Float=0, ?g:Float=0, ?b:Float=0)\n\t{\n\t\tsuper(r, g, b);\n\t\tnumOfChannels = 4;\n\t\tthis.alpha = a;\n\t}\n\t\n\toverride public function clone() { return new ARGB(alpha, red, green, blue); }\n\t\n\toverride public function interpolate(target:Color, ratio:Float = 0.5):RGB {\n\t\tvar target:ARGB = Std.is(target,ARGB) ? cast target : new ARGB().fromRGB(target.toRGB());\n\t\treturn new ARGB\n\t\t\t(\n\t\t\t\talpha + (target.alpha - alpha) * ratio, \n\t\t\t\tred + (target.red - red) * ratio, \n\t\t\t\tgreen + (target.green - green) * ratio, \n\t\t\t\tblue + (target.blue - blue) * ratio\n\t\t\t);\n\t}\n}\n"," /*\nAuthor: Andy Li (andy@onthewings.net)\nBased on colortoolkit (http://code.google.com/p/colortoolkit/)\n \nThe MIT License\n\nCopyright (c) 2009 P.J. Onori (pj@somerandomdude.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n \npackage hxColorToolkit.spaces;\n\nclass CMYK implements Color {\n\n\tpublic var numOfChannels(default,null):Int;\n\n\tpublic function getValue(channel:Int):Float {\n\t\treturn data[channel];\n\t}\n\tpublic function setValue(channel:Int,val:Float):Float {\n\t\tdata[channel] = Math.min(maxValue(channel), Math.max(val, minValue(channel)));\n\t\treturn val;\n\t}\n\n\tinline public function minValue(channel:Int):Float {\n\t\treturn 0;\n\t}\n\tinline public function maxValue(channel:Int):Float {\n\t\treturn 100;\n\t}\n\n\t/**\n\t * Black color channel\n\t * @return Number (between 0 and 100)\n\t */\n\tpublic var black(get_black, set_black) : Float;\n\n\t/**\n\t * Cyan color channel\n\t * @return Number (between 0 and 100)\n\t */\n\tpublic var cyan(get_cyan, set_cyan) : Float;\n\n\t/**\n\t * Magenta color channel\n\t * @return Number (between 0 and 100)\n\t */\n\tpublic var magenta(get_magenta, set_magenta) : Float;\n\n\t/**\n\t * Yellow color channel\n\t * @return Number (between 0 and 100)\n\t */\n\tpublic var yellow(get_yellow, set_yellow) : Float;\n\t\n\t\n\tprivate function get_cyan():Float {\n\t\treturn getValue(0);\n\t}\n\t\n\tprivate function set_cyan(value:Float):Float {\n\t\treturn setValue(0,value);\n\t}\n\t\n\tprivate function get_magenta():Float {\n\t\treturn getValue(1);\n\t}\n\t\n\tprivate function set_magenta(value:Float):Float {\n\t\treturn setValue(1,value);\n\t}\n\t\n\tprivate function get_yellow():Float {\n\t\treturn getValue(2);\n\t}\n\t\n\tprivate function set_yellow(value:Float):Float {\n\t\treturn setValue(2,value);\n\t}\n\t\n\tprivate function get_black():Float {\n\t\treturn getValue(3);\n\t}\n\t\n\tprivate function set_black(value:Float):Float {\n\t\treturn setValue(3,value);\n\t}\n\t\n\tpublic function toRGB():RGB {\n\t\tvar cyan = Math.min(100, cyan + black);\n\t\tvar magenta = Math.min(100, magenta + black);\n\t\tvar yellow = Math.min(100, yellow + black);\n\t\t\n\t\treturn new RGB((100 - cyan) * 2.55, (100 - magenta) * 2.55, (100 - yellow) * 2.55);\n\t}\n\t\n\t/**\n\t * Hexidecimal RGB translation of CMYK color\n\t * @return Hexidecimal color value\n\t */\t\t\n\tpublic function getColor():Int {\n\t\treturn toRGB().getColor();\n\t}\n\t\n\tpublic function fromRGB(rgb:RGB):CMYK {\n\t\tvar r = rgb.red;\n\t\tvar g = rgb.green;\n\t\tvar b = rgb.blue;\n\t\t\n\t\tvar c:Float = 1 - ( r / 255 );\n\t\tvar m:Float = 1 - ( g / 255 );\n\t\tvar y:Float = 1 - ( b / 255 );\n\t\tvar k:Float;\n\t\tvar var_K:Float = 1;\n\n\t\tif ( c < var_K )   var_K = c;\n\t\tif ( m < var_K )   var_K = m;\n\t\tif ( y < var_K )   var_K = y;\n\t\tif ( var_K == 1 ) { //Black\n\t\t\tc = m = y = 0;\n\t\t}\n\t\telse {\n\t\t\tc = ( c - var_K ) / ( 1 - var_K ) *100;\n\t\t\tm = ( m - var_K ) / ( 1 - var_K ) *100;\n\t\t\ty = ( y - var_K ) / ( 1 - var_K ) *100;\n\t\t}\n\t\tk = var_K*100;\n\n\t\tthis.cyan = c;\n\t\tthis.magenta = m;\n\t\tthis.yellow = y;\n\t\tthis.black = k;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Hexidecimal RGB translation of CMYK color\n\t * @param value Hexidecimal color value\n\t */\t\t\n\tpublic function setColor(color:Int):CMYK{\n\t\treturn fromRGB(new RGB(color >> 16 & 0xFF, color >> 8 & 0xFF, color & 0xFF));\n\t}\n\t\n\t/**\n\t * @param cyan Number (between 0 and 100)\n\t * @param magenta Number (between 0 and 100)\n\t * @param yellow Number (between 0 and 100)\n\t * @param black Number (between 0 and 100)\n\t */\t\t\n\tpublic function new(?cyan:Float=0, ?magenta:Float=0, ?yellow:Float=0, ?black:Float=0)\n\t{\n\t\tnumOfChannels = 4;\n\t\tdata = [];\n\t\tthis.cyan = cyan;\n\t\tthis.magenta = magenta;\n\t\tthis.yellow = yellow;\n\t\tthis.black = black;\n\t}\n\t\n\tpublic function clone() { return new CMYK(cyan, magenta, yellow, black); }\n\t\n\tpublic function interpolate(target:Color, ratio:Float = 0.5):CMYK {\n\t\tvar target:CMYK = Std.is(target,CMYK) ? cast target : new CMYK().fromRGB(target.toRGB());\n\t\treturn new CMYK\n\t\t\t(\n\t\t\t\tcyan + (target.cyan - cyan) * ratio, \n\t\t\t\tmagenta + (target.magenta - magenta) * ratio, \n\t\t\t\tyellow + (target.yellow - yellow) * ratio, \n\t\t\t\tblack + (target.black - black) * ratio\n\t\t\t);\n\t}\n\n\tprivate var data:Array<Float>;\n}\n"," /*\nAuthor: Andy Li (andy@onthewings.net)\nBased on colortoolkit (http://code.google.com/p/colortoolkit/)\n \nThe MIT License\n\nCopyright (c) 2009 P.J. Onori (pj@somerandomdude.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n \npackage hxColorToolkit.spaces;\n\nclass Gray implements Color {\n\t\n\tpublic var numOfChannels(default,null):Int;\n\n\tpublic function getValue(channel:Int):Float {\n\t\treturn data[channel];\n\t}\n\tpublic function setValue(channel:Int,val:Float):Float {\n\t\tdata[channel] = Math.min(maxValue(channel), Math.max(val, minValue(channel)));\n\t\treturn val;\n\t}\n\n\tinline public function minValue(channel:Int):Float {\n\t\treturn 0;\n\t}\n\tinline public function maxValue(channel:Int):Float {\n\t\treturn 255;\n\t}\n\n\t/**\n\t * Single gray channel value (not the hexidecimal color)\n\t * @return Number (between 0 and 255)\n\t * \n\t */\t\n\tpublic var gray(get_gray, set_gray) : Float;\n\t\n\tprivate function get_gray():Float{ \n\t\treturn getValue(0);\n\t}\n\t\n\tprivate function set_gray(value:Float):Float{\n\t\treturn setValue(0,value);\n\t}\n\t\n\tpublic function toRGB():RGB {\n\t\treturn new RGB(gray, gray, gray);\n\t}\n\t\n\t/**\n\t * Grayscale color value\n\t * @return Hexidecimal grayscale color\n\t * \n\t */\t\n\tpublic function getColor():Int {\n\t\treturn toRGB().getColor();\n\t}\n\t\n\tpublic function fromRGB(rgb:RGB):Gray {\n\t\tthis.gray = 0.3 * rgb.red + 0.59 * rgb.green + 0.11 * rgb.blue;\n\t\treturn this;\n\t}\n\n\tpublic function setColor(color:Int):Gray {\n\t\treturn fromRGB(new RGB(color >> 16 & 0xFF, color >> 8 & 0xFF, color & 0xFF));\n\t}\n\t\n\t/**\n\t * Single gray channel value (not the hexidecimal color)\n\t * @param value Number between 0 and 255);\n\t * \n\t */\t\n\tpublic function new(?gray:Float=0):Void {\n\t\tnumOfChannels = 1;\n\t\tdata = [];\n\t\tthis.gray=gray;\n\t}\n\t\n\tpublic function clone() { return new Gray(gray); }\n\t\n\tpublic function interpolate(target:Color, ratio:Float = 0.5):Gray {\n\t\tvar target:Gray = Std.is(target,Gray) ? cast target : new Gray().fromRGB(target.toRGB());\n\t\treturn new Gray\n\t\t\t(\n\t\t\t\tgray + (target.gray - gray) * ratio\n\t\t\t);\n\t}\n\n\tprivate var data:Array<Float>;\n}\n"," /*\nAuthor: Andy Li (andy@onthewings.net)\nBased on colortoolkit (http://code.google.com/p/colortoolkit/)\n \nThe MIT License\n\nCopyright (c) 2009 P.J. Onori (pj@somerandomdude.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\npackage hxColorToolkit.spaces;\n\nclass HSB implements Color {\n\n\tpublic var numOfChannels(default,null):Int;\n\n\tpublic function getValue(channel:Int):Float {\n\t\treturn data[channel];\n\t}\n\tpublic function setValue(channel:Int, val:Float):Float {\n\t\tdata[channel] = \n\t\t\tif (channel == 0) {\n\t\t\t\tloop(val, 360);\n\t\t\t} else {\n\t\t\t\tMath.min(maxValue(channel), Math.max(val, minValue(channel)));\n\t\t\t}\n\t\t\n\t\treturn val;\n\t}\n\n\tinline public function minValue(channel:Int):Float {\n\t\treturn 0;\n\t}\n\tinline public function maxValue(channel:Int):Float {\n\t\treturn channel == 0 ? 360 : 100;\n\t}\n\n\t/**\n\t * Hue color value\n\t * @return Number (between 0 and 360)\n\t */\t\n\tpublic var hue(get_hue, set_hue) : Float;\n\n\t/**\n\t * Saturation color value\n\t * @return Number (between 0 and 100)\n\t */\t\n\tpublic var saturation(get_saturation, set_saturation) : Float;\n\n\t/**\n\t * Black color value\n\t * @param value Number (between 0 and 100)\n\t */\t\n\tpublic var brightness(get_brightness, set_brightness) : Float;\n\t\n\t\n\tprivate function get_hue():Float{\n\t\treturn getValue(0);\n\t}\n\n\tprivate function set_hue(val:Float):Float{\n\t\tdata[0] = loop(val, 360);\n\t\treturn val;\n\t}\n\t\n\tprivate function get_saturation():Float{\n\t\treturn getValue(1);\n\t}\n\t\n\tprivate function set_saturation(val:Float):Float{\n\t\tdata[1] = Math.min(100, Math.max(val, 0));\n\t\treturn val;\n\t}\n\t\n\tprivate function get_brightness():Float{\n\t\treturn getValue(2);\n\t}\n\t\n\tprivate function set_brightness(val:Float):Float{\n\t\tdata[2] = Math.min(100, Math.max(val, 0));\n\t\treturn val;\n\t}\n\t\n\tpublic function toRGB():RGB {\n\t\tvar hue = hue; \n\t\tvar saturation = saturation;\n\t\tvar brightness = brightness;\n\t\tvar r:Float = 0, g:Float = 0, b:Float = 0, i:Float, f:Float, p:Float, q:Float, t:Float;\n\t\thue%=360;\n\t\tif(brightness==0) \n\t\t{\n\t\t\treturn new RGB();\n\t\t}\n\t\tsaturation*=0.01;\n\t\tbrightness*=0.01;\n\t\thue/=60;\n\t\ti = Math.floor(hue);\n\t\tf = hue-i;\n\t\tp = brightness*(1-saturation);\n\t\tq = brightness*(1-(saturation*f));\n\t\tt = brightness*(1-(saturation*(1-f)));\n\t\tif (i==0) {r=brightness; g=t; b=p;}\n\t\telse if (i==1) {r=q; g=brightness; b=p;}\n\t\telse if (i==2) {r=p; g=brightness; b=t;}\n\t\telse if (i==3) {r=p; g=q; b=brightness;}\n\t\telse if (i==4) {r=t; g=p; b=brightness;}\n\t\telse if (i==5) {r=brightness; g=p; b=q;}\n\n\t\treturn new RGB(r * 255, g * 255, b * 255);\n\t}\n\t\n\t/**\n\t * Hexidecimal RGB translation of HSB color\n\t * @return Hexidecimal color value\n\t * \n\t */\t\n\tpublic function getColor():Int {\n\t\treturn toRGB().getColor();\n\t}\n\t\n\tpublic function fromRGB(rgb:RGB):HSB {\n\t\tvar r:Float = rgb.red;\n\t\tvar g:Float = rgb.green;\n\t\tvar b:Float = rgb.blue;\n\t\t\n\t\tr/=255;\n\t\tg/=255;\n\t\tb/=255;\n\t\t\n\t\tvar h:Float, s:Float, v:Float;\n\t\tvar min:Float, max:Float, delta:Float;\n\n\t\tmin = Math.min( r, Math.min(g, b) );\n\t\tmax = Math.max( r, Math.max(g, b) );\n\t\t\n\t\tv = max*100;\n\n\t\tdelta = max - min;\n\n\t\tif( max != 0 )\n\t\t{\n\t\t\ts = (delta / max)*100;\n\t\t} else {\n\t\t\ts = 0;\n\t\t\th = -1;\n\t\t\t\n\t\t\tthis.hue = h;\n\t\t\tthis.saturation = s;\n\t\t\tthis.brightness = v;\n\t\t\treturn this;\n\t\t}\n\n\t\tif (delta == 0) {\n\t\t\tthis.hue = 0;\n\t\t\tthis.saturation = s;\n\t\t\tthis.brightness = v;\n\t\t\treturn this;\n\t\t}\n\n\t\tif( r == max )\n\t\t{\n\t\t\th = ( g - b ) / delta;\n\t\t} else if( g == max ) {\n\t\t\th = 2 + ( b - r ) / delta;\n\t\t} else {\n\t\t\th = 4 + ( r - g ) / delta;\n\t\t}\n\n\t\th *= 60;\n\t\tif( h < 0 ) h += 360;\n\t\t\n\t\tthis.hue = h;\n\t\tthis.saturation = s;\n\t\tthis.brightness = v;\n\t\t\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Hexidecimal RGB translation of HSB color\n\t * @param value Hexidecimal color value\n\t * \n\t */\t\t\n\tpublic function setColor(color:Int):HSB{\n\t\treturn fromRGB(new RGB(color >> 16 & 0xFF, color >> 8 & 0xFF, color & 0xFF));\n\t}\n\t\n\t/**\n\t * @param hue (between 0 and 360)\n\t * @param saturation (between 0 and 100)\n\t * @param black (between 0 and 100)\n\t */\t\t\n\tpublic function new(?hue:Float=0, ?saturation:Float=0, ?brightness:Float=0):Void {\n\t\tnumOfChannels = 3;\n\t\tdata = [];\n\t\tthis.hue = hue;\n\t\tthis.saturation = saturation;\n\t\tthis.brightness = brightness;\n\t}\n\n\tpublic function clone() { return new HSB(hue, saturation, brightness); }\n\t\n\tpublic function interpolate(target:Color, ratio:Float = 0.5):HSB {\n\t\tvar target:HSB = Std.is(target,HSB) ? cast target : new HSB().fromRGB(target.toRGB());\n\t\treturn new HSB\n\t\t\t(\n\t\t\t\thue + (target.hue - hue) * ratio, \n\t\t\t\tsaturation + (target.saturation - saturation) * ratio, \n\t\t\t\tbrightness + (target.brightness - brightness) * ratio\n\t\t\t);\n\t}\n\n\tprivate var data:Array<Float>;\n\t\n\tstatic function loop(index:Float, length:Float):Float {\n\t\tif (index < 0)\n\t\t\tindex = length + index % length;\n\t\t\n\t\tif (index >= length)\n\t\t\tindex %= length;\n\t\t\n\t\treturn index;\n\t}\n}\n"," /*\nAuthor: Andy Li (andy@onthewings.net)\nBased on colortoolkit (http://code.google.com/p/colortoolkit/)\n \nThe MIT License\n\nCopyright (c) 2009 P.J. Onori (pj@somerandomdude.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\npackage hxColorToolkit.spaces;\n\nclass HSL implements Color {\n\n\tpublic var numOfChannels(default,null):Int;\n\n\tpublic function getValue(channel:Int):Float {\n\t\treturn data[channel];\n\t}\n\tpublic function setValue(channel:Int, val:Float):Float {\n\t\tdata[channel] = \n\t\t\tif (channel == 0) {\n\t\t\t\tloop(val, 360);\n\t\t\t} else {\n\t\t\t\tMath.min(maxValue(channel), Math.max(val, minValue(channel)));\n\t\t\t}\n\t\t\n\t\treturn val;\n\t}\n\n\tinline public function minValue(channel:Int):Float {\n\t\treturn 0;\n\t}\n\tinline public function maxValue(channel:Int):Float {\n\t\treturn channel == 0 ? 360 : 100;\n\t}\n\t\n\t/**\n\t * Hue color value\n\t * @return Number (between 0 and 360)\n\t */\t\n\tpublic var hue(get_hue, set_hue) : Float;\n\t\n\t/**\n\t * Saturation color value\n\t * @return Number (between 0 and 100)\n\t */\t\t\n\tpublic var saturation(get_saturation, set_saturation) : Float;\n\n\t/**\n\t * Black color value\n\t * @return Number (between 0 and 100)\n\t */\t\n\tpublic var lightness(get_lightness, set_lightness) : Float;\n\t\n\t\n\tprivate function get_hue():Float{\n\t\treturn getValue(0);\n\t}\n\n\tprivate function set_hue(val:Float):Float{\n\t\tdata[0] = loop(val, 360);\n\t\treturn val;\n\t}\n\t\n\tprivate function get_saturation():Float{\n\t\treturn getValue(1);\n\t}\n\t\n\tprivate function set_saturation(val:Float):Float{\n\t\tdata[1] = Math.min(100, Math.max(val, 0));\n\t\treturn val;\n\t}\n\t\n\tprivate function get_lightness():Float{\n\t\treturn getValue(2);\n\t}\n\t\n\tprivate function set_lightness(val:Float):Float{\n\t\tdata[2] = Math.min(100, Math.max(val, 0));\n\t\treturn val;\n\t}\n\t\n\tpublic function toRGB():RGB {\n\t\tvar hue = hue/360; \n\t\tvar saturation = saturation*0.01;\n\t\tvar lightness = lightness*0.01;\n\t\t\n\t\tvar r:Float, g:Float, b:Float;\n\n\t    if(saturation == 0){\n\t        r = g = b = lightness; // achromatic\n\t    }else{\n\t        var q = lightness < 0.5 ? lightness * (1 + saturation) : lightness + saturation - lightness * saturation;\n\t        var p = 2 * lightness - q;\n\t        r = hue2rgb(p, q, hue + 1/3);\n\t        g = hue2rgb(p, q, hue);\n\t        b = hue2rgb(p, q, hue - 1/3);\n\t    }\n\t\t\n\t\treturn new RGB(r * 255, g * 255, b * 255);\n\t}\n\t\n\t/**\n\t * Hexidecimal RGB translation of HSB color\n\t * @return Hexidecimal color value\n\t * \n\t */\t\n\tpublic function getColor():Int{\n\t\treturn toRGB().getColor();\n\t}\n\t\n\tpublic function fromRGB(rgb:RGB):HSL {\n\t\tvar r = rgb.red;\n\t\tvar g = rgb.green;\n\t\tvar b = rgb.blue;\n\t\t\n\t\tr /= 255;\n\t\tg /= 255;\n\t\tb /= 255;\n\t\tvar max:Float = Math.max(r, Math.max(g, b));\n\t\tvar min:Float = Math.min(r, Math.min(g, b));\n\t\tvar h:Float, s:Float, l:Float;\n\t\t\n\t\th=s=l=(max+min)/2;\n\n\t    if(max == min){\n\t        h = s = 0; \n\t    }else{\n\t        var d:Float = max - min;\n\t        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t        h = if (max == r)\n\t\t\t\t(g - b) / d + (g < b ? 6 : 0);\n\t\t\telse if (max == g)\n\t\t\t\t(b - r) / d + 2;\n\t\t\telse //if (maxe == b)\n\t\t\t\t(r - g) / d + 4;\n\t        h /= 6;\n\t    }\t\t\t\n\t\t\n\t\tthis.hue = Math.round(h*360);\n\t\tthis.saturation = Math.round(s*100);\n\t\tthis.lightness = Math.round(l*100);\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Hexidecimal RGB translation of HSB color\n\t * @param value Hexidecimal color value\n\t * \n\t */\t\t\n\tpublic function setColor(color:Int):HSL{\n\t\treturn fromRGB(new RGB(color >> 16 & 0xFF, color >> 8 & 0xFF, color & 0xFF));\n\t}\n\t\n\t/**\n\t * \n\t * @param hue (between 0 and 360)\n\t * @param saturation (between 0 and 100)\n\t * @param black (between 0 and 100)\n\t * \n\t */\t\t\n\tpublic function new(?hue:Float=0, ?saturation:Float=0, ?lightness:Float=0)\n\t{\n\t\tnumOfChannels = 3;\n\t\tdata = [];\n\t\tthis.hue = hue;\n\t\tthis.saturation = saturation;\n\t\tthis.lightness = lightness;\n\t}\n\t\n\tpublic function clone() { return new HSL(hue, saturation, lightness); }\n\t\n\tpublic function interpolate(target:Color, ratio:Float = 0.5):HSL {\n\t\tvar target:HSL = Std.is(target,HSL) ? cast target : new HSL().fromRGB(target.toRGB());\n\t\treturn new HSL\n\t\t\t(\n\t\t\t\thue + (target.hue - hue) * ratio, \n\t\t\t\tsaturation + (target.saturation - saturation) * ratio, \n\t\t\t\tlightness + (target.lightness - lightness) * ratio\n\t\t\t);\n\t}\n\n\tprivate var data:Array<Float>;\n\n\tprivate function hue2rgb(p:Float, q:Float, t:Float):Float {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n       \n        return p;\n    }\n\t\n\tstatic function loop(index:Float, length:Float):Float {\n\t\tif (index < 0)\n\t\t\tindex = length + index % length;\n\t\t\n\t\tif (index >= length)\n\t\t\tindex %= length;\n\t\t\n\t\treturn index;\n\t}\n}\n","/*\nAuthor: Andy Li (andy@onthewings.net)\nBased on colortoolkit (http://code.google.com/p/colortoolkit/)\n*/\n \npackage hxColorToolkit.spaces;\n\nclass Hex implements Color {\n\t\n\tpublic var numOfChannels(default,null):Int;\n\n\tinline public function getValue(channel:Int):Float {\n\t\treturn data;\n\t}\n\tinline public function setValue(channel:Int,val:Float):Float {\n\t\tdata = Math.round(Math.min(maxValue(channel), Math.max(val, minValue(channel))));\n\t\treturn val;\n\t}\n\n\tinline public function minValue(channel:Int):Float {\n\t\treturn 0;\n\t}\n\tinline public function maxValue(channel:Int):Float {\n\t\treturn 0xFFFFFFFF;\n\t}\n\t\n\tinline public function toRGB():RGB {\n\t\treturn new RGB(red, green, blue);\n\t}\n\t\n\tinline public function toARGB():ARGB {\n\t\treturn new ARGB(alpha, red, green, blue);\n\t}\n\t\n\tinline public function getColor():Int {\n\t\treturn data;\n\t}\n\t\n\tpublic function fromRGB(rgb:RGB):Hex {\n\t\tdata = rgb.getColor();\n\t\treturn this;\n\t}\n\n\tinline public function setColor(color:Int):Hex {\n\t\tdata = color;\n\t\treturn this;\n\t}\n\n\tpublic var alpha(get_alpha,set_alpha):Int;\n\tpublic var red(get_red,set_red):Int;\n\tpublic var green(get_green,set_green):Int;\n\tpublic var blue(get_blue,set_blue):Int;\n\n\tinline private function get_alpha():Int {\n\t\treturn data >> 24 & 0xFF;\n\t}\n\n\tinline private function get_red():Int {\n\t\treturn data >> 16 & 0xFF;\n\t}\n\n\tinline private function get_green():Int {\n\t\treturn data >> 8 & 0xFF;\n\t}\n\n\tinline private function get_blue():Int {\n\t\treturn data & 0xFF;\n\t}\n\n\tprivate function set_alpha(v:Int):Int {\n\t\tdata = \n\t\t\tif (v <= 0) \n\t\t\t\tdata & 0x00FFFFFF;\n\t\t\telse if (v >= 255) \n\t\t\t\tdata | 0xFF000000;\n\t\t\telse \n\t\t\t\t(data & 0x00FFFFFF) | (v << 24);\n\t\treturn v;\n\t}\n\n\tprivate function set_red(v:Int):Int {\n\t\tdata = \n\t\t\tif (v <= 0) \n\t\t\t\tdata & 0xFF00FFFF;\n\t\t\telse if (v >= 255) \n\t\t\t\tdata | 0x00FF0000;\n\t\t\telse \n\t\t\t\t(data & 0xFF00FFFF) | (v << 16);\n\t\treturn v;\n\t}\n\n\tprivate function set_green(v:Int):Int {\n\t\tdata = \n\t\t\tif (v <= 0)\n\t\t\t\tdata & 0xFFFF00FF;\n\t\t\telse if (v >= 255)\n\t\t\t\tdata | 0x0000FF00;\n\t\t\telse\n\t\t\t\t(data & 0xFFFF00FF) | (v << 8);\n\t\treturn v;\n\t}\n\n\tprivate function set_blue(v:Int):Int {\n\t\tdata = \n\t\t\tif (v <= 0)\n\t\t\t\tdata & 0xFFFFFF00;\n\t\t\telse if (v >= 255)\n\t\t\t\tdata | 0x000000FF;\n\t\t\telse\n\t\t\t\t(data & 0xFFFFFF00) | v;\n\t\treturn v;\n\t}\n\t\n\tpublic function new(?color:Int = 0):Void {\n\t\tnumOfChannels = 1;\n\t\tsetColor(color);\n\t}\n\t\n\tpublic function clone() { return new Hex(data); }\n\t\n\tpublic function interpolate(target:Color, ratio:Float = 0.5):Hex {\n\t\tvar target:Hex = Std.is(target,Hex) ? cast target : new Hex(target.getColor());\n\t\treturn new Hex(toRGB().interpolate(target.toRGB(), ratio).getColor());\n\t}\n\n\tprivate var data:Int;\n}\n"," /*\nAuthor: Andy Li (andy@onthewings.net)\nBased on colortoolkit (http://code.google.com/p/colortoolkit/)\n \nThe MIT License\n\nCopyright (c) 2009 P.J. Onori (pj@somerandomdude.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\n//via http://www.adobe.com/cfusion/communityengine/index.cfm?event=showdetails&productId=2&postId=14227\n//@see http://en.wikipedia.org/wiki/Lab_color_space\n\npackage hxColorToolkit.spaces;\n\nclass Lab implements Color {\n\npublic var numOfChannels(default,null):Int;\n\n\tpublic function getValue(channel:Int):Float {\n\t\treturn data[channel];\n\t}\n\tpublic function setValue(channel:Int,val:Float):Float {\n\t\tdata[channel] = Math.min(maxValue(channel), Math.max(val, minValue(channel)));\n\t\treturn val;\n\t}\n\n\tinline public function minValue(channel:Int):Float {\n\t\treturn channel == 0 ? 0 : -128;\n\t}\n\tinline public function maxValue(channel:Int):Float {\n\t\treturn channel == 0 ? 100 : 127;\n\t}\n\n\tpublic var lightness(get_lightness, set_lightness) : Float;\n\tpublic var a(get_a, set_a) : Float;\n\tpublic var b(get_b, set_b) : Float;\n\t\n\tpublic function toRGB():RGB {\n\t\treturn toXYZ().toRGB();\n\t}\n\n\tpublic function toXYZ():XYZ {\n\t\tvar y:Float = (lightness + 16) / 116;\n\t\tvar x:Float = a * 0.002 + y;\n\t\tvar z:Float = y - b * 0.005;\n\t\t \n\t\tif ( Math.pow( y , 3 ) > 0.008856 ) { y = Math.pow( y , 3 ); }\n\t\telse { y = ( y - 16 / 116 ) / 7.787; }\n\t\tif ( Math.pow( x , 3 ) > 0.008856 ) { x = Math.pow( x , 3 ); }\n\t\telse { x = ( x - 16 / 116 ) / 7.787; }\n\t\tif ( Math.pow( z , 3 ) > 0.008856 ) { z = Math.pow( z , 3 ); }\n\t\telse { z = ( z - 16 / 116 ) / 7.787; }\n\n\t\treturn new XYZ(95.047 * x, 100.000 * y, 108.883 * z); // Observer= 2°, Illuminant= D65\n\t}\n\t\n\tpublic function getColor():Int{\n\t\treturn toXYZ().getColor();\n\t}\n\t\n\tpublic function fromRGB(rgb:RGB):Lab {\n\t\tdata = new XYZ().fromRGB(rgb).toLab().data;\n\t\treturn this;\n\t}\n\t\n\tpublic function setColor(value:Int):Lab{\n\t\tdata = new XYZ().setColor(value).toLab().data;\n\t\treturn this;\n\t}\n\t\n\tprivate function get_lightness():Float{\n\t\treturn getValue(0);\n\t}\n\t\n\tprivate function set_lightness(value:Float):Float{\n\t\treturn setValue(0,value);\n\t}\n\n\tprivate function get_a():Float{\n\t\treturn getValue(1);\n\t}\n\n\tprivate function set_a(value:Float):Float{\n\t\treturn setValue(1,value);\n\t}\n\t\n\tprivate function get_b():Float{\n\t\treturn getValue(2);\n\t}\n\t\n\tprivate function set_b(value:Float):Float{\n\t\treturn setValue(2,value);\n\t}\n\n\tpublic function new(?lightness:Float=0, ?a:Float=0, ?b:Float=0)\n\t{\n\t\tnumOfChannels = 3;\n\t\tdata = [];\n\t\tthis.lightness=lightness;\n\t\tthis.a=a;\n\t\tthis.b=b;\n\t}\n\t\n\tpublic function clone() { return new Lab(lightness, a, b); }\n\t\n\tpublic function interpolate(target:Color, ratio:Float = 0.5):Lab {\n\t\tvar target:Lab = Std.is(target,Lab) ? cast target : new Lab().fromRGB(target.toRGB());\n\t\treturn new Lab\n\t\t\t(\n\t\t\t\tlightness + (target.lightness - lightness) * ratio, \n\t\t\t\ta + (target.a - a) * ratio, \n\t\t\t\tb + (target.b - b) * ratio\n\t\t\t);\n\t}\n\n\tprivate var data:Array<Float>;\n\n}\n"," /*\nAuthor: Andy Li (andy@onthewings.net)\nBased on colortoolkit (http://code.google.com/p/colortoolkit/)\n \nThe MIT License\n\nCopyright (c) 2009 P.J. Onori (pj@somerandomdude.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\n//via http://www.adobe.com/cfusion/communityengine/index.cfm?event=showdetails&productId=2&postId=14227\n//@see http://en.wikipedia.org/wiki/CIE_1931_color_space\n\npackage hxColorToolkit.spaces;\n\nimport hxColorToolkit.spaces.Lab;\n\nclass XYZ implements Color {\n\n\tpublic var numOfChannels(default,null):Int;\n\n\tpublic function getValue(channel:Int):Float {\n\t\treturn data[channel];\n\t}\n\tpublic function setValue(channel:Int,val:Float):Float {\n\t\tif (channel < 0 || channel >= numOfChannels) throw \"no such channel\";\n\t\tdata[channel] = Math.min(maxValue(channel), Math.max(val, minValue(channel)));\n\t\treturn val;\n\t}\n\n\tinline public function minValue(channel:Int):Float {\n\t\treturn 0;\n\t}\n\tpublic function maxValue(channel:Int):Float {\n\t\treturn switch (channel) {\n\t\t\tcase 0: 95.047;\n\t\t\tcase 1: 100.000;\n\t\t\tcase 2: 108.883;\n\t\t\tdefault: throw \"XYZ does not have channel \"+ channel;\n\t\t}\n\t}\n\n\tpublic var x(get_x, set_x) : Float;\n\tpublic var y(get_y, set_y) : Float;\n\tpublic var z(get_z, set_z) : Float;\n\n\tprivate function get_x():Float{\n\t\treturn getValue(0);\n\t}\n\n\tprivate function set_x(value:Float):Float{\n\t\treturn setValue(0,value);\n\t}\n\t\n\tprivate function get_y():Float{\n\t\treturn getValue(1);\n\t}\n\t\n\tprivate function set_y(value:Float):Float{\n\t\treturn setValue(1,value);\n\t}\n\t\n\tprivate function get_z():Float{\n\t\treturn getValue(2);\n\t}\n\t\n\tprivate function set_z(value:Float):Float{\n\t\treturn setValue(2,value);\n\t}\n\t\n\tpublic function toRGB():RGB {\n\t\t//X from 0 to  95.047      (Observer = 2°, Illuminant = D65)\n\t\t//Y from 0 to 100.000\n\t\t//Z from 0 to 108.883\n\t\tvar x:Float = x * 0.01;\n\t\tvar y:Float = y * 0.01;\n\t\tvar z:Float = z * 0.01;\n\t\t \n\t\tvar r:Float = x * 3.2406 + y * -1.5372 + z * -0.4986;\n\t\tvar g:Float = x * -0.9689 + y * 1.8758 + z * 0.0415;\n\t\tvar b:Float = x * 0.0557 + y * -0.2040 + z * 1.0570;\n\t\t \n\t\tif ( r > 0.0031308 ) { r = 1.055 * Math.pow( r , ( 1 / 2.4 ) ) - 0.055; }\n\t\telse { r = 12.92 * r; }\n\t\tif ( g > 0.0031308 ) { g = 1.055 * Math.pow( g , ( 1 / 2.4 ) ) - 0.055; }\n\t\telse { g = 12.92 * g; }\n\t\tif ( b > 0.0031308 ) { b = 1.055 * Math.pow( b , ( 1 / 2.4 ) ) - 0.055; }\n\t\telse { b = 12.92 * b; }\n\t\t\n\t\treturn new RGB(Math.round(r*255), Math.round(g*255), Math.round(b*255));\n\t}\n\t\n\tpublic function getColor():Int{\n\t\t//X from 0 to  95.047      (Observer = 2°, Illuminant = D65)\n\t\t//Y from 0 to 100.000\n\t\t//Z from 0 to 108.883\n\t\tvar x:Float = x * 0.01;\n\t\tvar y:Float = y * 0.01;\n\t\tvar z:Float = z * 0.01;\n\t\t \n\t\tvar r:Float = x * 3.2406 + y * -1.5372 + z * -0.4986;\n\t\tvar g:Float = x * -0.9689 + y * 1.8758 + z * 0.0415;\n\t\tvar b:Float = x * 0.0557 + y * -0.2040 + z * 1.0570;\n\t\t \n\t\tif ( r > 0.0031308 ) { r = 1.055 * Math.pow( r , ( 1 / 2.4 ) ) - 0.055; }\n\t\telse { r = 12.92 * r; }\n\t\tif ( g > 0.0031308 ) { g = 1.055 * Math.pow( g , ( 1 / 2.4 ) ) - 0.055; }\n\t\telse { g = 12.92 * g; }\n\t\tif ( b > 0.0031308 ) { b = 1.055 * Math.pow( b , ( 1 / 2.4 ) ) - 0.055; }\n\t\telse { b = 12.92 * b; }\n\t\t\n\t\tvar cR:Int = Math.round(r*255) << 16;\n\t\tvar cG:Int = Math.round(g*255) << 8;\n\t\tvar cB:Int = Math.round(b*255);\n\t\t\n\t\treturn cR | cG | cB;\n\t}\n\t\n\tpublic function fromRGB(rgb:RGB):XYZ {\n\t\tvar r = rgb.red/255;\n\t\tvar g = rgb.green/255;\n\t\tvar b = rgb.blue/255;\n\t\t \n\t\tif (r > 0.04045){ r = Math.pow((r + 0.055) / 1.055, 2.4); }\n\t\telse { r = r / 12.92; }\n\t\tif ( g > 0.04045){ g = Math.pow((g + 0.055) / 1.055, 2.4); }\n\t\telse { g = g / 12.92; }\n\t\tif (b > 0.04045){ b = Math.pow((b + 0.055) / 1.055, 2.4); }\n\t\telse { b = b / 12.92; }\n\t\tr *= 100;\n\t\tg *= 100;\n\t\tb *= 100;\n\t\t \n\t\t//Observer. = 2°, Illuminant = D65\n\t\tthis.x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n\t\tthis.y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n\t\tthis.z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n\t\treturn this;\n\t}\n\n\tpublic function toLab():Lab {\n\t\tvar x:Float = this.x / 95.047;   // Observer= 2°, Illuminant= D65\n\t\tvar y:Float = this.y / 100.000;  \n\t\tvar z:Float = this.z / 108.883;  \n\t\t \n\t\tif ( x > 0.008856 ) { x = Math.pow( x , 1/3 ); }\n\t\telse { x = ( 7.787 * x ) + ( 16/116 ); }\n\t\tif ( y > 0.008856 ) { y = Math.pow( y , 1/3 ); }\n\t\telse { y = ( 7.787 * y ) + ( 16/116 ); }\n\t\tif ( z > 0.008856 ) { z = Math.pow( z , 1/3 ); }\n\t\telse { z = ( 7.787 * z ) + ( 16/116 ); }\t\t\t\n\t\t\n\t\treturn new Lab(( 116 * y ) - 16, 500 * ( x - y ), 200 * ( y - z ));\n\t}\n\t\n\tpublic function setColor(color:Int):XYZ{\n\t\treturn fromRGB(new RGB(color >> 16 & 0xFF, color >> 8 & 0xFF, color & 0xFF));\n\t}\n\t\n\tpublic function new(?x:Float=0, ?y:Float=0, ?z:Float=0):Void {\n\t\tnumOfChannels = 3;\n\t\tdata = [];\n\t\tthis.x=x;\n\t\tthis.y=y;\n\t\tthis.z=z;\n\t}\n\t\n\tpublic function clone() { return new XYZ(x, y, z); }\n\t\n\tpublic function interpolate(target:Color, ratio:Float = 0.5):XYZ {\n\t\tvar target:XYZ = Std.is(target,XYZ) ? cast target : new XYZ().fromRGB(target.toRGB());\n\t\treturn new XYZ\n\t\t\t(\n\t\t\t\tx+ (target.x - x) * ratio, \n\t\t\t\ty + (target.y - y) * ratio, \n\t\t\t\tz + (target.z - z) * ratio\n\t\t\t);\n\t}\n\n\tprivate var data:Array<Float>;\t\n}\n"," /*\nAuthor: Andy Li (andy@onthewings.net)\nBased on colortoolkit (http://code.google.com/p/colortoolkit/)\n \nThe MIT License\n\nCopyright (c) 2009 P.J. Onori (pj@somerandomdude.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\n//http://en.wikipedia.org/wiki/YUV\n//http://www.fourcc.org/fccyvrgb.php\n\npackage hxColorToolkit.spaces;\n\nclass YUV implements Color {\n\n\tpublic var numOfChannels(default,null):Int;\n\n\tpublic function getValue(channel:Int):Float {\n\t\treturn data[channel];\n\t}\n\tpublic function setValue(channel:Int,val:Float):Float {\n\t\tdata[channel] = Math.min(maxValue(channel), Math.max(val, minValue(channel)));\n\t\treturn val;\n\t}\n\n\tinline public function minValue(channel:Int):Float {\n\t\treturn 0;\n\t}\n\tinline public function maxValue(channel:Int):Float {\n\t\treturn 255;\n\t}\n\t\n\tpublic var u(get_u, set_u) : Float;\n\tpublic var v(get_v, set_v) : Float;\n\tpublic var y(get_y, set_y) : Float;\n\n\tprivate function get_y():Float{\n\t\treturn getValue(0);\n\t}\n\n\tprivate function set_y(value:Float):Float{\n\t\treturn setValue(0,value);\n\t}\n\t\n\tprivate function get_u():Float{\n\t\treturn getValue(1);\n\t}\n\t\n\tprivate function set_u(value:Float):Float{\n\t\treturn setValue(1,value);\n\t}\n\t\n\tprivate function get_v():Float{\n\t\treturn getValue(2);\n\t}\n\t\n\tprivate function set_v(value:Float):Float{\n\t\treturn setValue(2,value);\n\t}\n\t\n\tpublic function toRGB():RGB {\n\t\treturn new RGB(\n\t\t\tMath.max(0, Math.min(y + 1.402 * (v - 128), 255)),\n\t\t\tMath.max(0, Math.min(y - 0.344 * (u - 128) - 0.714 * (v - 128), 255)),\n\t\t\tMath.max(0, Math.min(y + 1.772 * (u - 128), 255))\n\t\t);\n\t}\n\t\n\tpublic function getColor():Int{\n\t\treturn toRGB().getColor();\n\t}\n\t\n\tpublic function fromRGB(rgb:RGB):YUV {\n\t\tvar r = rgb.red;\n\t\tvar g = rgb.green;\n\t\tvar b = rgb.blue;\n\t\tthis.y = 0.299*r + 0.587*g + 0.114*b;\n\t\tthis.u = r*-0.169 + g*-0.331 + b*0.499 + 128;\n\t\tthis.v = r*0.499 + g*-0.418 + b*-0.0813 + 128;\n\t\treturn this;\n\t}\n\t\n\tpublic function setColor(color:Int):YUV{\n\t\treturn fromRGB(new RGB(color >> 16 & 0xFF, color >> 8 & 0xFF, color & 0xFF));\n\t}\n\t\n\t\n\tpublic function new(?y:Float=0, ?u:Float=0, ?v:Float=0)\n\t{\n\t\tnumOfChannels = 3;\n\t\tdata = [];\n\t\tthis.y=y;\n\t\tthis.u=u;\n\t\tthis.v=v;\n\t}\n\t\n\tpublic function clone() { return new YUV(y, u, v); }\n\t\n\tpublic function interpolate(target:Color, ratio:Float = 0.5):YUV {\n\t\tvar target:YUV = Std.is(target,YUV) ? cast target : new YUV().fromRGB(target.toRGB());\n\t\treturn new YUV\n\t\t\t(\n\t\t\t\ty + (target.y - y) * ratio, \n\t\t\t\tu + (target.u - u) * ratio, \n\t\t\t\tv + (target.v - v) * ratio\n\t\t\t);\n\t}\n\n\tprivate var data:Array<Float>;\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nprivate class HaxeError extends js.Error {\n\n\tvar val:Dynamic;\n\n\tpublic function new(val:Dynamic) untyped {\n\t\tsuper();\n\t\tthis.val = __define_feature__(\"js.Boot.HaxeError\", val);\n\t\tthis.message = String(val);\n\t\tif (js.Error.captureStackTrace) js.Error.captureStackTrace(this, HaxeError);\n\t}\n\n\tpublic static function wrap(val:Dynamic):Dynamic untyped {\n\t\treturn if (__instanceof__(val, js.Error)) val else new HaxeError(val);\n\t}\n}\n\n@:dox(hide)\nclass Boot {\n\n\tprivate static function __unhtml(s : String) {\n\t\treturn s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t}\n\n\tprivate static function __trace(v,i : haxe.PosInfos) {\n\t\tuntyped {\n\t\t\tvar msg = if( i != null ) i.fileName+\":\"+i.lineNumber+\": \" else \"\";\n\t\t\t#if jsfl\n\t\t\tmsg += __string_rec(v,\"\");\n\t\t\tfl.trace(msg);\n\t\t\t#else\n\t\t\tmsg += __string_rec(v, \"\");\n\t\t\tif( i != null && i.customParams != null )\n\t\t\t\tfor( v in i.customParams )\n\t\t\t\t\tmsg += \",\" + __string_rec(v, \"\");\n\t\t\tvar d;\n\t\t\tif( __js__(\"typeof\")(document) != \"undefined\" && (d = document.getElementById(\"haxe:trace\")) != null )\n\t\t\t\td.innerHTML += __unhtml(msg)+\"<br/>\";\n\t\t\telse if( __js__(\"typeof console\") != \"undefined\" && __js__(\"console\").log != null )\n\t\t\t\t__js__(\"console\").log(msg);\n\t\t\t#end\n\t\t}\n\t}\n\n\tprivate static function __clear_trace() {\n\t\tuntyped {\n\t\t\t#if jsfl\n\t\t\tfl.outputPanel.clear();\n\t\t\t#else\n\t\t\tvar d = document.getElementById(\"haxe:trace\");\n\t\t\tif( d != null )\n\t\t\t\td.innerHTML = \"\";\n\t\t\t#end\n\t\t}\n\t}\n\n\tstatic inline function isClass(o:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isClass\", o.__name__);\n\t}\n\n\tstatic inline function isEnum(e:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isEnum\", e.__ename__);\n\t}\n\n\tstatic function getClass(o:Dynamic) : Dynamic {\n\t\tif (Std.is(o, Array))\n\t\t\treturn Array;\n\t\telse {\n\t\t\tvar cl = untyped __define_feature__(\"js.Boot.getClass\", o.__class__);\n\t\t\tif (cl != null)\n\t\t\t\treturn cl;\n\t\t\tvar name = __nativeClassName(o);\n\t\t\tif (name != null)\n\t\t\t\treturn __resolveNativeClass(name);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t@:ifFeature(\"has_enum\")\n\tprivate static function __string_rec(o,s:String) {\n\t\tuntyped {\n\t\t\tif( o == null )\n\t\t\t    return \"null\";\n\t\t\tif( s.length >= 5 )\n\t\t\t\treturn \"<...>\"; // too much deep recursion\n\t\t\tvar t = __js__(\"typeof(o)\");\n\t\t\tif( t == \"function\" && (isClass(o) || isEnum(o)) )\n\t\t\t\tt = \"object\";\n\t\t\tswitch( t ) {\n\t\t\tcase \"object\":\n\t\t\t\tif( __js__(\"o instanceof Array\") ) {\n\t\t\t\t\tif( o.__enum__ ) {\n\t\t\t\t\t\tif( o.length == 2 )\n\t\t\t\t\t\t\treturn o[0];\n\t\t\t\t\t\tvar str = o[0]+\"(\";\n\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\tfor( i in 2...o.length ) {\n\t\t\t\t\t\t\tif( i != 2 )\n\t\t\t\t\t\t\t\tstr += \",\" + __string_rec(o[i],s);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tstr += __string_rec(o[i],s);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn str + \")\";\n\t\t\t\t\t}\n\t\t\t\t\tvar l = o.length;\n\t\t\t\t\tvar i;\n\t\t\t\t\tvar str = \"[\";\n\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\tfor( i in 0...l )\n\t\t\t\t\t\tstr += (if (i > 0) \",\" else \"\")+__string_rec(o[i],s);\n\t\t\t\t\tstr += \"]\";\n\t\t\t\t\treturn str;\n\t\t\t\t}\n\t\t\t\tvar tostr;\n\t\t\t\ttry {\n\t\t\t\t\ttostr = untyped o.toString;\n\t\t\t\t} catch( e : Dynamic ) {\n\t\t\t\t\t// strange error on IE\n\t\t\t\t\treturn \"???\";\n\t\t\t\t}\n\t\t\t\tif( tostr != null && tostr != __js__(\"Object.toString\") && __typeof__(tostr) == \"function\" ) {\n\t\t\t\t\tvar s2 = o.toString();\n\t\t\t\t\tif( s2 != \"[object Object]\")\n\t\t\t\t\t\treturn s2;\n\t\t\t\t}\n\t\t\t\tvar k : String = null;\n\t\t\t\tvar str = \"{\\n\";\n\t\t\t\ts += \"\\t\";\n\t\t\t\tvar hasp = (o.hasOwnProperty != null);\n\t\t\t\t__js__(\"for( var k in o ) {\");\n\t\t\t\t\tif( hasp && !o.hasOwnProperty(k) )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( k == \"prototype\" || k == \"__class__\" || k == \"__super__\" || k == \"__interfaces__\" || k == \"__properties__\" )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( str.length != 2 )\n\t\t\t\t\t\tstr += \", \\n\";\n\t\t\t\t\tstr += s + k + \" : \"+__string_rec(o[k],s);\n\t\t\t\t__js__(\"}\");\n\t\t\t\ts = s.substring(1);\n\t\t\t\tstr += \"\\n\" + s + \"}\";\n\t\t\t\treturn str;\n\t\t\tcase \"function\":\n\t\t\t\treturn \"<function>\";\n\t\t\tcase \"string\":\n\t\t\t\treturn o;\n\t\t\tdefault:\n\t\t\t\treturn String(o);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static function __interfLoop(cc : Dynamic,cl : Dynamic) {\n\t\tif( cc == null )\n\t\t\treturn false;\n\t\tif( cc == cl )\n\t\t\treturn true;\n\t\tvar intf : Dynamic = cc.__interfaces__;\n\t\tif( intf != null )\n\t\t\tfor( i in 0...intf.length ) {\n\t\t\t\tvar i : Dynamic = intf[i];\n\t\t\t\tif( i == cl || __interfLoop(i,cl) )\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\treturn __interfLoop(cc.__super__,cl);\n\t}\n\n\t@:ifFeature(\"typed_catch\") private static function __instanceof(o : Dynamic,cl : Dynamic) {\n\t\tif( cl == null )\n\t\t\treturn false;\n\t\tswitch( cl ) {\n\t\tcase Int:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"number\" && untyped __js__(\"(o|0) === o\");\n\t\tcase Float:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"number\";\n\t\tcase Bool:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"boolean\";\n\t\tcase String:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"string\";\n\t\tcase Array:\n\t\t\treturn (untyped __js__(\"(o instanceof Array)\")) && o.__enum__ == null;\n\t\tcase Dynamic:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\tif( o != null ) {\n\t\t\t\t// Check if o is an instance of a Haxe class or a native JS object\n\t\t\t\tif( (untyped __js__(\"typeof\"))(cl) == \"function\" ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tif( __interfLoop(getClass(o),cl) )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse if ( (untyped __js__(\"typeof\"))(cl) == \"object\" && __isNativeObj(cl) ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// do not use isClass/isEnum here\n\t\t\tuntyped __feature__(\"Class.*\",if( cl == Class && o.__name__ != null ) return true);\n\t\t\tuntyped __feature__(\"Enum.*\",if( cl == Enum && o.__ename__ != null ) return true);\n\t\t\treturn o.__enum__ == cl;\n\t\t}\n\t}\n\n\t@:ifFeature(\"typed_cast\") private static function __cast(o : Dynamic, t : Dynamic) {\n\t\tif (__instanceof(o, t)) return o;\n\t\telse throw \"Cannot cast \" +Std.string(o) + \" to \" +Std.string(t);\n\t}\n\n\tstatic var __toStr = untyped ({}).toString;\n\t// get native JS [[Class]]\n\tstatic function __nativeClassName(o:Dynamic):String {\n\t\tvar name = untyped __toStr.call(o).slice(8, -1);\n\t\t// exclude general Object and Function\n\t\t// also exclude Math and JSON, because instanceof cannot be called on them\n\t\tif (name == \"Object\" || name == \"Function\" || name == \"Math\" || name == \"JSON\")\n\t\t\treturn null;\n\t\treturn name;\n\t}\n\n\t// check for usable native JS object\n\tstatic function __isNativeObj(o:Dynamic):Bool {\n\t\treturn __nativeClassName(o) != null;\n\t}\n\n\t// resolve native JS class in the global scope:\n\tstatic function __resolveNativeClass(name:String) {\n\t\treturn untyped js.Lib.global[name];\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nimport js.html.Storage;\nimport js.html.XMLHttpRequest;\n\nclass Browser {\n\t/** The global window object. */\n\tpublic static var window(get, never):js.html.Window;\n\tinline static function get_window() return untyped __js__(\"window\");\n\n\t/** Shortcut to Window.document. */\n\tpublic static var document(get, never):js.html.HTMLDocument;\n\tinline static function get_document() return untyped __js__(\"window.document\");\n\n\t/** Shortcut to Window.location. */\n\tpublic static var location(get, never):js.html.Location;\n\tinline static function get_location() return untyped __js__(\"window.location\");\n\n\t/** Shortcut to Window.navigator. */\n\tpublic static var navigator(get, never):js.html.Navigator;\n\tinline static function get_navigator() return untyped __js__(\"window.navigator\");\n\n\t/** Shortcut to Window.console. */\n\tpublic static var console(get, never):js.html.Console;\n\tinline static function get_console() return untyped __js__(\"window.console\");\n\n\t/**\n\t * True if a window object exists, false otherwise.\n\t *\n\t * This can be used to check if the code is being executed in a non-browser\n\t * environment such as node.js.\n\t */\n\tpublic static var supported(get, never):Bool;\n\tinline static function get_supported() return untyped __typeof__(window) != \"undefined\";\n\n\t/**\n\t * Safely gets the browser's local storage, or returns null if localStorage is unsupported or\n\t * disabled.\n\t */\n\tpublic static function getLocalStorage() : Storage\n\t{\n\t\ttry {\n\t\t\tvar s = window.localStorage;\n\t\t\ts.getItem(\"\");\n\t\t\treturn s;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Safely gets the browser's session storage, or returns null if sessionStorage is unsupported\n\t * or disabled.\n\t */\n\tpublic static function getSessionStorage() : Storage\n\t{\n\t\ttry {\n\t\t\tvar s = window.sessionStorage;\n\t\t\ts.getItem(\"\");\n\t\t\treturn s;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Creates an XMLHttpRequest, with a fallback to ActiveXObject for ancient versions of Internet\n\t * Explorer.\n\t */\n\tpublic static function createXMLHttpRequest() : XMLHttpRequest\n\t{\n\t\tif( untyped __js__(\"typeof XMLHttpRequest\") != \"undefined\" ) {\n\t\t\treturn new XMLHttpRequest();\n\t\t}\n\t\tif( untyped __js__(\"typeof ActiveXObject\") != \"undefined\" ) {\n\t\t\treturn untyped __new__(\"ActiveXObject\",\"Microsoft.XMLHTTP\");\n\t\t}\n\t\tthrow \"Unable to create XMLHttpRequest object.\";\n\t}\n\n\t/**\n\t\tDisplay an alert message box containing the given message. See also `Window.alert()`.\n\t**/\n\tpublic static function alert( v : Dynamic ) {\n\t\t@:privateAccess window.alert(Boot.__string_rec(v,\"\"));\n\t}\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js.html.compat;\n\n#if !nodejs\n@:ifFeature(\"js.html.ArrayBuffer.*\")\nclass ArrayBuffer {\n\n\tpublic var byteLength : Int;\n\tvar a : Array<Int>;\n\n\tpublic function new( ?a : Dynamic ) {\n\t\tif( Std.is(a,Array) ) {\n\t\t\tthis.a = a;\n\t\t\tbyteLength = a.length;\n\t\t} else {\n\t\t\tvar len : Int = a;\n\t\t\tthis.a = [];\n\t\t\tfor( i in 0...len )\n\t\t\t\tthis.a[i] = 0;\n\t\t\tbyteLength = len;\n\t\t}\n\t}\n\n\tpublic function slice(begin,?end) {\n\t\treturn new ArrayBuffer(a.slice(begin,end));\n\t}\n\n\tstatic function sliceImpl(begin,?end) {\n\t\tvar u = new js.html.Uint8Array(js.Lib.nativeThis, begin, end == null ? null : end - begin);\n\t\tvar result = new js.html.ArrayBuffer(u.byteLength);\n\t\tvar resultArray = new js.html.Uint8Array(result);\n\t\tresultArray.set(u);\n\t\treturn result;\n\t}\n\n\tstatic function __init__() untyped {\n\t\tvar ArrayBuffer = js.Lib.global.ArrayBuffer || js.html.compat.ArrayBuffer;\n\t\tif( ArrayBuffer.prototype.slice == null ) ArrayBuffer.prototype.slice = sliceImpl; // IE10\n\t}\n}\n#end","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js.html.compat;\n\n#if !nodejs\nimport js.Lib.nativeThis;\n\n@:ifFeature(\"js.html.Uint8Array.*\")\nclass Uint8Array {\n\n\tstatic var BYTES_PER_ELEMENT = 1;\n\n\tstatic function _new( ?arg1 : Dynamic, ?offset : Int, ?length : Int ) : Dynamic {\n\t\tvar arr;\n\t\tif( untyped __typeof__(arg1) == 'number' ) {\n\t\t\tarr = new Array();\n\t\t\tfor( i in 0...arg1 )\n\t\t\t\tarr[i] = 0;\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length;\n\t\t\t\tarr.byteOffset = 0;\n\t\t\t\tarr.buffer = new ArrayBuffer(arr);\n\t\t\t}\n\t\t} else if( Std.is(arg1,ArrayBuffer) ) {\n\t\t\tvar buffer : ArrayBuffer = arg1;\n\t\t\tif( offset == null ) offset = 0;\n\t\t\tif( length == null ) length = buffer.byteLength - offset;\n\t\t\tif( offset == 0 )\n\t\t\t\tarr = cast @:privateAccess buffer.a;\n\t\t\telse\n\t\t\t\t// here we are losing the fact that we should reference the same data,\n\t\t\t\t// but I don't see another way to have this behaviour while keeping [] access\n\t\t\t\tarr = cast @:privateAccess buffer.a.slice(offset, offset+length);\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length;\n\t\t\t\tarr.byteOffset = offset;\n\t\t\t\tarr.buffer = buffer;\n\t\t\t}\n\t\t} else if( Std.is(arg1, Array) ) {\n\t\t\tarr = (arg1 : Array<Int>).copy();\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length;\n\t\t\t\tarr.byteOffset = 0;\n\t\t\t\tarr.buffer = new ArrayBuffer(arr);\n\t\t\t}\n\t\t} else\n\t\t\tthrow \"TODO \"+arg1;\n\t\tuntyped {\n\t\t\tarr.subarray = _subarray;\n\t\t\tarr.set = _set;\n\t\t}\n\t\treturn arr;\n\t}\n\n\tstatic function _set( ?arg : Dynamic, ?offset : Int ) {\n\t\tif( Std.is(arg.buffer,ArrayBuffer) ) {\n\t\t\tvar a : Array<Int> = arg;\n\t\t\tif( arg.byteLength + offset > nativeThis.byteLength )\n\t\t\t\tthrow \"set() outside of range\";\n\t\t\tfor( i in 0...arg.byteLength )\n\t\t\t\tnativeThis[i + offset] = a[i];\n\t\t} else if( Std.is(arg,Array) ) {\n\t\t\tvar a : Array<Int> = arg;\n\t\t\tif( a.length + offset > nativeThis.byteLength )\n\t\t\t\tthrow \"set() outside of range\";\n\t\t\tfor( i in 0...a.length )\n\t\t\t\tnativeThis[i + offset] = a[i];\n\t\t} else\n\t\t\tthrow \"TODO\";\n\t}\n\n\tstatic function _subarray( start : Int, ?end : Int ) {\n\t\tvar a = _new(nativeThis.slice(start,end));\n\t\ta.byteOffset = start;\n\t\treturn a;\n\t}\n\n\tstatic function __init__() {\n\t\tvar Uint8Array = untyped js.Lib.global.Uint8Array || _new;\n\t}\n\n}\n#end","package lib.html;\n\nimport js.Browser.*;\n\nclass CSSinjector {\n\n\tpublic function new(?styles:String, ?elementID:String) {\n\t\tif (elementID == null) elementID = 'inject-' + Date.now().getTime();\n\t\tif (styles != null) setCSS(styles, elementID);\n\t}\n\n\t/**\n\t * make sure the css is injected, but only once\n\t *\n\t * @param styles \t\twhat styles you want to inject into the file\n\t * @param elementID   \tmake sure we only inject once...\n\t */\n\tfunction setCSS (styles:String, elementID:String){\n\t\t// trace('. setCSS ($styles, $elementID');\n\n\t\tstyles = minify(styles);\n\t\t// trace(document.getElementById(elementID));\n\n\t\tvar css = document.createStyleElement();\n\t\tcss.id = elementID;\n\n\t\t// [mck] it seems that styleSheet isn't in the html externs from Haxe\n\t\tif (untyped css.styleSheet) untyped css.styleSheet.cssText = styles;\n\t\telse css.appendChild(document.createTextNode(styles));\n\n\t\t// [mck] maybe check this before adding\n\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(css);\n\n\t\t// trace(document.getElementById(elementID));\n\t}\n\n\n\t// https://stackoverflow.com/questions/4278739/regular-expression-for-clean-javascript-comments-of-type\n\tfunction minify (css:String) : String {\n\t\t// var regex =  // /\\*(?:[^*]|\\*+[^*/])*\\*+/ (/* */)\n\t\t// return css.replace('  ', ' ').replace('\\t', '').replace('\\n', '');\n\t\treturn css;\n\t}\n\n}","package lib.html;\n\nimport js.Browser.*;\nimport lib.html.*;\n\nusing StringTools;\n\nclass Nav extends CSSinjector {\n\n\tvar timeout : Int;\n\tvar bottomIn : Int = 0; //px;\n\tvar bottomOut : Int = -50; //px;\n\t/**\n\t * @example:\n\t * \t\tvar snackbar = new html.Nav();\n\t */\n\tpublic function new() {\n\t\tsuper();\n\t\t// var _css = css();\n\t\t// setCSS(_css, 'inject-nav');\n\t}\n\n\tpublic function dir(dir:String):js.html.DivElement {\n\t\t// Get the nav DIV\n\t\tvar x : js.html.DivElement = cast document.getElementById('nav-$dir');\n\t\t// if no #snackbar exists, create it\n\n\t\tvar svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 80 80\"><g fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"10\" data-name=\"Layer 1\"><path d=\"M10.5 40h59M69.5 40l-18-18M51.5 58l18-18\"/></g></svg>';\n\t\tif(dir == 'left'){\n\t\t\tsvg = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 80 80\"><g fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"10\" data-name=\"Layer 1\"><path d=\"M69.5 40h-59M10.5 40l18-18M28.5 58l-18-18\"/></g></svg>';\n\t\t}\n\t\tif(x == null){\n\t\t\tvar div : js.html.DivElement = document.createDivElement();\n\t\t\tdiv.id = 'nav-$dir';\n\t\t\tdiv.className = 'nav nav-$dir';\n\t\t\tdiv.innerHTML = svg;\n\t\t\tdocument.body.appendChild(div);\n\t\t\tx = div;\n\t\t}\n\n\t\treturn x;\n\n\t}\n\n\tfunction css ():String{\n\t\treturn '\n.nav {\n\tdisplay: none;\n\twidth: 80px;\n\theight: 80px;\n    background-color: #333;\n    color: #fff;\n    text-align: center;\n    padding: 10px;\n    position: fixed;\n    z-index: 1;\n    top: 50%;\n    font-size: 13px;\n    opacity: 0.5;\n\tmargin-top: -40px;\n}\n.nav-left{\n    left: 0%;\n    border-radius: 0 5px 5px 0;\n}\n.nav-right{\n    right: 0%;\n    border-radius: 5px 0 0 5px;\n}\n';\n\n\t}\n}","package lib.html;\n\nimport js.Browser.*;\nimport lib.html.*;\n\nusing StringTools;\n\nclass Snackbar extends CSSinjector {\n\n\tvar timeout : Int;\n\tvar bottomIn : Int = 0; //px;\n\tvar bottomOut : Int = -50; //px;\n\t/**\n\t * @example:\n\t * \t\tvar snackbar = new html.Snackbar();\n\t * \t\tsnackbar.show('Welcome! Choose!');\n\t *\n\t */\n\tpublic function new() {\n\t\tsuper();\n\t\t// var _css = css() + CSSAnimation.CSSAnimations.getAnimation();\n\t\t// var _css = css();\n\t\t// setCSS(_css, 'inject-snackbar');\n\t}\n\n\tpublic function show(msg:String) {\n\n\t\t// Get the snackbar DIV\n\t\tvar x = document.getElementById(\"snackbar\");\n\n\t\t// if no #snackbar exists, create it\n\t\tif(x == null){\n\t\t\tvar div = document.createDivElement();\n\t\t\tdiv.id = 'snackbar';\n\t\t\tdocument.body.appendChild(div);\n\t\t\tx = div;\n\t\t}\n\n\t\t// set msg to snackbar\n\t\tx.innerText = msg;\n\n\t\t// Add the \"show\" class to DIV\n\t\tx.className = \"show\";\n\n\t\t// After 3 seconds, remove the show class from DIV\n\t\tjs.Browser.window.clearTimeout(timeout);\n\t\ttimeout = js.Browser.window.setTimeout(function(){\n\t\t\tx.className = x.className.replace(\"show\", \"\");\n\t\t}, 3000);\n\n\t}\n\n\tfunction css ():String{\n\t\treturn '\n/* https://www.w3schools.com/howto/howto_js_snackbar.asp */\n/* The snackbar - position it at the bottom and in the middle of the screen */\n#snackbar {\n    visibility: hidden; /* Hidden by default. Visible on click */\n    min-width: 250px; /* Set a default minimum width */\n    margin-left: -125px; /* Divide value of min-width by 2 */\n    background-color: #333; /* Black background color */\n    color: #fff; /* White text color */\n    text-align: center; /* Centered text */\n    border-radius: 5px 5px 0 0; /* Rounded borders */\n    padding: 10px; /* Padding */\n    position: fixed; /* Sit on top of the screen */\n    z-index: 1; /* Add a z-index if needed */\n    left: 50%; /* Center the snackbar */\n    bottom: ${bottomIn}px; /* ${bottomIn}px from the bottom */\n    font-size: 13px;\n\topacity: 0.5;\n}\n\n/* Show the snackbar when clicking on a button (class added with JavaScript) */\n#snackbar.show {\n    visibility: visible; /* Show the snackbar */\n\n\t/* Add animation: Take 0.5 seconds to fade in and out the snackbar.\n\tHowever, delay the fade out process for 2.5 seconds */\n    -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;\n    animation: fadein 0.5s, fadeout 0.5s 2.5s;\n}\n\n/* Animations to fade the snackbar in and out */\n@-webkit-keyframes fadein {\n    from {bottom: ${bottomOut}px; opacity: 0;}\n    to {bottom: ${bottomIn}px; opacity: 1;}\n}\n\n@keyframes fadein {\n    from {bottom: ${bottomOut}px; opacity: 0;}\n    to {bottom: ${bottomIn}px; opacity: 1;}\n}\n\n@-webkit-keyframes fadeout {\n    from {bottom: ${bottomIn}px; opacity: 1;}\n    to {bottom: ${bottomOut}px; opacity: 0;}\n}\n\n@keyframes fadeout {\n    from {bottom: ${bottomIn}px; opacity: 1;}\n    to {bottom: ${bottomOut}px; opacity: 0;}\n}\n\t\t';\n\t}\n\n}","package lib.model.constants;\n\n// import svg.geom.Point;\n\n// import cc.AST;\n\nclass Onom {\n\n\tvar char_0 : Array<Point> = [\n\t\tnew Point(0,1),\n\t\tnew Point(1,0),\n\t\tnew Point(5,0),\n\t\tnew Point(6,1),\n\t\tnew Point(6,11),\n\t\tnew Point(5,12),\n\t\tnew Point(1,12),\n\t\tnew Point(0,11),\n\t\tnew Point(0,1),\n\t\tnew Point(6,11),\n\t];\n\tvar char_1 : Array<Point> = [\n\t\tnew Point(2,0),\n\t\tnew Point(3,0),\n\t\tnew Point(3,12),\n\t];\n\tvar char_2 : Array<Point> = [\n\t\tnew Point(0,1),\n\t\tnew Point(1,0),\n\t\tnew Point(5,0),\n\t\tnew Point(6,1),\n\t\tnew Point(6,3),\n\t\tnew Point(0,9),\n\t\tnew Point(0,12),\n\t\tnew Point(6,12),\n\t];\n\tvar char_3 : Array<Point> = [\n\t\tnew Point(0,3),\n\t\tnew Point(0,1),\n\t\tnew Point(1,0),\n\t\tnew Point(5,0),\n\t\tnew Point(6,1),\n\t\tnew Point(6,5),\n\t\tnew Point(5,6),\n\t\tnew Point(3,6),\n\t\tnew Point(5,6),\n\t\tnew Point(6,7),\n\t\tnew Point(6,11),\n\t\tnew Point(5,12),\n\t\tnew Point(1,12),\n\t\tnew Point(0,11),\n\t\tnew Point(0,9),\n\t];\n\tvar char_4 : Array<Point> = [\n\t\tnew Point(0,0),\n\t\tnew Point(0,5),\n\t\tnew Point(1,6),\n\t\tnew Point(6,6),\n\t\tnew Point(6,6),\n\t\tnew Point(6,0),\n\t\tnew Point(6,12),\n\t];\n\tvar char_5 : Array<Point> = [\n\t\tnew Point(6,0),\n\t\tnew Point(0,0),\n\t\tnew Point(0,6),\n\t\tnew Point(5,6),\n\t\tnew Point(6,7),\n\t\tnew Point(6,11),\n\t\tnew Point(5,12),\n\t\tnew Point(1,12),\n\t\tnew Point(0,11),\n\t];\n\tvar char_6 : Array<Point> = [\n\t\tnew Point(6,2),\n\t\tnew Point(6,1),\n\t\tnew Point(5,0),\n\t\tnew Point(1,0),\n\t\tnew Point(0,1),\n\t\tnew Point(0,11),\n\t\tnew Point(1,12),\n\t\tnew Point(5,12),\n\t\tnew Point(6,11),\n\t\tnew Point(6,7),\n\t\tnew Point(5,6),\n\t\tnew Point(0,6),\n\t];\n\tvar char_7 : Array<Point> = [\n\t\tnew Point(0,0),\n\t\tnew Point(6,0),\n\t\tnew Point(0,12),\n\t];\n\tvar char_8 : Array<Point> = [\n\t\tnew Point(1,6),\n\t\tnew Point(0,5),\n\t\tnew Point(0,1),\n\t\tnew Point(1,0),\n\t\tnew Point(5,0),\n\t\tnew Point(6,1),\n\t\tnew Point(6,5),\n\t\tnew Point(5,6),\n\t\tnew Point(1,6),\n\t\tnew Point(0,7),\n\t\tnew Point(0,11),\n\t\tnew Point(1,12),\n\t\tnew Point(5,12),\n\t\tnew Point(6,11),\n\t\tnew Point(6,7),\n\t\tnew Point(5,6),\n\t];\n\tvar char_9 : Array<Point> = [\n\t\tnew Point(6,6),\n\t\tnew Point(1,6),\n\t\tnew Point(0,5),\n\t\tnew Point(0,1),\n\t\tnew Point(1,0),\n\t\tnew Point(5,0),\n\t\tnew Point(6,1),\n\t\tnew Point(6,11),\n\t\tnew Point(5,12),\n\t\tnew Point(1,12),\n\t\tnew Point(0,11),\n\t\tnew Point(0,10),\n\t];\n\n\t// special characters\n\tvar char_block_left : Array<Point> = [\n\t\tnew Point(5,0),\n\t\tnew Point(2,0),\n\t\tnew Point(2,12),\n\t\tnew Point(5,12),\n\t];\n\tvar char_block_right : Array<Point> = [\n\t\tnew Point(1,0),\n\t\tnew Point(4,0),\n\t\tnew Point(4,12),\n\t\tnew Point(1,12),\n\t];\n\tvar char_space : Array<Point> = [\n\t\tnew Point(0,0),\n\t];\n\tvar char__ : Array<Point> = [\n\t\tnew Point(0,12),\n\t\tnew Point(6,12),\n\t];\n\tvar char_min : Array<Point> = [\n\t\tnew Point(0,6),\n\t\tnew Point(6,6),\n\t];\n\tvar char_plus : Array<Point> = [\n\t\tnew Point(0,6),\n\t\tnew Point(6,6),\n\t\tnew Point(3,6),\n\t\tnew Point(3,3),\n\t\tnew Point(3,9),\n\t];\n\tvar char_is : Array<Point> = [\n\t\tnew Point(0,4),\n\t\tnew Point(6,4),\n\t\tnew Point(6,8),\n\t\tnew Point(0,8),\n\t];\n\t// no solution for this yet\n\tvar char_devide : Array<Point> = [\n\t\tnew Point(3,12),\n\t\tnew Point(4,11),\n\t];\n\n\tvar char_dot : Array<Point> = [\n\t\tnew Point(3,12),\n\t\tnew Point(3,12),\n\t];\n\tvar char_comma : Array<Point> = [\n\t\tnew Point(3,12),\n\t\tnew Point(4,11),\n\t];\n\n\t// alpha numberic\n\tvar char_not : Array<Point> = [\n\t\tnew Point(0,12),\n\t\tnew Point(0,0),\n\t\tnew Point(6,0),\n\t\tnew Point(6,12),\n\t\tnew Point(0,12),\n\t\tnew Point(6,0),\n\t\tnew Point(0,0),\n\t\tnew Point(6,12),\n\t];\n\tvar char_a : Array<Point> = [\n\t\tnew Point(0,12),\n\t\tnew Point(0,1),\n\t\tnew Point(1,0),\n\t\tnew Point(5,0),\n\t\tnew Point(6,1),\n\t\tnew Point(6,6),\n\t\tnew Point(0,6),\n\t\tnew Point(6,6),\n\t\tnew Point(6,12),\n\t];\n\tvar char_b : Array<Point> = [\n\t\tnew Point(0,12),\n\t\tnew Point(0,0),\n\t\tnew Point(5,0),\n\t\tnew Point(6,1),\n\t\tnew Point(6,5),\n\t\tnew Point(5,6),\n\t\tnew Point(0,6),\n\t\tnew Point(5,6),\n\t\tnew Point(6,7),\n\t\tnew Point(6,11),\n\t\tnew Point(5,12),\n\t\tnew Point(0,12),\n\t];\n\tvar char_c : Array<Point> = [\n\t\tnew Point(6,3),\n\t\tnew Point(6,1),\n\t\tnew Point(5,0),\n\t\tnew Point(1,0),\n\t\tnew Point(0,1),\n\t\tnew Point(0,11),\n\t\tnew Point(1,12),\n\t\tnew Point(1,12),\n\t\tnew Point(5,12),\n\t\tnew Point(6,11),\n\t\tnew Point(6,9),\n\t];\n\tvar char_d : Array<Point> = [\n\t\tnew Point(0,12),\n\t\tnew Point(0,0),\n\t\tnew Point(5,0),\n\t\tnew Point(6,1),\n\t\tnew Point(6,11),\n\t\tnew Point(5,12),\n\t\tnew Point(0,12),\n\t];\n\tvar char_e : Array<Point> = [\n\t\tnew Point(6,0),\n\t\tnew Point(0,0),\n\t\tnew Point(0,6),\n\t\tnew Point(3,6),\n\t\tnew Point(0,6),\n\t\tnew Point(0,12),\n\t\tnew Point(6,12),\n\t];\n\tvar char_f : Array<Point> = [\n\t\tnew Point(6,0),\n\t\tnew Point(0,0),\n\t\tnew Point(0,6),\n\t\tnew Point(3,6),\n\t\tnew Point(0,6),\n\t\tnew Point(0,12),\n\t];\n\tvar char_g : Array<Point> = [\n\t\tnew Point(6,3),\n\t\tnew Point(6,1),\n\t\tnew Point(5,0),\n\t\tnew Point(1,0),\n\t\tnew Point(0,1),\n\t\tnew Point(0,11),\n\t\tnew Point(1,12),\n\t\tnew Point(1,12),\n\t\tnew Point(5,12),\n\t\tnew Point(6,11),\n\t\tnew Point(6,6),\n\t\tnew Point(3,6),\n\t];\n\tvar char_h : Array<Point> = [\n\t\tnew Point(0,0),\n\t\tnew Point(0,12),\n\t\tnew Point(0,6),\n\t\tnew Point(6,6),\n\t\tnew Point(6,0),\n\t\tnew Point(6,12),\n\t];\n\tvar char_i : Array<Point> = [\n\t\tnew Point(1,0),\n\t\tnew Point(5,0),\n\t\tnew Point(3,0),\n\t\tnew Point(3,12),\n\t\tnew Point(1,12),\n\t\tnew Point(5,12),\n\t];\n\tvar char_j : Array<Point> = [\n\t\tnew Point(3,0),\n\t\tnew Point(6,0),\n\t\tnew Point(6,11),\n\t\tnew Point(5,12),\n\t\tnew Point(1,12),\n\t\tnew Point(0,11),\n\t\tnew Point(0,9),\n\t];\n\tvar char_k : Array<Point> = [\n\t\tnew Point(6,0),\n\t\tnew Point(6,5),\n\t\tnew Point(5,6),\n\t\tnew Point(0,6),\n\t\tnew Point(0,0),\n\t\tnew Point(0,12),\n\t\tnew Point(0,6),\n\t\tnew Point(5,6),\n\t\tnew Point(6,7),\n\t\tnew Point(6,12),\n\t];\n\tvar char_l : Array<Point> = [\n\t\tnew Point(0,0),\n\t\tnew Point(0,12),\n\t\tnew Point(6,12),\n\t\tnew Point(6,10),\n\t];\n\tvar char_m : Array<Point> = [\n\t\tnew Point(0,12),\n\t\tnew Point(0,0),\n\t\tnew Point(2,0),\n\t\tnew Point(3,1),\n\t\tnew Point(3,7),\n\t\tnew Point(3,1),\n\t\tnew Point(4,0),\n\t\tnew Point(6,0),\n\t\tnew Point(6,12),\n\t];\n\tvar char_n : Array<Point> = [\n\t\tnew Point(0,12),\n\t\tnew Point(0,0),\n\t\tnew Point(5,0),\n\t\tnew Point(6,1),\n\t\tnew Point(6,12),\n\t];\n\tvar char_o : Array<Point> = [\n\t\tnew Point(0,1),\n\t\tnew Point(1,0),\n\t\tnew Point(5,0),\n\t\tnew Point(6,1),\n\t\tnew Point(6,11),\n\t\tnew Point(5,12),\n\t\tnew Point(1,12),\n\t\tnew Point(0,11),\n\t\tnew Point(0,1),\n\t];\n\tvar char_p : Array<Point> = [\n\t\tnew Point(0,12),\n\t\tnew Point(0,0),\n\t\tnew Point(5,0),\n\t\tnew Point(6,1),\n\t\tnew Point(6,5),\n\t\tnew Point(5,6),\n\t\tnew Point(0,6),\n\t];\n\tvar char_q : Array<Point> = [\n\t\tnew Point(5,12),\n\t\tnew Point(1,12),\n\t\tnew Point(0,11),\n\t\tnew Point(0,1),\n\t\tnew Point(0,11),\n\t\tnew Point(0,1),\n\t\tnew Point(1,0),\n\t\tnew Point(5,0),\n\t\tnew Point(6,1),\n\t\tnew Point(6,11),\n\t\tnew Point(5,12),\n\t\tnew Point(3,8),\n\t];\n\tvar char_r : Array<Point> = [\n\t\tnew Point(0,12),\n\t\tnew Point(0,0),\n\t\tnew Point(5,0),\n\t\tnew Point(6,1),\n\t\tnew Point(6,5),\n\t\tnew Point(5,6),\n\t\tnew Point(0,6),\n\t\tnew Point(5,6),\n\t\tnew Point(6,7),\n\t\tnew Point(6,12),\n\t];\n\tvar char_s: Array<Point> = [\n\t\tnew Point(6,1),\n\t\tnew Point(5,0),\n\t\tnew Point(1,0),\n\t\tnew Point(0,1),\n\t\tnew Point(0,5),\n\t\tnew Point(1,6),\n\t\tnew Point(5,6),\n\t\tnew Point(6,7),\n\t\tnew Point(6,11),\n\t\tnew Point(5,12),\n\t\tnew Point(1,12),\n\t\tnew Point(0,11),\n\t];\n\tvar char_t: Array<Point> = [\n\t\tnew Point(0,0),\n\t\tnew Point(6,0),\n\t\tnew Point(3,0),\n\t\tnew Point(3,12),\n\t];\n\tvar char_u: Array<Point> = [\n\t\tnew Point(0,0),\n\t\tnew Point(0,11),\n\t\tnew Point(1,12),\n\t\tnew Point(6,12),\n\t\tnew Point(6,0),\n\t];\n\tvar char_v: Array<Point> = [\n\t\tnew Point(0,0),\n\t\tnew Point(3,12),\n\t\tnew Point(6,0),\n\t];\n\tvar char_w: Array<Point> = [\n\t\tnew Point(0,0),\n\t\tnew Point(0,11),\n\t\tnew Point(1,12),\n\t\tnew Point(2,12),\n\t\tnew Point(3,11),\n\t\tnew Point(3,6),\n\t\tnew Point(3,11),\n\t\tnew Point(4,12),\n\t\tnew Point(5,12),\n\t\tnew Point(6,11),\n\t\tnew Point(6,0),\n\t];\n\tvar char_x : Array<Point> = [\n\t\tnew Point(0,0),\n\t\tnew Point(3,6),\n\t\tnew Point(6,0),\n\t\tnew Point(3,6),\n\t\tnew Point(0,12),\n\t\tnew Point(3,6),\n\t\tnew Point(6,12),\n\t];\n\tvar char_y : Array<Point> = [\n\t\tnew Point(0,0),\n\t\tnew Point(3,6),\n\t\tnew Point(6,0),\n\t\tnew Point(3,6),\n\t\tnew Point(3,12),\n\t];\n\tvar char_z : Array<Point> = [\n\t\tnew Point(0,0),\n\t\tnew Point(6,0),\n\t\tnew Point(0,12),\n\t\tnew Point(6,12),\n\t];\n\t// var list = {\n\t// \t0 :\n\t// }\n\n\tpublic var mono : Map<String, Array<Point>>;\n\n\n\n\tpublic function new() {\n\t\t// your code\n\t\tmono = [\n\t\t\t'0' => char_0,\n\t\t\t'1' => char_1,\n\t\t\t'2' => char_2,\n\t\t\t'3' => char_3,\n\t\t\t'4' => char_4,\n\t\t\t'5' => char_5,\n\t\t\t'6' => char_6,\n\t\t\t'7' => char_7,\n\t\t\t'8' => char_8,\n\t\t\t'9' => char_9,\n\t\t\t'[' => char_block_left,\n\t\t\t']' => char_block_right,\n\t\t\t' ' => char_space,\n\t\t\t'_' => char__,\n\t\t\t'-' => char_min,\n\t\t\t'+' => char_plus,\n\t\t\t'=' => char_is,\n\t\t\t'.' => char_dot,\n\t\t\t',' => char_comma,\n\t\t\t'a' => char_a,\n\t\t\t'b' => char_b,\n\t\t\t'c' => char_c,\n\t\t\t'd' => char_d,\n\t\t\t'e' => char_e,\n\t\t\t'f' => char_f,\n\t\t\t'g' => char_g,\n\t\t\t'h' => char_h,\n\t\t\t'i' => char_i,\n\t\t\t'j' => char_j,\n\t\t\t'k' => char_k,\n\t\t\t'l' => char_l,\n\t\t\t'm' => char_m,\n\t\t\t'n' => char_n,\n\t\t\t'o' => char_o,\n\t\t\t'p' => char_p,\n\t\t\t'q' => char_q,\n\t\t\t'r' => char_r,\n\t\t\t't' => char_t,\n\t\t\t's' => char_s,\n\t\t\t'u' => char_u,\n\t\t\t'v' => char_v,\n\t\t\t'w' => char_w,\n\t\t\t'x' => char_x,\n\t\t\t'y' => char_y,\n\t\t\t'z' => char_z,\n\t\t];\n\t}\n\n\t/**\n\t *  get the character, if not use the default\n\t *  @param value -\n\t */\n\tpublic function getChar(value){\n\t\tvar pointsArray = char_not;\n\t\tif(mono.exists(value)){\n\t\t\tpointsArray = mono.get(value);\n\t\t}\n\t\t// make sure the values are not directly mapped back to\n\t\t// this file copy all points and create a new arr.\n\t\tvar temp = [];\n\t\tfor ( i in 0 ... pointsArray.length ) {\n\t\t\tvar oldP = pointsArray[i];\n\t\t\tvar newP = new Point(oldP.x, oldP.y);\n\t\t\ttemp.push(newP);\n\t\t}\n\t\treturn temp;\n\t}\n\n\tpublic function getAvailable(){\n\t\tvar str = '';\n\t\tfor (value in mono.keys()){\n\t\t\tstr += value;\n\t\t}\n\t\treturn str;\n\t}\n\n\n}\n\nclass Point {\n\tpublic var x : Int;\n\tpublic var y : Int;\n\tpublic function new(x,y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\tpublic function toString() {\n\t\treturn \"Point(\"+x+\",\"+y+\")\";\n\t}\n}\n","/*\nCopyright (c) 2012 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage mloader;\n\nimport msignal.Signal;\nimport msignal.EventSignal;\nimport mloader.Loader;\n\n/**\nThe LoaderBase class is an abstract implementation of the Loader class.  \n*/\nclass LoaderBase<T> implements Loader<T>\n{\n\t/**\n\tThe current url of the loader.\n\t*/\n\tpublic var url(default, set):String;\n\n\t/**\n\tIf the url changes while loading, cancel the request.\n\t*/\n\tfunction set_url(value:String):String\n\t{\n\t\tif (value == url) return url;\n\t\tif (loading) cancel();\n\t\treturn url = sanitizeUrl(value);\n\t}\n\n\t/**\n\tThe loaded content, only available after completed is dispatched.\n\t*/\n\tpublic var content(default, null):Null<T>;\n\n\t/**\n\tThe current state of the loader: true if content is currently being loaded, \n\tfalse if the loader has completed, failed, or not yet started.\n\t*/\n\tpublic var loading(default, null):Bool;\n\n\t/**\n\tThe percentage of loading complete. Between 0 and 1.\n\t*/\n\tpublic var progress(default, null):Float;\n\n\t/**\n\tA signal dispatched when loading status changes. See LoaderEventType.\n\t*/\n\tpublic var loaded(default, null):EventSignal<Loader<T>, LoaderEventType>;\n\n\t/**\n\t@param url  the url to load the resource from\n\t*/\n\tpublic function new(?url:String)\n\t{\n\t\tthis.loaded = new EventSignal<Loader<T>, LoaderEventType>(this);\n\t\tthis.url = sanitizeUrl(url);\n\n\t\t// set initial state\n\t\tprogress = 0;\n\t\tloading = false;\n\t}\n\n\t/**\n\tStarts a load operation from the loaders url.\n\t\n\tIf the loader is loading, the previous operation is cancelled before the new \n\toperation starts. If no url has been set, and exception is thrown.\n\t*/\n\tpublic function load():Void\n\t{\n\t\t// if currently loading, return\n\t\tif (loading) return;\n\n\t\t// if no url, throw exception\n\t\tif (url == null) throw \"No url defined for Loader\";\n\n\t\t// update state\n\t\tloading = true;\n\n\t\t// dispatch started\n\t\tloaded.dispatchType(Start);\n\t\t\n\t\t// call implementation\n\t\tloaderLoad();\n\t}\n\n\t/**\n\tCancels a load operation currently in progress for this loader instance.\n\n\tIf the loader is not loading, this method has no effect. Progress is reset \n\tto zero and a `cancelled` event is dispatched.\n\t*/\n\tpublic function cancel():Void\n\t{\n\t\t// if not loading, return\n\t\tif (!loading) return;\n\t\tloading = false;\n\n\t\t// call implementation\n\t\tloaderCancel();\n\n\t\t// reset state\n\t\tprogress = 0;\n\t\tcontent = null;\n\t\t\n\t\t// dispatch event\n\t\tloaded.dispatchType(Cancel);\n\t}\n\n\t//-------------------------------------------------------------------------- private\n\n\t/**\n\tThe abstract load implementation.\n\t*/\n\tfunction loaderLoad()\n\t{\n\t\tthrow \"missing implementation\";\n\t}\n\n\t/**\n\tThe abstract cancel implementation.\n\t*/\n\tfunction loaderCancel():Void\n\t{\n\t\tthrow \"missing implementation\";\n\t}\n\t\n\tfunction loaderComplete()\n\t{\n\t\tif (!loading) return;\n\n\t\t// update progress\n\t\tprogress = 1;\n\n\t\t// update state\n\t\tloading = false;\n\t\t\n\t\t// dispatch event\n\t\tloaded.dispatchType(Complete);\n\t}\n\n\tfunction loaderFail(error:LoaderErrorType)\n\t{\n\t\tif (!loading) return;\n\t\tloading = false;\n\t\tloaded.dispatchType(Fail(error));\n\t}\n\n\t/**\n\t * Android doesn't like unencoded spaces in URLs (and won't encode them itself),\n\t * but calling StringTools.encode() on the entire URL will 'over encode' it.\n\t */\n\tfunction sanitizeUrl(url:String):String\n\t{\n\t\tvar sanitized:String = url;\n\n\t\t#if openfl\n\t\tsanitized = StringTools.replace(sanitized, \" \", \"%20\");\n\t\t#end\n\n\t\treturn sanitized;\n\t}\n}\n","/*\nCopyright (c) 2012 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\npackage mloader;\n\nimport mloader.Loader;\n\n#if haxe3\nimport haxe.ds.StringMap;\n#else\nprivate typedef StringMap<T> = Hash<T>;\n#end\n\n/**\nThe HttpLoader class is responsible for loading content over Http, falling back\nto file system access for local paths under Neko (as haxe.Http does not support\nfile:/// urls). Data can also be posted to a url using the `send` method, which\nautomatically detects content-type (unless you set a custom content-type header).\n*/\nclass HttpLoader<T> extends LoaderBase<T>\n{\n\t#if (nme || openfl)\n\t/**\n\tThe URLLoader used to load content.\n\t*/\n\tpublic var loader:flash.net.URLLoader;\n\n\t/**\n\tThe URLRequest to load.\n\t*/\n\tvar urlRequest:flash.net.URLRequest;\n\t#else\n\t/**\n\tThe http instance used to load the content.\n\t*/\n\tvar http:Http;\n\t#end\n\n\t/**\n\tThe headers to pass through with the http request.\n\t*/\n\tpublic var headers(default, null):StringMap<String>;\n\n\t/**\n\tHttp status code of response.\n\t*/\n\tpublic var statusCode(default, null):Int;\n\n\t/**\n\t@param url  the url to load the resource from\n\t@param http optional Http instance to use for the load request\n\t*/\n\tfunction new(?url:String, ?http:Http)\n\t{\n\t\tsuper(url);\n\n\t\theaders = new StringMap();\n\n\t\t#if (nme || openfl)\n\t\turlRequest = new flash.net.URLRequest();\n\t\tloader = new flash.net.URLLoader();\n\n\t\tloader.addEventListener(flash.events.HTTPStatusEvent.HTTP_STATUS, loaderEvent);\n\t\tloader.addEventListener(flash.events.Event.COMPLETE, loaderEvent);\n\t\tloader.addEventListener(flash.events.IOErrorEvent.IO_ERROR, loaderEvent);\n\t\tloader.addEventListener(flash.events.SecurityErrorEvent.SECURITY_ERROR, loaderEvent);\n\t\t#else\n\t\tif (http == null) http = new Http(\"\");\n\n\t\tthis.http = http;\n\t\thttp.onData = httpData;\n\t\thttp.onError = httpError;\n\t\thttp.onStatus = httpStatus;\n\t\t#end\n\t}\n\n\t#if (sys && !openfl)\n\t/**\n\tLocal urls are loaded from the file system in neko or cpp.\n\t*/\n\tfunction loadFromFileSystem(url:String)\n\t{\n\t\tif (!sys.FileSystem.exists(url))\n\t\t{\n\t\t\tloaderFail(IO(\"Local file does not exist: \" + url));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar contents = sys.io.File.getContent(url);\n\t\t\thttpData(contents);\n\t\t}\n\t}\n\t#end\n\n\t#if (nodejs)\n\t/**\n\tLocal urls are loaded from the file system in nodejs.\n\t*/\n\tfunction loadFromFileSystem(url:String)\n\t{\n\t\tif (!js.node.Fs.existsSync(url))\n\t\t{\n\t\t\tloaderFail(IO(\"Local file does not exist: \" + url));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar contents = js.node.Fs.readFileSync(url).toString();\n\t\t\thttpData(contents);\n\t\t}\n\t}\n\t#end\n\n\t/**\n\tConfigures and makes the http request. The send method can also pass\n\tthrough data with the request. It also traps any security errors and\n\tdispatches a failed signal.\n\n\t@param url The url to load.\n\t@param data Data to post to the url.\n\t*/\n\tpublic function send(data:Dynamic)\n\t{\n\t\t// if currently loading, cancel\n\t\tif (loading) cancel();\n\n\t\t// if no url, throw exception\n\t\tif (url == null) throw \"No url defined for Loader\";\n\n\t\t// update state\n\t\tloading = true;\n\n\t\t// dispatch started\n\t\tloaded.dispatchType(Start);\n\n\t\t// default content type\n\t\tvar contentType = \"application/octet-stream\";\n\n\t\tif (Std.is(data, Xml))\n\t\t{\n\t\t\t// convert to string and send as application/xml\n\t\t\tdata = Std.string(data);\n\t\t\tcontentType = \"application/xml\";\n\t\t}\n\t\telse if (!Std.is(data, String))\n\t\t{\n\t\t\t// stringify and send as application/json\n\t\t\tdata = haxe.Json.stringify(data);\n\t\t\tcontentType = \"application/json\";\n\t\t}\n\t\telse if (Std.is(data, String) && validateJSONdata(data))\n\t\t{\n\t\t\t//data is already a valid JSON string\n\t\t\tcontentType = \"application/json\";\n\t\t}\n\n\t\t#if openfl\n\t\t//OpenFL Native targets cannot set the Content-Type directly in the headers\n\t\turlRequest.contentType = contentType;\n\t\t#else\n\t\t// only set content type if not already set\n\t\tif (!headers.exists(\"Content-Type\"))\n\t\t{\n\t\t\theaders.set(\"Content-Type\", contentType);\n\t\t}\n\t\t#end\n\n\t\thttpConfigure();\n\t\taddHeaders();\n\n\t\t#if (nme || openfl)\n\t\turlRequest.url = url;\n\t\turlRequest.method = flash.net.URLRequestMethod.POST;\n\t\turlRequest.data = data;\n\t\tloader.load(urlRequest);\n\t\t#else\n\t\thttp.url = url;\n\t\thttp.setPostData(data);\n\n\t\ttry\n\t\t{\n\t\t\thttp.request(true);\n\t\t}\n\t\tcatch (e:Dynamic)\n\t\t{\n\t\t\t// js can throw synchronous security error\n\t\t\tloaderFail(Security(Std.string(e)));\n\t\t}\n\t\t#else\n\t\t#end\n\t}\n\n\t//-------------------------------------------------------------------------- private\n\n\toverride function loaderLoad()\n\t{\n\t\thttpConfigure();\n\t\taddHeaders();\n\n\t\t#if (nme || openfl)\n\t\turlRequest.url = url;\n\t\tif (url.indexOf(\"http:\") == 0 || url.indexOf(\"https:\") == 0)\n\t\t{\n\t\t\tloader.load(urlRequest);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t#if openfl\n\t\t\tvar result = openfl.Assets.getText(url);\n\t\t\t#else\n\t\t\tvar result = nme.installer.Assets.getBitmapData(url);\n\t\t\t#end\n\n\t\t\t#if haxe3\n\t\t\thaxe.Timer.delay(httpData.bind(result), 10);\n\t\t\t#else\n\t\t\thaxe.Timer.delay(callback(httpData, result), 10);\n\t\t\t#end\n\t\t}\n\t\t#else\n\t\thttp.url = url;\n\t\t#if (sys || nodejs)\n\t\tif (url.indexOf(\"http:\") == 0 || url.indexOf(\"https:\") == 0)\n\t\t{\n\t\t\thttp.request(false);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tloadFromFileSystem(url);\n\t\t}\n\t\t#else\n\t\ttry\n\t\t{\n\t\t\thttp.request(false);\n\t\t}\n\t\tcatch (e:Dynamic)\n\t\t{\n\t\t\t// js can throw synchronous security error\n\t\t\tloaderFail(Security(Std.string(e)));\n\t\t}\n\t\t#end\n\t\t#end\n\t}\n\n\toverride function loaderCancel():Void\n\t{\n\t\t#if (nme || openfl)\n\t\ttry { loader.close(); } catch(e:Dynamic) {}\n\t\t#elseif !sys\n\t\thttp.cancel();\n\t\t#end\n\t}\n\n\tfunction httpConfigure()\n\t{\n\t\t// abstract\n\t}\n\n\tfunction addHeaders()\n\t{\n\t\t#if (nme || openfl)\n\t\tvar requestHeaders = [];\n\t\tfor (name in headers.keys())\n\t\t{\n\t\t\trequestHeaders.push(new flash.net.URLRequestHeader(name, headers.get(name)));\n\t\t}\n\t\turlRequest.requestHeaders = requestHeaders;\n\t\t#else\n\t\tfor (name in headers.keys())\n\t\t{\n\t\t\thttp.setHeader(name, headers.get(name));\n\t\t}\n\t\t#end\n\t}\n\n\tfunction httpData(data:String)\n\t{\n\t\tcontent = cast data;\n\t\tloaderComplete();\n\t}\n\n\tfunction httpStatus(status:Int)\n\t{\n\t\tstatusCode = status;\n\t}\n\n\tfunction httpError(error:String)\n\t{\n\t\t#if !openfl\n\t\tcontent = cast http.responseData;\n\t\t#end\n\t\tloaderFail(IO(error));\n\t}\n\n\tfunction httpSecurityError(error:String)\n\t{\n\t\tloaderFail(Security(error));\n\t}\n\n\tfunction validateJSONdata(data:String):Bool\n\t{\n\t\tvar isValid:Bool = true;\n\n\t\ttry { haxe.Json.parse(data); }\n\t\tcatch (error:Dynamic) { isValid = false; }\n\n\t\treturn isValid;\n\t}\n\n\t#if (nme || openfl)\n\n\tfunction loaderEvent(e:Dynamic)\n\t{\n\t\tswitch (e.type)\n\t\t{\n\t\t\tcase flash.events.HTTPStatusEvent.HTTP_STATUS:\n\t\t\thttpStatus(e.status);\n\n\t\t\tcase flash.events.Event.COMPLETE:\n\t\t\thttpData(Std.string(e.target.data));\n\n\t\t\tcase flash.events.IOErrorEvent.IO_ERROR:\n\t\t\thttpError(Std.string(e));\n\n\t\t\tcase flash.events.SecurityErrorEvent.SECURITY_ERROR:\n\t\t\thttpSecurityError(Std.string(e));\n\t\t}\n\t}\n\n\t#end\n}\n","/*\nCopyright (c) 2012 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage mloader;\n\nimport mloader.Loader;\nimport msignal.EventSignal;\n\n/**\nAn extension of the HttpLoader that attempts to parse reponses into Json objects.\n\nIf the format of the JSON file is invalid then a failed event is \ndispatched indicting the nature of the fault.\n\nProvides an optional callback <code>parseData</code> to validate/intercept the\nparsed JSON object prior to triggering loaderComplete\n\n<pre><code>\n\nfunction execute()\n{\n\tvar loader:JsonLoader<Dynamic> = new JsonLoader(\"http://localhost/data.json\");\n\tloader.parseData = customDataParser;\n\tloader.loaded.add(errorHandler).forType(LoaderEventType.Fail(null));\n\tloader.loaded.add(completedHandler).forType(LoaderEventType.complete);\n\tloader.load();\n}\n\nfunction customDataParser(data:Dynamic):Dynamic\n{\n\tif(data.errorCode == null)\n\t{\n\t\treturn data.payload;\n\t}\n\telse\n\t\tthrow \"Server error \" + data.errorCode;\n\t\treturn null;\n\t}\n}\n\nfunction errorHandler(event:LoaderEvent)\n{\n\t//error handling logic\n}\n\nfunction completedHandler(event:LoaderEvent)\n{\n\t...\n}\n</code></pre>\n\n*/\nclass JsonLoader<T> extends HttpLoader<T>\n{\n\t/**\n\tOptional method for post processing JSON object before loaderComplete is triggered.\n\tThis can be used to validate JSON payload or extract a sub property to return\n\tas the content payload.\n\t\n\t@param raw data object (parsed JSON)\n\t@returns the typed content payload\n\t@throws any exception to trigger a Fail (exception will be wrapped in a LoaderErrorType.Data(e, raw))\n\t*/\n\tpublic var parseData:Dynamic->T;\n\n\tpublic function new(?url:String, ?http:Http)\n\t{\n\t\tsuper(url, http);\n\t}\n\n\toverride function httpData(data:String)\n\t{\n\t\tvar raw:Dynamic = null;\n\n\t\ttry\n\t\t{\n\t\t\traw = haxe.Json.parse(data);\n\t\t}\n\t\tcatch (e:Dynamic)\n\t\t{\n\t\t\tloaderFail(Format(Std.string(e)));\n\t\t\treturn;\n\t\t}\n\n\t\tif(parseData == null)\n\t\t{\n\t\t\tcontent = raw;\n\t\t\tloaderComplete();\n\t\t\treturn;\n\t\t}\n\n\t\ttry\n\t\t{\n\t\t\tcontent = parseData(raw);\n\t\t\tloaderComplete();\n\t\t}\n\t\tcatch (loaderError:LoaderErrorType)\n\t\t{\n\t\t\tloaderFail(loaderError);\n\t\t\treturn;\n\t\t}\n\t\tcatch (e:Dynamic)\n\t\t{\n\t\t\tloaderFail(Data(Std.string(e), data));\n\t\t\treturn;\n\t\t}\n\t}\n}\n","/*\nCopyright (c) 2012 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage msignal;\n\nimport msignal.Slot;\n\n/**\n\tA convenience type describing any kind of signal.\n**/\ntypedef AnySignal = Signal<Dynamic, Dynamic>;\n\n/**\n\tA Signal manages a list of listeners, which are executed when the signal is \n\tdispatched.\n**/\n@:keepSub\nclass Signal<TSlot:Slot<Dynamic, Dynamic>, TListener>\n{\n\tpublic var valueClasses:Array<Dynamic>;\n\n\t/**\n\t\tThe current number of listeners for the signal.\n\t**/\n\tpublic var numListeners(get, null):Int;\n\t\n\tvar slots:SlotList<TSlot, TListener>;\n\tvar priorityBased:Bool;\n\n\tfunction new(?valueClasses:Array<Dynamic>)\n\t{\n\t\tif (valueClasses == null) valueClasses = [];\n\t\tthis.valueClasses = valueClasses;\n\t\tslots = cast SlotList.NIL;\n\t\tpriorityBased = false;\n\t}\n\n\t/**\n\t\tSubscribes a listener for the signal.\n\t\t\n\t\t@param listener A function matching the signature of TListener\n\t\t@return The added listener slot\n\t**/\n\tpublic function add(listener:TListener):TSlot\n\t{\n\t\treturn registerListener(listener);\n\t}\n\n\t/**\n\t\tSubscribes a one-time listener for this signal.\n\t\tThe signal will remove the listener automatically the first time it is called,\n\t\tafter the dispatch to all listeners is complete.\n\t\t\n\t\t@param listener A function matching the signature of TListener\n\t\t@return The added listener slot\n\t**/\n\tpublic function addOnce(listener:TListener):TSlot\n\t{\n\t\treturn registerListener(listener, true);\n\t}\n\n\t/**\n\t\tSubscribes a listener for the signal.\n\t\tAfter you successfully register an event listener,\n\t\tyou cannot change its priority through additional calls to add().\n\t\tTo change a listener's priority, you must first call remove().\n\t\tThen you can register the listener again with the new priority level.\n\t\t\n\t\t@param listener A function matching the signature of TListener\n\t\t@return The added listener slot\n\t**/\n\tpublic function addWithPriority(listener:TListener, ?priority:Int=0):TSlot\n\t{\n\t\treturn registerListener(listener, false, priority);\n\t}\n\n\t/**\n\t\tSubscribes a one-time listener for this signal.\n\t\tThe signal will remove the listener automatically the first time it is \n\t\tcalled, after the dispatch to all listeners is complete.\n\t\t\n\t\t@param listener A function matching the signature of TListener\n\t\t@return The added listener slot\n\t**/\n\tpublic function addOnceWithPriority(listener:TListener, ?priority:Int=0):TSlot\n\t{\n\t\treturn registerListener(listener, true, priority);\n\t}\n\n\t/**\n\t\tUnsubscribes a listener from the signal.\n\t\t\n\t\t@param listener The listener to remove\n\t\t@return The removed listener slot\n\t**/\n\tpublic function remove(listener:TListener):TSlot\n\t{\n\t\tvar slot = slots.find(listener);\n\t\tif (slot == null) return null;\n\t\t\n\t\tslots = slots.filterNot(listener);\n\t\treturn slot;\n\t}\n\n\t/**\n\t\tUnsubscribes all listeners from the signal.\n\t**/\n\tpublic function removeAll():Void\n\t{\n\t\tslots = cast SlotList.NIL;\n\t}\n\n\tfunction registerListener(listener:TListener, ?once:Bool=false, ?priority:Int=0):TSlot\n\t{\n\t\tif (registrationPossible(listener, once))\n\t\t{\n\t\t\tvar newSlot = createSlot(listener, once, priority);\n\t\t\t\n\t\t\tif (!priorityBased && priority != 0) priorityBased = true;\n\t\t\tif (!priorityBased && priority == 0) slots = slots.prepend(newSlot);\n\t\t\telse slots = slots.insertWithPriority(newSlot);\n\n\t\t\treturn newSlot;\n\t\t}\n\t\t\n\t\treturn slots.find(listener);\n\t}\n\n\tfunction registrationPossible(listener, once)\n\t{\n\t\tif (!slots.nonEmpty) return true;\n\t\t\n\t\tvar existingSlot = slots.find(listener);\n\t\tif (existingSlot == null) return true;\n\n\t\t#if debug\n\t\tif (existingSlot.once != once)\n\t\t{\n\t\t\t// If the listener was previously added, definitely don't add it again.\n\t\t\t// But throw an exception if their once values differ.\n\t\t\tthrow \"You cannot addOnce() then add() the same listener without removing the relationship first.\";\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false; // Listener was already registered.\n\t}\n\n\tfunction createSlot(listener:TListener, ?once:Bool=false, ?priority:Int=0):TSlot\n\t{\n\t\treturn null;\n\t}\n\n\tfunction get_numListeners()\n\t{\n\t\treturn slots.length;\n\t}\n}\n\n/**\n\tSignal that executes listeners with no arguments.\n**/\nclass Signal0 extends Signal<Slot0, Void -> Void>\n{\n\tpublic function new()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t\tExecutes the signals listeners with no arguements.\n\t**/\n\tpublic function dispatch()\n\t{\n\t\tvar slotsToProcess = slots;\n\t\t\n\t\twhile (slotsToProcess.nonEmpty)\n\t\t{\n\t\t\tslotsToProcess.head.execute();\n\t\t\tslotsToProcess = slotsToProcess.tail;\n\t\t}\n\t}\n\n\toverride function createSlot(listener:Void -> Void, ?once:Bool=false, ?priority:Int=0)\n\t{\n\t\treturn new Slot0(this, listener, once, priority);\n\t}\n}\n\n/**\n\tSignal that executes listeners with one arguments.\n**/\nclass Signal1<TValue> extends Signal<Slot1<TValue>, TValue -> Void>\n{\n\tpublic function new(?type:Dynamic=null)\n\t{\n\t\tsuper([type]);\n\t}\n\n\t/**\n\t\tExecutes the signals listeners with one arguement.\n\t**/\n\tpublic function dispatch(value:TValue)\n\t{\n\t\tvar slotsToProcess = slots;\n\t\t\n\t\twhile (slotsToProcess.nonEmpty)\n\t\t{\n\t\t\tslotsToProcess.head.execute(value);\n\t\t\tslotsToProcess = slotsToProcess.tail;\n\t\t}\n\t}\n\n\toverride function createSlot(listener:TValue -> Void, ?once:Bool=false, ?priority:Int=0)\n\t{\n\t\treturn new Slot1<TValue>(this, listener, once, priority);\n\t}\n}\n\n/**\n\tSignal that executes listeners with two arguments.\n**/\nclass Signal2<TValue1, TValue2> extends Signal<Slot2<TValue1, TValue2>, TValue1 -> TValue2 -> Void>\n{\n\tpublic function new(?type1:Dynamic=null, ?type2:Dynamic=null)\n\t{\n\t\tsuper([type1, type2]);\n\t}\n\n\t/**\n\t\tExecutes the signals listeners with two arguements.\n\t**/\n\tpublic function dispatch(value1:TValue1, value2:TValue2)\n\t{\n\t\tvar slotsToProcess = slots;\n\t\t\n\t\twhile (slotsToProcess.nonEmpty)\n\t\t{\n\t\t\tslotsToProcess.head.execute(value1, value2);\n\t\t\tslotsToProcess = slotsToProcess.tail;\n\t\t}\n\t}\n\n\toverride function createSlot(listener:TValue1 -> TValue2 -> Void, ?once:Bool=false, ?priority:Int=0)\n\t{\n\t\treturn new Slot2<TValue1, TValue2>(this, listener, once, priority);\n\t}\n}\n","/*\nCopyright (c) 2012 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage msignal;\n\nimport msignal.Signal;\nimport msignal.Slot;\n\nimport Type;\n\n/**\n\tSignal that executes listeners with one arguments.\n**/\nclass EventSignal<TTarget, TType> \n\textends Signal<EventSlot<TType>, Event<TTarget, TType> -> Void>\n{\n\t/**\n\t\tThe object for which this signal dispatches events.\n\t**/\n\tpublic var target(default, null):TTarget;\n\n\t/**\n\t\tCreates an `EventSignal` for the provided target.\n\t**/\n\tpublic function new(target:TTarget)\n\t{\n\t\tsuper([Event]);\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t\tDispatches an event to the listeners of the `EventSignal`.\n\t**/\n\tpublic function dispatch(event:Event<TTarget, TType>):Void\n\t{\n\t\tif (event.target == null)\n\t\t{\n\t\t\t// set the event target\n\t\t\tuntyped event.target = target;\n\t\t\tuntyped event.signal = this;\n\t\t}\n\t\t\n\t\t// update current target\n\t\tevent.currentTarget = target;\n\n\t\t// Broadcast to listeners.\n\t\tvar slotsToProcess = slots;\n\n\t\twhile (slotsToProcess.nonEmpty)\n\t\t{\n\t\t\tslotsToProcess.head.execute(event);\n\t\t\tslotsToProcess = slotsToProcess.tail;\n\t\t}\n\t}\n\n\tpublic function dispatchType(type:TType):Void\n\t{\n\t\tdispatch(new Event(type));\n\t}\n\n\t/**\n\t\tDispatches an event to this signals listeners by calling `dispatch`, and \n\t\tthen attempts to bubble the event by checking if `target` has a field \n\t\t`parent` of type `EventDispatcher`. Each event dispatcher in the chain \n\t\thas an opportunity to cancel bubbling by returning `false` when \n\t\t`dispatchEvent` is called.\n\n\t\tEventSignals are themselves EventDispatchers, which simplifies creating \n\t\tbubbling chains without creating another hierarchy.\n\t**/\n\tpublic function bubble(event:Event<TTarget, TType>):Void\n\t{\n\t\t// dispatch to this signals listeners first\n\t\tdispatch(event);\n\n\t\t// then bubble the event as far as possible.\n\t\tvar currentTarget = target;\n\t\t\n\t\twhile (currentTarget != null && Reflect.hasField(currentTarget, \"parent\"))\n\t\t{\n\t\t\tcurrentTarget = Reflect.field(currentTarget, \"parent\");\n\t\t\t\n\t\t\tif (Std.is(currentTarget, EventDispatcher))\n\t\t\t{\n\t\t\t\tevent.currentTarget = currentTarget;\n\t\t\t\tvar dispatcher = cast(currentTarget, EventDispatcher<Dynamic>);\n\n\t\t\t\t// dispatchEvent() can stop the bubbling by returning false.\n\t\t\t\tif (!dispatcher.dispatchEvent(event)) break;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t\tA convenience method for dispatching an event without having to \n\t\tinstantiate it directly. This helps prevent the ink wearing off your \n\t\tangle bracket keys.\n\t**/\n\tpublic function bubbleType(type:TType):Void\n\t{\n\t\tbubble(new Event(type));\n\t}\n\n\t/**\n\t\tInternal method used to create the slot type for this signal.\n\t**/\n\toverride function createSlot(listener:Event<TTarget, TType> -> Void, ?once:Bool=false, ?priority:Int=0)\n\t{\n\t\treturn new EventSlot(this, cast listener, once, priority);\n\t}\n}\n\n/**\n\tA slot that executes a listener with one argument.\n**/\nclass EventSlot<TValue> extends Slot<Dynamic, Event<Dynamic, TValue> -> Void>\n{\n\t/**\n\t\tThe expected type for this slot or null if one has not been set using `forType`.\n\t**/\n\tvar filterType:Null<TValue>;\n\n\tpublic function new(signal:Dynamic, listener:Event<Dynamic, TValue> -> Void, ?once:Bool=false, ?priority:Int=0)\n\t{\n\t\tsuper(signal, listener, once, priority);\n\t}\n\n\t/**\n\t\tExecutes a listener with one argument.\n\t\tIf type <code>params</code> are not null, it will check type equality \n\t\ton enum parameters.\n\t**/\n\tpublic function execute(value1:Event<Dynamic, TValue>)\n\t{\n\t\tif (!enabled) return;\n\n\t\tif (filterType != null && !typeEq(filterType, value1.type)) return;\n\t\tif (once) remove();\n\t\tlistener(value1);\n\t}\n\n\t/**\n\t\tRestricts the slot to firing for events of a specific type.\n\t\tEnumValues with paramaters can specify explicit or fuzzy matching \n\t\tcriteria.\n\n\t\tTo match against specific <code>param</code> values include them in the \n\t\ttype (e.g. Progress(1))\n\t\tTo fuzzy match against any value use a <code>null</code> value \n\t\t(e.g. Progress(null))\n\t**/\n\tpublic function forType(value:TValue)\n\t{\n\t\tfilterType = value;\n\t}\n\n\tpublic static function typeEq(a:Dynamic, b:Dynamic):Bool\n\t{\n\t\tif(a == b) return true;\n\n\t\tswitch(Type.typeof(a))\n\t\t{\n\t\t\tcase TEnum(_):\n\t\t\t{\n\t\t\t\treturn enumTypeEq(cast a, cast b);\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t\tCompares enum equality, ignoring any non enum parameters, so that:\n\t\t\tFail(IO(\"One thing happened\")) == Fail(IO(\"Another thing happened\"))\n\t\t\n\t\tAlso allows for wildcard matching by passing through <code>null</code> for\n\t\tany params, so that:\n\t\t\tFail(IO(null)) matches Fail(IO(\"Another thing happened\"))\n\t\t\n\t\t@param a the enum value to filter on\n\t\t@param b the enum value being checked\n\t**/\n\tstatic public function enumTypeEq(a:EnumValue, b:EnumValue)\n\t{\n\t\tif (a == b) return true;\n\t\tif (Type.getEnum(a) != Type.getEnum(b)) return false;\n\t\tif (Type.enumIndex(a) != Type.enumIndex(b)) return false;\n\n\t\tvar aParams = Type.enumParameters(a);\n\t\tif (aParams.length == 0) return true;\n\t\tvar bParams = Type.enumParameters(b);\n\n\t\tfor (i in 0...aParams.length)\n\t\t{\n\t\t\tvar aParam = aParams[i];\n\t\t\tvar bParam = bParams[i];\n\n\t\t\tif (aParam == null) continue;\n\t\t\tif(!typeEq(aParam, bParam)) return false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\n}\n\n/**\n\tEncapsulates information about a dispatched event.\n\n\tThe event object defines properties that listeners might need to act on an \n\tevent: the target/signal of the event (where it originated), the current \n\ttarget (the target of the most recent signal to dispatch the event) and \n\tthe type. To avoid developers needing to subclass Event to create custom \n\tfields and data, Events use type parameters to define target and type \n\tconstraints, and use enums as event types to allow additional data.\n**/\nclass Event<TTarget, TType>\n{\n\t/**\n\t\tThe original signal that dispatched this event.\n\t**/\n\tpublic var signal(default, null):EventSignal<TTarget, TType>;\n\n\t/**\n\t\tThe target of the original signal that dispatched this event.\n\t**/\n\tpublic var target(default, null):TTarget;\n\n\t/**\n\t\tThe type of the event.\n\t**/\n\tpublic var type(default, null):TType;\n\n\t/**\n\t\tThe most recent target of the event. This is set each time an \n\t\t`EventSignal` dispatches an event. When an event bubbles, `target` is \n\t\tthe original target while `currentTarget` is the most recent.\n\t**/\n\tpublic var currentTarget:TTarget;\n\t\n\tpublic function new(type:TType)\n\t{\n\t\tthis.type = type;\n\t}\n}\n\n/**\n\tThe EventDispatcher interface.\n**/\ninterface EventDispatcher<TEvent>\n{\n\t/**\n\t\tDispatch an event, returning `true` if the event should continue to \n\t\tbubble, and `false` if not.\n\t**/\n\tfunction dispatchEvent(event:TEvent):Bool; \n}\n","/*\nCopyright (c) 2012 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage msignal;\n\nimport msignal.Signal;\n\n/**\n\tA convenience type describing any kind of slot.\n**/\ntypedef AnySlot = Slot<Dynamic, Dynamic>;\n\n/**\n\tDefines the basic properties of a listener associated with a Signal.\n**/\n#if haxe3\nclass Slot<TSignal:msignal.Signal.AnySignal, TListener>\n#else\nclass Slot<TSignal:Signal<Dynamic, TListener>, TListener>\n#end\n{\n\t/**\n\t\tThe listener associated with this slot.\n\t\tNote: for hxcpp 2.10 this requires a getter method to compile\n\t**/\n\t#if cpp\n\t#if haxe3 @:isVar #end\n\tpublic var listener(get, set):TListener;\n\t#else\n\t#if haxe3 @:isVar #end\n\tpublic var listener(default, set):TListener;\n\t#end\n\t\n\n\t/**\n\t\tWhether this slot is automatically removed after it has been used once.\n\t**/\n\tpublic var once(default, null):Bool;\n\n\t/**\n\t\tThe priority of this slot should be given in the execution order.\n\t\tAn Signal will call higher numbers before lower ones.\n\t\tDefaults to 0.\n\t**/\n\tpublic var priority(default, null):Int;\n\n\t/**\n\t\tWhether the listener is called on execution. Defaults to true.\n\t**/\n\tpublic var enabled:Bool;\n\n\tvar signal:TSignal;\n\t\n\tfunction new(signal:TSignal, listener:TListener, ?once:Bool=false, ?priority:Int=0)\n\t{\n\t\tthis.signal = signal;\n\t\tthis.listener = listener;\n\t\tthis.once = once;\n\t\tthis.priority = priority;\n\t\tthis.enabled = true;\n\t}\n\n\t/**\n\t\tRemoves the slot from its signal.\n\t**/\n\tpublic function remove()\n\t{\n\t\tsignal.remove(listener);\n\t}\n\n\t#if cpp\n\t/**\n\t\tHxcpp 2.10 requires a getter method for a typed function property in \n\t\torder to compile\n\t**/\n\tfunction get_listener():TListener\n\t{\n\t\treturn listener;\n\t}\n\t#end\n\n\tfunction set_listener(value:TListener):TListener\n\t{\n\t\t#if debug\n\t\tif (value == null) throw \"listener cannot be null\";\n\t\t#end\n\t\treturn listener = value;\n\t}\n}\n\n/**\n\tA slot that executes a listener with no arguments.\n**/\nclass Slot0 extends Slot<Signal0, Void -> Void>\n{\n\tpublic function new(signal:Signal0, listener:Void -> Void, ?once:Bool=false, ?priority:Int=0)\n\t{\n\t\tsuper(signal, listener, once, priority);\n\t}\n\n\t/**\n\t\tExecutes a listener with no arguments.\n\t**/\n\tpublic function execute()\n\t{\n\t\tif (!enabled) return;\n\t\tif (once) remove();\n\t\tlistener();\n\t}\n}\n\n/**\n\tA slot that executes a listener with one argument.\n**/\nclass Slot1<TValue> extends Slot<Signal1<TValue>, TValue -> Void>\n{\n\t/**\n\t\tAllows the slot to inject the argument to dispatch.\n\t**/\n\tpublic var param:TValue;\n\n\tpublic function new(signal:Signal1<TValue>, listener:TValue -> Void, ?once:Bool=false, ?priority:Int=0)\n\t{\n\t\tsuper(signal, listener, once, priority);\n\t}\n\n\t/**\n\t\tExecutes a listener with one argument.\n\t\tIf <code>param</code> is not null, it overrides the value provided.\n\t**/\n\tpublic function execute(value1:TValue)\n\t{\n\t\tif (!enabled) return;\n\t\tif (once) remove();\n\t\tif (param != null) value1 = param;\n\t\tlistener(value1);\n\t}\n}\n\n/**\n\tA slot that executes a listener with two arguments.\n**/\nclass Slot2<TValue1, TValue2> extends Slot<Signal2<TValue1, TValue2>, TValue1 -> TValue2 -> Void>\n{\n\t/**\n\t\tAllows the slot to inject the first argument to dispatch.\n\t**/\n\tpublic var param1:TValue1;\n\n\t/**\n\t\tAllows the slot to inject the second argument to dispatch.\n\t**/\n\tpublic var param2:TValue2;\n\n\tpublic function new(signal:Signal2<TValue1, TValue2>, listener:TValue1 -> TValue2 -> Void, ?once:Bool=false, ?priority:Int=0)\n\t{\n\t\tsuper(signal, listener, once, priority);\n\t}\n\n\t/**\n\t\tExecutes a listener with two arguments.\n\t\tIf <code>param1</code> or <code>param2</code> is set, \n\t\tthey override the values provided.\n\t**/\n\tpublic function execute(value1:TValue1, value2:TValue2)\n\t{\n\t\tif (!enabled) return;\n\t\tif (once) remove();\n\t\t\n\t\tif (param1 != null) value1 = param1;\n\t\tif (param2 != null) value2 = param2;\n\t\t\n\t\tlistener(value1, value2);\n\t}\n}\n","/*\nCopyright (c) 2012 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage msignal;\n\nclass SlotList<TSlot:Slot<Dynamic, Dynamic>, TListener>\n{\n\t@:IgnoreCover\n\tstatic function __init__() { NIL = new SlotList<Dynamic, Dynamic>(null, null); }\n\t\n\t/**\n\t\tRepresents an empty list. Used as the list terminator.\n\t**/\n\tpublic static var NIL:SlotList<Dynamic, Dynamic>;\n\t\n\tpublic var head:TSlot;\n\tpublic var tail:SlotList<TSlot, TListener>;\n\tpublic var nonEmpty:Bool;\n\t\n\t/**\n\t\tCreates and returns a new SlotList object.\n\n\t\t<p>A user never has to create a SlotList manually. \n\t\tUse the <code>NIL</code> element to represent an empty list. \n\t\t<code>NIL.prepend(value)</code> would create a list containing \n\t\t<code>value</code></p>.\n\n\t\t@param head The first slot in the list.\n\t\t@param tail A list containing all slots except head.\n\t**/\n\tpublic function new(head:TSlot, ?tail:SlotList<TSlot, TListener>=null)\n\t{\n\t\tnonEmpty = false;\n\t\t\n\t\tif (head == null && tail == null)\n\t\t{\n\t\t\t#if debug\n\t\t\tif (NIL != null) throw \"Parameters head and tail are null. Use the NIL element instead.\";\n\t\t\t#end\n\n\t\t\t// this is the NIL element as per definition\n\t\t\tnonEmpty = false;\n\t\t}\n\t\telse if (head == null)\n\t\t{\n\t\t\t#if debug\n\t\t\tthrow \"Parameter head cannot be null.\";\n\t\t\t#end\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.head = head;\n\t\t\tthis.tail = (tail == null ? cast NIL : tail);\n\t\t\tnonEmpty = true;\n\t\t}\n\t}\n\t\n\t/**\n\t\tThe number of slots in the list.\n\t**/\n\tpublic var length(get, null):Int;\n\tfunction get_length():Int\n\t{\n\t\tif (!nonEmpty) return 0;\n\t\tif (tail == NIL) return 1;\n\t\t\n\t\t// We could cache the length, but it would make methods like filterNot unnecessarily complicated.\n\t\t// Instead we assume that O(n) is okay since the length property is used in rare cases.\n\t\t// We could also cache the length lazy, but that is a waste of another 8b per list node (at least).\n\t\t\n\t\tvar result = 0;\n\t\tvar p = this;\n\t\t\n\t\twhile (p.nonEmpty)\n\t\t{\n\t\t\t++result;\n\t\t\tp = p.tail;\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t\tPrepends a slot to this list.\n\t\t@param\tslot The item to be prepended.\n\t\t@return\tA list consisting of slot followed by all elements of this list.\n\t**/\n\tpublic function prepend(slot:TSlot)\n\t{\n\t\treturn new SlotList<TSlot, TListener>(slot, this);\n\t}\n\t\n\t/**\n\t\tAppends a slot to this list.\n\t\tNote: appending is O(n). Where possible, prepend which is O(1).\n\t\tIn some cases, many list items must be cloned to \n\t\tavoid changing existing lists.\n\t\t@param\tslot The item to be appended.\n\t\t@return\tA list consisting of all elements of this list followed by slot.\n\t**/\n\tpublic function append(slot:TSlot)\n\t{\n\t\tif (slot == null) return this;\n\t\tif (!nonEmpty) return new SlotList<TSlot, TListener>(slot);\n\t\t\n\t\t// Special case: just one slot currently in the list.\n\t\tif (tail == NIL) \n\t\t{\n\t\t\treturn new SlotList<TSlot, TListener>(slot).prepend(head);\n\t\t}\n\t\t\n\t\t// The list already has two or more slots.\n\t\t// We have to build a new list with cloned items because they are immutable.\n\t\tvar wholeClone = new SlotList<TSlot, TListener>(head);\n\t\tvar subClone = wholeClone;\n\t\tvar current = tail;\n\t\t\n\t\twhile (current.nonEmpty)\n\t\t{\n\t\t\tsubClone = subClone.tail = new SlotList<TSlot, TListener>(current.head);\n\t\t\tcurrent = current.tail;\n\t\t}\n\t\t\n\t\t// Append the new slot last.\n\t\tsubClone.tail = new SlotList<TSlot, TListener>(slot);\n\t\treturn wholeClone;\n\t}\t\t\n\t\n\t/**\n\t\tInsert a slot into the list in a position according to its priority.\n\t\tThe higher the priority, the closer the item will be inserted to the \n\t\tlist head.\n\t\t@param slot The item to be inserted.\n\t**/\n\tpublic function insertWithPriority(slot:TSlot)\n\t{\n\t\tif (!nonEmpty) return new SlotList<TSlot, TListener>(slot);\n\t\t\n\t\tvar priority:Int = slot.priority;\n\t\t\n\t\t// Special case: new slot has the highest priority.\n\t\tif (priority >= this.head.priority) return prepend(slot);\n\n\t\tvar wholeClone = new SlotList<TSlot, TListener>(head);\n\t\tvar subClone = wholeClone;\n\t\tvar current = tail;\n\n\t\t// Find a slot with lower priority and go in front of it.\n\t\twhile (current.nonEmpty)\n\t\t{\n\t\t\tif (priority > current.head.priority)\n\t\t\t{\n\t\t\t\tsubClone.tail = current.prepend(slot);\n\t\t\t\treturn wholeClone;\n\t\t\t}\n\t\t\t\n\t\t\tsubClone = subClone.tail = new SlotList<TSlot, TListener>(current.head);\n\t\t\tcurrent = current.tail;\n\t\t}\n\t\t\n\t\t// Slot has lowest priority.\n\t\tsubClone.tail = new SlotList<TSlot, TListener>(slot);\n\t\treturn wholeClone;\n\t}\n\t\n\t/**\n\t\tReturns the slots in this list that do not contain the supplied \n\t\tlistener. Note: assumes the listener is not repeated within the list.\n\t\t@param\tlistener The function to remove.\n\t\t@return A list consisting of all elements of this list that do not \n\t\t\t\thave listener.\n\t**/\n\tpublic function filterNot(listener:TListener)\n\t{\n\t\tif (!nonEmpty || listener == null) return this;\n\t\t\n\t\tif (Reflect.compareMethods(head.listener, listener)) return tail;\n\t\t\n\t\t// The first item wasn't a match so the filtered list will contain it.\n\t\tvar wholeClone = new SlotList<TSlot, TListener>(head);\n\t\tvar subClone = wholeClone;\n\t\tvar current = tail;\n\t\t\n\t\twhile (current.nonEmpty)\n\t\t{\n\t\t\tif (Reflect.compareMethods(current.head.listener, listener))\n\t\t\t{\n\t\t\t\t// Splice out the current head.\n\t\t\t\tsubClone.tail = current.tail;\n\t\t\t\treturn wholeClone;\n\t\t\t}\n\t\t\t\n\t\t\tsubClone = subClone.tail = new SlotList<TSlot, TListener>(current.head);\n\t\t\tcurrent = current.tail;\n\t\t}\n\t\t\n\t\t// The listener was not found so this list is unchanged.\n\t\treturn this;\n\t}\n\t\n\t/**\n\t\tDetermines whether the supplied listener Function is contained \n\t\twithin this list\n\t**/\n\tpublic function contains(listener:TListener):Bool\n\t{\n\t\tif (!nonEmpty) return false;\n\n\t\tvar p = this;\n\t\twhile (p.nonEmpty)\n\t\t{\n\t\t\tif (Reflect.compareMethods(p.head.listener, listener)) return true;\n\t\t\tp = p.tail;\n\t\t}\n\n\t\treturn false;\n\t}\n\t\n\t/**\n\t\tRetrieves the Slot associated with a supplied listener within the SlotList.\n\t\t@param   listener The Function being searched for\n\t\t@return  The ISlot in this list associated with the listener parameter \n\t\t\t\t through the ISlot.listener property. Returns null if no such \n\t\t\t\t ISlot instance exists or the list is empty.  \n\t**/\n\tpublic function find(listener:TListener):TSlot\n\t{\n\t\tif (!nonEmpty) return null;\n\t\t\n\t\tvar p = this;\n\t\twhile (p.nonEmpty)\n\t\t{\n\t\t\tif (Reflect.compareMethods(p.head.listener, listener)) return p.head;\n\t\t\tp = p.tail;\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage;\n\n// Can't enable @:coreApi because some fields are now inline getters\n// @:coreApi\n@:keepInit\nextern class Math\n{\n\tstatic var PI(default,null) : Float;\n\n\tstatic var NEGATIVE_INFINITY(get, null) : Float;\n\t@:pure private static inline function get_NEGATIVE_INFINITY () : Float {\n\t\treturn -(untyped __js__(\"Infinity\"));\n\t}\n\n\tstatic var POSITIVE_INFINITY(get,null) : Float;\n\t@:pure private static inline function get_POSITIVE_INFINITY () : Float {\n\t\treturn (untyped __js__(\"Infinity\"));\n\t}\n\n\tstatic var NaN(get, null) : Float;\n\t@:pure private static inline function get_NaN () : Float {\n\t\treturn (untyped __js__(\"NaN\"));\n\t}\n\n\t@:pure static function abs(v:Float):Float;\n\t@:pure static function acos(v:Float):Float;\n\t@:pure static function asin(v:Float):Float;\n\t@:pure static function atan(v:Float):Float;\n\t@:pure static function atan2(y:Float, x:Float):Float;\n\t@:pure static function ceil(v:Float):Int;\n\t@:pure static function cos(v:Float):Float;\n\t@:pure static function exp(v:Float):Float;\n\t@:pure static function floor(v:Float):Int;\n\t@:pure static function log(v:Float):Float;\n\t@:pure static function max(a:Float, b:Float):Float;\n\t@:pure static function min(a:Float, b:Float):Float;\n\t@:pure static function pow(v:Float, exp:Float):Float;\n\tstatic function random() : Float;\n\t@:pure static function round(v:Float):Int;\n\t@:pure static function sin(v:Float):Float;\n\t@:pure static function sqrt(v:Float):Float;\n\t@:pure static function tan(v:Float):Float;\n\n\t@:pure static inline function ffloor( v : Float ) : Float {\n\t\treturn floor(v);\n\t}\n\n\t@:pure static inline function fceil( v : Float ) : Float {\n\t\treturn ceil(v);\n\t}\n\n\t@:pure static inline function fround( v : Float ) : Float {\n\t\treturn round(v);\n\t}\n\n\t@:pure static inline function isFinite( f : Float ) : Bool {\n\t\treturn (untyped __js__(\"isFinite\"))(f);\n\t}\n\n\t@:pure static inline function isNaN( f : Float ) : Bool {\n\t\treturn (untyped __js__(\"isNaN\"))(f);\n\t}\n\n\tstatic function __init__() : Void {\n\t\tuntyped __feature__(\"Type.resolveClass\", $hxClasses[\"Math\"] = Math);\n\t}\n}\n","package lib.model.constants;\n\nimport haxe.macro.Context;\n\nclass App {\n\tpublic static var NAME:String = \"Creative Code [mck]\";\n\tpublic static var BUILD:String = getBuildDate();\n\n\tmacro public static function getBuildDate() {\n\t\tvar date = Date.now().toString();\n\t\treturn Context.makeExpr(date, Context.currentPos());\n\t}\n}\n"],
"names":[],
"mappings":"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AW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW;6CAErC,CACjE,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,U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"
}